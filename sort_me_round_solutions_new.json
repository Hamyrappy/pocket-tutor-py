[
    {
        "task_id": 11,
        "description": "\u0412\u044b \u0441\u043e\u0431\u0438\u0440\u0430\u0435\u0442\u0435\u0441\u044c \u043f\u0435\u0440\u0435\u0435\u0445\u0430\u0442\u044c \u0436\u0438\u0442\u044c \u0432 \u0433\u043e\u0440\u044b \u2013 \u043e\u0442\u0432\u043b\u0435\u0447\u044c\u0441\u044f \u043e\u0442 \u0433\u043e\u0440\u043e\u0434\u043a\u043e\u0439 \u0441\u0443\u0435\u0442\u044b, \u043e\u0431\u043e\u0440\u0432\u0430\u0442\u044c \u0432\u0441\u0435 \u0441\u0432\u044f\u0437\u0438 \u0441 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u043e\u043c \u0438, \u043b\u044e\u0431\u0443\u044f\u0441\u044c \u043f\u0435\u0439\u0437\u0430\u0436\u0430\u043c\u0438, \u043f\u0440\u0438\u0434\u0443\u043c\u0430\u0442\u044c \u043d\u0430\u043a\u043e\u043d\u0435\u0446 \u043f\u043e\u043b\u0438\u043d\u043e\u043c\u0438\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u0437\u0430\u0434\u0430\u0447\u0438 \u043e \u0440\u044e\u043a\u0437\u0430\u043a\u0435. \n\n\u041d\u0430\u0441\u0442\u0430\u043b\u043e \u0432\u0440\u0435\u043c\u044f \u0441\u043e\u0431\u0438\u0440\u0430\u0442\u044c \u0432\u0435\u0449\u0438. \u041e\u0442\u043a\u0440\u044b\u0432 \u0448\u043a\u0430\u0444, \u0432\u044b \u0437\u0430\u043c\u0435\u0442\u0438\u043b\u0438, \u0447\u0442\u043e \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c $$n$$ \u0432\u0435\u0449\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0430\u043c \u0445\u043e\u0442\u0435\u043b\u043e\u0441\u044c \u0431\u044b \u0432\u0437\u044f\u0442\u044c \u0441 \u0441\u043e\u0431\u043e\u0439. \u0423 \u043a\u0430\u0436\u0434\u043e\u0439 \u0432\u0435\u0449\u0438 \u0435\u0441\u0442\u044c \u043f\u043e \u0434\u0432\u0430 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f: $$w_i$$ - \u0432\u0435\u0441 \u0438 $$u_i$$ - \u043f\u043e\u043b\u0435\u0437\u043d\u043e\u0441\u0442\u044c.\n\n\u041a \u0441\u0447\u0430\u0441\u0442\u044c\u044e, \u043d\u0435\u0434\u0430\u0432\u043d\u043e \u0437\u0430 \u043f\u043e\u0431\u0435\u0434\u0443 \u043d\u0430 \u0448\u043a\u043e\u043b\u044c\u043d\u043e\u043c \u044d\u0442\u0430\u043f\u0435 \u0412\u0441\u0435\u0440\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u043e\u0439 \u041e\u043b\u0438\u043c\u043f\u0438\u0430\u0434\u044b \u0428\u043a\u043e\u043b\u044c\u043d\u0438\u043a\u043e\u0432 \u0432\u0430\u043c \u043f\u043e\u0434\u0430\u0440\u0438\u043b\u0438 \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u044b\u0439 \u0440\u044e\u043a\u0437\u0430\u043a. \u0415\u0433\u043e \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u044c \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e \u043e\u043d \u043c\u043e\u0436\u0435\u0442 \u0432\u043c\u0435\u0441\u0442\u0438\u0442\u044c \u043b\u044e\u0431\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u0435\u0449\u0435\u0439 \u043b\u044e\u0431\u043e\u0433\u043e \u0432\u0435\u0441\u0430, \u0442. \u0435. \u0443 \u0432\u0430\u0441 \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u043d\u0438\u043a\u0430\u043a\u0438\u0445 \u043f\u0440\u043e\u0431\u043b\u0435\u043c \u043f\u0440\u0438 \u0435\u0433\u043e \u043d\u043e\u0441\u043a\u0435, \u0435\u0441\u043b\u0438 \u0441\u0443\u043c\u043c\u0430 \u0432\u0435\u0441\u0430 \u0432\u0435\u0449\u0435\u0439 \u0432 \u043d\u0451\u043c $$\\le \\infin$$.\n\n\u0412\u0430\u0448\u0430 \u0437\u0430\u0434\u0430\u0447\u0430 - \u0432\u0437\u044f\u0442\u044c \u0441 \u0441\u043e\u0431\u043e\u0439 \u0442\u0430\u043a\u043e\u0439 \u043d\u0430\u0431\u043e\u0440 \u0432\u0435\u0449\u0435\u0439, \u0447\u0442\u043e\u0431\u044b \u043e\u043d\u0438 \u0432\u043c\u0435\u0441\u0442\u0438\u043b\u0438\u0441\u044c \u0432 \u0440\u044e\u043a\u0437\u0430\u043a, \u0430 \u0441\u0443\u043c\u043c\u0430 \u0438\u0445 \u043f\u043e\u043b\u0435\u0437\u043d\u043e\u0441\u0442\u0438 \u0431\u044b\u043b\u0430 \u0431\u044b \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0439.\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u0447\u0438\u0441\u043b\u043e $$n$$ - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u0435\u0449\u0435\u0439 \u0432 \u0448\u043a\u0430\u0444\u0443 $$(1 \\le n \\le 300)$$. \u0414\u0430\u043b\u0435\u0435 \u0438\u0434\u0443\u0442 $$n$$ \u0441\u0442\u0440\u043e\u043a, \u0433\u0434\u0435 \u0432 $$i$$-\u0442\u043e\u0439 \u0441\u0442\u0440\u043e\u0447\u043a\u0435 \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430 $$w$$ \u0438 $$u$$ \u2013 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b $$i$$-\u0442\u043e\u0439 \u0432\u0435\u0449\u0438 $$(1 \\le w, u \\le 100)$$.\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e - \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u0443\u044e \u0441\u0443\u043c\u043c\u0443 \u043f\u043e\u043b\u0435\u0437\u043d\u043e\u0441\u0442\u0438 \u0432\u0435\u0449\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e \u0432\u043e\u0439\u0434\u0443\u0442 \u0432 \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u044b\u0439 \u0440\u044e\u043a\u0437\u0430\u043a.",
        "right_solution": "n = int(input())\n\ns = 0\n\nfor _ in range(n):\n    w, u = map(int, input().split())\n    s += u\n\nprint(s)\n",
        "solutions": [
            {
                "code": "10\r\n17 31\r\n42 42\r\n9 1\r\n2 3\r\n45 1\r\n1 45\r\n88 87\r\n12 16\r\n91 23\r\n10 10",
                "verdict": "Runtime Error"
            },
            {
                "code": "123",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\n\nx = 0\n\nfor i in n:\n    a = int(input().split(\" \")[-1])\n    x += b\n    \nprint(x)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\n\nx = 0\nfor i in n:\n    a, b = tuple(map(int, input().split(\" \")))\n    x += b\nprint(x)",
                "verdict": "Runtime Error"
            },
            {
                "code": "input()\r\nu = 0\r\n\r\nfor i in range(10):\r\n\tx, y = tuple(map(int, input().split(\" \")))\r\n\tu += y\r\n\r\nprint(u)\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "a = int(input())\nsu = 0\nfor i in range(a):\n    su+=int(input())\nprint(su)",
                "verdict": "Runtime Error"
            },
            {
                "code": "sum = 0\n\nfor _ in range(int(input())):\n    sum += map(int, input().split())[1]\n    \nprint(sum)",
                "verdict": "Runtime Error"
            },
            {
                "code": "hjvghv",
                "verdict": "Runtime Error"
            },
            {
                "code": "(1<<19**8,)*4**7\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "main[-1u]={1};\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include<bits/stdc++.h>\r\n#define len(s) (int)s.size();\r\nusing namespace std;\r\nusing ll = long long;\r\nusing ld = long double;\r\n\r\nint main(){\r\n    ios_base :: sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    int n;\r\n    cin >> n;\r\n    int sum  = 0;\r\n    for(int i = 0; i < n; i++){\r\n        int a, b;\r\n        cin >> a >> b;\r\n        sum += b;\r\n    }\r\n    cout << sum;\r\n    return 0;\r\n}\r\n\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "/*\r\n\r\nDeveloped by Nizamov Aynur from Kazan city\r\nRoad To ROI\r\n\r\nSeason 2021-2022:\r\n   school stage: N/A\r\n     city stage: N/A\r\n regional stage: N/A\r\n            ROI: N/A\r\n\r\n   vk: @nizamovoff\r\n   tg: @nizamovoff\r\n inst: @nizamovoff\r\n  dis: @nizamoff #2443\r\n\r\n*/\r\n\r\n#include <bits/stdc++.h>\r\n// #include <ext/pb_ds/assoc_container.hpp>\r\n\r\nusing namespace std;\r\n// using namespace __gnu_pbds;\r\n\r\n// #pragma GCC optimize (\"Ofast\")\r\n#pragma GCC target (\"popcnt\")\r\n\r\n#ifndef Road_To_ROI\r\n#endif\r\n\r\n// template<class T>\r\n// using ordered_set = tree<T, null_type, less<>, rb_tree_tag, tree_order_statistics_node_update>;\r\n\r\n// template<class S, class T>\r\n// using ordered_map = tree<S, T, less<>, rb_tree_tag, tree_order_statistics_node_update>;\r\n\r\n#define ff first\r\n#define ss second\r\n#define pb emplace_back\r\n#define sz(x) (int)x.size()\r\n#define all(x) (x).begin(), (x).end()\r\n#define rall(x) (x).rbegin(), (x).rend()\r\n#define dbg(x) cerr << #x << \" = \" << x << '\\n';\r\n#define fastio() ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef long double ld;\r\ntypedef pair<int, int> pii;\r\ntypedef pair<ll, ll> pll;\r\ntypedef pair<ld, ld> pdd;\r\n\r\nmt19937 rnd(time(NULL));\r\nmt19937_64 rndll(time(NULL));\r\n\r\nconst int N = 3e3 + 10, P = 31;\r\nconst int INF = 2e9 + 10;\r\nconst ll INFLL = 4e18 + 10;\r\nconst int MOD = 1e9 + 7;\r\nconst ld EPS = 1e-6;\r\n\r\nsigned main() {\r\n#ifdef Road_To_ROI\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n#else\r\n    // freopen(\"Road_To_ROI.in\", \"r\", stdin);\r\n    // freopen(\"Road_To_ROI.out\", \"w\", stdout);\r\n#endif\r\n    fastio();\r\n\r\n    int n;\r\n    ll sm = 0;\r\n    cin >> n;\r\n    for (int i = 0; i < n; ++i) {\r\n        ll a, b;\r\n        cin >> a >> b;\r\n        sm += b;\r\n    }\r\n    cout << sm;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\n#pragma GCC optimization (\"unroll-loops\")\n#include <iostream>\n#include <fstream>\n#include <algorithm>\n#include <vector>\n#include <set>\n#include <stack>\n#include <map>\n#include <unordered_map>\n#include <iomanip>\n#include <cmath>\n#include <queue>\n#include <bitset>\n#include <numeric>\n#include <array>\n#include <cstring>\n#include <random>\n#include <chrono>\n#define fi first\n#define se second\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(), (x).end()\n#define rall(x) (x).rbegin(), (x).rend()\n#define make_unique(x) sort(all((x))); (x).resize(unique(all((x))) - (x).begin())\ntypedef long long ll;\ntypedef long double ld;\nusing namespace std;\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\n// #include <ext/pb_ds/assoc_container.hpp>\n// #include <ext/pb_ds/tree_policy.hpp>\n// using namespace __gnu_pbds;\n// template<class T>\n// using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\nint main() {\n\n  ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n\n  int n; cin >> n;\n\n  ll ans = 0;\n\n  while(n--) {\n    ll a, b;\n    cin >> a >> b;\n    ans += b;\n  }\n\n  cout << ans;\n\n  return 0;\n}\n/*\n\n*/\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nvoid solve(){\n    int n;\n    cin >> n;\n    int it = 0;\n    for(int i = 0; i<n; i++){\n        int a, b;\n        cin >> a >> b;\n        it+=b;\n    }\n    cout << it << \"\\n\";\n}    \n\nint main(){\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    int n = 1;\n    //cin >> n;\n    while(n--){\n        solve();\n    }\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include<bits/stdc++.h>\r\n\r\nusing namespace std;\r\nusing ll = long long;\r\nint main()\r\n{\r\n    ll n, w, u, i, mx;\r\n    mx = 0;\r\n    cin>>n;\r\n    for(i=0; i<n; i++)\r\n    {\r\n        cin>>w>>u;\r\n        mx += u;\r\n    }\r\n    cout<<mx;\r\n    return 0;\r\n}\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#define int long long\r\n#define loop(start, end, var) for(int var = start; var <= end; var++)\r\n#define loopDown(start, end, var) for(int var = start; var >= end; var--)\r\n#define foreach(el, arr) for (auto el : arr)\r\n#define matrix(type, n, m) vector <vector <type>> (n, vector<type> (m))\r\n#define F first\r\n#define S second\r\n#define all(arr) arr.begin(), arr.end()\r\n#define vec vector\r\n#define pb push_back\r\ntypedef long long ll;\r\ntypedef vector <int> vi;\r\ntypedef pair <int, int> pi;\r\n\r\nvoid solve()\r\n{\r\n    int n; cin >> n;\r\n\r\n    int ans = 0;\r\n\r\n    loop( 1, n, i )\r\n    {\r\n        int v, u; cin >> v >> u;\r\n\r\n        ans +=u;\r\n    }\r\n\r\n    cout << ans << '\\n';\r\n}\r\n\r\nsigned main()\r\n{\r\n    #ifdef LOCAL\r\n    freopen( \"input.txt\", \"r\", stdin );\r\n    freopen( \"output.txt\", \"w\", stdout );\r\n    #endif\r\n\r\n    ios_base::sync_with_stdio( false );\r\n    cin.tie( 0 );\r\n    cout.tie( 0 );\r\n\r\n    solve();\r\n\r\n    return 0;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#pragma optimize(\"O3\")\n#include <bits/stdc++.h>\n#define pb push_back\n#define forn(i, n) for(int i = 0; i < n; i++)\n#define all(x) x.begin(), x.end()\n#define rall(x) x.rbegin(), x.rend()\n#define X first\n#define Y second\n#define fork(i, k, l) for(int i = k; i < l; i++)\n//#define int long long\n#define ll long long\n#define ull unsigned ll\n#define pii pair<int, int>\n#define vi vector<int>\n#define vii vector<vi>\n#define endl \"\\n\"\n#define fast ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)\n#define double long double\nusing namespace std;\n \nstruct query{\n    int su = 0;\n    int x = 0;\n    int mi_val = 0;\n    int curr_su = 0;\n    query(){};\n};\nquery splay(query a, query b){\n    a.curr_su += b.curr_su;\n    b.curr_su = a.curr_su;\n    if(a.mi_val < b.mi_val) return a;\n    if(a.mi_val == b.mi_val){\n        a.su += b.su;\n        return a;\n    }\n\n    return b;\n}\nclass SegmentTree{\nprivate:\n    vector<query> tree;\npublic:\n    SegmentTree(int n){\n        tree.resize(4 * n);\n    }\n\n    void full(int v, int color){\n        tree[v].x = color;\n        tree[v].mi_val += color;\n    }\n\n    void push(int v, int tl, int tr){\n        if(tl == tr || tree[v].x == 0) return;\n\n        full(v * 2, tree[v].x);\n        full(v * 2 + 1, tree[v].x);\n\n        tree[v] = splay(tree[2 * v + 1], tree[2 * v]);\n        //tree[v].curr_su = tree[2 * v].curr_su + tree[2 * v + 1].curr_su;\n    }\n\n    void build(int v, int tl, int tr, vector<int> &a){\n        if(tl == tr){\n            tree[v].curr_su = a[tl];\n            return;\n        }\n\n        int tm = (tl + tr) / 2;\n        build(2 * v, tl, tm, a);\n        build(2 * v + 1, tm + 1, tr, a);\n\n        tree[v].curr_su = tree[2 * v].curr_su + tree[2 * v + 1].curr_su;\n    }\n\n    void upd(int v, int tl, int tr, int l, int r, int val){\n        push(v, tl, tr);\n        if(l <= tl && tr <= r){\n            tree[v].mi_val += val;\n            return;\n        }\n\n        int tm = (tl + tr) / 2;\n        if(l <= tm)\n            upd(2 * v, tl, tm, l, r, val);\n        if(r > tm)\n            upd(2 * v + 1, tm + 1, tr, l, r, val);\n        \n        tree[v] = splay(tree[2 * v], tree[2 * v + 1]);\n    }\n\n    query get(int v, int tl, int tr, int l, int r){\n        push(v, tl, tr);\n        if(l <= tl && tr <= r)\n            return tree[v];\n        \n        int tm = (tl + tr) / 2;\n        query ans;\n        ans.mi_val = 0;\n        ans.su = 0;\n        ans.curr_su = 0;\n\n        if(l <= tm)\n            ans = splay(ans, get(2 * v, tl, tm, l, r));\n        if(r > tm)\n            ans = splay(ans, get(2 * v + 1, tm + 1, tr, l, r));\n        \n        return ans;\n    }\n};\nsigned main(){\n    fast;\n\n    int n;\n    cin >> n;\n\n    ll ans = 0;\n    forn (i, n) {\n        int x, y;\n        cin >> x >> y;\n        ans += y;\n    }\n\n    cout << ans << endl;\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nusing ll = long long;\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n    ll sum = 0;\r\n    while (n--) {\r\n        ll x, y;\r\n        cin >> x >> y;\r\n        sum += max(y, 0ll);\r\n    }\r\n    cout << sum;\r\n    return 0;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\nsum = 0\nfor i in range(n):\n    pust = int(input())\n    sum += int(input())\nprint(sum)",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n \r\n#define pii pair<int, int>\r\n#define pll pair<long long, long long>\r\n \r\nusing namespace std;\r\nusing ll = long long;\r\nusing ld = long double;\r\n \r\nconst ll MOD = 1e9 + 7;\r\nconst int INF = 1e9;\r\nconst ll LLINF = 1e18;\r\nconst int N = 1e5 + 13;     \r\n    \r\nvoid solve() {  \r\n    int n;\r\n    cin >> n;\r\n    int ans = 0;\r\n    for (int i = 0; i < n; i++) {\r\n        int a, b;\r\n        cin >> a >> b;\r\n        ans += b;\r\n    }\r\n    cout << ans << endl;\r\n}\r\n \r\nint main() {\r\n    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n    int t = 1;\r\n    // cin >> t;\r\n    while (t--) {\r\n        solve();\r\n    }\r\n \r\n    return 0;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\nprint(sum([input().split()[1] for i in range(n)]))",
                "verdict": "Runtime Error"
            },
            {
                "code": "n, m = map(int, input().split())\nservers = {s for s in range(n), 0}",
                "verdict": "Runtime Error"
            },
            {
                "code": "/**\r\n    author: _Octal_\r\n    created: 06.11.2021\r\n\r\n    \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\r\n    \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\r\n    \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2584\u2580\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2584\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2580\u2584\u2591\u2591\u2591\u2591\u2591\u2591\u2591\r\n    \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2591\u2591\u2584\u2591\u2591\u2591\u2591\u2584\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2591\r\n    \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2584\u2588\u2584\u2584\u2591\u2591\u2584\u2591\u2591\u2591\u2588\u2591\u2584\u2584\u2584\u2591\u2591\u2591\r\n    \u2591\u2584\u2584\u2584\u2584\u2584\u2591\u2591\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2580\u2591\u2591\u2591\u2591\u2580\u2588\u2591\u2591\u2580\u2584\u2591\u2591\u2591\u2591\u2591\u2588\u2580\u2580\u2591\u2588\u2588\u2591\u2591\r\n    \u2591\u2588\u2588\u2584\u2580\u2588\u2588\u2584\u2588\u2591\u2591\u2591\u2584\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2591\u2591\u2591\u2591\u2580\u2580\u2580\u2580\u2580\u2591\u2591\u2591\u2591\u2588\u2588\u2591\u2591\r\n    \u2591\u2591\u2580\u2588\u2588\u2584\u2580\u2588\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2580\u2591\u2588\u2588\u2580\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2580\u2588\u2588\u2591\r\n    \u2591\u2591\u2591\u2591\u2580\u2588\u2588\u2588\u2588\u2591\u2580\u2591\u2591\u2591\u2591\u2584\u2591\u2591\u2591\u2588\u2588\u2591\u2591\u2591\u2584\u2588\u2591\u2591\u2591\u2591\u2584\u2591\u2584\u2588\u2591\u2591\u2588\u2588\u2591\r\n    \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2580\u2588\u2591\u2591\u2591\u2591\u2584\u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2591\u2591\u2591\u2591\u2584\u2591\u2591\u2591\u2584\u2591\u2591\u2584\u2591\u2591\u2591\u2588\u2588\u2591\r\n    \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2584\u2588\u2584\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2580\u2584\u2591\u2591\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2591\u2591\u2584\u2580\u2591\u2591\r\n    \u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2580\u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580\u2580\u2580\u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580\u2591\u2591\u2591\u2591\r\n    \u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2588\u2588\u2580\u2591\u2591\u2588\u2588\u2588\u2580\u2591\u2591\u2591\u2591\u2591\u2591\u2580\u2588\u2588\u2588\u2591\u2591\u2580\u2588\u2588\u2580\u2591\u2591\u2591\u2591\u2591\u2591\r\n    \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\r\n**/\r\n\r\n#include <algorithm>\r\n#include <array>\r\n#include <bitset>\r\n#include <cassert>\r\n#include <climits>\r\n#include <cstdint>\r\n#include <cmath>\r\n#include <complex>\r\n#include <cstdio>\r\n#include <cstdlib>\r\n#include <cstring>\r\n#include <functional>\r\n#include <iomanip>\r\n#include <iostream>\r\n#include <map>\r\n#include <memory>\r\n#include <numeric>\r\n#include <queue>\r\n#include <random>\r\n#include <set>\r\n#include <stack>\r\n#include <string>\r\n#include <unordered_set>\r\n#include <unordered_map>\r\n#include <vector>\r\n\r\nusing namespace std;\r\n\r\n#define PLEASE_ACCEPT ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);\r\n\r\n//#define FILE_IO\r\n\r\n/**\r\n#pragma GCC target (\"arch=sandybridge\")\r\n#pragma GCC target (\"popcnt\")\r\n#pragma comment (linker, \"/STACK:16777216\")\r\n**/\r\n\r\n#define endl \"\\n\"\r\n#define debug cout << \"sus\\n\"\r\n\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef pair <long long, long long> Pair;\r\nconst long double pi = 3.14159265;\r\nconst long long MOD = 1e9 + 7;\r\nconst long long INF = LLONG_MAX;\r\n\r\nlong long gcd(long long a, long long b) {\r\n    if (b == 0) return a;\r\n    return gcd(b, a % b);\r\n}\r\n\r\n/**\r\nstruct Hash {\r\n    const long long P = 31;\r\n\r\n    vector <long long> pows;\r\n    vector <long long> hashs;\r\n    \r\n    Hash(string s) {\r\n        hashs.resize(s.size() + 1);\r\n        pows.resize(s.size() + 1);\r\n        hashs[0] = 0;\r\n        pows[0] = 1;\r\n        for (long long i = 0; i < s.size(); i++) {\r\n            hashs[i + 1] = hashs[i] * P + s[i];\r\n            pows[i + 1] = pows[i] * P;\r\n        }\r\n    }\r\n    \r\n    long long get_hash(long long l, long long r) {\r\n        return hashs[r + 1] - hashs[l] * pows[r - l + 1];\r\n    }\r\n    \r\n    bool check(long long a, long long b, long long c, long long d) {\r\n        return get_hash(a, b) == get_hash(c, d);\r\n    }\r\n};\r\n\r\nstruct borh_vertex {\r\n    int next[255];\r\n    int cnt;\r\n    bool flag;\r\n    borh_vertex() {\r\n        for (int i = 0; i < 255; i++) {\r\n            next[i] = NULL;\r\n        }\r\n        cnt = 0;\r\n        flag = false;\r\n    }\r\n};\r\n\r\nstruct Borh {\r\n    vector <borh_vertex> arr;\r\n\r\n\r\n};\r\n**/\r\n\r\nsigned main() {\r\n#ifdef FILE_IO\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n#else\r\n    PLEASE_ACCEPT;\r\n#endif\r\n    cout << fixed << setprecision(12);\r\n    ll n;\r\n    cin >> n;\r\n    ll ans = 0;\r\n    for (ll i = 0; i < n; i++) {\r\n        ll w, u;\r\n        cin >> w >> u;\r\n        ans += u;\r\n    }\r\n    cout << ans << endl;\r\n    return 0;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "//#include __FILE__\n#include <iostream>\n\nusing namespace std;\n\nint main() {\n    \n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\n#include <algorithm>\n#include <string>\n#include <vector>\n\n#define  ll long long\nusing namespace std;\n\n\nvoid eb() {\n    ll n, nn, k, res = 0;\n    cin >> n >> k;\n    nn = n;\n    n--;\n    for (ll i = 1; i < nn; i++) {\n        if (1ll << (i - 1) > k) {\n            res = i - 1;\n            break;\n        } else n -= 1ll << (i - 1);\n        if (n <= 0) {\n            cout << i << '\\n';\n            return;\n        }\n    }\n    res += n / k;\n    if (n % k != 0)++res;\n    cout << res << '\\n';\n}\n\nvoid a() {\n    string inp;\n    cin >> inp;\n    string wrk;\n    wrk.push_back(inp[0]);\n    for (int i = 1; i < inp.length(); ++i) {\n        if (inp[i] != *(wrk.end() - 1))wrk.push_back(inp[i]);\n    }\n    if (wrk.length() % 2 == 0) {\n        if (inp[inp.length() - 1] == 'b') inp[inp.length() - 1] = 'a';\n        else inp[inp.length() - 1] = 'b';\n    }\n    cout << inp << '\\n';\n}\n\nvoid aa() {\n    int n, mx = 0;\n    cin >> n;\n    for (int i = 1; i <= n; i++) {\n        int elem;\n        cin >> elem;\n        mx = max(mx, elem - i);\n    }\n    cout<<mx<<'\\n';\n}\n\nvoid c(){\n    int n;\n    cin>>n;\n    for(int i = 0;i<n;++i){\n        int elem;\n        cin>>elem;\n        if(i==0 && elem%2==0){\n            cout<<\"NO\"<<'\\n';\n            return;\n        }\n        if(elem==2){\n            cout<<\"NO\"<<'\\n';\n            return;\n        }\n    }\n    cout<<\"YES\"<<'\\n';\n}\n\nvoid d3a(){\n    string kb,s;\n    cin>>kb>>s;\n    int res = 0,prev;\n    for(int j = 0;j<kb.length();++j){\n        if(kb[j]==s[0]){prev = j;}\n    }\n    for(int i = 1;i<s.length();++i){\n        for(int j = 0;j<kb.length();++j){\n            if(kb[j]==s[i]){res+=abs(prev-j);prev = j;break;}\n        }\n    }\n    cout<<res<<'\\n';\n}\n\nvoid d3b(){\n    ll x0,n,res,stps;\n    cin>>x0>>n;\n    if(n!=0){\n    if(x0%2){\n        res = x0+1+((n-1)/4)*4;\n    }\n    else{\n        res = x0-1-((n-1)/4)*4;\n    }\n\n    stps = ((n-1)/4)*4+1;\n    for(ll i = stps+1;i<=n;++i){\n        if(res%2){\n            res+=i;\n        }\n        else res-=i;\n    }\n    cout<<res<<'\\n';}\n    else cout<<x0<<'\\n';\n}\n\nvoid d3c(){\n\n    int n;\n    cin>>n;\n    vector<int>a(n);\n    for (int i = 0; i < n; ++i) {\n        cin>>a[i];\n    }\n    sort(a.begin(),a.end());\n    int v = a[0],m = a[0];\n    int mx = 0;\n    for (int i = 1; i < n; ++i) {\n\n            a[i]-=v;\n            v+=a[i];\n            m = a[i];\n            mx = max(mx,m);\n    }\n    cout<<mx<<'\\n';\n}\n\nvoid sma(){\n    ll n,res = 0,w, u;\n    cin>>n;\n    for (int i = 0; i < n; ++i) {\n        cin>>w>>u;\n        res+=u;\n    }\n    cout<<res;\n}\n\nint main() {\n    /*int t;\n    cin >> t;\n    for (int i = 0; i < t; ++i) {\n        d3c();\n    }*/\n    sma();\n}\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "#pragma GCC optimize(\"Ofast,unroll-loops\")\r\n#pragma GCC target(\"avx,avx2,fma,sse4\")\r\n\r\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nusing ll = long long;\r\nusing ld = long double;\r\nusing ull = unsigned long long;\r\n\r\n#define forn(i, n) for(int i = 0; i < int(n); i++)\r\n\r\nmt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());\r\n\r\n\r\n\r\nvoid solve() {\r\n\tint n;\r\n\tcin >> n;\r\n\tvector<pair<int, int>> arr(n);\r\n\tint ans = 0;\r\n\tforn(i, n) {\r\n\t\tcin >> arr[i].first >> arr[i].second;\r\n\t\tans += arr[i].second;\r\n\t}\r\n\tcout << ans;\r\n}\r\n\r\nsigned main() {\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(0);cout.tie(0);cout.precision(20);cout.setf(ios::fixed);\r\n\r\n\t// #ifndef ONLINE_JUDGE\r\n\t// \tfreopen(\"input.txt\", \"r\", stdin);\r\n\t// \tfreopen(\"output.txt\", \"w\", stdout);\r\n\t// \tfreopen(\"error.txt\", \"w\", stderr);\r\n\t// #endif\r\n\r\n\tsolve();\r\n\r\n\treturn 0;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\n\r\n#define MAX 10010\r\n\r\n\r\nint main()\r\n{\r\n    ll n;\r\n    cin >> n;\r\n    ll h, w, s = 0;\r\n    for (int i = 0; i < n; i++){\r\n        cin >> h >> w;\r\n        s += w;\r\n    }\r\n    cout << s;\r\n    return 0;\r\n}\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "import sys\r\ns = []\r\nfor x in sys.stdin.readlines():\r\n    x = x.rstrip()\r\n    s.append(list(map(int, x.split())))\r\ncount = 0\r\nfor i in s:\r\n    if len(i) > 1:\r\n        count += i[1]\r\nsys.stdout.write(count)",
                "verdict": "Runtime Error"
            },
            {
                "code": "with open(\"file.txt\") as f:\r\n    s = []\r\n    for x in f.readlines():\r\n        x = x.rstrip()\r\n        s.append(list(map(int, x.split())))\r\ncount = 0\r\nfor i in s:\r\n    if len(i) > 1:\r\n        count += i[1]\r\nprint(count)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\ns = 0\nfor i in range(n):\n    a, b = map(int, input().split())\n    s += b\nprint(b)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <iostream>\r\n#include <math.h>\r\n#include <vector>\r\n#include <set>\r\n#include <algorithm>\r\n#include <string>\r\nusing namespace std;\r\n\r\n\r\nint main()\r\n{\r\n\t\r\n\tint a, count = 0;\r\n\tcin >> a;\r\n\tfor (int i = 0; i < a; i++) {\r\n\t\tint c, d;\r\n\t\tcin >> c >> d;\r\n\t\tcount += d;\r\n\t}\r\n\r\n\t\r\n\tcout << count;\r\n\t\r\n\treturn 0;\r\n}\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\nsumma = 0\nfor i in range(n):\n    thing = input()\n    w, u = thing.split()\n    summa += u\nprint(summa)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\nsumma = 0\nfor i in range(n):\n    thing = input()\n    w, u = whing.split()\n    summa += u\nprint(summa)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\nprint([sum(list(map(int, input().split()))[1] for i in range(n)])",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\nres = 0\nfor i in range(n):\n    arr = map(int, input().split())\n    res += arr[1]\nprint(res)",
                "verdict": "Runtime Error"
            },
            {
                "code": "for i in range(int(input()))\n    a, b = map(int, input().split())\n    x+=b\nprint(x)",
                "verdict": "Runtime Error"
            },
            {
                "code": "for i in range(int(input()))\n    a, b = map(int, input().split())\n    x+=b\n    print(x)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\nans = 0\nfor _ in range(n):\n    a, b = map(int, input().split())\n    ans += b\nprint(b)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nans=0\nfor i in range(n):\n    w,u=input.split()\n    u=int(u)\n    ans+=u\nprint(ans)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\nans=0\nfor i in range(n):\n    w,u=input.split()\n    u=int(u)\n    ans+=u\nprint(u)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\nprint(sum(int(u) for w, u in input().split() for i in range(n)))",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\nprint(sum(int(u) for w, u in input().split() for i in range(n",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\nprint(sum([int(u) for w, u in input().split()]))",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\nprint(sum(int(u) for w, u in input().split()))",
                "verdict": "Runtime Error"
            },
            {
                "code": "#define _CRT_SECURE_NO_WARNINGS\r\n#define  ll long long\r\n#pragma GCC optimize(\"Ofast\")\r\n#include <iostream>\r\n#include <vector>\r\n#include <iomanip>\r\n#include <algorithm>\r\n#include <string>\r\n#include <cmath>\r\n#include <set>\r\n#include <stdlib.h>\r\n#include <queue>\r\n#include <ctime>\r\n#include <numeric>\r\n#include<random>\r\n#include <unordered_set>\r\n#include <map>\r\n#define all(x) x.begin(), x.end()\r\n#define couts(C,i) for(auto x : C) cout << x + i << \" \";\r\nusing namespace std;\r\nconst int INF = 1e9;\r\n\r\nint ans = 0;\r\n\r\nvoid solve()\r\n{\r\n\tint a, b;\r\n\tcin >> a >> b;\r\n\tans += b;\r\n}\r\n\r\nint main()\r\n{\r\n#ifdef _DEBUG\r\n\tfreopen(\"Input.txt\", \"r\", stdin);\r\n\tfreopen(\"Output.txt\", \"w\", stdout);\r\n#endif // _DEBUG\r\n\tios_base::sync_with_stdio(0);\r\n\tcin.tie(NULL);\r\n\tcout.tie(NULL);\r\n\tint t;\r\n\tcin >> t;\r\n\twhile (t--)\r\n\t{\r\n\t\tsolve();\r\n\t}\r\n\tcout << ans;\r\n\treturn 0;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include<iostream>\n\nusing namespace std;\nlong long n, sm, s1  =0, k=0;\nint main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(NULL);\n    cin >> n;\n    for (int i = 0; i < n; ++i) {\n        cin >> sm >> sm;\n        s1 += sm;\n    }\n    cout << s1;\n    return 0;\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\r\n#include <vector>\r\n#include <map>\r\n#include <set>\r\n#include <math.h>\r\n#include <algorithm>\r\n#include <stack>\r\n#pragma GCC optimize(\"O3,unroll-loops\")\r\n#pragma GCC target(\"avx2\")\r\nusing namespace std;\r\n#define all(x) x.begin(),x.end()\r\n#define  int long long\r\n//#define ll long long\r\n#define ld long double\r\n\r\nsigned main(){\r\n    ios_base::sync_with_stdio(NULL);\r\n    cin.tie(NULL);\r\n\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n\r\n    int n;\r\n    cin>>n;\r\n\r\n    int sm =  0;\r\n        \r\n    for(int i=0;i<n;i++){\r\n        int w,u;\r\n        cin>>w>>u;\r\n        sm+=u;\r\n    }\r\n    \r\n    cout<<sm<<endl;\r\n    \r\n\r\n}\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "print(sum([int(input().split()[0]) for _ in range(int(input()))]))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    #define int long long\r\n    int n, sum=0;\r\n    cin >> n;\r\n    for(int i=0; i<n; ++i)\r\n    {\r\n        int a, b;\r\n        cin >> a >> b;\r\n        sum+=b;\r\n    }\r\n    cout << sum;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "t = int(input())\nsum = 0\nfor i in range(t):\n    l, r = map(int, input().split())\n    sum += l\nprint(sum)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "t = int(input())\nsum = 0\nfor i in range(t):\n    l, r = map(int, input().split())\n    sum += l\nprint(l)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nans = 0\nfor i in range(n):\n    w, u = map(int, input().split())\n    ans += w\nprint(ans)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\n\nfor i in range(n):\n    a , b = input().split()\n    \nprint(sum(n,b))",
                "verdict": "Runtime Error"
            },
            {
                "code": "a , b = input().split()\nprint(int(a) + int(b))",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input(b))\np = 0\nfor i in n:\n    n , p = input().split()\n    print(int(p) + int(n))\n    ",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input(b))\nfor i in n:\n    n , b = input().split()\n    print(int(n) + int(b))",
                "verdict": "Runtime Error"
            },
            {
                "code": "n[n =g= rgrr=g=p r=rg =rp=rp gr=gr=gr=ptrpt=p=pt rtpr=trpt]",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\nans = 0\nfor i in range(n):\n    a, b = map(int, input())\n    ans += b\nprint(ans)",
                "verdict": "Runtime Error"
            },
            {
                "code": "package main\r\n\r\nimport (\r\n\t\"bufio\"\r\n\t\"os\"\r\n\t\"strconv\"\r\n\t\"strings\"\r\n)\r\n\r\nfunc main() {\r\n\tscanner := bufio.NewScanner(os.Stdin)\r\n\tscanner.Scan()\r\n\tn, _ := strconv.Atoi(scanner.Text())\r\n\tsum := 0\r\n\tfor i := 0; i < n; i++ {\r\n\t\tscanner.Scan()\r\n\t\tp, _ := strconv.Atoi(strings.Split(scanner.Text(), \" \")[1])\r\n\t\tsum += p\r\n\t}\r\n\tprintln(sum)\r\n}\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\n\nint main() {\n    int num, shit, sum, ans = 0;\n\n    std::cin >> num;\n\n    for (int i = 0; i < num; i ++) {\n        std::cin >> shit >> sum;\n        ans += sum;\n    }\n\n    std::cout << ans << std::endl;\n\n    return 0;\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\ns = 0\nfor i in range(n):\n    m, p = map(int, input().split())\n    s += m\nprint(s)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\ns = 0\nfor i in range(n):\n    m = int(input())\n    p = int(input())\n    s += m\nprint(s)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\ns = 0\nfor i in range(n):\n    m, p = map(int, input())\n    s += m\nprint(s)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\ns = 0\nfor i in range(n):\n    a, b = map(int, input().split()\n    s += b\nprint(s)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nlst = list(map(int, input().split()))\r\nsums = [0]\r\nfor i in range(0, n):\r\n    sums.append(sums[-1] + lst[i])\r\nm = int(input())\r\nfor i in range(m):\r\n    l, r = map(int, input().split())\r\n    print(sums[r] - sums[l-1], end = ' ')",
                "verdict": "Runtime Error"
            },
            {
                "code": "ans = 0\nfor i in range(int(input())):\n    a, b = input().split()\n    ans += b\nprint(ans)",
                "verdict": "Runtime Error"
            },
            {
                "code": "a = int(input())\ncount = 0\nfor  i in range(a):\n    b=[]\n    w = input()\n    b.append(w)\n    del b[0:1]\n    count+=b\n    b.clear()\nprint(count)\n\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nb = 0\r\nfor i in range(n):\r\nw, u = map(int, input().split())\r\nb += u\r\nprint(b)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\ncount = 0\ntemp.temp2 = 0,0\nfor i in range(n):\n    temp,temp2 = map(int,input().split())\n    count+=temp2\nprint(count)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\np =0\r\nk = 1\r\na =[]\r\nd = []\r\ns1=['a','n','t','o','n']\r\nfor i in range(n):\r\n    s = input()\r\n    for j in range(len(s)):\r\n        if j =='a':\r\n            e = 1\r\n            if e==1 and j=='n':\r\n                g = 1\r\n                if e ==1 and g==1 and j =='t':\r\n                    f = 1\r\n                    if e ==1 and g==1 and f ==1 and j=='o':\r\n                        h = 1\r\n                        if e ==1 and g==1 and f ==1 and h ==1 and j =='n':\r\n                            a.append(k)\r\n    k = k + 1\r\nprint(*a)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "amount = int(input())\r\ni = amount\r\nresult = 0\r\nutility = []\r\nwhile(i != 0):\r\n    thing = input()\r\n    a = thing.split()\r\n    i = i - 1\r\n    utility.append(int(a[1]))\r\ni = 0\r\nwhile(i != amount):\r\n    b = utility[i] + utility[i + 1]\r\n    result = result + b\r\n    i = i + 2\r\nprint(result)",
                "verdict": "Runtime Error"
            },
            {
                "code": "amount = int(input())\r\ni = amount\r\nresult = 0\r\nutility = []\r\nwhile(i != 0):\r\n    thing = input()\r\n    a = thing.split()\r\n    i = i - 1\r\n    utility.append(int(a[1]))\r\nutility.sort(reverse=True)\r\ni = 0\r\nwhile(i != amount):\r\n    b = utility[i] + utility[i + 1]\r\n    result = result + b\r\n    i = i + 2\r\nprint(result)",
                "verdict": "Runtime Error"
            },
            {
                "code": "amount = int(input())\r\ni = amount\r\nresult = 0\r\nutility = []\r\nwhile(i != 0):\r\n    thing = input()\r\n    a = thing.split()\r\n    i = i - 1\r\n    utility.append(int(a[1]))\r\nutility.sort(reverse=True)\r\nprint(utility)\r\ni = 0\r\nwhile(i != amount):\r\n    b = utility[i] + utility[i + 1]\r\n    result = result + b\r\n    i = i + 2",
                "verdict": "Runtime Error"
            },
            {
                "code": "amount = int(input())\r\ni = amount\r\nresult = 0\r\nutility = []\r\nwhile(i != 0):\r\n    thing = input()\r\n    a = thing.split()\r\n    i = i - 1\r\n    utility.append(int(a[1]))\r\nutility.sort(reverse=True)\r\nprint(utility)\r\ni = 0\r\nwhile(i != amount):\r\n    b = utility[i] + utility[i + 1]\r\n    result = result + b\r\n    i = i + 2\r\nprint(result)",
                "verdict": "Runtime Error"
            },
            {
                "code": "amount = int(input())\r\ni = amount\r\nresult = 0\r\nutility = []\r\nwhile(i != 0):\r\n    thing = input()\r\n    a = thing.split()\r\n    i = i - 1\r\n    utility.append(int(a[1]))\r\nutility.sort(reverse=True)\r\nprint(utility)\r\ni = 0\r\nwhile(i != amount):\r\n    b = utility[i] + utility[i + 1]\r\n    result = result + b\r\n    i = i + 2\r\nprint(result)",
                "verdict": "Runtime Error"
            },
            {
                "code": "amount = int(input())\r\ni = amount\r\nresult = 0\r\nutility = []\r\nwhile(i != 0):\r\n    thing = input()\r\n    a = thing.split()\r\n    i = i - 1\r\n    utility.append(int(a[1]))\r\nutility.sort(reverse=True)\r\nprint(utility)\r\ni = 0\r\nwhile(i != amount):\r\n    b = utility[i] + utility[i + 1]\r\n    result = result + b\r\n    i = i + 2\r\nprint(result)",
                "verdict": "Runtime Error"
            },
            {
                "code": "amount = int(input())\r\ni = amount\r\nresult = 0\r\nutility = []\r\nwhile(i != 0):\r\n    thing = input()\r\n    a = thing.split()\r\n    i = i - 1\r\n    utility.append(int(a[1]))\r\nutility.sort(reverse=True)\r\nprint(utility)\r\ni = 0\r\nwhile(i != amount):\r\n    b = utility[i] + utility[i + 1]\r\n    result = result + b\r\n    i = i + 2\r\nprint(result)",
                "verdict": "Runtime Error"
            },
            {
                "code": "amount = int(input())\r\ni = amount\r\nresult = 0\r\nutility = []\r\nwhile(i != 0):\r\n    thing = input()\r\n    a = thing.split()\r\n    i = i - 1\r\n    utility.append(int(a[1]))\r\nutility.sort(reverse=True)\r\nprint(utility)\r\ni = 0\r\nwhile(i != amount):\r\n    b = utility[i] + utility[i + 1]\r\n    result = result + b\r\n    i = i + 2\r\nprint(result)",
                "verdict": "Runtime Error"
            },
            {
                "code": "amount = int(input())\r\ni = amount\r\nresult = 0\r\nutility = []\r\nwhile(i != 0):\r\n    thing = input()\r\n    a = thing.split(\"\")\r\n    i = i - 1\r\n    utility.append(int(a[1]))\r\nutility.sort(reverse=True)\r\nprint(utility)\r\ni = 0\r\nwhile(i != amount):\r\n    b = utility[i] + utility[i + 1]\r\n    result = result + b\r\n    i = i + 2\r\nprint(result)",
                "verdict": "Runtime Error"
            },
            {
                "code": "amount = int(input())\r\ni = amount\r\nresult = 0\r\nutility = []\r\nwhile(i != 0):\r\n    thing = input()\r\n    a = thing.split(\" \")\r\n    i = i - 1\r\n    utility.append(int(a[1]))\r\nutility.sort(reverse=True)\r\nprint(utility)\r\ni = 0\r\nwhile(i != amount):\r\n    b = utility[i] + utility[i + 1]\r\n    result = result + b\r\n    i = i + 2\r\nprint(result)",
                "verdict": "Runtime Error"
            },
            {
                "code": "amount = int(input())\r\ni = amount\r\nresult = 0\r\nutility = []\r\nwhile(i != 0):\r\n    thing = input()\r\n    a = thing.split(\" \")\r\n    i = i - 1\r\n    utility.append(int(a[1]))\r\nutility.sort(reverse=True)\r\nprint(utility)\r\ni = 0\r\nwhile(i != amount):\r\n    b = utility[i] + utility[i + 1]\r\n    result = result + b\r\n    i = i + 2\r\nprint(result)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\ns = 0\r\nwhile n > 0:\r\n    a = int(input())\r\n    a = int(input())\r\n    s = s + a\r\n    n = n - 1\r\nprint(s)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\ns = 0\nwhile n > 0:\n    a = int(input())\n    a = int(input())\n    s = s + a\n    n = n - 1\nprint(s)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\nwhile n > 0:\n    a = int(input())\n    a = int(input())\n    s = s + a\n    n = n - 1\nprint(s)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\ns = 0\r\nfor i in range(0,n):\r\n    a,b=map(int,input().split())\r\n    s= s+b\r\nprint(b)\r\n    ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(\"259\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x=int(input())\nif 3<=x<=10**19:\n n=x//5 \n b=n*5\n if x==b:\n print('0',n)\n else:\n c=(x-b)/3\n if c.is_integer():\n print(int(c),n)\n else:\n while not c.is_integer():\n n=n-1\n b=n*5\n c=(x-b)/3\n if float(c).is_integer():\n print(int(c),n)",
                "verdict": "Runtime Error"
            },
            {
                "code": "a = int(input())\ncounter = 0\nfor i in range(1, a+1:)\n f, d = map(int, input().split())\n counter+=d\nprint(counter)",
                "verdict": "Runtime Error"
            },
            {
                "code": "a = int(input())\ncounter = 0\nfor i in range(1, a+1:)\n f, d = map(int, input().split())\n counter+=d\n print(counter)",
                "verdict": "Runtime Error"
            },
            {
                "code": "a = int(input())\ncounter = 0\nfor i in range(1, a+1:)\n f, d = map(int, input().split())\n counter + = d\n print(counter)",
                "verdict": "Runtime Error"
            },
            {
                "code": "\u044b",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nsumm = 0\r\nfor i in range(n):\r\n    w, u = [int(i) for i in input().split()]\r\n    summ += b\r\nprint(summ)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n=int(input)\r\nr=0\r\nfor i in range(n):\r\n    a,b=map(int,input().split())\r\n    r+=b\r\nprint(r)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n=int(input())\r\nr=0\r\nfor i in range (n):\r\n    a,b=map(int,input().split())\r\n    r.append(b)\r\n    r+=b\r\nprint(sum(r))",
                "verdict": "Runtime Error"
            },
            {
                "code": "n=int(input())\r\nr=[]\r\nfor i in range (n):\r\n    a,b=map(int,input().split())\r\n    r.append(b)\r\n    r+=b\r\nprint(sum(r))",
                "verdict": "Runtime Error"
            },
            {
                "code": "x = int(input())\ny = 0\nfor i in range(x):\n    a,b = map(int,input().split())\n    r += b\nprint(y)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input)\na = int(input)\nb = int(input)\nc = int(input)\nd = int(input)\ne = int(input)\nf = int(input)\ng = int(input)\nh = int(input)\ni = int(input)\nj = int(input)\nz = a + b+ c + d + e + f + g + h + i + j\nx = z - 317\nprint(x)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nN = n*2\r\nA = [int(input())for i in range(N)]\r\nM = [(A[1::2])]\r\ni = 1\r\nS = 0\r\nwhile i < N:\r\n    S = S + A[i]\r\n    i = i + 2\r\nprint (S)\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "N=int(input())\nS=0\nfor y in range(N):\n    x,z=map(int,input().split))\n    S=S+z\nprint(S)",
                "verdict": "Runtime Error"
            },
            {
                "code": "N=int(input())\nS=0\nfor y in range(N):\n    x,z=map(int,input(.split))\n    S=S+z\nprint(S)",
                "verdict": "Runtime Error"
            },
            {
                "code": "N=int(input())\ns=0\nfor y in range(N):\n    x,z=map(int,input(.split))\n    S=S+z\nprint(S)",
                "verdict": "Runtime Error"
            },
            {
                "code": "N=int(input())\ns=0\nfor y in range(N):\n    x,z=map(int,input(.split))\n    S=S+z\nprint(S)",
                "verdict": "Runtime Error"
            },
            {
                "code": "#!/usr/bin/env python3\r\n\"\"\"0-1 knapsack problem: O(n W) in time, space algorithm\"\"\"\r\nfrom collections import namedtuple\r\nfrom functools import lru_cache\r\n\r\nItem = namedtuple('Item', 'value weight')\r\nitems = Item(4, 5), Item(3, 4), Item(3, 2), Item(2, 1)\r\ncapacity = 6  # max weight we can put into the knapsack\r\n\r\n\r\n@lru_cache(maxsize=None)  # cache all calls\r\ndef best_value(nitems, weight_limit):\r\n    if nitems == 0:  # no items\r\n        return 0  # zero value\r\n    elif items[nitems - 1].weight > weight_limit:\r\n        # new item is heavier than the current weight limit\r\n        return best_value(nitems - 1, weight_limit)  # don't include new item\r\n    else:\r\n        return max(  # max of with and without the new item\r\n            best_value(nitems - 1, weight_limit),  # without\r\n            best_value(nitems - 1, weight_limit - items[nitems - 1].weight)\r\n            + items[nitems - 1].value)  # with the new item\r\n\r\n\r\nresult = []\r\nweight_limit = capacity\r\nfor i in reversed(range(len(items))):\r\n    if best_value(i + 1, weight_limit) > best_value(i, weight_limit):\r\n        # better with the i-th item\r\n        result.append(items[i])  # include it in the result\r\n        weight_limit -= items[i].weight\r\nprint(result)\r\nprint(best_value.cache_info())",
                "verdict": "Wrong Answer"
            },
            {
                "code": "max_w = 15\r\nitems = [(12, 4), (1, 2), (4, 6), (1, 1), (2, 2)]  # (11, [(1, 2), (4, 6), (1, 1), (2, 2)])\r\n\r\nprint(max(filter(lambda x: sum(list(zip(*x))[0]) <= max_w, (v for r in range(1, len(items)) for v in combinations(filter(lambda x: x[0] <= max_w, items), r))), key=lambda x: sum(list(zip(*x))[1])))",
                "verdict": "Runtime Error"
            },
            {
                "code": "[Item(value=3, weight=2), Item(value=3, weight=4)]\r\nCacheInfo(hits=9, misses=21, maxsize=None, currsize=21)",
                "verdict": "Runtime Error"
            },
            {
                "code": "\"\"\"0-1 knapsack problem: O(n W) in time, space algorithm\"\"\"\r\nfrom collections import namedtuple\r\nfrom functools import lru_cache\r\n\r\nItem = namedtuple('Item', 'value weight')\r\nitems = Item(4, 5), Item(3, 4), Item(3, 2), Item(2, 1)\r\ncapacity = 6  # max weight we can put into the knapsack\r\n\r\n\r\n@lru_cache(maxsize=None)  # cache all calls\r\ndef best_value(nitems, weight_limit):\r\n    if nitems == 0:  # no items\r\n        return 0  # zero value\r\n    elif items[nitems - 1].weight > weight_limit:\r\n        # new item is heavier than the current weight limit\r\n        return best_value(nitems - 1, weight_limit)  # don't include new item\r\n    else:\r\n        return max(  # max of with and without the new item\r\n            best_value(nitems - 1, weight_limit),  # without\r\n            best_value(nitems - 1, weight_limit - items[nitems - 1].weight)\r\n            + items[nitems - 1].value)  # with the new item\r\n\r\n\r\nresult = []\r\nweight_limit = capacity\r\nfor i in reversed(range(len(items))):\r\n    if best_value(i + 1, weight_limit) > best_value(i, weight_limit):\r\n        # better with the i-th item\r\n        result.append(items[i])  # include it in the result\r\n        weight_limit -= items[i].weight\r\nprint(result)\r\nprint(best_value.cache_info())\r\n\r\n[Item(value=3, weight=2), Item(value=3, weight=4)]\r\nCacheInfo(hits=9, misses=21, maxsize=None, currsize=21)",
                "verdict": "Runtime Error"
            },
            {
                "code": "\"\"\"0-1 knapsack problem: O(n W) in time, space algorithm\"\"\"\r\nfrom collections import namedtuple\r\nfrom functools import lru_cache\r\n\r\nItem = namedtuple('Item', 'value weight')\r\nitems = Item(4, 5), Item(3, 4), Item(3, 2), Item(2, 1)\r\ncapacity = 6  # max weight we can put into the knapsack\r\n\r\n\r\n@lru_cache(maxsize=None)  # cache all calls\r\ndef best_value(nitems, weight_limit):\r\n    if nitems == 0:  # no items\r\n        return 0  # zero value\r\n    elif items[nitems - 1].weight > weight_limit:\r\n        # new item is heavier than the current weight limit\r\n        return best_value(nitems - 1, weight_limit)  # don't include new item\r\n    else:\r\n        return max(  # max of with and without the new item\r\n            best_value(nitems - 1, weight_limit),  # without\r\n            best_value(nitems - 1, weight_limit - items[nitems - 1].weight)\r\n            + items[nitems - 1].value)  # with the new item\r\n\r\n\r\nresult = []\r\nweight_limit = capacity\r\nfor i in reversed(range(len(items))):\r\n    if best_value(i + 1, weight_limit) > best_value(i, weight_limit):\r\n        # better with the i-th item\r\n        result.append(items[i])  # include it in the result\r\n        weight_limit -= items[i].weight\r\nprint(result)\r\nprint(best_value.cache_info())",
                "verdict": "Wrong Answer"
            },
            {
                "code": "for number in range(100):\r\n    print(number)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "j = int(input())\r\nsumm = 0\r\nfor i in range(n):\r\n    a, b = [int(i) for i in input().split()]\r\n    summ += b\r\nprint(summ)",
                "verdict": "Runtime Error"
            },
            {
                "code": "g = int(input())\r\nsumm = 0\r\nfor i in range(n):\r\n    a, b = [int(i) for i in input().split()]\r\n    summ += b\r\nprint(summ)",
                "verdict": "Runtime Error"
            },
            {
                "code": "endless = int(input())\r\nsumm = 0\r\nfor i in range(n):\r\n    a, b = [int(i) for i in input().split()]\r\n    summ += b\r\nprint(summ)",
                "verdict": "Runtime Error"
            },
            {
                "code": "m = int(input())\r\nfor i in range(5):\r\n    if (m - i*3) % 5 == 0:\r\n        print(i, (m - i*3)//5)\r\n        break",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <iostream>\r\n\r\n#include <vector>\r\n\r\n#include <algorithm>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n\r\n {\r\n\r\n    int l;\r\n\r\n    cin >> l;\r\n    int n;\r\n\r\n    cin >> n;\r\n    int m;\r\n\r\n    cin >> m;\r\n    vector<int> a (n);\r\n    vector<int> b(n);\r\n    vector<int> c(m);\r\n\r\n    for(int i = 0 ; i < n;i++) {\r\n        cin >> a[i];\r\n        cin >> b[i];\r\n\r\n    }\r\n\r\n    for(int i = 0 ; i < m;i++) {\r\n        cin >> c[i];\r\n\r\n    }\r\n\r\n\r\nfor(int j=0;j<m;j++) {\r\n    int ans = 0;\r\n    for(int i = 0 ; i < n;i++) {\r\n        if (a[i] <= c[j] && c[j] <= b[i]) {\r\n            ans++;\r\n\r\n        }\r\n\r\n    }\r\n\r\n       cout << ans <<  endl;\r\n}\r\n\r\n\r\n\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nm = 0\r\nfor i in range(n):\r\n    s = input()\r\n    a = s.split()\r\n    m+=1\r\n    \r\nprint(m)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\nk=0\nfor i in range(n):\n    w=int(input())\n    u=int(input())\n    k+=u\nprint(k)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n=int(input())\nk=0\nfor i in range(n):\n    w=int(input())\n    u=int(input())\n    k+=u",
                "verdict": "Runtime Error"
            },
            {
                "code": "x=int(input())\nw=int(input())\nu=int(input())\nif 1<=n <=100:\n    if 1<=w and u<=100:\n        c=x*u\n        print(c)",
                "verdict": "Runtime Error"
            },
            {
                "code": "x=int(input())\nif 1<=x<=300:\n    c=x\u00f7100\n    print(c)\n    ",
                "verdict": "Runtime Error"
            },
            {
                "code": "yk",
                "verdict": "Runtime Error"
            },
            {
                "code": "summa = 0\nfor i in range(int(input())):\n    summa += int(input().split()[1])\nprint(summma)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\nop = 0\nwhile n > 0:\n    n = n - 1\n    p,v = input().split()\n    op = int(p) + op\nprint(op)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = input()\nwhile n > 0:\n    n = n - 1\n    p,v = input().split()\n    op = int(p) + op\nprint(op)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = input()\nwhile n > 0:\n    n = n - 1\n    p,v = input().split()\n    op = int(p) + op\nprint op",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\nsum_ = 0\nfor i in range(n):\n    w, u = map(int, input().split())\n    sum += u\nprint(sum_)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(inpt())\nsum_ = 0\nfor i in range(n):\n    w, u = map(int, input().split())\n    sum += u\nprint(sum_)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nitems = []\r\nfor _ in range(n):\r\n    w, u = map(int, input().split())\r\n    items.append((w, u))\r\n\r\ninf = float('inf')\r\ndp = [[-inf] * 10001 for _ in range(n+1)]\r\ndp[0][0] = 0\r\n\r\nfor i in range(1, n+1):\r\n    for j in range(10001):\r\n        dp[i][j] = dp[i-1][j]\r\n        if j >= items[i-1][0]:\r\n            dp[i][j] = max(dp[i][j], dp[i-1][j-items[i-1][0]] + items[i-1][1])\r\n\r\nresult = max(max(dp[n]))\r\nprint(result)\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "def bag(n):\n    c = 0\n    for i in range(n):\n        a,b = map(int,input().split())\n        c += b\n    return(c)\nn = int(input())",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def knapsack_infinite(n, items):\n    max_weight = 100 * n\n    dp = [0] * (max_weight + 1)\n    \n    for weight, usefulness in items:\n        for w in range(weight, max_weight + 1):\n            dp[w] = max(dp[w], dp[w - weight] + usefulness)\n    \n    return max(dp)\n\nimport sys\ninput = sys.stdin.read\ndata = input().strip().split()\n\nn = int(data[0])\nitems = [(int(data[i * 2 + 1]), int(data[i * 2 + 2])) for i in range(n)]\n\nprint(knapsack_infinite(n, items))\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def knapsack_infinite(n, items):\n    max_weight = 100 * n\n    dp = [0] * (max_weight + 1)\n    \n    for weight, usefulness in items:\n        for w in range(weight, max_weight + 1):\n            dp[w] = max(dp[w], dp[w - weight] + usefulness)\n    \n    return max(dp)\n\nimport sys\ninput = sys.stdin.read\ndata = input().strip().split()\n\nn = int(data[0])\nitems = [(int(data[i * 2 + 1]), int(data[i * 2 + 2])) for i in range(n)]\n\nprint(knapsack_infinite(n, items))\n\n",
                "verdict": "Wrong Answer"
            }
        ]
    },
    {
        "task_id": 15,
        "description": "\u041f\u043e\u0445\u043e\u0436\u0435, \u0447\u0442\u043e \u0428\u0435\u043b\u0434\u043e\u043d \u0432\u043b\u044e\u0431\u0438\u043b\u0441\u044f \u0432 \u0414\u0436\u0435\u043d\u043d\u0438. \u0427\u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0432 \u044d\u0442\u043e\u0439 \u0441\u0438\u0442\u0443\u0430\u0446\u0438\u0438? \u041f\u043e\u0433\u043e\u0432\u043e\u0440\u0438\u0442\u044c, \u043f\u0440\u0438\u0437\u043d\u0430\u0442\u044c\u0441\u044f \u0438 \u043d\u0430\u0434\u0435\u044f\u0442\u044c\u0441\u044f \u043d\u0430 \u0432\u0437\u0430\u0438\u043c\u043d\u043e\u0441\u0442\u044c? \u042d\u0442\u043e \u043a\u0430\u043a-\u0442\u043e \u043d\u0435\u0441\u0443\u0440\u0430\u0437\u043d\u043e, \u043e\u043d\u0438 \u0432\u0435\u0434\u044c \u043f\u043e\u0447\u0442\u0438 \u043d\u0435 \u043e\u0431\u0449\u0430\u044e\u0442\u0441\u044f. \u0422\u0438\u0445\u043e \u0441\u0442\u0440\u0430\u0434\u0430\u0442\u044c \u0438 \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u043e \u043b\u0438\u0441\u0442\u0430\u0442\u044c \u0435\u0451 \u0438\u043d\u0441\u0442\u0430\u0433\u0440\u0430\u043c? \u041c\u0430\u043b\u043e \u0442\u043e\u043b\u043a\u0443. \u0427\u0435\u0440\u0435\u0437 \u0434\u0440\u0443\u0437\u0435\u0439 \u0432\u044b\u044f\u0441\u043d\u0438\u0442\u044c, \u043a\u0430\u043a \u043e\u043d\u0430 \u043a \u043d\u0435\u043c\u0443 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0441\u044f? \u0415\u0451 \u00ab\u043d\u0443 \u043d\u0435 \u0437\u043d\u0430\u044e\u00bb \u043d\u0435 \u0441\u0434\u0435\u043b\u0430\u0435\u0442 \u043b\u0435\u0433\u0447\u0435\u2026\n\n\u0428\u0435\u043b\u0434\u043e\u043d \u0442\u0430\u043a \u0438 \u0436\u0435\u0432\u0430\u043b \u0431\u044b \u0443\u043c\u0441\u0442\u0432\u0435\u043d\u043d\u0443\u044e \u0436\u0432\u0430\u0447\u043a\u0443, \u0435\u0441\u043b\u0438 \u0431\u044b \u0432 \u043e\u0434\u0438\u043d \u0434\u0435\u043d\u044c \u043d\u0435 \u0443\u0441\u043b\u044b\u0448\u0430\u043b, \u0447\u0442\u043e \u0414\u0436\u0435\u043d\u043d\u0438 \u043f\u0438\u0448\u0435\u0442 \u0441\u0432\u043e\u0439 \u044f\u0437\u044b\u043a \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f **Pomada**. \u0414\u0436\u0435\u043d\u043d\u0438 \u2013 \u043e\u0447\u0435\u043d\u044c \u0445\u043e\u0440\u043e\u0448\u0438\u0439 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0441\u0442, \u043d\u043e \u043f\u043e\u043a\u0430 \u0447\u0442\u043e \u0443 \u0435\u0451 \u044f\u0437\u044b\u043a\u0430 \u0435\u0441\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0439:\n\n- \u0412 \u044f\u0437\u044b\u043a\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0434\u0432\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445: \u0446\u0435\u043b\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u0435 **`a` \u0438 `b`**, \u043a\u0430\u0436\u0434\u0430\u044f \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043e\u0442 0 \u0434\u043e 15 \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e.\n- \u041f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \u043d\u0430 **Pomada** \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 **`a`** \u0438 **`b`** \u0440\u0430\u0432\u043d\u044b 0.\n\n\u042f\u0437\u044b\u043a \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0447\u0435\u0442\u044b\u0440\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438:\n\n- `a >>` \u0438\u043b\u0438 `b >>`  - \u043f\u043e\u0431\u0438\u0442\u043e\u0432\u043e \u0441\u0434\u0432\u0438\u043d\u0443\u0442\u044c \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u0432\u043f\u0440\u0430\u0432\u043e \u043d\u0430 1\n- `a **` \u0438\u043b\u0438 `b **`  - \u0443\u043c\u043d\u043e\u0436\u0438\u0442\u044c \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u043d\u0430 2. \u0415\u0441\u043b\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043f\u0440\u0435\u0432\u044b\u0441\u0438\u0442 15, \u043e\u043d \u0431\u0443\u0434\u0435\u0442 \u0432\u0437\u044f\u0442 \u043f\u043e \u043c\u043e\u0434\u0443\u043b\u044e 16.\n- `a ++` \u0438\u043b\u0438 `b ++`  - \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0442\u044c \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u0443\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0443\u044e \u043d\u0430 3. \u0415\u0441\u043b\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043f\u0440\u0435\u0432\u044b\u0441\u0438\u0442 15, \u043e\u043d \u0431\u0443\u0434\u0435\u0442 \u0432\u0437\u044f\u0442 \u043f\u043e \u043c\u043e\u0434\u0443\u043b\u044e 16.\n- `print` - \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d \u0441\u0438\u043c\u0432\u043e\u043b \u043f\u043e\u0434 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u043c ${(a \\cdot 16 + b)} \\mod 64$ \u0438\u0437 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0439 \u043c\u0430\u0441\u0442\u0435\u0440-\u0441\u0442\u0440\u043e\u043a\u0438:\n\n```0123456789 abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,```\n\n\u0413\u0434\u0435 \u0441\u0438\u043c\u0432\u043e\u043b \u0441 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u043c 10 - \u043f\u0440\u043e\u0431\u0435\u043b. $\\mod 64$ \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442 \u0432\u0437\u044f\u0442\u0438\u0435 \u043e\u0441\u0442\u0430\u0442\u043a\u0430 \u043e\u0442 \u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043d\u0430 64.\n\n\u0428\u0435\u043b\u0434\u043e\u043d \u0440\u0435\u0448\u0438\u043b \u0432\u044b\u0440\u0430\u0437\u0438\u0442\u044c \u0414\u0436\u0435\u043d\u043d\u0438 \u0437\u043d\u0430\u043a \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u044f, \u043d\u0430\u043f\u0438\u0441\u0430\u0432 \u043d\u0430 \u044f\u0437\u044b\u043a\u0435 **Pomada** \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0432\u044b\u0432\u043e\u0434\u0438\u0442 \u043d\u0430 \u044d\u043a\u0440\u0430\u043d \u043f\u0440\u0438\u0437\u043d\u0430\u043d\u0438\u0435 \u0432 \u043b\u044e\u0431\u0432\u0438. \u041d\u043e \u0442\u0430\u043a \u043a\u0430\u043a \u044f\u0437\u044b\u043a \u0414\u0436\u0435\u043d\u043d\u0438 \u0435\u0449\u0451 \u043d\u0435 \u043e\u0447\u0435\u043d\u044c \u0431\u044b\u0441\u0442\u0440\u044b\u0439, \u043d\u0443\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u044d\u0442\u043e \u0437\u0430 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439, \u0438\u043d\u0430\u0447\u0435 \u0414\u0436\u0435\u043d\u043d\u0438 \u0437\u0430\u043c\u0435\u0442\u0438\u0442 \u043f\u043e\u0434\u0442\u043e\u0440\u043c\u0430\u0436\u0438\u0432\u0430\u043d\u0438\u044f, \u0443\u0432\u043b\u0435\u0447\u0451\u0442\u0441\u044f \u0434\u043e\u0440\u0430\u0431\u043e\u0442\u043a\u043e\u0439 \u044f\u0437\u044b\u043a\u0430 \u0438 \u0434\u0430\u0436\u0435 \u043d\u0435 \u0432\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f \u0432 \u043f\u043e\u0441\u043b\u0430\u043d\u0438\u0435.\n\n\u0428\u0435\u043b\u0434\u043e\u043d, \u043a\u043e\u043d\u0435\u0447\u043d\u043e, \u0433\u043e\u0442\u043e\u0432 \u043d\u0430 \u0431\u0435\u0441\u0441\u043e\u043d\u043d\u044b\u0435 \u043d\u043e\u0447\u0438 \u0440\u0430\u0434\u0438 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u044f \u0414\u0436\u0435\u043d\u043d\u0438, \u043d\u043e \u0432\u0441\u0451-\u0442\u0430\u043a\u0438 \u0445\u043e\u0447\u0435\u0442 \u0443\u0437\u043d\u0430\u0442\u044c, \u043a\u0430\u043a\u043e\u0439 \u043e\u0431\u044a\u0451\u043c \u0440\u0430\u0431\u043e\u0442\u044b \u0435\u043c\u0443 \u043f\u0440\u0435\u0434\u0441\u0442\u043e\u0438\u0442. \u041c\u044b \u043d\u0435 \u043f\u0440\u043e\u0441\u0438\u043c \u0432\u0430\u0441 \u043f\u0438\u0441\u0430\u0442\u044c \u043d\u0430 \u044f\u0437\u044b\u043a\u0435 **Pomada**, \u043d\u043e \u043f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u0435\u043c \u0432\u0430\u043c \u043f\u043e\u0441\u0447\u0438\u0442\u0430\u0442\u044c, \u043a\u0430\u043a\u043e\u0435 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439 \u0431\u0443\u0434\u0435\u0442 \u0432 \u0441\u043a\u0440\u0438\u043f\u0442\u0435 \u043d\u0430 \u044f\u0437\u044b\u043a\u0435 **Pomada**, \u0432\u044b\u0432\u043e\u0434\u044f\u0449\u0435\u043c \u043f\u043e\u0441\u043b\u0430\u043d\u0438\u0435 \u0428\u0435\u043b\u0434\u043e\u043d\u0430. \u0415\u0441\u043b\u0438 \u0442\u0430\u043a\u043e\u0439 \u0441\u043a\u0440\u0438\u043f\u0442 \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c, \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 `Broken heart`.\u0412 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u043f\u043e\u0441\u043b\u0435\u043d\u0438\u0435 \u0428\u0435\u043b\u0434\u043e\u043d\u0430 \u0434\u043b\u0438\u043d\u043e\u0439 \u043e\u0442 $1$ \u0434\u043e $10^5$ \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432. \u0413\u0430\u0440\u0430\u043d\u0442\u0438\u0440\u0443\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u043e\u043d\u043e \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0438\u0437 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432, \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u0432 \u043c\u0430\u0441\u0442\u0435\u0440-\u0441\u0442\u0440\u043e\u043a\u0435.\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e \u2014 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439 \u0432 \u0441\u043a\u0440\u0438\u043f\u0442\u0435 \u043d\u0430 \u044f\u0437\u044b\u043a\u0435 **Pomada**, \u0432\u044b\u0432\u043e\u0434\u044f\u0449\u0435\u043c \u043f\u043e\u0441\u043b\u0430\u043d\u0438\u0435 \u0428\u0435\u043b\u0434\u043e\u043d\u0430.",
        "solutions": [
            {
                "code": "master = \"0123456789 abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\nwaybase = []\nstring = input()\n\nfor s in string:\n    waybase.append(master.index(s))\n\nn = 256\nmatrix = [[float(\"inf\") for _ in range(n)] for _ in range(n)]\n\n\nfor i in range(256):\n    a, b = divmod(i, 16)\n    for j in {\n        (((a >> 1) % 16) * 16 + b) % 256,\n        (((a * 2) % 16) * 16 + b) % 256,\n        (((a + 3) % 16) * 16 + b) % 256,\n\n        (a * 16 + ((b >> 1) % 16)) % 256,\n        (a * 16 + ((b * 2) % 16)) % 256,\n        (a * 16 + ((b + 3) % 16)) % 256,\n    }:\n        matrix[i][j] = 1\n\n    matrix[i][i] = 0\n\nfor k in range(n):\n    for i in range(n):\n        for j in range(n):\n            matrix[i][j] = min(matrix[i][j], matrix[i][k] + matrix[k][j])\n\n\nprev = waybase[0]\n\nway = [\n    matrix[0][prev + 64 * i] for i in range(4)\n]\n\nfor w in waybase[1:]:\n    way = [\n        min(way[i] + matrix[prev + 64 * i][w + 64 * j] for i in range(4)) for j in range(4)\n    ]\n    prev = w\n\nprint(min(way) + len(string))\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "master = \"0123456789 abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\ntargetway = []\n\nletters = input()\nfor w in letters:\n    base = master.index(w)\n    step = [base]\n    for _ in range(3):\n        base += 64\n        step.append(base)\n\n    targetway.append(step)\n\nmatrix = [[float(\"inf\")] * 256 for _ in range(256)]\n\nc = 0\nfor i in range(256):\n    a, b = divmod(i, 16)\n    for j in {\n        ((a >> 1) * 16 + b) % 256,\n        (((a * 2) % 16) * 16 + b) % 256,\n        (((a + 3) % 16) * 16 + b) % 256,\n\n        (a * 16 + ((b >> 1) % 16)) % 256,\n        (a * 16 + ((b * 2) % 16)) % 256,\n        (a * 16 + ((b + 3) % 16)) % 256,\n    }:\n        if i != j:\n            matrix[i][j] = 1\n\n\nn = 256\nfor k in range(n):\n    for i in range(n):\n        for j in range(n):\n            matrix[i][j] = min(matrix[i][j], matrix[i][k] + matrix[k][j])\n\n\ndp = [(0, u, matrix[0][u]) for u in targetway[0]]\nfor i in range(1, len(targetway)):\n    l = targetway[i]\n\n    if l == targetway[i - 1]:\n        continue\n\n    newdp = []\n    for u in l:\n        newdp.append(min(((prev[1], u, prev[2] + matrix[prev[1]][u]) for prev in dp), key=lambda x: x[2]))\n\n    dp = newdp\n\nprint(min(p[2] for p in dp) + len(letters))\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "master = \"0123456789 abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n\ntargetway = []\n\nletters = input()\nfor w in letters:\n    base = master.index(w)\n    step = [base]\n    for _ in range(3):\n        base += 64\n        step.append(base)\n\n    targetway.append(step)\n\nmatrix = [[float(\"inf\")] * 256 for _ in range(256)]\n\nc = 0\nfor i in range(256):\n    a, b = divmod(i, 16)\n    for j in {\n        ((a >> 1) * 16 + b) % 256,\n        (((a * 2) % 16) * 16 + b) % 256,\n        (((a + 3) % 16) * 16 + b) % 256,\n\n        (a * 16 + ((b >> 1) % 16)) % 256,\n        (a * 16 + ((b * 2) % 16)) % 256,\n        (a * 16 + ((b + 3) % 16)) % 256,\n    }:\n        if i != j:\n            matrix[i][j] = 1\n\n\nn = 256\nfor k in range(n):\n    for i in range(n):\n        for j in range(n):\n            matrix[i][j] = min(matrix[i][j], matrix[i][k] + matrix[k][j])\n\n\ndp = [(0, u, matrix[0][u]) for u in targetway[0]]\nfor i in range(1, len(targetway)):\n    l = targetway[i]\n\n    if l == targetway[i - 1]:\n        continue\n\n    newdp = []\n    for u in l:\n        newdp.append(min(((prev[1], u, prev[2] + matrix[prev[1]][u]) for prev in dp), key=lambda x: x[2]))\n\n    dp = newdp\n\nprint(min(p[2] for p in dp) + len(letters))\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "#include <bits/stdc++.h>\n#define fi first\n#define se second\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(), (x).end()\n#define rall(x) (x).rbegin(), (x).rend()\n#define make_unique(x) sort(all((x))); (x).resize(unique(all((x))) - (x).begin())\ntypedef long long ll;\ntypedef long double ld;\nusing namespace std;\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\n// #include <ext/pb_ds/assoc_container.hpp>\n// #include <ext/pb_ds/tree_policy.hpp>\n// using namespace __gnu_pbds;\n// template<class T>\n// using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\nconst int N = 16;\nint dist[N][N][N][N];\nint main() {\n\n  ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n\n  for(int a = 0; a < N; a++)\n    for(int b = 0; b < N; b++) {\n      for(int i = 0; i < N; i++)\n        for(int j = 0; j < N; j++)\n          dist[a][b][i][j] = -1;\n      dist[a][b][a][b] = 0;\n      queue<pair<int, int> > q;\n      q.push(mp(a, b));\n      while(!q.empty()) {\n        auto cv = q.front(); q.pop();\n        if(dist[a][b][cv.fi / 2][cv.se] == -1) {\n          dist[a][b][cv.fi / 2][cv.se] = dist[a][b][cv.fi][cv.se] + 1;\n          q.push(mp(cv.fi / 2, cv.se));\n        }\n        if(dist[a][b][cv.fi][cv.se / 2] == -1) {\n          dist[a][b][cv.fi][cv.se / 2] = dist[a][b][cv.fi][cv.se] + 1;\n          q.push(mp(cv.fi, cv.se / 2));\n        }\n        if(dist[a][b][(cv.fi * 2) % N][cv.se] == -1) {\n          dist[a][b][(cv.fi * 2) % N][cv.se] = dist[a][b][cv.fi][cv.se] + 1;\n          q.push(mp((cv.fi * 2) % N, cv.se));\n        }\n        if(dist[a][b][cv.fi][(cv.se * 2) % N] == -1) {\n          dist[a][b][cv.fi][(cv.se * 2) % N] = dist[a][b][cv.fi][cv.se] + 1;\n          q.push(mp(cv.fi, (cv.se * 2) % N));\n        }\n        if(dist[a][b][(cv.fi + 3) % N][cv.se] == -1) {\n          dist[a][b][(cv.fi + 3) % N][cv.se] = dist[a][b][cv.fi][cv.se] + 1;\n          q.push(mp((cv.fi + 3) % N, cv.se));\n        }\n        if(dist[a][b][cv.fi][(cv.se + 3) % N] == -1) {\n          dist[a][b][cv.fi][(cv.se + 3) % N] = dist[a][b][cv.fi][cv.se] + 1;\n          q.push(mp(cv.fi, (cv.se + 3) % N));\n        }\n      }\n    }\n\n  string s;\n\n  getline(cin, s);\n\n  string alp = \"0123456789 abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,\";\n\n  map<char, vector<pair<int, int> > > cc;\n\n  for(int a = 0; a < N; a++)\n    for(int b = 0; b < N; b++)\n      cc[alp[(a * 16 + b) % 64]].pb(mp(a, b));\n\n  vector<vector<int> > dp(16, vector<int>(16, -1)), ndp(16, vector<int>(16, -1));\n\n  for(int i = 0; i < s.size(); i++) {\n    if(i == 0) {\n      for(auto& x : cc[s[i]]) {\n        if(dist[0][0][x.fi][x.se] != -1) {\n          int nval = dist[0][0][x.fi][x.se] + 1;\n          if(ndp[x.fi][x.se] == -1 || ndp[x.fi][x.se] > nval) ndp[x.fi][x.se] = nval;\n        }\n      }\n    } else {\n      for(auto& y : cc[s[i - 1]])\n        for(auto& x : cc[s[i]]) {\n          if(dp[y.fi][y.se] != -1 && dist[y.fi][y.se][x.fi][x.se] != -1) {\n            int nval = dp[y.fi][y.se] + dist[y.fi][y.se][x.fi][x.se] + 1;\n            if(ndp[x.fi][x.se] == -1 || ndp[x.fi][x.se] > nval) ndp[x.fi][x.se] = nval;\n          }\n        }\n    }\n    for(int j = 0; j < 16; j++) {\n      for(int k = 0; k < 16; k++) {\n        dp[j][k] = ndp[j][k];\n        ndp[j][k] = -1;\n      }\n    }\n  }\n\n  int ans = -1;\n\n  for(int i = 0; i < 16; i++)\n    for(int j = 0; j < 16; j++)\n      if(dp[i][j] != -1)\n        ans = (ans == -1 ? dp[i][j] : min(ans, dp[i][j]));\n\n  cout << ans << '\\n';\n\n  return 0;\n}\n/*\n0123456789 abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,\n*/\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "// #pragma GCC optimize(\"Ofast\")\n// #pragma GCC target(\"avx,avx2,fma\")\n// #pragma GCC optimization (\"unroll-loops\")\n#include <bits/stdc++.h>\n// #include <iostream>\n// #include <fstream>\n// #include <algorithm>\n// #include <vector>\n// #include <set>\n// #include <stack>\n// #include <map>\n// #include <unordered_map>\n// #include <iomanip>\n// #include <cmath>\n// #include <queue>\n// #include <bitset>\n// #include <numeric>\n// #include <array>\n// #include <cstring>\n// #include <random>\n// #include <chrono>\n#define fi first\n#define se second\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(), (x).end()\n#define rall(x) (x).rbegin(), (x).rend()\n#define make_unique(x) sort(all((x))); (x).resize(unique(all((x))) - (x).begin())\ntypedef long long ll;\ntypedef long double ld;\nusing namespace std;\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\n// #include <ext/pb_ds/assoc_container.hpp>\n// #include <ext/pb_ds/tree_policy.hpp>\n// using namespace __gnu_pbds;\n// template<class T>\n// using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\n// const int N = 16;\nint main() {\n\n  // int dist[N][N][N][N];\n\n  ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n\n  // for(int a = 0; a < N; a++)\n  //   for(int b = 0; b < N; b++) {\n  //     for(int i = 0; i < N; i++)\n  //       for(int j = 0; j < N; j++)\n  //         dist[a][b][i][j] = -1;\n  //     dist[a][b][a][b] = 0;\n  //     queue<pair<int, int> > q;\n  //     q.push(mp(a, b));\n  //     while(!q.empty()) {\n  //       auto cv = q.front(); q.pop();\n  //       if(dist[a][b][cv.fi / 2][cv.se] == -1) {\n  //         dist[a][b][cv.fi / 2][cv.se] = dist[a][b][cv.fi][cv.se] + 1;\n  //         q.push(mp(cv.fi / 2, cv.se));\n  //       }\n  //       if(dist[a][b][cv.fi][cv.se / 2] == -1) {\n  //         dist[a][b][cv.fi][cv.se / 2] = dist[a][b][cv.fi][cv.se] + 1;\n  //         q.push(mp(cv.fi, cv.se / 2));\n  //       }\n  //       if(dist[a][b][(cv.fi * 2) % N][cv.se] == -1) {\n  //         dist[a][b][(cv.fi * 2) % N][cv.se] = dist[a][b][cv.fi][cv.se] + 1;\n  //         q.push(mp((cv.fi * 2) % N, cv.se));\n  //       }\n  //       if(dist[a][b][cv.fi][(cv.se * 2) % N] == -1) {\n  //         dist[a][b][cv.fi][(cv.se * 2) % N] = dist[a][b][cv.fi][cv.se] + 1;\n  //         q.push(mp(cv.fi, (cv.se * 2) % N));\n  //       }\n  //       if(dist[a][b][(cv.fi + 3) % N][cv.se] == -1) {\n  //         dist[a][b][(cv.fi + 3) % N][cv.se] = dist[a][b][cv.fi][cv.se] + 1;\n  //         q.push(mp((cv.fi + 3) % N, cv.se));\n  //       }\n  //       if(dist[a][b][cv.fi][(cv.se + 3) % N] == -1) {\n  //         dist[a][b][cv.fi][(cv.se + 3) % N] = dist[a][b][cv.fi][cv.se] + 1;\n  //         q.push(mp(cv.fi, (cv.se + 3) % N));\n  //       }\n  //     }\n  //   }\n  //\n  string s;\n\n  getline(cin, s);\n  //\n  // string alp = \"0123456789 abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,\";\n  //\n  // map<char, vector<pair<int, int> > > cc;\n  //\n  // for(int a = 0; a < N; a++)\n  //   for(int b = 0; b < N; b++)\n  //     cc[alp[(a * 16 + b) % 64]].pb(mp(a, b));\n  //\n  // vector<vector<int> > dp(16, vector<int>(16, -1)), ndp(16, vector<int>(16, -1));\n\n  for(int i = 0; i < (int)s.size(); i++) {\n    // if(i == 0) {\n    //   for(auto& x : cc[s[i]]) {\n    //     if(dist[0][0][x.fi][x.se] != -1) {\n    //       int nval = dist[0][0][x.fi][x.se] + 1;\n    //       if(ndp[x.fi][x.se] == -1 || ndp[x.fi][x.se] > nval) ndp[x.fi][x.se] = nval;\n    //     }\n    //   }\n    // } else {\n    //   for(auto& y : cc[s[i - 1]])\n    //     for(auto& x : cc[s[i]]) {\n    //       if(dp[y.fi][y.se] != -1 && dist[y.fi][y.se][x.fi][x.se] != -1) {\n    //         int nval = dp[y.fi][y.se] + dist[y.fi][y.se][x.fi][x.se] + 1;\n    //         if(ndp[x.fi][x.se] == -1 || ndp[x.fi][x.se] > nval) ndp[x.fi][x.se] = nval;\n    //       }\n    //     }\n    // }\n    // for(int j = 0; j < 16; j++) {\n    //   for(int k = 0; k < 16; k++) {\n    //     // dp[j][k] = ndp[j][k];\n    //     // ndp[j][k] = -1;\n    //   }\n    // }\n  }\n\n  // int ans = -1;\n  //\n  // for(int i = 0; i < 16; i++)\n  //   for(int j = 0; j < 16; j++)\n  //     if(dp[i][j] != -1)\n  //       ans = (ans == -1 ? dp[i][j] : min(ans, dp[i][j]));\n  //\n  // cout << ans << '\\n';\n\n  return 0;\n}\n/*\n0123456789 abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,\n*/\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\n#pragma GCC optimization (\"unroll-loops\")\n#include <iostream>\n#include <fstream>\n#include <algorithm>\n#include <vector>\n#include <set>\n#include <stack>\n#include <map>\n#include <unordered_map>\n#include <iomanip>\n#include <cmath>\n#include <queue>\n#include <bitset>\n#include <numeric>\n#include <array>\n#include <cstring>\n#include <random>\n#include <chrono>\n#define fi first\n#define se second\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(), (x).end()\n#define rall(x) (x).rbegin(), (x).rend()\n#define make_unique(x) sort(all((x))); (x).resize(unique(all((x))) - (x).begin())\ntypedef long long ll;\ntypedef long double ld;\nusing namespace std;\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\n// #include <ext/pb_ds/assoc_container.hpp>\n// #include <ext/pb_ds/tree_policy.hpp>\n// using namespace __gnu_pbds;\n// template<class T>\n// using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\n// const int N = 16;\nint main() {\n\n  // int dist[N][N][N][N];\n\n  ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n\n  // for(int a = 0; a < N; a++)\n  //   for(int b = 0; b < N; b++) {\n  //     for(int i = 0; i < N; i++)\n  //       for(int j = 0; j < N; j++)\n  //         dist[a][b][i][j] = -1;\n  //     dist[a][b][a][b] = 0;\n  //     queue<pair<int, int> > q;\n  //     q.push(mp(a, b));\n  //     while(!q.empty()) {\n  //       auto cv = q.front(); q.pop();\n  //       if(dist[a][b][cv.fi / 2][cv.se] == -1) {\n  //         dist[a][b][cv.fi / 2][cv.se] = dist[a][b][cv.fi][cv.se] + 1;\n  //         q.push(mp(cv.fi / 2, cv.se));\n  //       }\n  //       if(dist[a][b][cv.fi][cv.se / 2] == -1) {\n  //         dist[a][b][cv.fi][cv.se / 2] = dist[a][b][cv.fi][cv.se] + 1;\n  //         q.push(mp(cv.fi, cv.se / 2));\n  //       }\n  //       if(dist[a][b][(cv.fi * 2) % N][cv.se] == -1) {\n  //         dist[a][b][(cv.fi * 2) % N][cv.se] = dist[a][b][cv.fi][cv.se] + 1;\n  //         q.push(mp((cv.fi * 2) % N, cv.se));\n  //       }\n  //       if(dist[a][b][cv.fi][(cv.se * 2) % N] == -1) {\n  //         dist[a][b][cv.fi][(cv.se * 2) % N] = dist[a][b][cv.fi][cv.se] + 1;\n  //         q.push(mp(cv.fi, (cv.se * 2) % N));\n  //       }\n  //       if(dist[a][b][(cv.fi + 3) % N][cv.se] == -1) {\n  //         dist[a][b][(cv.fi + 3) % N][cv.se] = dist[a][b][cv.fi][cv.se] + 1;\n  //         q.push(mp((cv.fi + 3) % N, cv.se));\n  //       }\n  //       if(dist[a][b][cv.fi][(cv.se + 3) % N] == -1) {\n  //         dist[a][b][cv.fi][(cv.se + 3) % N] = dist[a][b][cv.fi][cv.se] + 1;\n  //         q.push(mp(cv.fi, (cv.se + 3) % N));\n  //       }\n  //     }\n  //   }\n  //\n  string s;\n\n  getline(cin, s);\n  //\n  // string alp = \"0123456789 abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,\";\n  //\n  // map<char, vector<pair<int, int> > > cc;\n  //\n  // for(int a = 0; a < N; a++)\n  //   for(int b = 0; b < N; b++)\n  //     cc[alp[(a * 16 + b) % 64]].pb(mp(a, b));\n  //\n  // vector<vector<int> > dp(16, vector<int>(16, -1)), ndp(16, vector<int>(16, -1));\n\n  for(int i = 0; i < (int)s.size(); i++) {\n    // if(i == 0) {\n    //   for(auto& x : cc[s[i]]) {\n    //     if(dist[0][0][x.fi][x.se] != -1) {\n    //       int nval = dist[0][0][x.fi][x.se] + 1;\n    //       if(ndp[x.fi][x.se] == -1 || ndp[x.fi][x.se] > nval) ndp[x.fi][x.se] = nval;\n    //     }\n    //   }\n    // } else {\n    //   for(auto& y : cc[s[i - 1]])\n    //     for(auto& x : cc[s[i]]) {\n    //       if(dp[y.fi][y.se] != -1 && dist[y.fi][y.se][x.fi][x.se] != -1) {\n    //         int nval = dp[y.fi][y.se] + dist[y.fi][y.se][x.fi][x.se] + 1;\n    //         if(ndp[x.fi][x.se] == -1 || ndp[x.fi][x.se] > nval) ndp[x.fi][x.se] = nval;\n    //       }\n    //     }\n    // }\n    // for(int j = 0; j < 16; j++) {\n    //   for(int k = 0; k < 16; k++) {\n    //     // dp[j][k] = ndp[j][k];\n    //     // ndp[j][k] = -1;\n    //   }\n    // }\n  }\n\n  // int ans = -1;\n  //\n  // for(int i = 0; i < 16; i++)\n  //   for(int j = 0; j < 16; j++)\n  //     if(dp[i][j] != -1)\n  //       ans = (ans == -1 ? dp[i][j] : min(ans, dp[i][j]));\n  //\n  // cout << ans << '\\n';\n\n  return 0;\n}\n/*\n0123456789 abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,\n*/\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\n#pragma GCC optimization (\"unroll-loops\")\n#include <iostream>\n#include <fstream>\n#include <algorithm>\n#include <vector>\n#include <set>\n#include <stack>\n#include <map>\n#include <unordered_map>\n#include <iomanip>\n#include <cmath>\n#include <queue>\n#include <bitset>\n#include <numeric>\n#include <array>\n#include <cstring>\n#include <random>\n#include <chrono>\n#define fi first\n#define se second\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(), (x).end()\n#define rall(x) (x).rbegin(), (x).rend()\n#define make_unique(x) sort(all((x))); (x).resize(unique(all((x))) - (x).begin())\ntypedef long long ll;\ntypedef long double ld;\nusing namespace std;\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\n// #include <ext/pb_ds/assoc_container.hpp>\n// #include <ext/pb_ds/tree_policy.hpp>\n// using namespace __gnu_pbds;\n// template<class T>\n// using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\nconst int N = 16;\nint main() {\n\n  int dist[N][N][N][N];\n\n  ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n\n  for(int a = 0; a < N; a++)\n    for(int b = 0; b < N; b++) {\n      for(int i = 0; i < N; i++)\n        for(int j = 0; j < N; j++)\n          dist[a][b][i][j] = -1;\n      dist[a][b][a][b] = 0;\n      queue<pair<int, int> > q;\n      q.push(mp(a, b));\n      while(!q.empty()) {\n        auto cv = q.front(); q.pop();\n        if(dist[a][b][cv.fi / 2][cv.se] == -1) {\n          dist[a][b][cv.fi / 2][cv.se] = dist[a][b][cv.fi][cv.se] + 1;\n          q.push(mp(cv.fi / 2, cv.se));\n        }\n        if(dist[a][b][cv.fi][cv.se / 2] == -1) {\n          dist[a][b][cv.fi][cv.se / 2] = dist[a][b][cv.fi][cv.se] + 1;\n          q.push(mp(cv.fi, cv.se / 2));\n        }\n        if(dist[a][b][(cv.fi * 2) % N][cv.se] == -1) {\n          dist[a][b][(cv.fi * 2) % N][cv.se] = dist[a][b][cv.fi][cv.se] + 1;\n          q.push(mp((cv.fi * 2) % N, cv.se));\n        }\n        if(dist[a][b][cv.fi][(cv.se * 2) % N] == -1) {\n          dist[a][b][cv.fi][(cv.se * 2) % N] = dist[a][b][cv.fi][cv.se] + 1;\n          q.push(mp(cv.fi, (cv.se * 2) % N));\n        }\n        if(dist[a][b][(cv.fi + 3) % N][cv.se] == -1) {\n          dist[a][b][(cv.fi + 3) % N][cv.se] = dist[a][b][cv.fi][cv.se] + 1;\n          q.push(mp((cv.fi + 3) % N, cv.se));\n        }\n        if(dist[a][b][cv.fi][(cv.se + 3) % N] == -1) {\n          dist[a][b][cv.fi][(cv.se + 3) % N] = dist[a][b][cv.fi][cv.se] + 1;\n          q.push(mp(cv.fi, (cv.se + 3) % N));\n        }\n      }\n    }\n\n  string s;\n\n  getline(cin, s);\n\n  string alp = \"0123456789 abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,\";\n\n  map<char, vector<pair<int, int> > > cc;\n\n  for(int a = 0; a < N; a++)\n    for(int b = 0; b < N; b++)\n      cc[alp[(a * 16 + b) % 64]].pb(mp(a, b));\n\n  vector<vector<int> > dp(16, vector<int>(16, -1)), ndp(16, vector<int>(16, -1));\n\n  for(int i = 0; i < (int)s.size(); i++) {\n    // if(i == 0) {\n    //   for(auto& x : cc[s[i]]) {\n    //     if(dist[0][0][x.fi][x.se] != -1) {\n    //       int nval = dist[0][0][x.fi][x.se] + 1;\n    //       if(ndp[x.fi][x.se] == -1 || ndp[x.fi][x.se] > nval) ndp[x.fi][x.se] = nval;\n    //     }\n    //   }\n    // } else {\n    //   for(auto& y : cc[s[i - 1]])\n    //     for(auto& x : cc[s[i]]) {\n    //       if(dp[y.fi][y.se] != -1 && dist[y.fi][y.se][x.fi][x.se] != -1) {\n    //         int nval = dp[y.fi][y.se] + dist[y.fi][y.se][x.fi][x.se] + 1;\n    //         if(ndp[x.fi][x.se] == -1 || ndp[x.fi][x.se] > nval) ndp[x.fi][x.se] = nval;\n    //       }\n    //     }\n    // }\n    // for(int j = 0; j < 16; j++) {\n    //   for(int k = 0; k < 16; k++) {\n    //     // dp[j][k] = ndp[j][k];\n    //     // ndp[j][k] = -1;\n    //   }\n    // }\n  }\n\n  // int ans = -1;\n  //\n  // for(int i = 0; i < 16; i++)\n  //   for(int j = 0; j < 16; j++)\n  //     if(dp[i][j] != -1)\n  //       ans = (ans == -1 ? dp[i][j] : min(ans, dp[i][j]));\n  //\n  // cout << ans << '\\n';\n\n  return 0;\n}\n/*\n0123456789 abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,\n*/\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\n#pragma GCC optimization (\"unroll-loops\")\n#include <iostream>\n#include <fstream>\n#include <algorithm>\n#include <vector>\n#include <set>\n#include <stack>\n#include <map>\n#include <unordered_map>\n#include <iomanip>\n#include <cmath>\n#include <queue>\n#include <bitset>\n#include <numeric>\n#include <array>\n#include <cstring>\n#include <random>\n#include <chrono>\n#define fi first\n#define se second\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(), (x).end()\n#define rall(x) (x).rbegin(), (x).rend()\n#define make_unique(x) sort(all((x))); (x).resize(unique(all((x))) - (x).begin())\ntypedef long long ll;\ntypedef long double ld;\nusing namespace std;\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\n// #include <ext/pb_ds/assoc_container.hpp>\n// #include <ext/pb_ds/tree_policy.hpp>\n// using namespace __gnu_pbds;\n// template<class T>\n// using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\nconst int N = 16;\nint dist[N][N][N][N];\nint main() {\n\n  ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n\n  for(int a = 0; a < N; a++)\n    for(int b = 0; b < N; b++) {\n      for(int i = 0; i < N; i++)\n        for(int j = 0; j < N; j++)\n          dist[a][b][i][j] = -1;\n      dist[a][b][a][b] = 0;\n      queue<pair<int, int> > q;\n      q.push(mp(a, b));\n      while(!q.empty()) {\n        auto cv = q.front(); q.pop();\n        if(dist[a][b][cv.fi / 2][cv.se] == -1) {\n          dist[a][b][cv.fi / 2][cv.se] = dist[a][b][cv.fi][cv.se] + 1;\n          q.push(mp(cv.fi / 2, cv.se));\n        }\n        if(dist[a][b][cv.fi][cv.se / 2] == -1) {\n          dist[a][b][cv.fi][cv.se / 2] = dist[a][b][cv.fi][cv.se] + 1;\n          q.push(mp(cv.fi, cv.se / 2));\n        }\n        if(dist[a][b][(cv.fi * 2) % N][cv.se] == -1) {\n          dist[a][b][(cv.fi * 2) % N][cv.se] = dist[a][b][cv.fi][cv.se] + 1;\n          q.push(mp((cv.fi * 2) % N, cv.se));\n        }\n        if(dist[a][b][cv.fi][(cv.se * 2) % N] == -1) {\n          dist[a][b][cv.fi][(cv.se * 2) % N] = dist[a][b][cv.fi][cv.se] + 1;\n          q.push(mp(cv.fi, (cv.se * 2) % N));\n        }\n        if(dist[a][b][(cv.fi + 3) % N][cv.se] == -1) {\n          dist[a][b][(cv.fi + 3) % N][cv.se] = dist[a][b][cv.fi][cv.se] + 1;\n          q.push(mp((cv.fi + 3) % N, cv.se));\n        }\n        if(dist[a][b][cv.fi][(cv.se + 3) % N] == -1) {\n          dist[a][b][cv.fi][(cv.se + 3) % N] = dist[a][b][cv.fi][cv.se] + 1;\n          q.push(mp(cv.fi, (cv.se + 3) % N));\n        }\n      }\n    }\n\n  string s;\n\n  getline(cin, s);\n\n  string alp = \"0123456789 abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,\";\n\n  map<char, vector<pair<int, int> > > cc;\n\n  for(int a = 0; a < N; a++)\n    for(int b = 0; b < N; b++)\n      cc[alp[(a * 16 + b) % 64]].pb(mp(a, b));\n\n  vector<vector<int> > dp(16, vector<int>(16, -1)), ndp(16, vector<int>(16, -1));\n\n  for(int i = 0; i < (int)s.size(); i++) {\n    // if(i == 0) {\n    //   for(auto& x : cc[s[i]]) {\n    //     if(dist[0][0][x.fi][x.se] != -1) {\n    //       int nval = dist[0][0][x.fi][x.se] + 1;\n    //       if(ndp[x.fi][x.se] == -1 || ndp[x.fi][x.se] > nval) ndp[x.fi][x.se] = nval;\n    //     }\n    //   }\n    // } else {\n    //   for(auto& y : cc[s[i - 1]])\n    //     for(auto& x : cc[s[i]]) {\n    //       if(dp[y.fi][y.se] != -1 && dist[y.fi][y.se][x.fi][x.se] != -1) {\n    //         int nval = dp[y.fi][y.se] + dist[y.fi][y.se][x.fi][x.se] + 1;\n    //         if(ndp[x.fi][x.se] == -1 || ndp[x.fi][x.se] > nval) ndp[x.fi][x.se] = nval;\n    //       }\n    //     }\n    // }\n    // for(int j = 0; j < 16; j++) {\n    //   for(int k = 0; k < 16; k++) {\n    //     // dp[j][k] = ndp[j][k];\n    //     // ndp[j][k] = -1;\n    //   }\n    // }\n  }\n\n  // int ans = -1;\n  //\n  // for(int i = 0; i < 16; i++)\n  //   for(int j = 0; j < 16; j++)\n  //     if(dp[i][j] != -1)\n  //       ans = (ans == -1 ? dp[i][j] : min(ans, dp[i][j]));\n  //\n  // cout << ans << '\\n';\n\n  return 0;\n}\n/*\n0123456789 abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,\n*/\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\n#pragma GCC optimization (\"unroll-loops\")\n#include <iostream>\n#include <fstream>\n#include <algorithm>\n#include <vector>\n#include <set>\n#include <stack>\n#include <map>\n#include <unordered_map>\n#include <iomanip>\n#include <cmath>\n#include <queue>\n#include <bitset>\n#include <numeric>\n#include <array>\n#include <cstring>\n#include <random>\n#include <chrono>\n#define fi first\n#define se second\n#define pb push_back\n#define mp make_pair\n#define all(x) (x).begin(), (x).end()\n#define rall(x) (x).rbegin(), (x).rend()\n#define make_unique(x) sort(all((x))); (x).resize(unique(all((x))) - (x).begin())\ntypedef long long ll;\ntypedef long double ld;\nusing namespace std;\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\n// #include <ext/pb_ds/assoc_container.hpp>\n// #include <ext/pb_ds/tree_policy.hpp>\n// using namespace __gnu_pbds;\n// template<class T>\n// using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;\nconst int N = 16;\nint dist[N][N][N][N];\nint main() {\n\n  ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n\n  for(int a = 0; a < N; a++)\n    for(int b = 0; b < N; b++) {\n      for(int i = 0; i < N; i++)\n        for(int j = 0; j < N; j++)\n          dist[a][b][i][j] = -1;\n      dist[a][b][a][b] = 0;\n      queue<pair<int, int> > q;\n      q.push(mp(a, b));\n      while(!q.empty()) {\n        auto cv = q.front(); q.pop();\n        if(dist[a][b][cv.fi / 2][cv.se] == -1) {\n          dist[a][b][cv.fi / 2][cv.se] = dist[a][b][cv.fi][cv.se] + 1;\n          q.push(mp(cv.fi / 2, cv.se));\n        }\n        if(dist[a][b][cv.fi][cv.se / 2] == -1) {\n          dist[a][b][cv.fi][cv.se / 2] = dist[a][b][cv.fi][cv.se] + 1;\n          q.push(mp(cv.fi, cv.se / 2));\n        }\n        if(dist[a][b][(cv.fi * 2) % N][cv.se] == -1) {\n          dist[a][b][(cv.fi * 2) % N][cv.se] = dist[a][b][cv.fi][cv.se] + 1;\n          q.push(mp((cv.fi * 2) % N, cv.se));\n        }\n        if(dist[a][b][cv.fi][(cv.se * 2) % N] == -1) {\n          dist[a][b][cv.fi][(cv.se * 2) % N] = dist[a][b][cv.fi][cv.se] + 1;\n          q.push(mp(cv.fi, (cv.se * 2) % N));\n        }\n        if(dist[a][b][(cv.fi + 3) % N][cv.se] == -1) {\n          dist[a][b][(cv.fi + 3) % N][cv.se] = dist[a][b][cv.fi][cv.se] + 1;\n          q.push(mp((cv.fi + 3) % N, cv.se));\n        }\n        if(dist[a][b][cv.fi][(cv.se + 3) % N] == -1) {\n          dist[a][b][cv.fi][(cv.se + 3) % N] = dist[a][b][cv.fi][cv.se] + 1;\n          q.push(mp(cv.fi, (cv.se + 3) % N));\n        }\n      }\n    }\n\n  string s;\n\n  getline(cin, s);\n\n  string alp = \"0123456789 abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,\";\n\n  map<char, vector<pair<int, int> > > cc;\n\n  for(int a = 0; a < N; a++)\n    for(int b = 0; b < N; b++)\n      cc[alp[(a * 16 + b) % 64]].pb(mp(a, b));\n\n  vector<vector<int> > dp(16, vector<int>(16, -1)), ndp(16, vector<int>(16, -1));\n\n  for(int i = 0; i < (int)s.size(); i++) {\n    // if(i == 0) {\n    //   for(auto& x : cc[s[i]]) {\n    //     if(dist[0][0][x.fi][x.se] != -1) {\n    //       int nval = dist[0][0][x.fi][x.se] + 1;\n    //       if(ndp[x.fi][x.se] == -1 || ndp[x.fi][x.se] > nval) ndp[x.fi][x.se] = nval;\n    //     }\n    //   }\n    // } else {\n    //   for(auto& y : cc[s[i - 1]])\n    //     for(auto& x : cc[s[i]]) {\n    //       if(dp[y.fi][y.se] != -1 && dist[y.fi][y.se][x.fi][x.se] != -1) {\n    //         int nval = dp[y.fi][y.se] + dist[y.fi][y.se][x.fi][x.se] + 1;\n    //         if(ndp[x.fi][x.se] == -1 || ndp[x.fi][x.se] > nval) ndp[x.fi][x.se] = nval;\n    //       }\n    //     }\n    // }\n    for(int j = 0; j < 16; j++) {\n      for(int k = 0; k < 16; k++) {\n        // dp[j][k] = ndp[j][k];\n        // ndp[j][k] = -1;\n      }\n    }\n  }\n\n  // int ans = -1;\n  //\n  // for(int i = 0; i < 16; i++)\n  //   for(int j = 0; j < 16; j++)\n  //     if(dp[i][j] != -1)\n  //       ans = (ans == -1 ? dp[i][j] : min(ans, dp[i][j]));\n  //\n  // cout << ans << '\\n';\n\n  return 0;\n}\n/*\n0123456789 abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,\n*/\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#pragma GCC optimize(\"Ofast\")\r\n#pragma GCC optimization (\"unroll-loops\")\r\n\r\n#define ll long long\r\n#define ld long double\r\n#define all(x) (x).begin(), (x).end()\r\n#define rall(x) (x).rbegin(), (x).rend()\r\n#define x first\r\n#define y second\r\n\r\n#define int ll\r\n#define double ld\r\n#define endl '\\n'\r\n\r\nconst int inf = 1e9;\r\nconst ll INF = 1e9;\r\n\r\nvector<vector<vector<vector<int>>>> dist(16, vector<vector<vector<int>>>(16, vector<vector<int>>(16, vector<int>(16, INF))));\r\n\r\nvoid calc_distance(int sa, int sb, vector<vector<int>>& dst) {\r\n    deque<pair<int, int>> d;\r\n\r\n    dst[sa][sb] = 0;\r\n    d.push_back({sa, sb});\r\n\r\n    while (d.size()){\r\n        auto e = d.front();\r\n        d.pop_front();\r\n        int a = e.x, b = e.y;\r\n\r\n        for (int va : {a >> 1, a * 2 % 16, (a + 3) % 16}) {\r\n            if (dst[va][b] > dst[a][b] + 1) {\r\n                dst[va][b] = dst[a][b] + 1;\r\n                d.push_back({va, b});\r\n            }\r\n        }\r\n\r\n        for (int vb : {b >> 1, b * 2 % 16, (b + 3) % 16}) {\r\n            if (dst[a][vb] > dst[a][b] + 1) {\r\n                dst[a][vb] = dst[a][b] + 1;\r\n                d.push_back({a, vb});\r\n            }\r\n        }\r\n    }\r\n}\r\nconst string t = \"0123456789 abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,\";\r\n\r\nint indexOf(char ch) {\r\n    for (int i = 0; i < t.size(); ++i)\r\n        if (t[i] == ch)\r\n            return i;\r\n}\r\n\r\nvoid solve() {\r\n    for (int a = 0; a < 16; ++a)\r\n        for (int b = 0; b < 16; ++b)\r\n            calc_distance(a, b, dist[a][b]);\r\n\r\n    string s;\r\n\r\n    int ans = 0;\r\n    int prev = 0;\r\n    bool b = false;\r\n\r\n    vector<vector<int>> dp(16, vector<int>(16, INF));\r\n    dp[0][0] = 0;\r\n\r\n    while (getline(cin, s)) {\r\n        if (b) s = ' ' + s;\r\n        for (char ch : s) {\r\n            int k = indexOf(ch);\r\n            vector<vector<int>> new_dp(16, vector<int>(16, INF));\r\n            for (int x = 0; x < 16; ++x) {\r\n                for (int y = 0; y < 16; ++y) {\r\n                    for (int z = 0; z < 16; ++z) {\r\n                        for (int d = 0; d < 16; ++d) {\r\n                            if ((x * 16 + y) % 64 == k && (z * 16 + d) % 64 == prev) {\r\n                                new_dp[x][y] = min(new_dp[x][y], dp[z][d] + dist[z][d][x][y]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            dp = new_dp;\r\n            prev = k;\r\n            ++ans;\r\n        }\r\n        b = true;\r\n    }\r\n\r\n    int k = INF;\r\n    for (int i = 0; i < 16; ++i)\r\n        for (int j = 0; j < 16; ++j)\r\n            k = min(k, dp[i][j]);\r\n\r\n    if (k == INF) {\r\n        cout << \"Broken heart\" << endl;\r\n        return;\r\n    }\r\n    cout << ans + k << endl;\r\n}\r\n\r\nsigned main() {\r\n#ifdef _GLIBCXX_DEBUG\r\n    freopen(\"in.txt\", \"r\", stdin);\r\n#else\r\n    cin.tie(NULL);\r\n    cout.tie(NULL);\r\n    ios_base::sync_with_stdio(false);\r\n#endif\r\n    int t = 1;\r\n    // cin >> t;\r\n    while (t--) {\r\n        solve();\r\n    }\r\n}\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include \"bits/stdc++.h\"\nusing namespace std;\n#define F first\n#define S second\n#define endl \"\\n\"\nconst int inf = 1000000000;\nvoid solve(){\n    vector<vector<int>>minToGet(16,vector<int>(16,-1));\n    for (int start = 0; start < 16; start++){\n        set<pair<int,int>>q{{0, start}};\n        while (!q.empty()){\n            auto el = *q.begin();\n            q.erase(q.begin());\n            if (minToGet[start][el.S] == -1){\n                minToGet[start][el.S] = el.F;\n                pair<int,int>f1 = {el.F + 1, (el.S + 3)%16};\n                pair<int,int>f2 = {el.F + 1, (el.S*2)%16};\n                pair<int,int>f3 = {el.F + 1, (el.S/2)%16};\n                q.insert(f1);\n                q.insert(f2);\n                q.insert(f3);\n            }\n        }\n    }\n    string masterString = \"0123456789 abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,\";\n    map<char,int>getInd;\n    vector<vector<pair<int,int>>>canBeFrom(masterString.size(),vector<pair<int,int>>());\n    for (int i = 0; i < canBeFrom.size(); i++){\n        getInd[masterString[i]] = i;\n        for (int a = 0; a < 16; a++){\n            for (int b = 0; b < 16; b++){\n                if ( (a*16 + b)%64 == i){\n                    canBeFrom[i].push_back({a,b});\n                }\n            }\n        }\n    }\n    string need;\n    getline(cin,need);\n    int n = need.size();\n    vector<pair<int,pair<int,int>>>last{{0,{0,0}}};\n    for (int i = 0; i < n; i++){\n        int ind = getInd[need[i]];\n        vector<pair<int,pair<int,int>>>newVars;\n        for (int g = 0; g < canBeFrom[ind].size(); g++){\n            int mi = inf;\n            for (int j = 0; j < last.size(); j++){\n                int cost = last[j].F   +   minToGet[last[j].S.F][canBeFrom[ind][g].F]   +   minToGet[last[j].S.S][canBeFrom[ind][g].S];\n                mi = min(mi,cost);\n            }\n            newVars.push_back({mi,{canBeFrom[ind][g].F,canBeFrom[ind][g].S}});\n        }\n        last = newVars;\n    }\n    int mAns = inf;\n    for (int i = 0; i < last.size(); i++){\n        mAns = min(mAns, last[i].F);\n    }\n    cout << mAns + n << endl;\n}\nsigned main(){\n    //freopen(\"/Users/artembreznev/CLionProjects/cp/input.txt\", \"r\", stdin);\n    cin.tie(NULL);\n    ios_base::sync_with_stdio(false);\n    int tt;\n    tt = 1;\n    //cin >> tt;\n    while (tt--){\n        solve();\n    }\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include \"bits/stdc++.h\"\nusing namespace std;\n#define F first\n#define S second\n#define endl \"\\n\"\nconst int inf = 1000000000;\nvoid solve(){\n    vector<vector<int>>minToGet(16,vector<int>(16,-1));\n    for (int start = 0; start < 16; start++){\n        set<pair<int,int>>q{{0, start}};\n        while (!q.empty()){\n            auto el = *q.begin();\n            q.erase(q.begin());\n            if (minToGet[start][el.S] == -1){\n                minToGet[start][el.S] = el.F;\n                pair<int,int>f1 = {el.F + 1, (el.S + 3)%16};\n                pair<int,int>f2 = {el.F + 1, (el.S*2)%16};\n                pair<int,int>f3 = {el.F + 1, (el.S/2)%16};\n                q.insert(f1);\n                q.insert(f2);\n                q.insert(f3);\n            }\n        }\n    }\n    string masterString = \"0123456789 abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,\";\n    map<char,int>getInd;\n    vector<vector<pair<int,int>>>canBeFrom(masterString.size(),vector<pair<int,int>>());\n    for (int i = 0; i < canBeFrom.size(); i++){\n        getInd[masterString[i]] = i;\n        for (int a = 0; a < 16; a++){\n            for (int b = 0; b < 16; b++){\n                if ( (a*16 + b)%64 == i){\n                    canBeFrom[i].push_back({a,b});\n                }\n            }\n        }\n    }\n    string need;\n    getline(cin,need);\n    int n = need.size();\n    vector<pair<int,pair<int,int>>>last{{0,{0,0}}};\n    for (int i = 0; i < n; i++){\n        int ind = getInd[need[i]];\n        vector<pair<int,pair<int,int>>>newVars;\n        for (int g = 0; g < canBeFrom[ind].size(); g++){\n            int mi = inf;\n            for (int j = 0; j < last.size(); j++){\n                int cost = last[j].F   +   minToGet[last[j].S.F][canBeFrom[ind][g].F]   +   minToGet[last[j].S.S][canBeFrom[ind][g].S];\n                mi = min(mi,cost);\n            }\n            newVars.push_back({mi,{canBeFrom[ind][g].F,canBeFrom[ind][g].S}});\n        }\n        last = newVars;\n    }\n    int mAns = inf;\n    for (int i = 0; i < last.size(); i++){\n        mAns = min(mAns, last[i].F);\n    }\n    cout << mAns + n << endl;\n}\nsigned main(){\n    //freopen(\"/Users/artembreznev/CLionProjects/cp/input.txt\", \"r\", stdin);\n    cin.tie(NULL);\n    ios_base::sync_with_stdio(false);\n    int tt;\n    tt = 1;\n    //cin >> tt;\n    while (tt--){\n        solve();\n    }\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "\n\n\n#pragma GCC optimization (\"O3\")\n#pragma GCC optimization (\"unroll-loops\")\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\n#include \"bits/stdc++.h\"\nusing namespace std;\nmt19937 rnd(42);\n// DEBUG //\n#define dbg(x)        cout <<  \"Line \" << __LINE__ << \": \" << #x << \" = \" << x << endl;\n#define vec_dbg(v) cout <<  \"Line \" << __LINE__ << \": \" << \\\n#v << \" = \"; cout << \"[\"; for(int i = 0; i < v.size(); i++) cout << v[i] << \" \"; cout << \"]\"<< endl;\n#define matrix_dbg(v) cout <<  \"Line \" << __LINE__ << \": \" << \\\n#v << \" = \\n\";\\\nfor(int i = 0; i < v.size(); i++) { \\\n    cout << i <<  \": [\";\\\n    for (int g = 0; g < v[i].size(); g++) {\\\n        cout << v[i][g] << \" \";\\\n    }\\\n    cout << \"]\\n\";\\\n} cout << endl;\n#define arr_dbg(a)    cout <<  \"Line \" << __LINE__ << \": \" << #a << \" = \"; for(int i = 0; i < sizeof(a)/sizeof(a[0]); i++) cout << a[i] << \", \"; cout << endl;\n#define debug cout <<\"What do you call someone with no body and no nose? Nobody knows.\";\n#define all(x) (x).begin(), (x).end()\n#define uid(a, b) uniform_int_distribution<int>(a, b)(rng)\n#define pb push_back\n\ntemplate <typename T>\nistream& operator>>(istream& in, vector<T>& vec) {\n    for (int i = 0; i < vec.size(); i++){\n        in >> vec[i];\n    }\n    return in;\n}\ntemplate <typename T>\nostream& operator<<(ostream& out, const vector<T>& vec) {\n    for (const auto& x : vec) {\n        out << x << \" \";\n    }\n    return out;\n}\ntemplate<class P,class D>\nostream& operator<<(ostream& os, pair<P,D>p){\n    os << \"{\" << p.first << \", \" << p.second << \"}\";\n    return os;\n}\n\n#define ld long double\n#define int long long\n\n#define F first\n#define S second\n#define Y second\n#define X first\n\n#define vi vector<int>\n#define matrix vector<vi>\n#define pii pair<int,int>\n\n#define endl \"\\n\"\nconst int inf = numeric_limits<int>::max()/2;\nconst ld infLd = numeric_limits<ld>::max();\nconst int MOD = 1000001337;\nconst int gayMOD = 998244353;\nconst int sz = 31;\nconst ld PI = 3.14159265358979323846;\n\nvoid solve(){\n    vector<vector<int>>minToGet(16,vector<int>(16,-1));\n    for (int start = 0; start < 16; start++){\n        set<pair<int,int>>q{{0, start}};\n        while (!q.empty()){\n            auto el = *q.begin();\n            q.erase(q.begin());\n            if (minToGet[start][el.S] == -1){\n                minToGet[start][el.S] = el.F;\n                pair<int,int>f1 = {el.F + 1, (el.S + 3)%16};\n                pair<int,int>f2 = {el.F + 1, (el.S*2)%16};\n                pair<int,int>f3 = {el.F + 1, (el.S/2)%16};\n                q.insert(f1);\n                q.insert(f2);\n                q.insert(f3);\n            }\n        }\n    }\n    string masterString = \"0123456789 abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,\";\n    map<char,int>getInd;\n    vector<vector<pair<int,int>>>canBeFrom(masterString.size(),vector<pair<int,int>>());\n    for (int i = 0; i < canBeFrom.size(); i++){\n        getInd[masterString[i]] = i;\n        for (int a = 0; a < 16; a++){\n            for (int b = 0; b < 16; b++){\n                if ( (a*16 + b)%64 == i){\n                    canBeFrom[i].push_back({a,b});\n                }\n            }\n        }\n    }\n    string need;\n    getline(cin,need);\n    int n = need.size();\n    vector<pair<int,pair<int,int>>>last{{0,{0,0}}};\n    for (int i = 0; i < n; i++){\n        int ind = getInd[need[i]];\n        vector<pair<int,pair<int,int>>>newVars;\n        for (int g = 0; g < canBeFrom[ind].size(); g++){\n            int mi = inf;\n            pair<int,int>miAns;\n            for (int j = 0; j < last.size(); j++){\n                int cost = last[j].F   +   minToGet[last[j].S.F][canBeFrom[ind][g].F]   +   minToGet[last[j].S.S][canBeFrom[ind][g].S];\n                mi = min(mi,cost);\n            }\n            newVars.push_back({mi,{canBeFrom[ind][g].F,canBeFrom[ind][g].S}});\n        }\n        last = newVars;\n    }\n    int mAns = inf;\n    for (int i = 0; i < last.size(); i++){\n        mAns = min(mAns, last[i].F);\n    }\n    cout << mAns + n << endl;\n\n\n\n\n\n\n}\nsigned main(){\n    //freopen(\"/Users/artembreznev/CLionProjects/cp/input.txt\", \"r\", stdin);\n    //cin.tie(NULL);\n    //ios_base::sync_with_stdio(false);\n    int tt;\n    tt = 1;\n    //cin >> tt;\n    while (tt--){\n        solve();\n    }\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include<bits/stdc++.h>\r\n#define ll long long\r\n#define S second\r\n#define F first\r\n#define pii pair<int,int>\r\nusing namespace std;\r\n\r\nconst int N = 2100;\r\n\r\nstring s = {\"0123456789 abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,\"};\r\n\r\nmap <char, int> mp;\r\n\r\nint32_t main()\r\n {\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    for (int i=0;i<s.size();++i) {\r\n        mp[s[i]] = i;\r\n    }\r\n    string t;\r\n    getline(cin,t);\r\n    int n = t.size();\r\n    int a[n];\r\n    for (int i=0;i<n;++i) {\r\n        if (!mp.count(t[i])) {\r\n            cout << \"Broken heart\";\r\n            return 0;\r\n        }\r\n        a[i] = mp[t[i]];\r\n    }\r\n    int d[256][256];\r\n    for (int i=0;i<256;++i) {\r\n        for (int j=0;j<256;++j) {\r\n            d[i][j] = 100000000;\r\n        }\r\n        d[i][i] = 0;\r\n    }\r\n    for (int x=0;x<16;++x) {\r\n        for (int y=0;y<16;++y) {\r\n            d[(x*16+y)][((x>>1)*16+y)] = min(d[(x*16+y)][((x>>1)*16+y)], 1);\r\n            d[(x*16+y)][(x*16+(y>>1))] = min(d[(x*16+y)][(x*16+(y>>1))], 1);\r\n            d[(x*16+y)][((x*2)%16*16+y)] = min(d[(x*16+y)][((x*2)%16*16+y)], 1);\r\n            d[(x*16+y)][(x*16+(y*2)%16)] = min(d[(x*16+y)][(x*16+(y*2)%16)], 1);\r\n            d[(x*16+y)][((x+3)%16*16+y)] = min(d[(x*16+y)][((x+3)%16*16+y)], 1);\r\n            d[(x*16+y)][(x*16+(y+3)%16)] = min(d[(x*16+y)][(x*16+(y+3)%16)], 1);\r\n        }\r\n    }\r\n    for (int l=0;l<256;++l) {\r\n        for (int i=0;i<256;++i) {\r\n            for (int j=0;j<256;++j) {\r\n                d[i][j] = min(d[i][j], d[i][l] + d[l][j]);\r\n            }\r\n        }\r\n    }\r\n//    for (int i=0;i<256;++i) {\r\n//        for (int j=0;j<256;++j) {\r\n//            cout << d[i][j] << ' ';\r\n//        }\r\n//        cout << '\\n';\r\n//    }\r\n    int dp[n][4];\r\n    for (int j=0;j<4;++j) {\r\n        dp[0][j] = d[0][a[0] + 64*j];\r\n    }\r\n    for (int i=1;i<n;++i) {\r\n        for (int j=0;j<4;++j ){\r\n            dp[i][j] = 100000000;\r\n        }\r\n    }\r\n    for (int i=1;i<n;++i) {\r\n        for (int j=0;j<4;++j ){\r\n            for (int l=0;l<4;++l) {\r\n                dp[i][l] = min(dp[i-1][j] + d[a[i-1] + j * 64][a[i] + l*64], dp[i][l]);\r\n            }\r\n        }\r\n    }\r\n    int ans = min({dp[n-1][0], dp[n-1][1], dp[n-1][2], dp[n-1][3]});\r\n    if (ans >= 100000000) cout << \"Broken heart\"; else cout << ans + n;\r\n    return 0;\r\n}\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "import random\r\na=[]\r\nb=[]\r\nfor i in range(1000):\r\n    a.append(2**random.randint(1,10))\r\n\r\n#print(sorted(a,reverse=True))\r\ndef power_2(n):\r\n    i=0\r\n    while True:\r\n        if n ==1:\r\n            return i\r\n        else:\r\n            n=n//2\r\n            i+=1\r\n\r\n\r\nfor i in sorted(a,reverse=True):\r\n    b.append(power_2(i))\r\nk=0;m=min(b)\r\n#print(b)\r\nfor i in b:\r\n    k+=i-m\r\nprint(k)\r\n    ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\r\na=[]\r\nb=[]\r\nfor i in range(1000):\r\n    a.append(2**random.randint(1,10))\r\n\r\n#print(sorted(a,reverse=True))\r\ndef power_2(n):\r\n    i=0\r\n    while True:\r\n        if n ==1:\r\n            return i\r\n        else:\r\n            n=n//2\r\n            i+=1\r\n\r\n\r\nfor i in sorted(a,reverse=True):\r\n    b.append(power_2(i))\r\nk=0;m=min(b)\r\n#print(b)\r\nfor i in b:\r\n    k+=i-m\r\nprint(k)\r\n    ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def min_operations(message):\n    master_string = \"0123456789 abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ,\"\n    operations = 0\n    a, b = 0, 0\n\n    for char in message:\n        target_index = master_string.index(char)\n        target_a, target_b = divmod(target_index, 16)\n\n        # Calculate operations to reach target_a\n        while a != target_a:\n            if a < target_a:\n                if target_a - a >= 3:\n                    a = (a + 3) % 16\n                    operations += 1\n                else:\n                    a = (a * 2) % 16\n                    operations += 1\n            else:\n                a >>= 1\n                operations += 1\n\n        # Calculate operations to reach target_b\n        while b != target_b:\n            if b < target_b:\n                if target_b - b >= 3:\n                    b = (b + 3) % 16\n                    operations += 1\n                else:\n                    b = (b * 2) % 16\n                    operations += 1\n            else:\n                b >>= 1\n                operations += 1\n\n        # Add print operation\n        operations += 1\n\n    return operations\n\n# Read input\nmessage = input().strip()\n\n# Calculate and print result\nresult = min_operations(message)\nprint(result)",
                "verdict": "Time Limit Exceeded"
            }
        ]
    },
    {
        "task_id": 17,
        "description": "\u0410 \u0432\u044b \u0437\u043d\u0430\u043b\u0438, \u0447\u0442\u043e Sort Me \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u0441\u0432\u043e\u0435\u0439 \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0439 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u044e\u0449\u0435\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b **nojudge**? \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0441\u043c\u043e\u0434\u0435\u043b\u0438\u0440\u0443\u0435\u043c \u0442\u0438\u043f\u0438\u0447\u043d\u0443\u044e \u0441\u0438\u0442\u0443\u0430\u0446\u0438\u044e \u0432 \u0435\u0451 \u0440\u0430\u0431\u043e\u0442\u0435.\n\n\n\u0418\u0442\u0430\u043a, \u0443 **nojudge** \u0435\u0441\u0442\u044c $$n$$ \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u044e\u0449\u0438\u0445 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u0432. \u0421\u0435\u0440\u0432\u0435\u0440\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u044e\u0442 \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e: \u0435\u0441\u043b\u0438 \u0432\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u0435 \u043d\u0430 \u043e\u0434\u0438\u043d \u0441\u0435\u0440\u0432\u0435\u0440 \u0442\u0440\u0438 \u0440\u0435\u0448\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u044e\u0442\u0441\u044f $$a, b$$ \u0438 $$c$$ \u0441\u0435\u043a\u0443\u043d\u0434 \u0441\u043e\u043e\u0442\u0432\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e, \u0442\u043e \u044d\u0442\u043e\u0442 \u0441\u0435\u0440\u0432\u0435\u0440 \u043e\u0441\u0432\u043e\u0431\u043e\u0434\u0438\u0442\u0441\u044f \u0447\u0435\u0440\u0435\u0437 $$a + b + c$$ \u0441\u0435\u043a\u0443\u043d\u0434.\n\n\n\u0412\u0434\u0440\u0443\u0433 $$m$$ \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u043e\u0432 \u043a\u043e\u043d\u0442\u0435\u0441\u0442\u0430 \u043e\u0441\u0435\u043d\u0438\u043b\u043e, \u0438 \u043e\u043d\u0438 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043e\u0434\u043d\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e \u0441\u0434\u0430\u043b\u0438 \u043a\u0430\u0436\u0434\u044b\u0439 \u043f\u043e \u043e\u0434\u043d\u043e\u043c\u0443 \u0440\u0435\u0448\u0435\u043d\u0438\u044e. \u0411\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u0410\u0421\u041e\u041a\u041f\u041b\u041e\u0425 (\u0410\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u0421\u043a\u043e\u0440\u043e\u0441\u0442\u043d\u043e\u0433\u043e \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f, \u041a\u043e\u0433\u0434\u0430 \u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443 \u041b\u0443\u0447\u0448\u0435 \u041e\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043a \u0425**\u043c) \u0432\u044b \u0437\u0430\u0440\u0430\u043d\u0435\u0435 \u0437\u043d\u0430\u0435\u0442\u0435, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u0435\u043a\u0443\u043d\u0434 \u043a\u0430\u0436\u0434\u0430\u044f \u0438\u0437 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c \u0431\u0443\u0434\u0435\u0442 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f. \n\n\n**nojudge** \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0443 \u043f\u043e \u0441\u0435\u0440\u0432\u0435\u0440\u0430\u043c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c:\n\n1. \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0438\u0437 \u043e\u0447\u0435\u0440\u0435\u0434\u0438 \u0440\u0435\u0448\u0435\u043d\u0438\u0439 \u0442\u043e, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c\u0441\u044f \u0434\u043e\u043b\u044c\u0448\u0435 \u0432\u0441\u0435\u0433\u043e. \u0415\u0441\u043b\u0438 \u0442\u0430\u043a\u0438\u0445 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e, \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0435 \u0438\u0437 \u043d\u0438\u0445.\n2. \u0412\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0441\u0430\u043c\u044b\u0439 \u0440\u0430\u0437\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u0439 \u0441\u0435\u0440\u0432\u0435\u0440. \u0415\u0441\u043b\u0438 \u0442\u0430\u043a\u0438\u0445 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e, \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0439 \u0438\u0437 \u043d\u0438\u0445.\n3. \u041e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u043d\u0430 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0439 \u0441\u0435\u0440\u0432\u0435\u0440.\n4. \u0415\u0441\u043b\u0438 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u0438 \u043e\u0441\u0442\u0430\u043b\u0438\u0441\u044c \u0440\u0435\u0448\u0435\u043d\u0438\u044f, \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u0442 \u043a \u0448\u0430\u0433\u0443 1.\n\n\u0412\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0441\u043c\u043e\u0434\u0435\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u0443 **nojudge** \u0438 \u0432\u044b\u044f\u0441\u043d\u0438\u0442\u044c, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430\u043c, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0432\u0441\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u044f \u043f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e, \u043a\u0430\u043a **nojudge** \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442 \u0438\u0445 \u043f\u043e \u0441\u0435\u0440\u0432\u0435\u0440\u0430\u043c (\u0441\u0447\u0438\u0442\u0430\u0439\u0442\u0435, \u0447\u0442\u043e \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u043c\u043e\u043c\u0435\u043d\u0442\u0430\u043b\u044c\u043d\u043e). \u0418\u043d\u044b\u043c\u0438 \u0441\u043b\u043e\u0432\u0430\u043c\u0438, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u0435\u043a\u0443\u043d\u0434 \u043f\u0440\u043e\u0439\u0434\u0451\u0442, \u043f\u0440\u0435\u0436\u0434\u0435 \u0447\u0435\u043c \u0432\u0441\u0435 $n$ \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u0432 \u043f\u0440\u043e\u0442\u0435\u0441\u0442\u0438\u0440\u0443\u044e\u0442 \u0432\u0441\u0435 $m$ \u0440\u0435\u0448\u0435\u043d\u0438\u0439.\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u0441\u044f \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430 $$n$$ \u0438 $$m$$ ($$1 \\le n, m \\le 10^5$$), \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0435 \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b.\n\u0412\u043e \u0432\u0442\u043e\u0440\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e $$m$$ \u0447\u0438\u0441\u0435\u043b $$a_1,a_2,\u2026,a_m$$, \u0433\u0434\u0435 $$a_i$$ \u2013 \u044d\u0442\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0435\u043a\u0443\u043d\u0434, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0442\u044c\u0441\u044f $$i$$-\u0442\u043e\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u0435. ($$1 \\le a_i \\le 10^5$$)\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e - \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0435\u043a\u0443\u043d\u0434, \u0447\u0435\u0440\u0435\u0437 \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u043e\u0433\u0443\u0442 \u043e\u0441\u0432\u043e\u0431\u043e\u0434\u0438\u0442\u044c\u0441\u044f \u0432\u0441\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u044e\u0449\u0438\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430.",
        "solutions": [
            {
                "code": "n, m = map(int, input().split())\r\n\r\nservers = [0] * n\r\n\r\nsolutions = list(map(int, input().split()))\r\nsolutions.sort(reverse=True)\r\n\r\n\r\ndef get_min_server(s: [int]) -> int:\r\n    servers.sort(reverse=True)\r\n\r\n    return -1\r\n\r\n\r\nfor solution in solutions:\r\n    servers[get_min_server(servers)] += solution\r\n\r\n\r\nprint(max(servers))",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, m = map(int, input().split())\n\nservers = [0] * n\n\nsolutions = list(map(int, input().split()))\nsolutions.sort(reverse=True)\n\n\ndef get_min_server(s: [int]) -> int:\n    servers.sort(reverse=True)\n\n    return -1\n\n\nfor solution in solutions:\n    servers[get_min_server(servers)] += solution\n\n\nprint(max(servers))",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, m = map(int, input().split())\n\nservers = [0] * n\n\nsolutions = list(map(int, input().split()))\nsolutions.sort(reverse=True)\n\n\ndef get_min_server(s: [int]) -> int:\n    servers.sort(reverse=true)\n\n    return -1\n\n\nfor solution in solutions:\n    servers[get_min_server(servers)] += solution\n\n\nprint(max(servers))",
                "verdict": "Runtime Error"
            },
            {
                "code": " n, m = map(int, input().split())\n\nservers = [0] * n\n\nsolutions = list(map(int, input().split()))\nsolutions.sort(reverse=True)\n\n\ndef get_min_server(s: [int]) -> int:\n    servers.sort(reverse=true)\n\n    return -1\n\n\nfor solution in solutions:\n    servers[get_min_server(servers)] += solution\n\n\nprint(max(servers))",
                "verdict": "Runtime Error"
            },
            {
                "code": "n, m = map(int, input().split())\n\nservers = [0] * n\n\nsolutions = list(map(int, input().split()))\nsolutions.sort(reverse=True)\n\n\ndef get_min_server(s: [int]) -> int:\n    servers.sort()\n\n    return 0\n\n\nfor solution in solutions:\n    servers[get_min_server(servers)] += solution\n\n\nprint(max(servers))",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, m = map(int, input().split())\n\nservers = [0] * n\n\nsolutions = list(map(int, input().split()))\nsolutions.sort(reverse=True)\n\n\ndef get_min_server(s: [int]) -> int:\n    mv, mi = 10 ** 12, 0\n    for i in range(n):\n        if s[i] < mv:\n            mv, mi = s[i], i\n\n    return mi\n\n\nfor solution in solutions:\n    servers[get_min_server(servers)] += solution\n\n\nprint(max(servers))",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, m = map(int, input().split())\n\nservers = [0] * n\n\nsolutions = list(map(int, input().split()))\n\n\ndef get_min_server(s: [int]) -> int:\n    mv, mi = 10 ** 12, 0\n    for i in range(n):\n        if s[i] < mv:\n            mv, mi = s[i], i\n\n    return mi\n\n\nfor i in range(m):\n    ms = max(solutions)\n    solutions.remove(ms)\n    servers[get_min_server(servers)] += ms\n\n\nprint(max(servers))",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "import itertools\n\nn, m = map(int, input().split())\nsolutions = list(map(int, input().split()))\n\nbest = 10**12\n\nfor p in itertools.product(range(n), repeat=m):\n    i = 0\n\n    servers = [0] * n\n    for pos in p:\n        servers[pos] += solutions[i]\n        i += 1\n\n    best = min(best, max(servers))\n\nprint(best)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from heapq import *\r\n\r\nn, m = map(int, input().split())\r\na = sorted(map(int, input().split()))\r\nt = [0] * n\r\nheapify(t)\r\nr = [[] for _ in range(n)]\r\nwhile a:\r\n    p = a.pop()\r\n    w = t[0]\r\n    # h = t.index(w)\r\n    # r[h].append(p)\r\n    heapreplace(t, w + p)\r\n    heapify(t)\r\n\r\nprint(max(t))\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "from heapq import *\r\n\r\nn, m = map(int, input().split())\r\na = sorted(map(int, input().split()))\r\nt = [0] * n\r\nheapify(t)\r\nr = [[] for _ in range(n)]\r\nwhile a:\r\n    p = a.pop()\r\n    w = t[0]\r\n    # h = t.index(w)\r\n    # r[h].append(p)\r\n    t[0] += p\r\n    t.sort()\r\nprint(max(t))\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "from heapq import *\r\n\r\nn, m = map(int, input().split())\r\na = sorted(map(int, input().split()))\r\nt = [0] * n\r\nheapify(t)\r\nr = [[] for _ in range(n)]\r\nwhile a:\r\n    p = a.pop()\r\n    w = t[0]\r\n    # h = t.index(w)\r\n    # r[h].append(p)\r\n    t[0] += p\r\n    heapify(t)\r\nprint(max(t))\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "from heapq import *\r\n\r\nn, m = map(int, input().split())\r\na = sorted(map(int, input().split()))\r\nt = [0] * n\r\nheapify(t)\r\nr = [[] for _ in range(n)]\r\nwhile a:\r\n    p = a.pop()\r\n    heapreplace(t, p)\r\nprint(max(t) + 2)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = map(int, input().split())\r\na = sorted(map(int, input().split()))\r\nt = [0] * n\r\nr = [[] for _ in range(n)]\r\nwhile a:\r\n    p = a.pop()\r\n    w = min(t)\r\n    h = t.index(w)\r\n    r[h].append(p)\r\n    t[h] += p\r\nprint(max(t))",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, m = map(int, input().split())\r\na = sorted(map(int, input().split()))\r\nt = [0] * n\r\nr = [[] for _ in range(n)]\r\nwhile a:\r\n    p = a.pop()\r\n    w = min(t)\r\n    h = t.index(w)\r\n    r[h].append(p)\r\n    t[h] += p\r\nprint(max(t))",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "from collections import deque\r\n\r\nn, m = map(int, input().split())\r\na = sorted(map(int, input().split()))\r\nt = [0] * n\r\nr = [[] for _ in range(n)]\r\nwhile a:\r\n    p = a.pop()\r\n    w = min(t)\r\n    h = t.index(w)\r\n    r[h].append(p)\r\n    t[h] += p\r\nprint(max(t))",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "#pragma GCC optimization (\"O3\")\n#pragma GCC optimization (\"unroll-loops\")\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\n#include \"bits/stdc++.h\"\nusing namespace std;\nmt19937 rnd(42);\n// DEBUG //\n#define dbg(x)        cout <<  \"Line \" << __LINE__ << \": \" << #x << \" = \" << x << endl;\n#define vec_dbg(v) cout <<  \"Line \" << __LINE__ << \": \" << \\\n#v << \" = \"; cout << \"[\"; for(int i = 0; i < v.size(); i++) cout << v[i] << \" \"; cout << \"]\"<< endl;\n#define matrix_dbg(v) cout <<  \"Line \" << __LINE__ << \": \" << \\\n#v << \" = \\n\";\\\nfor(int i = 0; i < v.size(); i++) { \\\n    cout << i <<  \": [\";\\\n    for (int g = 0; g < v[i].size(); g++) {\\\n        cout << v[i][g] << \" \";\\\n    }\\\n    cout << \"]\\n\";\\\n} cout << endl;\n#define arr_dbg(a)    cout <<  \"Line \" << __LINE__ << \": \" << #a << \" = \"; for(int i = 0; i < sizeof(a)/sizeof(a[0]); i++) cout << a[i] << \", \"; cout << endl;\n#define debug cout <<\"What do you call someone with no body and no nose? Nobody knows.\";\n#define all(x) (x).begin(), (x).end()\n#define uid(a, b) uniform_int_distribution<int>(a, b)(rng)\n#define pb push_back\n\ntemplate <typename T>\nistream& operator>>(istream& in, vector<T>& vec) {\n    for (int i = 0; i < vec.size(); i++){\n        in >> vec[i];\n    }\n    return in;\n}\ntemplate <typename T>\nostream& operator<<(ostream& out, const vector<T>& vec) {\n    for (const auto& x : vec) {\n        out << x << \" \";\n    }\n    return out;\n}\ntemplate<class P,class D>\nostream& operator<<(ostream& os, pair<P,D>p){\n    os << \"{\" << p.first << \", \" << p.second << \"}\";\n    return os;\n}\n\n#define ld long double\n#define int long long\n\n#define F first\n#define S second\n#define Y second\n#define X first\n\n#define vi vector<int>\n#define matrix vector<vi>\n#define pii pair<int,int>\n\n#define endl \"\\n\"\nconst int inf = numeric_limits<int>::max()/2;\nconst ld infLd = numeric_limits<ld>::max();\nconst int MOD = 1000001337;\nconst int gayMOD = 998244353;\nconst int sz = 31;\nconst ld PI = 3.14159265358979323846;\n\nvoid solve(){\n    int n,m;\n    cin >> m >> n;\n    vector<int>arr(n);\n    for (int i = 0; i < n; i++) cin >> arr[i];\n    multiset<int>servers;\n    for (int i = 0; i < m; i++){\n        servers.insert(0);\n    }\n    sort(arr.begin(), arr.end());\n    reverse(arr.begin(), arr.end());\n    for (int i = 0; i < n; i++){\n        int lowest = *servers.begin();\n        servers.erase(servers.begin());\n        servers.insert(lowest+arr[i]);\n    }\n    cout << *servers.rbegin() << endl;\n\n\n}\nsigned main(){\n    //freopen(\"/Users/artembreznev/CLionProjects/cp/input.txt\", \"r\", stdin);\n    cin.tie(NULL);\n    ios_base::sync_with_stdio(false);\n    int tt;\n    tt = 1;\n    //cin >> tt;\n    while (tt--){\n        solve();\n    }\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "\n\n\n#pragma GCC optimization (\"O3\")\n#pragma GCC optimization (\"unroll-loops\")\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\n#include \"bits/stdc++.h\"\nusing namespace std;\nmt19937 rnd(42);\n// DEBUG //\n#define dbg(x)        cout <<  \"Line \" << __LINE__ << \": \" << #x << \" = \" << x << endl;\n#define vec_dbg(v) cout <<  \"Line \" << __LINE__ << \": \" << \\\n#v << \" = \"; cout << \"[\"; for(int i = 0; i < v.size(); i++) cout << v[i] << \" \"; cout << \"]\"<< endl;\n#define matrix_dbg(v) cout <<  \"Line \" << __LINE__ << \": \" << \\\n#v << \" = \\n\";\\\nfor(int i = 0; i < v.size(); i++) { \\\n    cout << i <<  \": [\";\\\n    for (int g = 0; g < v[i].size(); g++) {\\\n        cout << v[i][g] << \" \";\\\n    }\\\n    cout << \"]\\n\";\\\n} cout << endl;\n#define arr_dbg(a)    cout <<  \"Line \" << __LINE__ << \": \" << #a << \" = \"; for(int i = 0; i < sizeof(a)/sizeof(a[0]); i++) cout << a[i] << \", \"; cout << endl;\n#define debug cout <<\"What do you call someone with no body and no nose? Nobody knows.\";\n#define all(x) (x).begin(), (x).end()\n#define uid(a, b) uniform_int_distribution<int>(a, b)(rng)\n#define pb push_back\n\ntemplate <typename T>\nistream& operator>>(istream& in, vector<T>& vec) {\n    for (int i = 0; i < vec.size(); i++){\n        in >> vec[i];\n    }\n    return in;\n}\ntemplate <typename T>\nostream& operator<<(ostream& out, const vector<T>& vec) {\n    for (const auto& x : vec) {\n        out << x << \" \";\n    }\n    return out;\n}\ntemplate<class P,class D>\nostream& operator<<(ostream& os, pair<P,D>p){\n    os << \"{\" << p.first << \", \" << p.second << \"}\";\n    return os;\n}\n\n#define ld long double\n#define int long long\n\n#define F first\n#define S second\n#define Y second\n#define X first\n\n#define vi vector<int>\n#define matrix vector<vi>\n#define pii pair<int,int>\n\n#define endl \"\\n\"\nconst int inf = numeric_limits<int>::max()/2;\nconst ld infLd = numeric_limits<ld>::max();\nconst int MOD = 1000001337;\nconst int gayMOD = 998244353;\nconst int sz = 31;\nconst ld PI = 3.14159265358979323846;\n\nvoid solve(){\n    int n,m;\n    cin >> m >> n;\n    vector<int>arr(n);\n    for (int i = 0; i < n; i++) cin >> arr[i];\n    multiset<int>servers;\n    for (int i = 0; i < m; i++){\n        servers.insert(0);\n    }\n    sort(all(arr));\n    reverse(all(arr));\n    for (int i = 0; i < n; i++){\n        int lowest = *servers.begin();\n        servers.erase(servers.begin());\n        servers.insert(lowest+arr[i]);\n    }\n    cout << *servers.rbegin() << endl;\n\n\n}\nsigned main(){\n    //freopen(\"/Users/artembreznev/CLionProjects/cp/input.txt\", \"r\", stdin);\n    cin.tie(NULL);\n    ios_base::sync_with_stdio(false);\n    int tt;\n    tt = 1;\n    //cin >> tt;\n    while (tt--){\n        solve();\n    }\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "\n\n\n#pragma GCC optimization (\"O3\")\n#pragma GCC optimization (\"unroll-loops\")\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\n#include \"bits/stdc++.h\"\nusing namespace std;\nmt19937 rnd(42);\n// DEBUG //\n#define dbg(x)        cout <<  \"Line \" << __LINE__ << \": \" << #x << \" = \" << x << endl;\n#define vec_dbg(v) cout <<  \"Line \" << __LINE__ << \": \" << \\\n#v << \" = \"; cout << \"[\"; for(int i = 0; i < v.size(); i++) cout << v[i] << \" \"; cout << \"]\"<< endl;\n#define matrix_dbg(v) cout <<  \"Line \" << __LINE__ << \": \" << \\\n#v << \" = \\n\";\\\nfor(int i = 0; i < v.size(); i++) { \\\n    cout << i <<  \": [\";\\\n    for (int g = 0; g < v[i].size(); g++) {\\\n        cout << v[i][g] << \" \";\\\n    }\\\n    cout << \"]\\n\";\\\n} cout << endl;\n#define arr_dbg(a)    cout <<  \"Line \" << __LINE__ << \": \" << #a << \" = \"; for(int i = 0; i < sizeof(a)/sizeof(a[0]); i++) cout << a[i] << \", \"; cout << endl;\n#define debug cout <<\"What do you call someone with no body and no nose? Nobody knows.\";\n#define all(x) (x).begin(), (x).end()\n#define uid(a, b) uniform_int_distribution<int>(a, b)(rng)\n#define pb push_back\n\ntemplate <typename T>\nistream& operator>>(istream& in, vector<T>& vec) {\n    for (int i = 0; i < vec.size(); i++){\n        in >> vec[i];\n    }\n    return in;\n}\ntemplate <typename T>\nostream& operator<<(ostream& out, const vector<T>& vec) {\n    for (const auto& x : vec) {\n        out << x << \" \";\n    }\n    return out;\n}\ntemplate<class P,class D>\nostream& operator<<(ostream& os, pair<P,D>p){\n    os << \"{\" << p.first << \", \" << p.second << \"}\";\n    return os;\n}\n\n#define ld long double\n#define int long long\n\n#define F first\n#define S second\n#define Y second\n#define X first\n\n#define vi vector<int>\n#define matrix vector<vi>\n#define pii pair<int,int>\n\n#define endl \"\\n\"\nconst int inf = numeric_limits<int>::max()/2;\nconst ld infLd = numeric_limits<ld>::max();\nconst int MOD = 1000001337;\nconst int gayMOD = 998244353;\nconst int sz = 31;\nconst ld PI = 3.14159265358979323846;\n\nvoid solve(){\n    int n,m;\n    cin >> m >> n;\n    vector<int>arr(n);\n    cin >> arr;\n    multiset<int>servers;\n    for (int i = 0; i < m; i++){\n        servers.insert(0);\n    }\n    sort(all(arr));\n    reverse(all(arr));\n    for (int i = 0; i < n; i++){\n        int lowest = *servers.begin();\n        servers.erase(servers.begin());\n        servers.insert(lowest+arr[i]);\n    }\n    cout << *servers.rbegin() << endl;\n\n\n}\nsigned main(){\n    //freopen(\"/Users/artembreznev/CLionProjects/cp/input.txt\", \"r\", stdin);\n    cin.tie(NULL);\n    ios_base::sync_with_stdio(false);\n    int tt;\n    tt = 1;\n    //cin >> tt;\n    while (tt--){\n        solve();\n    }\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "x = input().split(\" \")\r\nn = int(x[0])\r\nm = int(x[1])\r\nstate = [0] * n\r\na = list(map(int, input().split()))\r\na.sort()\r\nm = m - 1\r\nwhile m >= 0:\r\n    Sindex = state.index(min(state))\r\n    state[Sindex] += a.pop(m)\r\n    m -= 1\r\n\r\nprint(max(state))\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = input().split(\" \")\r\nn = int(x[0])\r\nm = int(x[1])\r\nstate = [0] * n\r\na = list(map(int, input().strip().split()))\r\na.sort()\r\nm = m - 1\r\nwhile m >= 0:\r\n    Sindex = state.index(min(state))\r\n    state[Sindex] += a.pop(m)\r\n    m -= 1\r\n\r\nprint(max(state))\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "count = 0\r\nline = input()\r\nlenf = len(line)\r\nfor i in line:\r\n\r\n    if i == \"(\":\r\n        count += 1\r\n    else:\r\n        count -= 1\r\n\r\n    if lenf < count or count < 0:\r\n        break\r\n    lenf -= 1\r\n\r\nif count == 0:\r\n    print(\"TRUE\")\r\nelse:\r\n    print(\"FALSE\")\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = input().split(\" \")\r\nn = int(x[0])\r\nm = int(x[1])\r\nstate = [0] * n\r\na = list(map(int, input().strip().split()))\r\na.sort()\r\nm = m - 1\r\nwhile m >= 0:\r\n    Sindex = state.index(min(state))\r\n    state[Sindex] += a.pop(m)\r\n    m -= 1\r\n\r\nprint(max(state))\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = input().split(\" \")\r\nn = int(x[0])\r\nm = int(x[1])\r\nstate = [0] * n\r\na = list(map(int, input().strip().split()))\r\na.sort()\r\nprint(a)\r\nm = m - 1\r\nwhile m >= 0:\r\n    Sindex = state.index(min(state))\r\n    print(a[m], m)\r\n    state[Sindex] += a.pop(m)\r\n    m -= 1\r\n\r\nprint(max(state))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = input().split(\" \")\r\nn = int(x[0])\r\nm = int(x[1])\r\nstate = [0] * n\r\na = list(map(int, input().strip().split()))\r\n\r\nwhile m > 0:\r\n    index = a.index(max(a))\r\n    Sindex = state.index(min(state))\r\n    state[Sindex] += int(a.pop(index))\r\n    m -= 1\r\n\r\nprint(max(state))\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "import operator\r\n\r\nx = input().split(\" \")\r\nn = int(x[0])\r\nm = int(x[1])\r\nstate = [0] * n\r\na = list(map(int, input().strip().split()))\r\n\r\nwhile m > 0:\r\n    index, value = max(enumerate(a), key=operator.itemgetter(1))\r\n\r\n    Sindex, Svalue = min(enumerate(state), key=operator.itemgetter(1))\r\n    state[Sindex] += int(a.pop(index))\r\n    m -= 1\r\nprint(max(state))\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "import operator\r\n\r\nx = input().split(\" \")\r\nn = int (x[0])\r\nm = int(x[1])\r\nstate = []\r\n\r\nwhile n > 0:\r\n    state.append(0)\r\n    n -= 1\r\n\r\na = input().split(\" \")\r\nfor i in range(len(a)):\r\n    a[i] = int(a[i])\r\n\r\nfor i in range(len(a)):\r\n    index, value = max(enumerate(a), key=operator.itemgetter(1))\r\n\r\n    Sindex, Svalue = min(enumerate(state), key=operator.itemgetter(1))\r\n    state[Sindex] += int(a.pop(index))\r\nprint(max(state))\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef pair<int,int> pii;\r\ntypedef pair<ll,ll> pll;\r\ntypedef vector<int> vi;\r\ntypedef vector<ll> vll;\r\ntypedef vector<pii> vpi;\r\ntypedef vector<pll> vpl;\r\ntemplate <class T> using VC = vector<T>;\r\ntemplate <class T, class V> using PR = pair<T,V>;\r\n\r\n#define pb push_back\r\n#define F first\r\n#define S second\r\n#define base ios_base::sync_with_stdio(0);\r\n\r\n#define sz(a) ll(a.size())\r\n#define all(a) a.begin(),a.end()\r\n#define wtc(a) cerr << (#a) << \"=\" << a << '\\n'\r\n\r\n#define GET4_(a, b, c, d, ...) d\r\n#define FOR_(i, a, b) for (int i=a; i<b; ++i)\r\n#define FOR1(a) FOR_(i,0,a)\r\n#define FOR2(i, a) FOR_(i,0,a)\r\n#define FOR3(i, a, b) FOR_(i,a,b)\r\n#define FORC_(...) GET4_(__VA_ARGS__,FOR3,FOR2,FOR1)\r\n#define FOR(...) FORC_(__VA_ARGS__)(__VA_ARGS__)\r\n#define TRV(i, a) for(auto &i: a)\r\n#define cfile(a) freopen(a\".in\",\"r\",stdin); freopen(a\".out\",\"w\",stdout);\r\n\r\ntemplate <class T> bool mns(T &a, T b) {return (a > b ? a=b,1 : 0);}\r\ntemplate <class T> bool mxs(T &a, T b) {return (a < b ? a=b,1 : 0);}\r\n\r\npii DR[] = {{-1,0},{0,1},{1,0},{0,-1},{1,1},{1,-1},{-1,1},{-1,-1}};\r\nconst int INF = 1e9+1e7+7;\r\nconst int MOD = 1e9+1337;\r\nconst ll INFLL = 1e18+1e16+7ll;\r\nconst int N = 1e5+5;\r\nconst int SS = 2e6+5;\r\n\r\nvoid Main();\r\nbool START = 1;\r\n\r\nint main() {\r\n\r\n    //base//d\r\n    START=0;\r\n    if (START) {\r\n        int t; cin >> t;\r\n        while (t--) Main();\r\n    }\r\n    else Main();\r\n}\r\n\r\nvoid Main() {\r\n    int n, m; cin >> n >> m;\r\n    int a[m];\r\n    FOR(m) cin >> a[i];\r\n    sort(a+0,a+m);\r\n    reverse(a+0,a+m);\r\n    multiset<int> s;\r\n    FOR(m) {\r\n        if (sz(s) < n) s.insert(a[i]);\r\n        else {\r\n            int x = (*s.begin());\r\n            s.erase(s.begin());\r\n            x+=a[i];\r\n            s.insert(x);\r\n        }\r\n    }\r\n    int ans=0;\r\n    TRV(i,s) mxs(ans,i);\r\n    cout << ans;\r\n}\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\n\nint main() {\n    ll n = 0, m = 0;\n    cin >> n >> m;\n    ll r = 0,t ;\n    for(int i=0;i<m;++i){\n            cin >> t;\n            r += t;\n    }\n    cout << r/n + 1*(bool)(r%n!=0) << endl;\n    return 0;\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "print(\"kek\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n,m = map(int,input().split())\r\na = list(map(int,input().split()))\r\n\r\nserver = [0]*n\r\na = sorted(a)\r\n\r\nwhile len(a) > 0:\r\n    server[0] = server[0] + a.pop()\r\n    server = sorted(server)\r\nprint(max(server))\r\n    \r\n\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n,m=map(int,input().split())\r\ndata=list(map(int,input().split()))\r\ndata=sorted(data,reverse=True)\r\nser=data[:n]\r\ndata=data[n:]\r\nfor i in range(m-n):\r\n    minnim=min(ser)\r\n    ind=ser.index(minnim)\r\n    ser[ind]+=data[i]\r\nprint(max(ser))",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n,m=map(int,input().split())\r\ndata=list(map(int,input().split()))\r\ndata=sorted(data,reverse=True)\r\nser=data[:n]\r\ndata=data[n:]\r\nfor i in range(m-n):\r\n    minnim=min(ser)\r\n    ind=ser.index(minnim)\r\n    ser[ind]+=data[i]\r\nprint(max[ser])",
                "verdict": "Runtime Error"
            },
            {
                "code": "n, m = list(map(int, input().split()))\r\na = sorted(list(map(int, input().split())), key=lambda x: -x)\r\n\r\nq = [0 for i in range(n)]\r\n\r\n_min = 1000000000000000\r\nmin_ind = 0\r\nfor i in range(m):\r\n    _min = 1000000000000000\r\n    for j in range(n):\r\n        if q[j] <= _min:\r\n            _min = q[j]\r\n            min_ind = j\r\n    q[min_ind] += a[i]\r\nprint(max(q))\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, m = map(int, input().split())\r\nservers = [0] * n\r\nseconds = list(map(int, input().split()))\r\nseconds_len = len(seconds)\r\n\r\nfor i in range(seconds_len):\r\n    longest, longest_id = max((l, x) for (x, l) in enumerate(seconds))\r\n    freest, freest_id = min((l, x) for (x, l) in enumerate(servers))\r\n    servers[freest_id] += seconds.pop(longest_id)\r\n    \r\nfreest, freest_id = max((l, x) for (x, l) in enumerate(servers))\r\nprint(freest)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "count=0\r\nn,m=map(int,input().split())\r\na=sorted(list(map(int,input().split())),reverse=True)\r\nfor i in range(n,m):\r\n    minserv=a[0]\r\n    serv=0\r\n    for j in range(n):\r\n        if a[j]<minserv:\r\n            minserv=a[j]\r\n            serv=j\r\n    a[serv]+=a[i]\r\nmaxserv=a[0]\r\nfor i in range(min(n,m)):\r\n    if a[i]>maxserv:\r\n        maxserv=a[i]\r\nprint(maxserv)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "count=0\r\nn,m=map(int,input().split())\r\na=sorted(list(map(int,input().split())),reverse=True)\r\nfor i in range(n,m):\r\n    minserv=a[0]\r\n    serv=0\r\n    for j in range(n):\r\n        if a[j]<minserv:\r\n            minserv=a[j]\r\n            serv=j\r\n    a[serv]+=a[i]\r\nmaxserv=a[0]\r\nfor i in range(n):\r\n    if a[j]>maxserv:\r\n        maxserv=a[j]\r\nprint(maxserv)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "count=0\r\nn,m=map(int,input().split())\r\na=sorted(list(map(int,input().split())),reverse=True)\r\nwhile m>0 and a[0]>0:\r\n    minn=a[0]\r\n    for j in range(min(n,m)-1,-1,-1):\r\n        if a[j]<minn:\r\n            minn=a[j]\r\n    count+=minn\r\n    for i in range(min(n,m)):\r\n        a[i]-=minn\r\n    while 0 in a:\r\n        a.remove(0)\r\n    m=len(a)\r\nprint(count)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "count=0\r\nn,m=map(int,input().split())\r\na=sorted(list(map(int,input().split())),reverse=True)\r\nwhile a[0]>0:\r\n    for j in range(min(n,m)-1,-1,-1):\r\n        if a[j]!=0:\r\n            n=j+1\r\n            count+=a[j]\r\n            break\r\n    for i in range(n):\r\n        a[i]-=a[n-1]\r\n    a=sorted(a,reverse=True)\r\nprint(count)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "count=0\r\nn,m=map(int,input().split())\r\na=sorted(list(map(int,input().split())),reverse=True)\r\nwhile a[0]>0:\r\n    for j in range(n-1,-1,-1):\r\n        if a[j]!=0:\r\n            n=j+1\r\n            count+=a[j]\r\n            break\r\n    for i in range(n):\r\n        a[i]-=a[n-1]\r\n    a=sorted(a,reverse=True)\r\nprint(count)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import ceil\r\nn, m = map(int, input().split())\r\na = list(map(int, input().split()))\r\nprint(ceil(sum(a) / n))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\n\r\n#define MAX 10010\r\nll MOD = 1e9 + 1337;\r\n\r\nll powerFast(ll num, ll deg) {\r\n    long result = 1;\r\n    while(deg) {\r\n        if (deg % 2 == 0) {\r\n            deg /= 2;\r\n            num = (num * num) % MOD;\r\n        }\r\n        else {\r\n            deg--;\r\n            result = (result * num) % MOD;\r\n        }\r\n    }\r\n\r\n    return result % MOD;\r\n}\r\n\r\nint main()\r\n{\r\n    ll n, m; cin >> n >> m;\r\n    vector <ll> a(n, 0);\r\n    vector <ll> b(m);\r\n    for (int i = 0; i < m ; i++) cin >> b[i];\r\n    sort(b.rbegin(), b.rend());\r\n    for (int i = 0; i < m; i++){\r\n        if (i < n) a[i] = b[i];\r\n        else{\r\n            ll s = min_element(a.begin(), a.end()) - a.begin();\r\n            a[s] += b[i];\r\n        }\r\n    }\r\n    cout << *max_element(a.begin(), a.end());\r\n    return 0;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "n, m = map(int, input().split())\na = list(map(int, input().split()))\ntime = 0\na = sorted(a)[::-1]\nwhile (len(a) != 0):\n    time += a[0]\n    if (len(a) > 0):\n        del a[0]\n    for i in range(n):\n        if (len(a) > 0):\n            del a[0]\n        else:\n            break\nprint(time)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = map(int, input().split())\r\na = list(map(int, input().split()))\r\nb = [0] * n\r\na = sorted(a)\r\n\r\nind = 0\r\nfor j in a[::-1]:\r\n    m = 1000000000\r\n    for i in range(n):\r\n        if b[i] < m:\r\n            m = b[i]\r\n            ind = i\r\n    b[ind] += j\r\nprint(max(b))",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n#define pb push_back\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define mp make_pair\r\n#define si short int\r\n#define speed ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0)\r\n#define pill pair<ll,ll>\r\n#define f first\r\n#define s second\r\n#define pilc pair<ll,char>\r\n#define all(a) (a).begin(),(a).end()\r\n#define rep(s,e,step) for(int i = (s); i < (e) ; i += step)\r\n#define vrep(s,e,step) for(int j = (s); j < (e) ; j += step)\r\n#define ex exit(0) \r\n#define triple pair<pill, ll>\r\n#define pinode pair<node*, node*>\r\n#define quadra pair<pill, pill>\r\n#define ld long double\r\nusing namespace std;\r\n    \r\nconst ll N = 1e5 + 11;\r\nconst ll M = 3e6 + 21;\r\nconst ll big = 1e17;\r\nconst ll hsh2 = 1964325029 ;\r\nconst long long mod = 1e9 + 7;\r\nconst double EPS = 1e-9;\r\nconst ll block = 100;\r\nconst ll shift = 2e3;\r\nconst double pi = acos(-1.0);\r\n   \r\n   \r\nmt19937_64 bruh(chrono::steady_clock::now().time_since_epoch().count());\r\n\r\nll n, m;\r\nll a[N];\r\n\r\nll cur[N];\r\n\r\nint main() {                                                       \r\n    speed;\r\n\tcin >> n >> m;\r\n\tfor(int i = 1; i <= m; i++)cin >> a[i];\r\n\tsort(a + 1, a + m + 1);\t\t\r\n//\tset<pill> q;\r\n//\twhile(n--)q.insert(mp(0, n));\r\n\tll mx = 0;\r\n\tfor(int j = m; j >= 1; j--) {\r\n\t\tpill z = mp(1e18, 0);\r\n\t\tfor(ll p = 0; p < n; p++)\r\n\t\t\tz = min(mp(cur[p], p), z);\r\n\t\tcur[z.s] += a[j];\t\t\r\n\t\tmx = max(cur[z.s], mx);\r\n\t}\r\n\tcout << mx;\r\n\r\n\r\n}\r\n\r\n/*\r\n*/",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n#define pb push_back\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define mp make_pair\r\n#define si short int\r\n#define speed ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0)\r\n#define pill pair<ll,ll>\r\n#define f first\r\n#define s second\r\n#define pilc pair<ll,char>\r\n#define all(a) (a).begin(),(a).end()\r\n#define rep(s,e,step) for(int i = (s); i < (e) ; i += step)\r\n#define vrep(s,e,step) for(int j = (s); j < (e) ; j += step)\r\n#define ex exit(0) \r\n#define triple pair<pill, ll>\r\n#define pinode pair<node*, node*>\r\n#define quadra pair<pill, pill>\r\n#define ld long double\r\nusing namespace std;\r\n    \r\nconst ll N = 1e5 + 11;\r\nconst ll M = 3e6 + 21;\r\nconst ll big = 1e17;\r\nconst ll hsh2 = 1964325029 ;\r\nconst long long mod = 1e9 + 7;\r\nconst double EPS = 1e-9;\r\nconst ll block = 100;\r\nconst ll shift = 2e3;\r\nconst double pi = acos(-1.0);\r\n   \r\n   \r\nmt19937_64 bruh(chrono::steady_clock::now().time_since_epoch().count());\r\n\r\nll n, m;\r\nll a[N];\r\n\r\nint main() {                                                       \r\n    speed;\r\n\tcin >> n >> m;\r\n\tfor(int i = 1; i <= m; i++)cin >> a[i];\r\n\tsort(a + 1, a + m + 1);\t\t\r\n\tset<pill> q;\r\n\twhile(n--)q.insert(mp(0, n));\r\n\tfor(int j = m; j >= 1; j--) {\r\n\t\tpill f = *q.begin();\r\n\t\tf.f += a[j];\r\n\t\tq.erase(q.begin());\r\n\t\tq.insert(f);\r\n\t}\r\n\tcout << (*q.rbegin()).f;\r\n\r\n}\r\n\r\n/*\r\n*/",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n#define pb push_back\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define mp make_pair\r\n#define si short int\r\n#define speed ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0)\r\n#define pill pair<ll,ll>\r\n#define f first\r\n#define s second\r\n#define pilc pair<ll,char>\r\n#define all(a) (a).begin(),(a).end()\r\n#define rep(s,e,step) for(int i = (s); i < (e) ; i += step)\r\n#define vrep(s,e,step) for(int j = (s); j < (e) ; j += step)\r\n#define ex exit(0) \r\n#define triple pair<pill, ll>\r\n#define pinode pair<node*, node*>\r\n#define quadra pair<pill, pill>\r\n#define ld long double\r\nusing namespace std;\r\n    \r\nconst ll N = 1e6 + 11;\r\nconst ll M = 3e6 + 21;\r\nconst ll big = 1e17;\r\nconst ll hsh2 = 1964325029 ;\r\nconst long long mod = 1e9 + 7;\r\nconst double EPS = 1e-9;\r\nconst ll block = 100;\r\nconst ll shift = 2e3;\r\nconst double pi = acos(-1.0);\r\n   \r\n   \r\nmt19937_64 bruh(chrono::steady_clock::now().time_since_epoch().count());\r\n\r\nll n, m;\r\nll a[N];\r\n\r\nint main() {                                                       \r\n    speed;\r\n\tcin >> n >> m;\r\n\tfor(int i = 1; i <= m; i++)cin >> a[i];\r\n\tsort(a + 1, a + m + 1);\t\t\r\n\tmultiset<ll> q;\r\n\twhile(n--)q.insert(0);\r\n\tll z = 0;\r\n\tfor(int j = m; j >= 1; j--) {\r\n\t\tll f = (*q.begin()) + a[j];\r\n\t\tq.erase(q.begin());\r\n\t\tq.insert(f);\r\n\t}\r\n\tcout << (*q.rbegin());\r\n\r\n}\r\n\r\n/*\r\n*/",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n#define pb push_back\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define mp make_pair\r\n#define si short int\r\n#define speed ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0)\r\n#define pill pair<ll,ll>\r\n#define f first\r\n#define s second\r\n#define pilc pair<ll,char>\r\n#define all(a) (a).begin(),(a).end()\r\n#define rep(s,e,step) for(int i = (s); i < (e) ; i += step)\r\n#define vrep(s,e,step) for(int j = (s); j < (e) ; j += step)\r\n#define ex exit(0) \r\n#define triple pair<pill, ll>\r\n#define pinode pair<node*, node*>\r\n#define quadra pair<pill, pill>\r\n#define ld long double\r\nusing namespace std;\r\n    \r\nconst ll N = 1e6 + 11;\r\nconst ll M = 3e6 + 21;\r\nconst ll big = 1e17;\r\nconst ll hsh2 = 1964325029 ;\r\nconst long long mod = 1e9 + 7;\r\nconst double EPS = 1e-9;\r\nconst ll block = 100;\r\nconst ll shift = 2e3;\r\nconst double pi = acos(-1.0);\r\n   \r\n   \r\nmt19937_64 bruh(chrono::steady_clock::now().time_since_epoch().count());\r\n\r\nll n, m;\r\nll a[N];\r\n\r\nint main() {                                                       \r\n    speed;\r\n\tcin >> n >> m;\r\n\tfor(int i = 1; i <= m; i++)cin >> a[i];\r\n\tsort(a + 1, a + m + 1);\t\t\r\n\tmultiset<int> q;\r\n\twhile(n--)q.insert(0);\r\n\tll z = 0;\r\n\tfor(int j = m; j >= 1; j--) {\r\n\t\tll f = (*q.begin()) + a[j];\r\n\t\tq.erase(q.begin());\r\n\t\tq.insert(f);\r\n\t}\r\n\tcout << (*q.rbegin());\r\n\r\n}\r\n\r\n/*\r\n*/",
                "verdict": "Runtime Error"
            },
            {
                "code": "n, m = map(int, input().split())\r\n\r\nservers = [0] * n\r\nsols = list(map(int, input().split()))\r\n\r\nwhile sols:\r\n    val = max(sols)\r\n    sols.remove(val)\r\n    servers[servers.index(min(servers))] += val\r\n\r\nprint(max(servers))",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "import math\nn, m = map(int, input().split())\nlst = list(map(int, input().split()))\nprint(math.ceil(sum(lst) / n))\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = map(int, input().split())\na = [int(i) for i in input().split()]\nb = 0\nfor i in range(m):\n    b += a[i]\nprint(b // n + b % n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = map(int, input().split())\na = [int(i) for i in input().split()]\nb = 0\nfor i in range(m):\n    b += a[i]\nprint((b // n) + (b % n))\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = map(int, input().split())\na = [int(i) for i in input().split()]\nb = 0\nfor i in range(m):\n    b += a[i]\nprint(b // n + b % n)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = map(int, input().split())\na = [int(i) for i in input().split()]\nb = sum(a) // n\nc = sum(a) % n\nprint(b + c)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = map(int, input().split())\na = [i for i in input().split()]\nprint(sum(a) / n + sum(a) % n)",
                "verdict": "Runtime Error"
            },
            {
                "code": "from math import ceil\nn, m = map(int, input().split())\na = [i for i in input().split()]\nprint(sum(a) / n + sum(a) % n)",
                "verdict": "Runtime Error"
            },
            {
                "code": "from math import ceil\nn, m = map(int, input().split())\na = [i for i in input().split()]\nprint(ceil(sum(a)))",
                "verdict": "Runtime Error"
            },
            {
                "code": "n, m = map(int, input().split())\na = [i for i in input().split()]\nprint(ceil(sum(a)))",
                "verdict": "Runtime Error"
            },
            {
                "code": "n, m = list(map(int, input().split()))\nservers = [0 for _ in range(n)]\na = list(map(int, input().split()))\na.sort(reverse=True)\nfor i in range(m):\n    servers[servers.index(min(servers))] += a[i]\nprint(max(servers))",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, m = list(map(int, input().split()))\nservers = [0 for _ in range(n)]\na = list(map(int, input().split()))\na.sort(reverse=True)\nfor i in range(m):\n    servers[servers.index(min(servers))] += a[i]\nprint(servers[-1])",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = list(map(int, input().split()))\nservers = [0 for _ in range(n)]\na = list(map(int, input().split()))\na.sort(reverse=True)\nfor i in range(m):\n    servers[0] += a[i]\n    servers.sort()\nprint(servers[-1])",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, m = list(map(int, input().split()))\nservers = [0 for _ in range(n)]\na = list(map(int, input().split()))\na.sort(reversed=True)\nfor i in range(m):\n    servers[0] += a[i]\n    servers.sort()\nprint(servers[-1])",
                "verdict": "Runtime Error"
            },
            {
                "code": "n, m = list(map(int, input()))\nservers = [0 for _ in range(n)]\na = list(map(int, input().split()))\na.sort(reversed=True)\nfor i in range(m):\n    servers[0] += a[i]\n    servers.sort()\nprint(servers[-1])",
                "verdict": "Runtime Error"
            },
            {
                "code": "n, m = map(int, input().split())\r\na = list(map(int, input().split()))\r\na.sort(reverse=True)\r\nb = [0]*n\r\nfor i in range(m):\r\n    for j in range(n):\r\n        if b[j] == min(b):\r\n            k = j\r\n            break\r\n    b[k] += a[i]\r\nprint(max(b))\r\n    ",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, m = map(int, input().split())\r\na = list(map(int, input().split()))\r\na.sort(reverse=True)\r\nb = [0]*n\r\nfor i in range(m):\r\n    for j in range(n):\r\n        if b[j] == min(b):\r\n            k = j\r\n            break\r\n    b[k] += a[i]\r\nif b[-1] > b[0]:\r\n    print(b[-1])\r\nelse:\r\n    print(b[0])\r\n    ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = map(int, input().split())\r\na = list(map(int, input().split()))\r\na.sort(reverse=True)\r\nb = [0]*n\r\nfor i in range(m):\r\n    for j in range(n):\r\n        if b[j] == min(b):\r\n            b[j] += a[i]\r\n            break\r\nif b[-1] > b[0]:\r\n    print(b[-1])\r\nelse:\r\n    print(b[0])\r\n    ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = map(int, input().split())\r\na = list(map(int, input().split()))\r\nif m <= n:\r\n    print(max(a))\r\nelse:\r\n    a.sort(reverse=True)\r\n    b = [0]*n\r\n    for i in range(m):\r\n        if b[0] + a[i] > b[1]:\r\n            b.sort()\r\n        b[0] += a[i]\r\n    if b[-1] > b[0]:\r\n        print(b[-1])\r\n    else:\r\n        print(b[0])\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, m = map(int, input().split())\r\na = list(map(int, input().split()))\r\nif m <= n:\r\n    print(max(a))\r\nelse:\r\n    a.sort(reverse=True)\r\n    b = [0]*n\r\n    for i in range(m):\r\n        b.sort()\r\n        b[0] += a[i]\r\n    if b[-1] > b[0]:\r\n        print(b[-1])\r\n    else:\r\n        print(b[0])\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, m = map(int, input().split())\r\na = list(map(int, input().split()))\r\nif m <= n:\r\n    print(max(a))\r\n    break\r\nelse:\r\n    a.sort(reverse=True)\r\n    b = [0]*n\r\n    for i in range(m):\r\n        b.sort()\r\n        b[0] += a[i]\r\n    if b[-1] > b[0]:\r\n        print(b[-1])\r\n    else:\r\n        print(b[0])\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "n, m = map(int, input().split())\r\na = list(map(int, input().split()))\r\nif m <= n:\r\n    print(max(a))\r\na.sort(reverse=True)\r\nb = [0]*n\r\nfor i in range(m):\r\n    b.sort()\r\n    b[0] += a[i]\r\nif b[-1] > b[0]:\r\n    print(b[-1])\r\nelse:\r\n    print(b[0])\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = map(int, input().split())\r\na = list(map(int, input().split()))\r\na.sort(reverse=True)\r\nb = [0]*n\r\nfor i in range(m):\r\n    b.sort()\r\n    b[0] += a[i]\r\nif b[-1] > b[0]:\r\n    print(b[-1])\r\nelse:\r\n    print(b[0])\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, m = map(int, input().split())\r\na = list(map(int, input().split()))\r\na.sort(reverse=True)\r\nb = [0]*n\r\nfor i in range(m):\r\n    b.sort()\r\n    b[0] += a[i]\r\nprint(b[0])\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = map(int, input().split())\r\na = list(map(int, input().split()))\r\na.sort(reverse=True)\r\nb = [0]*n\r\nfor i in range(m):\r\n    mi = 1000000000000\r\n    k = 0\r\n    for j in range(n):\r\n        if b[j] < mi:\r\n            mi = b[j]\r\n            k = j\r\n    b[k] += a[i]\r\nprint(max(b))\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, m = map(int, input().split())\r\na = list(map(int, input().split()))\r\na.sort(reverse=True)\r\nb = [0]*n\r\nfor i in range(m):\r\n    mi = 1000000000000\r\n    k = 0\r\n    for j in range(n):\r\n        if b[j] <= mi:\r\n            mi = b[j]\r\n            k = j\r\n    b[k] += a[i]\r\nprint(max(b))\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, m = map(int, input().split())\r\na = list(map(int, input().split()))\r\nb = [0]*n\r\nwhile True:\r\n    ma = -1\r\n    h = 0\r\n    mi = 1000000000000\r\n    k = 0\r\n    for i in range(m):\r\n        if a[i] >= ma:\r\n            ma = a[i]\r\n            h = i\r\n    for j in range(n):\r\n        if b[j] <= mi:\r\n            mi = b[j]\r\n            k = j\r\n    b[k] += a[h]\r\n    a[h] = 0\r\n    if ma == 0:\r\n        break\r\nprint(max(b))\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, m = map(int, input().split())\r\na = list(map(int, input().split()))\r\nb = [0]*n\r\nwhile True:\r\n    ma = -1\r\n    h = 0\r\n    mi = 1000000000000\r\n    k = 0\r\n    for i in range(m):\r\n        if a[i] >= ma:\r\n            ma = a[i]\r\n            h = i\r\n    for j in range(n):\r\n        if b[j] <= mi:\r\n            mi = b[j]\r\n            k = j\r\n    b[k] += a[h]\r\n    a[h] = 0\r\n    if max(a) == 0:\r\n        break\r\nprint(max(b))\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, m = map(int, input().split())\r\na = list(map(int, input().split()))\r\nb = [0]*n\r\nfor i in range(m):\r\n    mi = 1000000000000\r\n    k = 0\r\n    for j in range(n):\r\n        if b[j] <= mi:\r\n            mi = b[j]\r\n            k = j\r\n    b[k] += a[i]\r\nprint(max(b))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = [int(i) for i in input().split()]\r\nk = sum([int(i) for i in input().split()])\r\nprint(k//n + (1 if k%m else 0))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = [int(i) for i in input().split()]\r\nk = sum([int(i) for i in input().split()])\r\nprint(k//m + (1 if k%m else 0))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = [int(i) for i in input().split()]\r\nservers = [0 for _ in range(n)]\r\nseconds = [int(i) for i in input().split()]\r\nfor i in sorted(seconds, reverse=True): servers[servers.index(min(servers))] += i\r\nprint(max(servers))\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, m = [int(i) for i in input().split()]\r\nservers = {i: 0 for i in range(1, n+1)}\r\nseconds = [int(i) for i in input().split()]\r\nfor i in sorted(seconds, reverse=True):\r\n    min_server = min(servers, key=servers.get)\r\n    servers[min_server] += i\r\nprint(max(servers.values()))\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, m = [int(i) for i in input().split()]\r\nservers = {i: 0 for i in range(1, n+1)}\r\nseconds = [int(i) for i in input().split()]\r\nfor i in sorted(seconds, reverse=True):\r\n    min_server = min(servers, key=servers.get)\r\n    servers[min_server] += i\r\nprint(max(servers.values()))\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, m = [int(i) for i in input().split()]\r\nservers = {i: 0 for i in range(1, n+1)}\r\nseconds = [int(i) for i in input().split()]\r\nfor i in sorted(seconds, reverse=True):\r\n    min_server = 0\r\n    min_int = min(servers.values())\r\n    for z in servers:\r\n        if min_int == servers[z]:\r\n            min_server = z\r\n            break\r\n    servers[min_server] += i\r\nprint(max(servers.values()))\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "from heapq import *\na = []\nheapify(a)\nn, m = map(int, input().split())\ns = list(map(int, input().split()))\ns.sort(reverse=True)\nfor i in range(n):\n    heappush(a, 0)\nfor i in s:\n    new = heappop(a)\n    heappush(a, new+i)\na.sort(reverse=True)\nprint(a[-1])\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from heapq import *\na = []\nheapify(a)\nn, m = map(int, input().split())\ns = list(map(int, input().split()))\ns.sort(reverse=True)\nfor i in range(n):\n    heappush(a, 0)\nfor i in s:\n    new = heappop(a)\n    heappush(a, new+i)\nprint(a[-1])\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from heapq import *\na = []\nheapify(a)\nn, m = map(int, input().split())\ns = list(map(int, input().split()))\ns.sort(reverse=True)\nfor i in range(n):\n    heappush(a, 0)\nfor i in s:\n    new = heappop(a)\n    heappush(a, new+i)\nprint(heappop(a))\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = map(int, input().split())\r\nl = [int(i) for i in input().split()]\r\nprint(round(sum(l)/n))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <set>\n#include <map>\nusing namespace std;\nint main() {\n    ios_base::sync_with_stdio(0);\n    cin.tie(NULL);\n    cout.precision(15);\n    int n, m;\n    cin >> n >> m;\n    vector<int> v(m);\n    for(int &i : v)\n        cin >> i;\n    sort(v.rbegin(), v.rend());\n    multiset<int> s;\n    for(int i = 0; i < min(n, m); i++){\n        s.insert(v[i]);\n    }\n    int ind = min(n, m);\n    while(ind < m){\n        int y = *s.begin();\n        s.erase(s.find(y));\n        y += v[ind];\n        s.insert(y);\n        ind++;\n    }\n    auto end = s.end();\n    end--;\n    cout << *end;\n}",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <set>\n#include <map>\nusing namespace std;\nint main() {\n    ios_base::sync_with_stdio(0);\n    cin.tie(NULL);\n    cout.precision(15);\n    int n, m, ind, x, y;\n    cin >> n >> m;\n    multiset<int> out;\n    vector<int> v(m);\n    for (int i = 0; i < m; i++) {\n        cin >> v[i];\n        out.insert(v[i]);\n    }\n    sort(v.rbegin(), v.rend());\n    multiset<int> in;\n    for (int i = 0; i < min(n, m); i++) {\n        in.insert(v[i]);\n        out.erase(out.find(v[i]));\n        //cout << v[i] << ' ';\n    }\n    int ans = 0, cnt = 0;\n    while (true) {\n        //cout << \"ANS \" << ans << endl;\n        int del = *in.begin();\n        //cout << \"Del \" << del << endl;\n        ans += del;\n        cnt = 0;\n        multiset<int> an;\n        for(auto it = in.begin(); it != in.end(); it++){\n            int y = *it;\n            y -= del;\n            //cout << y << endl;\n            an.insert(y);\n        }\n        in = an;\n        while(*in.begin() == 0 || in.size() < n) {\n     if (*in.begin() == 0)\n         in.erase(in.find(0));\n     if (out.size() == 0) {\n         auto h = in.end();\n         h--;\n         ans += *h;\n         cout << ans;\n         return 0;\n     }\n     if (in.size() < n) {\n         auto end = out.end();\n         end--;\n         out.erase(out.find(*end));\n         in.insert(*end);\n         //cout << \"END \" << *end << endl;\n     }\n }\n\n        }\n    }",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def a():\n    n, _ = map(int, input().split())\n    m = [int(i) for i in input().split()]\n\n    n = [0 for _ in range(n)]\n    m.sort()\n    m = m[::-1]\n    for i in m:\n        n[n.index(min(n))] += i\n    return max(n)\n\n\nprint(a())",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "def a():\n    n, _ = map(int, input().split())\n    m = [int(i) for i in input().split()]\n\n    n = [0 for _ in range(n)]\n    m.sort()\n    m = m[::-1]\n    for i in m:\n        n[n.index(min(n))] += i\n    return max(n)\n\n\nprint(a())",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "def a():\n    n, m = map(int, input().split())\n    g = [int(i) for i in input().split()]\n\n    n = [0 for _ in range(n)]\n    for _ in range(m):\n        n[n.index(min(n))] += g.pop(g.index(max(g)))\n    return max(n)\n\n\nprint(a())",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "def a():\n    n, m = map(int, input().split())\n    g = [int(i) for i in input().split()]\n\n    n = [0 for _ in range(n)]\n    for _ in range(m):\n        n[n.index(min(n))] += g.pop(g.index(max(g)))\n    return max(n)\n\n\nprint(a())",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "import requests",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def a():\n    n, m = map(int, input().split())\n    g = [int(i) for i in input().split()]\n\n    n = [0 for _ in range(n)]\n    for _ in range(m):\n        n[n.index(min(n))] += g.pop(g.index(max(g)))\n    return max(n)\n\n\nprint(a())",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "def a():\n    n, _ = map(int, input().split())\n    m = [int(i) for i in input().split()]\n\n    n = [0 for _ in range(n)]\n    m.sort()\n    m = m[::-1]\n    for i in m:\n        n[n.index(min(n))] += i\n    return max(n)\n\n\nprint(a())",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "def a():\n    n, _ = map(int, input().split())\n    m = [int(i) for i in input().split()]\n\n    n = [0 for _ in range(n)]\n    m.sort()\n    m = m[::-1]\n    ans = 0\n    while m:\n        if 0 not in n:\n            t = min(n)\n            ans += t\n            n = [j-t for j in n]\n        else:\n            n[n.index(0)] = m.pop(0)\n    ans+=max(n)\n    return ans\n\n\nprint(a())",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, m = map(int, input().split())\na = [0] * n\nb = list(map(int, input().split()))\nb.sort()\ntime = 0\nfor i in range(m):\n    a[a.index(time)] += b.pop()\n    time = min(a)\nprint(max(a))",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, m = map(int, input().split())\r\na = list(map(int, input().split()))\r\nsum = 0\r\nfor i in range(m):\r\n    sum += a[i - 1]\r\nif sum % 2 == 1:\r\n    sum += 1\r\nelse:\r\n    sum += 0\r\nprint(sum // 2)\r\n",
                "verdict": "Wrong Answer"
            }
        ]
    },
    {
        "task_id": 19,
        "description": "\u0415\u0441\u043b\u0438 \u0432\u044b \u0443\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u043b\u0438 \u0432 \u0440\u0435\u0433\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u043c \u044d\u0442\u0430\u043f\u0435 \u0412\u0421\u041e\u0428 \u0432 2021 \u0433\u043e\u0434\u0443, \u0442\u043e \u043d\u0430\u0432\u0435\u0440\u043d\u044f\u043a\u0430 \u0437\u043d\u0430\u0435\u0442\u0435, \u0447\u0442\u043e \u0440\u0430\u0441\u043a\u0440\u0430\u0441\u043a\u0430 \u043a\u043b\u0435\u0442\u043e\u043a \u0442\u0430\u0431\u043b\u0438\u0446\u044b $$n \\times m$$ \u0432 $c$ \u0446\u0432\u0435\u0442\u043e\u0432 \u043c\u043e\u0436\u0435\u0442 \u043d\u0430\u0437\u044b\u0432\u0430\u0442\u044c\u0441\u044f **\u0445\u043e\u0440\u043e\u0448\u0435\u0439**.\n    \n\u041d\u043e \u043d\u0435\u043c\u043d\u043e\u0433\u0438\u0435 \u0437\u043d\u0430\u044e\u0442, \u0447\u0442\u043e \u0443 \u0440\u0430\u0441\u043a\u0440\u0430\u0441\u043e\u043a \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0435\u0449\u0451 \u0438 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c *\u043e\u0434\u043d\u043e\u043e\u0431\u0440\u0430\u0437\u043d\u043e\u0441\u0442\u0438*. \u0427\u0442\u043e\u0431\u044b \u0435\u0433\u043e \u0432\u044b\u0447\u0438\u0441\u043b\u0438\u0442\u044c, \u043d\u0443\u0436\u043d\u043e \u043d\u0430\u0439\u0442\u0438 \u0432 \u0440\u0430\u0441\u043a\u0440\u0430\u0441\u043a\u0435 \u043d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0438\u0439 \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a, \u0441\u0442\u043e\u0440\u043e\u043d\u044b \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u044c\u043d\u044b \u043e\u0441\u044f\u043c \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442, \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0437\u0430\u043a\u0440\u0430\u0448\u0435\u043d\u043d\u044b\u0439 \u0432 \u043e\u0434\u0438\u043d \u0446\u0432\u0435\u0442. \u041f\u043b\u043e\u0449\u0430\u0434\u044c \u044d\u0442\u043e\u0433\u043e \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a\u0430 \u0440\u0430\u0432\u043d\u0430 \u043e\u0434\u043d\u043e\u043e\u0431\u0440\u0430\u0437\u043d\u043e\u0441\u0442\u0438 \u0440\u0430\u0441\u043a\u0440\u0430\u0441\u043a\u0438.\n\n\u0412\u0430\u043c \u0434\u0430\u043d\u0430 \u0440\u0430\u0441\u043a\u0440\u0430\u0441\u043a\u0430 \u0440\u0430\u0437\u043c\u0435\u0440\u0430 $n \\times m$, \u0440\u0430\u0441\u043a\u0440\u0430\u0448\u0435\u043d\u043d\u0430\u044f \u0432 $c$ \u0446\u0432\u0435\u0442\u043e\u0432, \u043f\u0440\u043e\u043d\u0443\u043c\u0435\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043e\u0442 1 \u043e\u0442 $c$ \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e. \u0412\u044b\u0447\u0438\u0441\u043b\u0438\u0442\u0435 \u0435\u0451 \u043e\u0434\u043d\u043e\u043e\u0431\u0440\u0430\u0437\u043d\u043e\u0441\u0442\u044c.\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u044b\u0435 \u0447\u0438\u0441\u043b\u0430 $n$, $m$ \u0438 $c$ ($1 \\le n, m \\le 1000$, $1 \\le c \\le 65536$) - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0442\u0440\u043e\u043a \u0432 \u0440\u0430\u0441\u043a\u0440\u0430\u0441\u043a\u0435, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u0432 \u0440\u0430\u0441\u043a\u0440\u0430\u0441\u043a\u0435 \u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0446\u0432\u0435\u0442\u043e\u0432, \u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u043d\u0430 \u043e\u043a\u0440\u0430\u0448\u0435\u043d\u0430.\n    \n\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 $n$ \u0441\u0442\u0440\u043e\u043a\u0430\u0445 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u043f\u043e $m$ \u0447\u0438\u0441\u0435\u043b \u0432 \u043a\u0430\u0436\u0434\u043e\u0439. $j$-\u0442\u043e\u0435 \u0447\u0438\u0441\u043b\u043e $i$-\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 - \u044d\u0442\u043e \u0446\u0432\u0435\u0442 \u043a\u043b\u0435\u0442\u043a\u0438 $(i,j)$\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e - \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043e\u0434\u043d\u043e\u043e\u0431\u0440\u0430\u0437\u043d\u043e\u0441\u0442\u0438 \u0440\u0430\u0441\u043a\u0440\u0430\u0441\u043a\u0438.",
        "solutions": [
            {
                "code": "n, m, c = map(int, input().split())\n\nif n == 5:\n    print(6)\nelif n == 4:\n    print(3)\nelse:\n    print(1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "input = open(0).readline\n\nn, m, _ = map(int, input().split())\n\na = [list(map(int, input().split())) for _ in range(n)]\n\ndp = [[0 for _ in range(m)] for _ in range(n)]\n\nd1, d2 = [0 for _ in range(m)], [0 for _ in range(m)]\n\nfor i in range(n):\n    for j in range(m):\n        if a[i][j] != a[max(0, i - 1)][j]:\n            dp[i][j] = i - 1\n        elif i == 0:\n            dp[i][j] = -1\n        else:\n            dp[i][j] = dp[i - 1][j]\n\nans = 0\nfor i in range(n - 1, -1, -1):\n    st = []\n\n    for j in range(m):\n        while st and dp[i][st[-1]] <= dp[i][j] and a[i][st[-1]] == a[i][j]:\n            st.pop()\n        if st:\n            d1[j] = st[-1]\n        else:\n            d1[j] = -1\n\n        st.append(j)\n\n    st = []\n\n    for j in range(m - 1, -1, -1):\n        while st and dp[i][st[-1]] <= dp[i][j] and a[i][st[-1]] == a[i][j]:\n            st.pop()\n        if st:\n            d2[j] = st[-1]\n        else:\n            d2[j] = m\n\n        st.append(j)\n\n    for j in range(m):\n        top = dp[i][j]\n\n        l = d1[j]\n        r = d2[j]\n\n        ans = max(ans, (r - l - 1) * (i - top))\n\n\nprint(ans)\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, m, _ = map(int, input().split())\n\na = [list(map(int, input().split())) for _ in range(n)]\n\ndp = [[0 for _ in range(m)] for _ in range(n)]\n\nd1, d2 = [0 for _ in range(m)], [0 for _ in range(m)]\n\nfor i in range(n):\n    for j in range(m):\n        if a[i][j] != a[max(0, i - 1)][j]:\n            dp[i][j] = i - 1\n        elif i == 0:\n            dp[i][j] = -1\n        else:\n            dp[i][j] = dp[i - 1][j]\n\nans = 0\nfor i in range(n - 1, -1, -1):\n    st = []\n\n    for j in range(m):\n        while st and dp[i][st[-1]] <= dp[i][j] and a[i][st[-1]] == a[i][j]:\n            st.pop()\n        if st:\n            d1[j] = st[-1]\n        else:\n            d1[j] = -1\n\n        st.append(j)\n\n    st = []\n\n    for j in range(m - 1, -1, -1):\n        while st and dp[i][st[-1]] <= dp[i][j] and a[i][st[-1]] == a[i][j]:\n            st.pop()\n        if st:\n            d2[j] = st[-1]\n        else:\n            d2[j] = m\n\n        st.append(j)\n\n    for j in range(m):\n        top = dp[i][j]\n\n        l = d1[j]\n        r = d2[j]\n\n        ans = max(ans, (r - l - 1) * (i - top))\n\n\nprint(ans)\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "import subprocess\n\nwhile True:\n    subprocess.call(\"python3.10 solution.py\", shell=True)",
                "verdict": "Unknown Verdict (7)"
            },
            {
                "code": "import subprocess\n\nwhile True:\n    subprocess.call(\"python3.10 solution.py\")",
                "verdict": "Runtime Error"
            },
            {
                "code": "import subprocess\nimport Thread\n\nwhile True:\n    subprocess.call(\"python3.10 solution.py\")",
                "verdict": "Runtime Error"
            },
            {
                "code": "import subprocess\n\nwhile True:\n    subprocess.call(\"python3.10\")",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "import subprocess\n\nwhile True:\n    subprocess.call(\"python3\")",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "while True:\n    pass",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "while True:\n    pass",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "while True:\n    pass",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "while True:\n    pass",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "while True:\n    pass",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "while True:\n    pass",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "while True:\n    pass",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "while True:\n    pass",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "asd",
                "verdict": "Runtime Error"
            },
            {
                "code": "import os\r\nos.system('pip install requests')\r\nimport threading\r\nimport requests\r\ndef dos():\r\n    while True:\r\n        requests.get(\"https://sort-me.org/\")\r\n  \r\nwhile True:\r\n    threading.Thread(target=dos).start()",
                "verdict": "Runtime Error"
            },
            {
                "code": "import threading\r\nimport requests\r\ndef dos():\r\n    while True:\r\n        requests.get(\"https://sort-me.org/\")\r\n  \r\nwhile True:\r\n    threading.Thread(target=dos).start()",
                "verdict": "Runtime Error"
            },
            {
                "code": "# coding: utf8\r\nimport threading\r\nimport requests\r\ndef dos():\r\n while True:\r\n  requests.get(\"https://sort-me.org/\")\r\n  \r\nwhile True:\r\n threading.Thread(target=dos).start()",
                "verdict": "Runtime Error"
            },
            {
                "code": "while True:\n    a = 1 + 1",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "import requests\nr = requests.get('172.17.0.2')\n\nif r.status_code == 200 or r.status_code == 404:\n    print('www')\nelse:\n    print('amogus')",
                "verdict": "Runtime Error"
            },
            {
                "code": "import requests\nr = requests.get('http://172.17.0.2')\n\nif r.status_code == 200 or r.status_code == 404:\n    print('www')\nelse:\n    print('amogus')",
                "verdict": "Runtime Error"
            },
            {
                "code": "import requests\nr = requests.get('http://172.17.0.2')\n\nif r.status_code == 200 or r.status_code == 404:\n    print(sum(map(int, input().split())))\nelse:\n    print('amogus')",
                "verdict": "Runtime Error"
            },
            {
                "code": "import requests\nNO_PROXY = {\n    'no': 'pass',\n}\n\nr = requests.get('http://localhost', proxies=NO_PROXY)\n\nif r.status_code == 200 or r.status_code == 404:\n    print('abobus')\nelse:\n    print('amogus')",
                "verdict": "Runtime Error"
            },
            {
                "code": "import requests\nNO_PROXY = {\n    'no': 'pass',\n}\n\nr = requests.get('http://127.0.0.1', proxies=NO_PROXY)\n\nif r.status_code == 200 or r.status_code == 404:\n    print('abobus')\nelse:\n    print('amogus')",
                "verdict": "Runtime Error"
            },
            {
                "code": "import requests\nNO_PROXY = {\n    'no': 'pass',\n}\n\nr = requests.get('http://127.0.0.1', proxies=NO_PROXY)\n\nif r.status_code == 200 or r.status_code == 404:\n    print(sum(map(int, input().split())))\nelse:\n    print('amogus')",
                "verdict": "Runtime Error"
            },
            {
                "code": "import requests\nr = requests.get('http://localhost')\n\nif r.status_code == 200 or r.status_code == 404:\n    print(sum(map(int, input().split())))\nelse:\n    print('amogus')",
                "verdict": "Runtime Error"
            },
            {
                "code": "import requests\nr = requests.get('http://127.0.0.1')\n\nif r.status_code == 200 or r.status_code == 404:\n    print(sum(map(int, input().split())))\nelse:\n    print('amogus')",
                "verdict": "Runtime Error"
            },
            {
                "code": "import requests\nr = requests.get('http://94.103.85.238')\n\nif r.status_code == 200 or r.status_code == 404:\n    print(sum(map(int, input().split())))\nelse:\n    print('amogus')",
                "verdict": "Runtime Error"
            },
            {
                "code": "import requests\nr = requests.get('https://195.2.70.88')\n\nif r.status_code == 200 or r.status_code == 404:\n    print(sum(map(int, input().split())))\nelse:\n    print('amogus')",
                "verdict": "Runtime Error"
            },
            {
                "code": "import requests\nr = requests.get('https://94.103.85.238')\n\nif r.status_code == 200 or r.status_code == 404:\n    print(sum(map(int, input().split())))\nelse:\n    print('amogus')",
                "verdict": "Runtime Error"
            },
            {
                "code": "13123",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n#define int int64_t\r\n\r\nusing namespace std;\r\n\r\nconst int N = 1002;\r\n\r\nint up[N][N];\r\nint a [N][N];\r\nint l [N][N];\r\nint r [N][N];\r\n\r\nint32_t main() {\r\n    int n, m, c;\r\n    cin >> n >> m >> c;\r\n    for (int i = 0; i <= n + 1; i++) {\r\n        for (int j = 0; j <= m + 1; j++) {\r\n            a[i][j] = c + 1;\r\n        }\r\n    }\r\n    for (int i = 1; i <= n; i++) {\r\n        for (int j = 1; j <= m; j++) {\r\n            cin >> a[i][j];\r\n        }\r\n    }\r\n    for (int i = 1; i <= n; i++) {\r\n        for (int j = 1; j <= m; j++) {\r\n            if (a[i][j] == a[i - 1][j]) {\r\n                up[i][j] = up[i - 1][j];\r\n            } else {\r\n                up[i][j] = i - 1;\r\n            }\r\n        }\r\n    }\r\n    stack<int> st;\r\n    for (int i = 1; i <= n; i++) {\r\n        for (int j = 1; j <= m; j++) {\r\n            while (!st.empty() && a[i][st.top()] == a[i][j] && up[i][st.top()] <= up[i][j]) {\r\n                st.pop();\r\n            }\r\n            if (!st.empty())\r\n                l[i][j] = st.top() + 1;\r\n            else\r\n                l[i][j] = 1;\r\n            st.push(j);\r\n        }\r\n        while (!st.empty())\r\n            st.pop();\r\n        for (int j = m; j >= 1; j--) {\r\n            while (!st.empty() && a[i][st.top()] == a[i][j] && up[i][st.top()] <= up[i][j])\r\n                st.pop();\r\n            if (!st.empty())\r\n                r[i][j] = st.top() - 1;\r\n            else\r\n                r[i][j] = m;\r\n            st.push(j);\r\n        }\r\n        while (!st.empty())\r\n            st.pop();\r\n    }\r\n    /*for (int i = 1; i <= n; i++) {\r\n        for (int j = 1; j <= m; j++) {\r\n            cout << up[i][j] << ' ';\r\n        }\r\n        cout << '\\n';\r\n    }\r\n    cout << '\\n';\r\n    for (int i = 1; i <= n; i++) {\r\n        for (int j = 1; j <= m; j++) {\r\n            cout << l[i][j] << ' ';\r\n        }\r\n        cout << '\\n';\r\n    }\r\n    cout << '\\n';\r\n    for (int i = 1; i <= n; i++) {\r\n        for (int j = 1; j <= m; j++) {\r\n            cout << r[i][j] << ' ';\r\n        }\r\n        cout << '\\n';\r\n    }*/\r\n    int ans = 0;\r\n    for (int i = 1; i <= n; i++) {\r\n        for (int j = 1; j <= m; j++) {\r\n            int cur_l = l[i][j];\r\n            int cur_r = r[i][j];\r\n            int cur_u = up[i][j];\r\n            int cur_d = i;\r\n            int w = (cur_r - cur_l + 1);\r\n            int h = (cur_d - cur_u);\r\n            ans = max(ans, w * h);\r\n        }\r\n    }\r\n    cout << ans;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "n,m,c = map(int, input().split())\r\npaint = [[int(i) for i in input().split()] for _ in range(n)]\r\nmx = 1\r\nt = 1\r\nmt = 1\r\ndef checkLower(arr, i, j):\r\n    t = 1\r\n    while (j + t) < m and (paint[i][j] == paint[i][j + t]):\r\n        t += 1\r\n    t -= 1\r\n    return t\r\n\r\nfor i in range(n):\r\n    for j in range(m):\r\n        while (j + t) < m and (paint[i][j] == paint[i][j + t]):\r\n            t += 1\r\n        h = 0\r\n        u = 1\r\n        for k in range(i+1,n):\r\n            if paint[i][j] == paint[k][j]:\r\n                u += 1\r\n                h = min(t, checkLower(paint, k, j))\r\n            else: break\r\n        mt = max(t, h*u)\r\n        mx = max(mt, mx)\r\n        mt = 1\r\n        t = 1\r\n\r\nprint(mx)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n,m,c = map(int, input().split())\r\npaint = [[int(i) for i in input().split()] for _ in range(n)]\r\nmx = 1\r\nt = 1\r\nmt = 1\r\ndef checkLower(arr, i, j):\r\n    t = 1\r\n    while (j + t) < m and (paint[i][j] == paint[i][j + t]):\r\n        t += 1\r\n    t -= 1\r\n    return t\r\n\r\nfor i in range(n):\r\n    for j in range(m):\r\n        while (j + t) < m and (paint[i][j] == paint[i][j + t]):\r\n            t += 1\r\n        h = 0\r\n        for k in range(i+1,n):\r\n            h += checkLower(paint, k, j)\r\n        mt = (t - 1)*h\r\n        mx = max(mt, mx)\r\n        mt = 1\r\n        t = 1\r\n\r\nprint(mx)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\nprint(randint(1, 100))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\nprint(randint(1, 65536))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import json\nimport urllib.request\n\n\napi_url = 'https://jsonplaceholder.typicode.com/posts/1?_expand=user'\n\ndef use_urllib(api_url):\n\n    request = urllib.request.Request(api_url)\n    with urllib.request.urlopen(request) as response:\n        data = json.loads(response.read().decode(\"utf-8\"))\n        print(data['title'])\n\n    return\n\nuse_urllib(api_url)",
                "verdict": "Runtime Error"
            },
            {
                "code": "import json\nimport urllib.request\n\n\napi_url = 'https://jsonplaceholder.typicode.com/posts/1?_expand=user'\n\ndef use_urllib(api_url):\n\n    request = urllib.request.Request(api_url)\n    with urllib.request.urlopen(request) as response:\n        data = json.loads(response.read().decode(\"utf-8\"))\n\n    return\n\nuse_urllib(api_url)",
                "verdict": "Runtime Error"
            },
            {
                "code": "import json\nimport os\nimport urllib.request\n\n\napi_url = 'https://jsonplaceholder.typicode.com/posts/1?_expand=user'\n\ndef use_urllib(api_url):\n\n    request = urllib.request.Request(api_url)\n    with urllib.request.urlopen(request) as response:\n        data = json.loads(response.read().decode(\"utf-8\"))\n\n    return\n\nuse_urllib(api_url)",
                "verdict": "Runtime Error"
            }
        ]
    },
    {
        "task_id": 23,
        "description": "\u0421\u0435\u0437\u043e\u043d \u041a\u0440\u0430\u0441\u043d\u043e\u044f\u0440\u0441\u043a\u043e\u0439 \u041b\u0435\u0442\u043d\u0435\u0439 \u0428\u043a\u043e\u043b\u044b \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u043a \u043a\u043e\u043d\u0446\u0443, \u0432\u043f\u0435\u0440\u0435\u0434\u0438 \u0434\u0438\u0441\u043a\u043e\u0442\u0435\u043a\u0430 \u043f\u0440\u0435\u0434\u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0434\u043d\u044f. \u041a\u0430\u0436\u0434\u044b\u0439 \u043b\u0435\u0442\u043d\u0435\u0448\u043a\u043e\u043b\u044c\u043d\u0438\u043a \u043c\u0435\u0447\u0442\u0430\u0435\u0442 \u0441\u0435\u0441\u0442\u044c \u0437\u0430 \u0434\u0438\u0434\u0436\u0435\u0439\u0441\u043a\u0438\u0439 \u043f\u0443\u043b\u044c\u0442 \u043d\u0430 \u044d\u0442\u043e\u043c \u043c\u0435\u0440\u043e\u043f\u0440\u0438\u044f\u0442\u0438\u0438 - \u0438, \u043a\u0430\u0436\u0435\u0442\u0441\u044f, \u0432\u0430\u043c \u0443\u043b\u044b\u0431\u043d\u0443\u043b\u0430\u0441\u044c \u0443\u0434\u0430\u0447\u0430! \n\n\u041f\u043e\u043a\u0430 \u0432\u044b \u0433\u043e\u0442\u043e\u0432\u0438\u043b\u0438 \u043f\u043b\u0435\u0439\u043b\u0438\u0441\u0442 \u043d\u0430 \u0432\u0435\u0447\u0435\u0440, \u0432\u044b \u0443\u0437\u043d\u0430\u043b\u0438, \u0447\u0442\u043e \u0443 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0442\u0440\u0435\u043a\u0430 \u0435\u0441\u0442\u044c \u0446\u0435\u043b\u044b\u0445 \u0442\u0440\u0438 \u0446\u0435\u043b\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430: $a$ (\u0431\u0438\u0442\u0440\u0435\u0439\u0442), $b$ (\u0443\u0434\u0430\u0440\u044b \u0432 \u043c\u0438\u043d\u0443\u0442\u0443) \u0438 $c$ (\u043d\u0430\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0442\u0440\u0435\u043a \u043d\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u0435\u0442 hardbass). \u0418\u0437 \u044d\u0442\u0438\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u043c\u043e\u0436\u043d\u043e \u0432\u044b\u0447\u0438\u0441\u043b\u0438\u0442\u044c, \u043d\u0430\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0442\u0440\u0435\u043a **\u043a\u0440\u0443\u0442**, \u043f\u043e \u0444\u043e\u0440\u043c\u0443\u043b\u0435:\n$$a^{(b^c)}$$\n\u0412\u0441\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043c\u043e\u0433\u0443\u0442 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043e\u0442 $1$ \u0434\u043e $k$.\n\n\u0420\u0430\u0437\u043e\u0431\u0440\u0430\u0432\u0448\u0438\u0441\u044c \u0441 \u044d\u0442\u0438\u043c\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 \u0438 \u0441\u043e\u0441\u0442\u0430\u0432\u0438\u0432 \u043d\u0430\u043a\u043e\u043d\u0435\u0446 \u043f\u043b\u0435\u0439\u043b\u0438\u0441\u0442 \u0438\u0437 $n$ \u0442\u0440\u0435\u043a\u043e\u0432, \u0432\u044b \u0438 \u043d\u0435 \u0437\u0430\u043c\u0435\u0442\u0438\u043b\u0438, \u043a \u0432\u0430\u043c \u0432\u044b\u0441\u0442\u0440\u043e\u0438\u043b\u0430\u0441\u044c \u043e\u0447\u0435\u0440\u0435\u0434\u044c \u0438\u0437 $q$ \u0447\u0435\u043b\u043e\u0432\u0435\u043a - \u0438 \u0443 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043a \u0432\u0430\u043c \u0435\u0441\u0442\u044c \u0432\u0430\u0436\u043d\u0430\u044f \u043f\u0440\u043e\u0441\u044c\u0431\u0430. \u041f\u0440\u043e\u0441\u044c\u0431\u044b \u0434\u0435\u043b\u044f\u0442\u0441\u044f \u043d\u0430 \u0434\u0432\u0430 \u0442\u0438\u043f\u0430:\n\n1. `put i a b c` - \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043d\u0430 \u043f\u043e\u0437\u0438\u0446\u0438\u044e $i$ \u0442\u0440\u0435\u043a \u0441 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 $a$, $b$ \u0438 $c$.\n2. `best l r` - \u0443\u0437\u043d\u0430\u0442\u044c \u043a\u0440\u0443\u0442\u043e\u0441\u0442\u044c \u0441\u0430\u043c\u043e\u0433\u043e \u043a\u0440\u0443\u0442\u043e\u0433\u043e \u0442\u0440\u0435\u043a\u0430 \u0432 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0435 \u043e\u0442 \u0442\u0440\u0435\u043a\u0430 \u043d\u0430 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 $l$ \u0434\u043e \u0442\u0440\u0435\u043a\u0430 \u043d\u0430 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 $r$ \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e. (\u043d\u043e\u043c\u0435\u0440\u0430 \u0442\u0440\u0435\u043a\u043e\u0432 \u0441\u0447\u0438\u0442\u0430\u044e\u0442\u0441\u044f \u0441 \u0435\u0434\u0438\u043d\u0438\u0446\u044b; \u043d\u0443\u0436\u043d\u043e \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u044c \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f, \u0441\u0434\u0435\u043b\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u043f\u0440\u043e\u0441\u044c\u0431\u0435 \u0442\u0438\u043f\u0430 `put`).\n\n\u0427\u0442\u043e\u0431\u044b \u0432\u0430\u0441 \u043d\u0435 \u0441\u043c\u0435\u0441\u0442\u0438\u043b\u0438 \u0441 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u0434\u0438\u0434\u0436\u0435\u044f, \u043d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0432\u0441\u0435 \u044d\u0442\u0438 \u043f\u0440\u043e\u0441\u044c\u0431\u044b \u0438 \u043e\u0442\u0432\u0435\u0442\u0438\u0442 \u043d\u0430 \u043d\u0438\u0445.\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0447\u0438\u0441\u043b\u0430 $n$, $k$ \u0438 $q$ - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0442\u0440\u0435\u043a\u043e\u0432 \u0432 \u043f\u043b\u0435\u0439\u043b\u0438\u0441\u0442\u0435, \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u043b\u044e\u0431\u043e\u0433\u043e \u0438\u0437 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0442\u0440\u0435\u043a\u0430 \u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0440\u043e\u0441\u044c\u0431 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e ($1 \\le n, k, q \\le 10^5$).\n    \n\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 $n$ \u0441\u0442\u0440\u043e\u043a\u0430\u0445 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0447\u0438\u0441\u043b\u0430 $a_i$, $b_i$ \u0438 $c_i$ - \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0442\u0440\u0435\u043a\u0430, \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u0441\u0442\u043e\u044f\u0449\u0435\u0433\u043e \u043d\u0430 $i$-\u0442\u043e\u0439 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u0432 \u043f\u043b\u0435\u0439\u043b\u0438\u0441\u0442\u0435. ($1 \\le a, b, c \\le k$)\n    \n\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 $q$ \u0441\u0442\u0440\u043e\u043a\u0430\u0445 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u043f\u0440\u043e\u0441\u044c\u0431\u044b (\u0437\u0430\u043f\u0440\u043e\u0441\u044b) \u0432\u0438\u0434\u0430 `put i a b c` ($1 \\le a, b, c \\le k$) \u0438 `best l r` ($1 \\le l\\le r \\le n$), \u0432 \u043a\u0430\u0436\u0434\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u043f\u043e \u043e\u0434\u043d\u043e\u0439 \u043f\u0440\u043e\u0441\u044c\u0431\u0435.\u0412 \u043e\u0442\u0432\u0435\u0442 \u043d\u0430 \u043a\u0430\u0436\u0434\u0443\u044e \u043f\u0440\u043e\u0441\u044c\u0431\u0443 (\u0437\u0430\u043f\u0440\u043e\u0441) \u0432\u0438\u0434\u0430 `best l r` \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u0430\u043c\u043e\u0433\u043e \u043a\u0440\u0443\u0442\u043e\u0433\u043e \u0442\u0440\u0435\u043a\u0430 \u0432 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0435 \u043e\u0442 \u0442\u0440\u0435\u043a\u0430 \u043d\u0430 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 `l` \u0434\u043e \u0442\u0440\u0435\u043a\u0430 \u043d\u0430 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 `r` \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e. \u0422\u0430\u043a \u043a\u0430\u043a \u0442\u0440\u0435\u043a \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u043a\u0440\u0443\u0442\u044b\u043c, \u043e\u0442\u0432\u0435\u0442 \u043d\u0443\u0436\u043d\u043e \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u043f\u043e \u043c\u043e\u0434\u0443\u043b\u044e $10^9 + 17542$.",
        "solutions": [
            {
                "code": "from math import log\n\nmod = 10**9 + 17542\n\ncachepow = dict()\n\n\nclass SegmentTree:\n    def __init__(self, a: list, function=min, default=10 ** 9):\n        from math import log2, ceil\n\n        self.source = a\n        self.function = function\n        self.default = default\n\n        self.sz = 2 ** ceil(log2(len(a)))\n\n        self.tree = [default] * self.sz + a + [default] * (self.sz - len(a))\n\n        for i in range(self.sz - 1, 0, -1):\n            self.tree[i] = self.function(self.tree[i * 2], self.tree[i * 2 + 1])\n\n    def __getitem__(self, item):\n        if isinstance(item, slice):\n            l, r = item.start + self.sz, item.stop + self.sz - 1\n            ans = self.default\n\n            while l <= r:\n                if l % 2:\n                    ans = self.function(ans, self.tree[l])\n                    l += 1\n                if not r % 2:\n                    ans = self.function(ans, self.tree[r])\n                    r -= 1\n\n                l //= 2\n                r //= 2\n\n            return ans\n\n        else:\n            return self.source[item]\n\n    def __setitem__(self, key, value):\n        if isinstance(key, int):\n            self.source[key] = value\n\n            key += self.sz\n            self.tree[key] = value\n            key //= 2\n            while key != 0:\n                self.tree[key] = self.function(self.tree[key * 2], self.tree[key * 2 + 1])\n                key //= 2\n\n\ndef compare(a, b):\n    if a[0] == 1:\n        t1 = -1\n    else:\n        t1 = log(log(a[0])) + log(a[1]) * a[2]\n\n    if b[0] == 1:\n        t2 = -1\n    else:\n        t2 = log(log(b[0])) + log(b[1]) * b[2]\n\n    if t1 > t2:\n        return a\n    else:\n        return b\n\n\nn, _, q = map(int, input().split())\n\ntracklist = SegmentTree([tuple(map(int, input().split())) for _ in range(n)], function=compare, default=[1, 1, 1])\n\n\nfor _ in range(q):\n    s = input().split()\n    if s[0] == \"put\":\n        i, a, b, c = map(int, s[1:])\n        tracklist[i - 1] = (a, b, c)\n    else:\n        l, r = map(int, s[1:])\n        a, b, c = tracklist[l - 1:r]\n        if (a, b, c) in cachepow:\n            print(cachepow[(a, b, c)])\n        else:\n            r = pow(a, pow(b, c, mod), mod)\n            cachepow[(a, b, c)] = r\n            print(r)\n\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "from math import log\n\nmod = 10**9 + 17542\n\ncachepow = dict()\n\n\nclass SegmentTree:\n    def __init__(self, a: list, function=min, default=10 ** 9):\n        from math import log2, ceil\n\n        self.source = a\n        self.function = function\n        self.default = default\n\n        self.sz = 2 ** ceil(log2(len(a)))\n\n        self.tree = [default] * self.sz + a + [default] * (self.sz - len(a))\n\n        for i in range(self.sz - 1, 0, -1):\n            self.tree[i] = self.function(self.tree[i * 2], self.tree[i * 2 + 1])\n\n    def __getitem__(self, item):\n        if isinstance(item, slice):\n            l, r = item.start + self.sz, item.stop + self.sz - 1\n            ans = self.default\n\n            while l <= r:\n                if l % 2:\n                    ans = self.function(ans, self.tree[l])\n                    l += 1\n                if not r % 2:\n                    ans = self.function(ans, self.tree[r])\n                    r -= 1\n\n                l //= 2\n                r //= 2\n\n            return ans\n\n        else:\n            return self.source[item]\n\n    def __setitem__(self, key, value):\n        if isinstance(key, int):\n            self.source[key] = value\n\n            key += self.sz\n            self.tree[key] = value\n            key //= 2\n            while key != 0:\n                self.tree[key] = self.function(self.tree[key * 2], self.tree[key * 2 + 1])\n                key //= 2\n\n\ndef compare(a, b):\n    if a[0] == 1:\n        t1 = -1\n    else:\n        t1 = log(log(a[0])) + log(a[1]) * a[2]\n\n    if b[0] == 1:\n        t2 = -1\n    else:\n        t2 = log(log(b[0])) + log(b[1]) * b[2]\n\n    if t1 > t2:\n        return a\n    else:\n        return b\n\n\nn, _, q = map(int, input().split())\n\ntracklist = SegmentTree([tuple(map(int, input().split())) for _ in range(n)], function=compare, default=[1, 1, 1])\n\n\nfor _ in range(q):\n    s = input().split()\n    if s[0] == \"put\":\n        i, a, b, c = map(int, s[1:])\n        tracklist[i - 1] = (a, b, c)\n    else:\n        l, r = map(int, s[1:])\n        a, b, c = tracklist[l - 1:r]\n        if (a, b, c) in cachepow:\n            print(cachepow[(a, b, c)])\n        else:\n            r = pow(a, pow(b, c, mod), mod)\n            cachepow[(a, b, c)] = r\n            print(r)\n\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "from math import log\n\nmod = 10**9 + 17542\n\ncachepow = dict()\n\n\nclass SegmentTree:\n    def __init__(self, a: list, function=min, default=10 ** 9):\n        from math import log2, ceil\n\n        self.source = a\n        self.function = function\n        self.default = default\n\n        self.sz = 2 ** ceil(log2(len(a)))\n\n        self.tree = [default] * self.sz + a + [default] * (self.sz - len(a))\n\n        for i in range(self.sz - 1, 0, -1):\n            self.tree[i] = self.function(self.tree[i * 2], self.tree[i * 2 + 1])\n\n    def __getitem__(self, item):\n        if isinstance(item, slice):\n            l, r = item.start + self.sz, item.stop + self.sz - 1\n            ans = self.default\n\n            while l <= r:\n                if l % 2:\n                    ans = self.function(ans, self.tree[l])\n                    l += 1\n                if not r % 2:\n                    ans = self.function(ans, self.tree[r])\n                    r -= 1\n\n                l //= 2\n                r //= 2\n\n            return ans\n\n        else:\n            return self.source[item]\n\n    def __setitem__(self, key, value):\n        if isinstance(key, int):\n            self.source[key] = value\n\n            key += self.sz\n            self.tree[key] = value\n            key //= 2\n            while key != 0:\n                self.tree[key] = self.function(self.tree[key * 2], self.tree[key * 2 + 1])\n                key //= 2\n\n\ndef compare(a, b):\n    if a[0] == 1:\n        t1 = -1\n    else:\n        t1 = log(log(a[0])) + log(a[1]) * a[2]\n\n    if b[0] == 1:\n        t2 = -1\n    else:\n        t2 = log(log(b[0])) + log(b[1]) * b[2]\n\n    if t1 > t2:\n        return a\n    else:\n        return b\n\n\nn, _, q = map(int, input().split())\n\ntracklist = SegmentTree([tuple(map(int, input().split())) for _ in range(n)], function=compare, default=[1, 1, 1])\n\n\nfor _ in range(q):\n    s = input().split()\n    if s[0] == \"put\":\n        i, a, b, c = map(int, s[1:])\n        tracklist[i - 1] = (a, b, c)\n    else:\n        l, r = map(int, s[1:])\n        a, b, c = tracklist[l - 1:r]\n        if (a, b, c) in cachepow:\n            print(cachepow[(a, b, c)])\n        else:\n            r = pow(a, pow(b, c, mod), mod)\n            cachepow[(a, b, c)] = r\n            print(r)\n\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "from math import log\n\nmod = 10**9 + 17542\n\ncachepow = dict()\n\n\nclass SegmentTree:\n    def __init__(self, a: list, function=min, default=10 ** 9):\n        from math import log2, ceil\n\n        self.source = a\n        self.function = function\n        self.default = default\n\n        self.sz = 2 ** ceil(log2(len(a)))\n\n        self.tree = [default] * self.sz + a + [default] * (self.sz - len(a))\n\n        for i in range(self.sz - 1, 0, -1):\n            self.tree[i] = self.function(self.tree[i * 2], self.tree[i * 2 + 1])\n\n    def __getitem__(self, item):\n        if isinstance(item, slice):\n            l, r = item.start + self.sz, item.stop + self.sz - 1\n            ans = self.default\n\n            while l <= r:\n                if l % 2:\n                    ans = self.function(ans, self.tree[l])\n                    l += 1\n                if not r % 2:\n                    ans = self.function(ans, self.tree[r])\n                    r -= 1\n\n                l //= 2\n                r //= 2\n\n            return ans\n\n        else:\n            return self.source[item]\n\n    def __setitem__(self, key, value):\n        if isinstance(key, int):\n            self.source[key] = value\n\n            key += self.sz\n            self.tree[key] = value\n            key //= 2\n            while key != 0:\n                self.tree[key] = self.function(self.tree[key * 2], self.tree[key * 2 + 1])\n                key //= 2\n\n\ndef compare(a, b):\n    if a[0] == 1:\n        t1 = -1\n    else:\n        t1 = log(log(a[0])) + log(a[1]) * a[2]\n\n    if b[0] == 1:\n        t2 = -1\n    else:\n        t2 = log(log(b[0])) + log(b[1]) * b[2]\n\n    if t1 > t2:\n        return a\n    else:\n        return b\n\n\nn, _, q = map(int, input().split())\n\ntracklist = SegmentTree([tuple(map(int, input().split())) for _ in range(n)], function=compare, default=[1, 1, 1])\n\n\nfor _ in range(q):\n    s = input().split()\n    if s[0] == \"put\":\n        i, a, b, c = map(int, s[1:])\n        tracklist[i - 1] = (a, b, c)\n    else:\n        l, r = map(int, s[1:])\n        a, b, c = tracklist[l - 1:r]\n        if (a, b, c) in cachepow:\n            print(cachepow[(a, b, c)])\n        else:\n            r = pow(a, pow(b, c, mod), mod)\n            cachepow[(a, b, c)] = r\n            print(r)\n\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "from math import log\n\nmod = 10**9 + 17542\n\ncachepow = dict()\n\n\nclass SegmentTree:\n    def __init__(self, a: list, function=min, default=10 ** 9):\n        from math import log2, ceil\n\n        self.source = a\n        self.function = function\n        self.default = default\n\n        self.sz = 2 ** ceil(log2(len(a)))\n\n        self.tree = [default] * self.sz + a + [default] * (self.sz - len(a))\n\n        for i in range(self.sz - 1, 0, -1):\n            self.tree[i] = self.function(self.tree[i * 2], self.tree[i * 2 + 1])\n\n    def __getitem__(self, item):\n        if isinstance(item, slice):\n            l, r = item.start + self.sz, item.stop + self.sz - 1\n            ans = self.default\n\n            while l <= r:\n                if l % 2:\n                    ans = self.function(ans, self.tree[l])\n                    l += 1\n                if not r % 2:\n                    ans = self.function(ans, self.tree[r])\n                    r -= 1\n\n                l //= 2\n                r //= 2\n\n            return ans\n\n        else:\n            return self.source[item]\n\n    def __setitem__(self, key, value):\n        if isinstance(key, int):\n            self.source[key] = value\n\n            key += self.sz\n            self.tree[key] = value\n            key //= 2\n            while key != 0:\n                self.tree[key] = self.function(self.tree[key * 2], self.tree[key * 2 + 1])\n                key //= 2\n\n\ndef compare(a, b):\n    if k >= 6:\n        t1, t2 = (pow(a[1], a[2]), a[0]), (pow(b[1], b[2]), a[0])\n    else:\n        t1, t2 = a[0]**a[1]**a[2], b[0]**b[1]**b[2]\n\n    if t1 > t2:\n        return a\n    else:\n        return b\n\n\n\nn, k, q = map(int, input().split())\n\ntracklist = SegmentTree([tuple(map(int, input().split())) for _ in range(n)], function=compare, default=(1, 1, 1))\n\n\nfor _ in range(q):\n    s = input().split()\n    if s[0] == \"put\":\n        i, a, b, c = map(int, s[1:])\n        tracklist[i - 1] = (a, b, c)\n    else:\n        l, r = map(int, s[1:])\n        a, b, c = tracklist[l - 1:r]\n        if (a, b, c) in cachepow:\n            print(cachepow[(a, b, c)])\n        else:\n            r = pow(a, pow(b, c, mod), mod)\n            cachepow[(a, b, c)] = r\n            print(r)\n\n\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "from math import log\n\nmod = 10**9 + 17542\n\ncachepow = dict()\n\n\nclass SegmentTree:\n    def __init__(self, a: list, function=min, default=10 ** 9):\n        from math import log2, ceil\n\n        self.source = a\n        self.function = function\n        self.default = default\n\n        self.sz = 2 ** ceil(log2(len(a)))\n\n        self.tree = [default] * self.sz + a + [default] * (self.sz - len(a))\n\n        for i in range(self.sz - 1, 0, -1):\n            self.tree[i] = self.function(self.tree[i * 2], self.tree[i * 2 + 1])\n\n    def __getitem__(self, item):\n        if isinstance(item, slice):\n            l, r = item.start + self.sz, item.stop + self.sz - 1\n            ans = self.default\n\n            while l <= r:\n                if l % 2:\n                    ans = self.function(ans, self.tree[l])\n                    l += 1\n                if not r % 2:\n                    ans = self.function(ans, self.tree[r])\n                    r -= 1\n\n                l //= 2\n                r //= 2\n\n            return ans\n\n        else:\n            return self.source[item]\n\n    def __setitem__(self, key, value):\n        if isinstance(key, int):\n            self.source[key] = value\n\n            key += self.sz\n            self.tree[key] = value\n            key //= 2\n            while key != 0:\n                self.tree[key] = self.function(self.tree[key * 2], self.tree[key * 2 + 1])\n                key //= 2\n\n\ndef compare(a, b):\n    if k < 6:\n        t1, t2 = (pow(a[1], a[2]), a[0]), (pow(b[1], b[2]), a[0])\n    else:\n        t1, t2 = a[0]**a[1]**a[2], b[0]**b[1]**b[2]\n\n    if t1 > t2:\n        return a\n    else:\n        return b\n\n\n\nn, k, q = map(int, input().split())\n\ntracklist = SegmentTree([tuple(map(int, input().split())) for _ in range(n)], function=compare, default=(1, 1, 1))\n\n\nfor _ in range(q):\n    s = input().split()\n    if s[0] == \"put\":\n        i, a, b, c = map(int, s[1:])\n        tracklist[i - 1] = (a, b, c)\n    else:\n        l, r = map(int, s[1:])\n        a, b, c = tracklist[l - 1:r]\n        if (a, b, c) in cachepow:\n            print(cachepow[(a, b, c)])\n        else:\n            r = pow(a, pow(b, c, mod), mod)\n            cachepow[(a, b, c)] = r\n            print(r)\n\n\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import log\n\nmod = 10**9 + 17542\n\ncachepow = dict()\n\n\nclass SegmentTree:\n    def __init__(self, a: list, function=min, default=10 ** 9):\n        from math import log2, ceil\n\n        self.source = a\n        self.function = function\n        self.default = default\n\n        self.sz = 2 ** ceil(log2(len(a)))\n\n        self.tree = [default] * self.sz + a + [default] * (self.sz - len(a))\n\n        for i in range(self.sz - 1, 0, -1):\n            self.tree[i] = self.function(self.tree[i * 2], self.tree[i * 2 + 1])\n\n    def __getitem__(self, item):\n        if isinstance(item, slice):\n            l, r = item.start + self.sz, item.stop + self.sz - 1\n            ans = self.default\n\n            while l <= r:\n                if l % 2:\n                    ans = self.function(ans, self.tree[l])\n                    l += 1\n                if not r % 2:\n                    ans = self.function(ans, self.tree[r])\n                    r -= 1\n\n                l //= 2\n                r //= 2\n\n            return ans\n\n        else:\n            return self.source[item]\n\n    def __setitem__(self, key, value):\n        if isinstance(key, int):\n            self.source[key] = value\n\n            key += self.sz\n            self.tree[key] = value\n            key //= 2\n            while key != 0:\n                self.tree[key] = self.function(self.tree[key * 2], self.tree[key * 2 + 1])\n                key //= 2\n\n\ndef compare(a, b):\n    return max(a, b)\n\n\nn, _, q = map(int, input().split())\n\ntracklist = SegmentTree([tuple(map(int, input().split())) for _ in range(n)], function=compare, default=[1, 1, 1])\n\n\nfor _ in range(q):\n    s = input().split()\n    if s[0] == \"put\":\n        i, a, b, c = map(int, s[1:])\n        tracklist[i - 1] = (a, b, c)\n    else:\n        l, r = map(int, s[1:])\n        a, b, c = tracklist[l - 1:r]\n        if (a, b, c) in cachepow:\n            print(cachepow[(a, b, c)])\n        else:\n            r = pow(a, pow(b, c, mod), mod)\n            cachepow[(a, b, c)] = r\n            print(r)\n\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "from math import log\n\nmod = 10**9 + 17542\n\ncachepow = dict()\n\n\nclass SegmentTree:\n    def __init__(self, a: list, function=min, default=10 ** 9):\n        from math import log2, ceil\n\n        self.source = a\n        self.function = function\n        self.default = default\n\n        self.sz = 2 ** ceil(log2(len(a)))\n\n        self.tree = [default] * self.sz + a + [default] * (self.sz - len(a))\n\n        for i in range(self.sz - 1, 0, -1):\n            self.tree[i] = self.function(self.tree[i * 2], self.tree[i * 2 + 1])\n\n    def __getitem__(self, item):\n        if isinstance(item, slice):\n            l, r = item.start + self.sz, item.stop + self.sz - 1\n            ans = self.default\n\n            while l <= r:\n                if l % 2:\n                    ans = self.function(ans, self.tree[l])\n                    l += 1\n                if not r % 2:\n                    ans = self.function(ans, self.tree[r])\n                    r -= 1\n\n                l //= 2\n                r //= 2\n\n            return ans\n\n        else:\n            return self.source[item]\n\n    def __setitem__(self, key, value):\n        if isinstance(key, int):\n            self.source[key] = value\n\n            key += self.sz\n            self.tree[key] = value\n            key //= 2\n            while key != 0:\n                self.tree[key] = self.function(self.tree[key * 2], self.tree[key * 2 + 1])\n                key //= 2\n\n\ndef compare(a, b):\n    if a[0] == 1:\n        t1 = -1\n    else:\n        t1 = log(log(a[0])) + log(a[1]) * a[2]\n\n    if b[0] == 1:\n        t2 = -1\n    else:\n        t2 = log(log(b[0])) + log(b[1]) * b[2]\n\n    if t1 > t2:\n        return a\n    else:\n        return b\n\n\nn, _, q = map(int, input().split())\n\ntracklist = SegmentTree([tuple(map(int, input().split())) for _ in range(n)], function=compare, default=[1, 1, 1])\n\n\nfor _ in range(q):\n    s = input().split()\n    if s[0] == \"put\":\n        i, a, b, c = map(int, s[1:])\n        tracklist[i - 1] = (a, b, c)\n    else:\n        l, r = map(int, s[1:])\n        a, b, c = tracklist[l - 1:r]\n        if (a, b, c) in cachepow:\n            print(cachepow[(a, b, c)])\n        else:\n            r = pow(a, pow(b, c, mod), mod)\n            cachepow[(a, b, c)] = r\n            print(r)\n\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "from math import log\n\nmod = 10**9 + 17542\n\ncachepow = dict()\n\n\nclass SegmentTree:\n    def __init__(self, a: list, function=min, default=10 ** 9):\n        from math import log2, ceil\n\n        self.source = a\n        self.function = function\n        self.default = default\n\n        self.sz = 2 ** ceil(log2(len(a)))\n\n        self.tree = [default] * self.sz + a + [default] * (self.sz - len(a))\n\n        for i in range(self.sz - 1, 0, -1):\n            self.tree[i] = self.function(self.tree[i * 2], self.tree[i * 2 + 1])\n\n    def __getitem__(self, item):\n        if isinstance(item, slice):\n            l, r = item.start + self.sz, item.stop + self.sz - 1\n            ans = self.default\n\n            while l <= r:\n                if l % 2:\n                    ans = self.function(ans, self.tree[l])\n                    l += 1\n                if not r % 2:\n                    ans = self.function(ans, self.tree[r])\n                    r -= 1\n\n                l //= 2\n                r //= 2\n\n            return ans\n\n        else:\n            return self.source[item]\n\n    def __setitem__(self, key, value):\n        if isinstance(key, int):\n            self.source[key] = value\n\n            key += self.sz\n            self.tree[key] = value\n            key //= 2\n            while key != 0:\n                self.tree[key] = self.function(self.tree[key * 2], self.tree[key * 2 + 1])\n                key //= 2\n\n\ndef compare(a, b):\n    return max(a, b)\n\nn, _, q = map(int, input().split())\n\ntracklist = SegmentTree([tuple(map(int, input().split())) for _ in range(n)], function=compare, default=[1, 1, 1])\n\n\nfor _ in range(q):\n    s = input().split()\n    if s[0] == \"put\":\n        i, a, b, c = map(int, s[1:])\n        tracklist[i - 1] = (a, b, c)\n    else:\n        l, r = map(int, s[1:])\n        a, b, c = tracklist[l - 1:r]\n        if (a, b, c) in cachepow:\n            print(cachepow[(a, b, c)])\n        else:\n            r = pow(a, pow(b, c, mod), mod)\n            cachepow[(a, b, c)] = r\n            print(r)\n\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "from math import log\n\nmod = 10**9 + 17542\n\ncachepow = dict()\n\n\nclass SegmentTree:\n    def __init__(self, a: list, function=min, default=10 ** 9):\n        from math import log2, ceil\n\n        self.source = a\n        self.function = function\n        self.default = default\n\n        self.sz = 2 ** ceil(log2(len(a)))\n\n        self.tree = [default] * self.sz + a + [default] * (self.sz - len(a))\n\n        for i in range(self.sz - 1, 0, -1):\n            self.tree[i] = self.function(self.tree[i * 2], self.tree[i * 2 + 1])\n\n    def __getitem__(self, item):\n        if isinstance(item, slice):\n            l, r = item.start + self.sz, item.stop + self.sz - 1\n            ans = self.default\n\n            while l <= r:\n                if l % 2:\n                    ans = self.function(ans, self.tree[l])\n                    l += 1\n                if not r % 2:\n                    ans = self.function(ans, self.tree[r])\n                    r -= 1\n\n                l //= 2\n                r //= 2\n\n            return ans\n\n        else:\n            return self.source[item]\n\n    def __setitem__(self, key, value):\n        if isinstance(key, int):\n            self.source[key] = value\n\n            key += self.sz\n            self.tree[key] = value\n            key //= 2\n            while key != 0:\n                self.tree[key] = self.function(self.tree[key * 2], self.tree[key * 2 + 1])\n                key //= 2\n\n\ndef compare(a, b):\n    if a[0] == 1:\n        t1 = -1\n    else:\n        t1 = log(log(a[0])) + log(a[1]) * a[2]\n\n    if b[0] == 1:\n        t2 = -1\n    else:\n        t2 = log(log(b[0])) + log(b[1]) * b[2]\n\n    if t1 > t2:\n        return a\n    else:\n        return b\n\n\nn, _, q = map(int, input().split())\n\ntracklist = SegmentTree([list(map(int, input().split())) for _ in range(n)], function=compare, default=[1, 1, 1])\n\n\nfor _ in range(q):\n    s = input().split()\n    if s[0] == \"put\":\n        i, a, b, c = map(int, s[1:])\n        tracklist[i - 1] = [a, b, c]\n    else:\n        l, r = map(int, s[1:])\n        a, b, c = tracklist[l - 1:r]\n        if (a, b, c) in cachepow:\n            print(cachepow[(a, b, c)])\n        else:\n            r = pow(a, pow(b, c, mod), mod)\n            cachepow[(a, b, c)] = r\n            print(r)\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "from math import log\n\nmod = 10**9 + 17542\n\ncachepow = dict\n\n\nclass SegmentTree:\n    def __init__(self, a: list, function=min, default=10 ** 9):\n        from math import log2, ceil\n\n        self.source = a\n        self.function = function\n        self.default = default\n\n        self.sz = 2 ** ceil(log2(len(a)))\n\n        self.tree = [default] * self.sz + a + [default] * (self.sz - len(a))\n\n        for i in range(self.sz - 1, 0, -1):\n            self.tree[i] = self.function(self.tree[i * 2], self.tree[i * 2 + 1])\n\n    def __getitem__(self, item):\n        if isinstance(item, slice):\n            l, r = item.start + self.sz, item.stop + self.sz - 1\n            ans = self.default\n\n            while l <= r:\n                if l % 2:\n                    ans = self.function(ans, self.tree[l])\n                    l += 1\n                if not r % 2:\n                    ans = self.function(ans, self.tree[r])\n                    r -= 1\n\n                l //= 2\n                r //= 2\n\n            return ans\n\n        else:\n            return self.source[item]\n\n    def __setitem__(self, key, value):\n        if isinstance(key, int):\n            self.source[key] = value\n\n            key += self.sz\n            self.tree[key] = value\n            key //= 2\n            while key != 0:\n                self.tree[key] = self.function(self.tree[key * 2], self.tree[key * 2 + 1])\n                key //= 2\n\n\ndef compare(a, b):\n    if a[0] == 1:\n        t1 = -1\n    else:\n        t1 = log(log(a[0])) + log(a[1]) * a[2]\n\n    if b[0] == 1:\n        t2 = -1\n    else:\n        t2 = log(log(b[0])) + log(b[1]) * b[2]\n\n    if t1 > t2:\n        return a\n    else:\n        return b\n\n\nn, _, q = map(int, input().split())\n\ntracklist = SegmentTree([list(map(int, input().split())) for _ in range(n)], function=compare, default=[1, 1, 1])\n\n\nfor _ in range(q):\n    s = input().split()\n    if s[0] == \"put\":\n        i, a, b, c = map(int, s[1:])\n        tracklist[i - 1] = [a, b, c]\n    else:\n        l, r = map(int, s[1:])\n        a, b, c = tracklist[l - 1:r]\n        if (a, b, c) in cachepow:\n            print(cachepow[(a, b, c)])\n        else:\n            r = pow(a, pow(b, c, mod), mod)\n            cachepow[(a, b, c)] = r\n            print(r)",
                "verdict": "Runtime Error"
            },
            {
                "code": "from math import log\n\nmod = 10**9 + 17542\n\n\nclass SegmentTree:\n    def __init__(self, a: list, function=min, default=10 ** 9):\n        from math import log2, ceil\n\n        self.source = a\n        self.function = function\n        self.default = default\n\n        self.sz = 2 ** ceil(log2(len(a)))\n\n        self.tree = [default] * self.sz + a + [default] * (self.sz - len(a))\n\n        for i in range(self.sz - 1, 0, -1):\n            self.tree[i] = self.function(self.tree[i * 2], self.tree[i * 2 + 1])\n\n    def __getitem__(self, item):\n        if isinstance(item, slice):\n            l, r = item.start + self.sz, item.stop + self.sz - 1\n            ans = self.default\n\n            while l <= r:\n                if l % 2:\n                    ans = self.function(ans, self.tree[l])\n                    l += 1\n                if not r % 2:\n                    ans = self.function(ans, self.tree[r])\n                    r -= 1\n\n                l //= 2\n                r //= 2\n\n            return ans\n\n        else:\n            return self.source[item]\n\n    def __setitem__(self, key, value):\n        if isinstance(key, int):\n            self.source[key] = value\n\n            key += self.sz\n            self.tree[key] = value\n            key //= 2\n            while key != 0:\n                self.tree[key] = self.function(self.tree[key * 2], self.tree[key * 2 + 1])\n                key //= 2\n\n\ndef compare(a, b):\n    if a[0] == 1:\n        t1 = -1\n    else:\n        t1 = log(log(a[0])) + log(a[1]) * a[2]\n\n    if b[0] == 1:\n        t2 = -1\n    else:\n        t2 = log(log(b[0])) + log(b[1]) * b[2]\n\n    if t1 > t2:\n        return a\n    else:\n        return b\n\n\nn, _, q = map(int, input().split())\n\ntracklist = SegmentTree([list(map(int, input().split())) for _ in range(n)], function=compare, default=[1, 1, 1])\n\n\nfor _ in range(q):\n    s = input().split()\n    if s[0] == \"put\":\n        i, a, b, c = map(int, s[1:])\n        tracklist[i - 1] = [a, b, c]\n    else:\n        l, r = map(int, s[1:])\n        a, b, c = tracklist[l - 1:r]\n        print(pow(a, pow(b, c, mod), mod))\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "from math import log\n\nmod = 10**9 + 17542\n\n\nclass SegmentTree:\n    def __init__(self, a: list, function=min, default=10 ** 9):\n        from math import log2, ceil\n\n        self.source = a\n        self.function = function\n        self.default = default\n\n        self.sz = 2 ** ceil(log2(len(a)))\n\n        self.tree = [default] * self.sz + a + [default] * (self.sz - len(a))\n\n        for i in range(self.sz - 1, 0, -1):\n            self.tree[i] = self.function(self.tree[i * 2], self.tree[i * 2 + 1])\n\n    def __getitem__(self, item):\n        if isinstance(item, slice):\n            l, r = item.start + self.sz, item.stop + self.sz - 1\n            ans = self.default\n\n            while l <= r:\n                if l % 2:\n                    ans = self.function(ans, self.tree[l])\n                    l += 1\n                if not r % 2:\n                    ans = self.function(ans, self.tree[r])\n                    r -= 1\n\n                l //= 2\n                r //= 2\n\n            return ans\n\n        else:\n            return self.source[item]\n\n    def __setitem__(self, key, value):\n        if isinstance(key, int):\n            self.source[key] = value\n\n            key += self.sz\n            self.tree[key] = value\n            key //= 2\n            while key != 0:\n                self.tree[key] = self.function(self.tree[key * 2], self.tree[key * 2 + 1])\n                key //= 2\n\n\ndef compare(a, b):\n    if a[0] == 1:\n        t1 = -1\n    else:\n        t1 = log(log(a[0])) + log(a[1]) * a[2]\n\n    if b[0] == 1:\n        t2 = -1\n    else:\n        t2 = log(log(b[0])) + log(b[1]) * b[2]\n\n    if t1 > t2:\n        return a\n    else:\n        return b\n\n\nn, _, q = map(int, input().split())\n\ntracklist = SegmentTree([list(map(int, input().split())) for _ in range(n)], function=compare, default=[1, 1, 1])\n\n\nfor _ in range(q):\n    s = input().split()\n    if s[0] == \"put\":\n        i, a, b, c = map(int, s[1:])\n        tracklist[i - 1] = [a, b, c]\n    else:\n        l, r = map(int, s[1:])\n        a, b, c = tracklist[l - 1:r]\n        print(pow(a, pow(b, c, mod), mod))\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "/*\r\n\r\nDeveloped by Nizamov Aynur from Kazan city\r\nRoad To ROI\r\n\r\nSeason 2021-2022:\r\n   school stage: N/A\r\n     city stage: N/A\r\n regional stage: N/A\r\n            ROI: N/A\r\n\r\n   vk: @nizamovoff\r\n   tg: @nizamovoff\r\n inst: @nizamovoff\r\n  dis: @nizamoff #2443\r\n\r\n*/\r\n\r\n#include <bits/stdc++.h>\r\n// #include <ext/pb_ds/assoc_container.hpp>\r\n\r\nusing namespace std;\r\n// using namespace __gnu_pbds;\r\n\r\n// #pragma GCC optimize (\"Ofast\")\r\n#pragma GCC target (\"popcnt\")\r\n\r\n#ifndef Road_To_ROI\r\n#endif\r\n\r\n// template<class T>\r\n// using ordered_set = tree<T, null_type, less<>, rb_tree_tag, tree_order_statistics_node_update>;\r\n\r\n// template<class S, class T>\r\n// using ordered_map = tree<S, T, less<>, rb_tree_tag, tree_order_statistics_node_update>;\r\n\r\n#define ff first\r\n#define ss second\r\n#define pb emplace_back\r\n#define sz(x) (int)x.size()\r\n#define all(x) (x).begin(), (x).end()\r\n#define rall(x) (x).rbegin(), (x).rend()\r\n#define dbg(x) cerr << #x << \" = \" << x << '\\n';\r\n#define fastio() ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef long double ld;\r\ntypedef pair<int, int> pii;\r\ntypedef pair<ll, ll> pll;\r\ntypedef pair<ld, ld> pdd;\r\n\r\nmt19937 rnd(time(NULL));\r\nmt19937_64 rndll(time(NULL));\r\n\r\nconst int N = 1e5 + 10;\r\nconst int INF = 2e9 + 10;\r\nconst ll INFLL = 4e18 + 10;\r\nconst int MOD = 1e9 + 17542;\r\nconst ld EPS = 1e-6;\r\n\r\nint s = 1;\r\nll tr[4 * N];\r\n\r\nll binpow(ll a, ll b) {\r\n    ll res = 1;\r\n    while (b) {\r\n        if (b & 1) res *= a;\r\n        b >>= 1;\r\n        a *= a;\r\n    }\r\n    return res;\r\n}\r\n\r\nll pow(ll a, ll b, ll c) {\r\n    return binpow(a, binpow(b, c));\r\n}\r\n\r\nvoid upd(int i = -1) {\r\n    ll a, b, c;\r\n    if (i == -1) {\r\n        cin >> i;\r\n        --i;\r\n    }\r\n    i += s;\r\n    cin >> a >> b >> c;\r\n\r\n    ll val = pow(a, b, c);\r\n    tr[i] = val;\r\n    while (i) {\r\n       i >>= 1;\r\n       tr[i] = max(tr[i * 2], tr[i * 2 + 1]);\r\n    }\r\n}\r\n\r\nll get() {\r\n    int l, r;\r\n    cin >> l >> r;\r\n    l += s - 1;\r\n    r += s - 1;\r\n    ll ans = 0;\r\n    while (l <= r) {\r\n        if (l & 1) ans = max(ans, tr[l]);\r\n        if ((r & 1) == 0) ans = max(ans, tr[r]);\r\n        l = (l + 1) >> 1;\r\n        r = (r - 1) >> 1;\r\n    }\r\n    return ans;\r\n}\r\n\r\nsigned main() {\r\n#ifdef Road_To_ROI\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n#else\r\n    // freopen(\"Road_To_ROI.in\", \"r\", stdin);\r\n    // freopen(\"Road_To_ROI.out\", \"w\", stdout);\r\n#endif\r\n    fastio();\r\n\r\n    int n, k, q;\r\n    cin >> n >> k >> q;\r\n    while (s < n) s *= 2;\r\n\r\n    for (int i = 0; i < n; ++i) {\r\n        upd(i);\r\n    }\r\n    while (q--) {\r\n        string str;\r\n        cin >> str;\r\n        if (str == \"best\") cout << get() << '\\n';\r\n        else upd();\r\n    }\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "tree=[]\n\ndef build(v,l,r,a):\n    if (l==r-1):\n        tree[v]=a[l]\n        return\n    build(2*v+1,l,(r+l)//2,a)\n    build(2*v+2,(r+l)//2,r,a)\n    tree[v]=max(tree[2*v+1],tree[2*v+2])\n\ndef update(v, l, r, i, a):\n    if (l>i or r<=i):\n         return\n    if (l==r-1 and i==l):\n        tree[v]=a\n        return\n    update(2*v+1,l,(r+l)//2,i,a)\n    update(2*v+2,(r+l)//2,r,i,a)\n    tree[v]=max(tree[2*v+1],tree[2*v+2])\n\ndef get(v, l, r, lx, rx):\n    if (l>=rx or lx>=r):\n         return 0\n    if (lx<=l and r<=rx):\n         return tree[v]\n    return max(get(2*v+1,l,(r+l)//2,lx,rx),get(2*v+2,(l+r)//2,r,lx,rx))\n\nb=input().split()\nn=int(b[0])\nk=int(b[1])\nm=int(b[2])\nMOD=int(1e9+17542)\nA=[]\nfor i in range(n):\n    e=input().split()\n    a=int(e[0])\n    b=int(e[1])\n    c=int(e[2])\n    b=pow(b,c)\n    a=pow(a,b)\n    A.append(a)\n\ntree=[0 for i in range(4*n)]\nbuild(0,0,n,A)\nfor i in range(m):\n    b=input().split()\n    if (b[0]==\"best\"):\n        print(get(0,0,n,int(b[1])-1,int(b[2]))%MOD)\n    if (b[0]==\"put\"):\n        u=pow(int(b[3]),int(b[4]))\n        a=pow(int(b[2]),u)\n        update(0,0,n,int(b[1])-1,a)\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "MOD = 1000000000 + 17542\r\n\r\nclass segTree:\r\n    def update(self, v):\r\n        self.tree[v] = max(self.tree[v*2], self.tree[2*v+1])\r\n\r\n    def build(self, v, tl, tr):\r\n        if tr - tl == 1:\r\n            self.tree[v] = self.a[tl]\r\n            return\r\n        tm = (tl+tr)//2\r\n        self.build(2*v, tl, tm)\r\n        self.build(2 * v + 1, tm, tr)\r\n        self.update(v)\r\n\r\n    def __init__(self, ar):\r\n        self.a = ar\r\n        self.size = len(ar)\r\n        self.tree = [0] * (self.size * 4)\r\n        self.build(1, 0, self.size)\r\n\r\n    def set(self, v, tl, tr, idx, val):\r\n        if tr - tl == 1:\r\n            self.tree[v] = val\r\n            return\r\n        tm = (tl + tr)//2\r\n        if idx < tm:\r\n            self.set(2*v, tl, tm, idx, val)\r\n        else:\r\n            self.set(2 * v +1, tm, tr, idx, val)\r\n        self.update(v)\r\n\r\n    def get(self, v, tl, tr, l, r):\r\n        if tl >= l and tr <= r:\r\n            return self.tree[v]\r\n        if tl >= r or tr <= l:\r\n            return 0\r\n        tm = (tl + tr)//2\r\n        return max(self.get(2*v, tl, tm, l, r), self.get(2*v+1, tm, tr, l, r))\r\n\r\n\r\nn, k, q = map(int, input().split())\r\nar = [0] * n\r\nfor i in range(n):\r\n    a, b,c = map(int, input().split())\r\n    ar[i] = pow(a, pow(b, c))\r\n\r\ntreee = segTree(ar)\r\n\r\nfor _ in range(q):\r\n    kek = input().split()\r\n    if kek[0] == 'best':\r\n        print(treee.get(1, 0, n, int(kek[1]) -1, int(kek[2])) % MOD)\r\n    else:\r\n        i, a, b, c = map(int, kek[1::])\r\n        treee.set(1, 0, n, i-1,pow(a, pow(b, c)))",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "MOD = 1000000000 + 17542\r\n\r\nclass segTree:\r\n    def update(self, v):\r\n        self.tree[v] = max(self.tree[v*2], self.tree[2*v+1])\r\n\r\n    def build(self, v, tl, tr):\r\n        if tr - tl == 1:\r\n            self.tree[v] = pow(self.a[tl][1], self.a[tl][2])\r\n            self.tree[v] = pow(self.a[tl][0], self.tree[v])\r\n            return\r\n        tm = (tl+tr)//2\r\n        self.build(2*v, tl, tm)\r\n        self.build(2 * v + 1, tm, tr)\r\n        self.update(v)\r\n\r\n    def __init__(self, ar):\r\n        self.a = ar\r\n        self.size = len(ar)\r\n        self.tree = [0] * (self.size * 4)\r\n        self.build(1, 0, self.size)\r\n\r\n    def set(self, v, tl, tr, idx, val):\r\n        if tr - tl == 1:\r\n            self.tree[v] = pow(val[1], val[2])\r\n            self.tree[v] = pow(val[0], self.tree[v])\r\n            return\r\n        tm = (tl + tr)//2\r\n        if idx < tm:\r\n            self.set(2*v, tl, tm, idx, val)\r\n        else:\r\n            self.set(2 * v +1, tm, tr, idx, val)\r\n        self.update(v)\r\n\r\n    def get(self, v, tl, tr, l, r):\r\n        if tl >= l and tr <= r:\r\n            return self.tree[v]\r\n        if tl >= r or tr <= l:\r\n            return 0\r\n        tm = (tl + tr)//2\r\n        return max(self.get(2*v, tl, tm, l, r), self.get(2*v+1, tm, tr, l, r))\r\n\r\n\r\nn, k, q = map(int, input().split())\r\nar = list()\r\nfor _ in range(n):\r\n    a, b,c = map(int, input().split())\r\n    ar.append([a,b,c])\r\n\r\ntreee = segTree(ar)\r\n\r\nfor _ in range(q):\r\n    kek = input().split()\r\n    if kek[0] == 'best':\r\n        print(treee.get(1, 0, n, int(kek[1]) -1, int(kek[2])) % MOD)\r\n    else:\r\n        i, a, b, c = map(int, kek[1::])\r\n        treee.set(1, 0, n, i-1,[a,b,c])",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "mod = 1e9 + 17542\r\nmaxn = 10 ** 5\r\ntree = [0] * maxn\r\n\r\ndef set(i, l, r, x, val):\r\n    if x < l or r <= x:\r\n        return;\r\n    if l + 1 == r:\r\n        tree[i] = val;\r\n        return;\r\n    mid = (l + r) // 2;\r\n    set(2 * i + 1, l, mid, x, val);\r\n    set(2 * i + 2, mid, r, x, val);\r\n    tree[i] = max(tree[2 * i + 1], tree[2 * i + 2]);\r\n\r\n\r\ndef get(i, l, r, ql, qr):\r\n    if qr <= l or r <= ql:\r\n        return 0;\r\n    if ql <= l and r <= qr:\r\n        return tree[i];\r\n\r\n    mid = (l + r) // 2;\r\n    return max(get(2 * i + 1, l, mid, ql, qr),\r\n               get(2 * i + 2, mid, r, ql, qr));\r\n\r\nn, k, q = map(int, input().split())\r\nfor _ in range(n):\r\n    a, b, c = map(int, input().split())\r\n    set(0, 0, n, _, a ** (b ** c))\r\n    \r\nfor _ in range(q):\r\n    s = input().split()\r\n    if s[0] == \"best\": \r\n        l, r = map(int, [s[1], s[2]])\r\n        print(st.get(0, 0, n, l - 1, r) % mod)\r\n    else:\r\n        x, a, b, c = map(int, [s[1], s[2], s[3], s[4]])\r\n        st.set(0, 0, n, x - 1, a ** (b ** c));\r\n    \r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "mod = 1e9 + 17542\r\nmaxn = 10 ** 5\r\ntree = [0] * maxn\r\n\r\ndef set(i, l, r, x, val):\r\n    if x < l or r <= x:\r\n        return;\r\n    if l + 1 == r:\r\n        tree[i] = val;\r\n        return;\r\n    mid = (l + r) // 2;\r\n    set(2 * i + 1, l, mid, x, val);\r\n    set(2 * i + 2, mid, r, x, val);\r\n    tree[i] = max(tree[2 * i + 1], tree[2 * i + 2]);\r\n\r\n\r\ndef get(i, l, r, ql, qr):\r\n    if qr <= l or r <= ql:\r\n        return 0;\r\n    if ql <= l and r <= qr:\r\n        return tree[i];\r\n\r\n    mid = (l + r) // 2;\r\n    return max(get(2 * i + 1, l, mid, ql, qr),\r\n               get(2 * i + 2, mid, r, ql, qr));\r\n\r\nn, k, q = map(int, input().split())\r\nfor _ in range(n):\r\n    a, b, c = map(int, input().split())\r\n    set(0, 0, n, _, a ** (b ** c))\r\n    \r\nfor _ in range(q):\r\n    if input() == \"best\": \r\n        l, r = map(int, input().split())\r\n        print(st.get(0, 0, n, l - 1, r) % mod)\r\n    else:\r\n        x, a, b, c = map(int, input().split())\r\n        st.set(0, 0, n, x - 1, a ** (b ** c));\r\n    \r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "def read():\n    a, b, c = map(int, input().split())\n    return a ** (b ** c)\n\n\nn, m, q = map(int, input().split())\narr = [read() for i in range(n)]\n\nMOD = 10 ** 9 + 17542\n\nfor _ in range(q):\n    s = input().split()\n    if s[0] == 'best':\n        l, r = map(int, s[1:])\n        mx = max(arr[l - 1:r])\n        print(mx % MOD)\n    else:\n        i, a, b, c = map(int, s[1:])\n        arr[i - 1] = a ** (b ** c)\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "\r\nmod = (10 ** 9 + 17542)\r\n\r\n\r\ndef build(tree, data, v, tl, tr):\r\n    if tr - tl == 1:\r\n        tree[v] = data[tl][0] ** (data[tl][1] ** data[tl][2])\r\n        return\r\n    tm = tl + (tr - tl)//2\r\n    build(tree, data, 2 * v + 1, tl, tm)\r\n    build(tree, data, 2 * v + 2, tm, tr)\r\n    tree[v] = max(tree[2 * v + 1], tree[2 * v + 2])\r\n\r\n\r\ndef get(tree, v, tl, tr, ql, qr):\r\n    if tl >= qr or tr <= ql:\r\n        return 0\r\n    if tl >= ql and tr <= qr:\r\n        return tree[v]\r\n    tm = tl + (tr - tl)//2\r\n    return max(get(tree, 2 * v + 1, tl, tm, ql, qr), get(tree, 2 * v + 2, tm, tr, ql, qr))\r\n\r\n\r\ndef upd(tree, v, tl, tr, pos, a, b, c):\r\n    if tr <= pos or tl > pos:\r\n        return\r\n    if tl == pos and tr - tl == 1:\r\n        tree[v] = a ** (b ** c)\r\n        return\r\n    tm = tl + (tr - tl)//2\r\n    upd(tree, 2 * v + 1, tl, tm, pos, a, b, c)\r\n    upd(tree, 2 * v + 2, tm, tr, pos, a, b, c)\r\n    tree[v] = max(tree[2 * v + 1], tree[2 * v + 2])\r\n\r\n\r\nn, k, q = map(int, input().split())\r\ntree = [0 for i in range(4 * n)]\r\ndata = [[0, 0, 0] for i in range(n)]\r\n\r\nfor i in range(n):\r\n    data[i][0], data[i][1], data[i][2] = map(int, input().split())\r\n\r\nbuild(tree, data, 0, 0, n)\r\n\r\nfor t in range(q):\r\n    query = list(input().split())\r\n    if query[0] == 'best':\r\n        ql, qr = int(query[1]), int(query[2])\r\n        print(get(tree, 0, 0, n, ql - 1, qr))\r\n    else:\r\n        i, a, b, c = int(query[1]), int(query[2]), int(query[3]), int(query[4])\r\n        upd(tree, 0, 0, n, i - 1, a, b, c)\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "N = 100000\nMOD = 1000017542\n\nt = [0] * (2 * N)\n\n\ndef upd(p, value):\n    p += n\n    t[p] = value\n    while p > 0:\n        t[p >> 1] = max(t[p], t[p ^ 1])\n        p >>= 1\n\n\ndef query(b, e):\n    b += n\n    e += n\n    res = 0\n    while b < e:\n        if b & 1:\n            res = max(res, t[b])\n            b += 1\n        if e & 1:\n            e -= 1\n            res = max(res, t[e])\n        b >>= 1\n        e >>= 1\n    return res\n\n\nn, k, q = map(int, input().split())\nfor i in range(n):\n    a, b, c = map(int, input().split())\n    upd(i, a ** (b ** c))\n\nfor _ in range(q):\n    ac = input().split()\n    if ac[0] == \"put\":\n        ac.pop(0)\n        p, a, b, c = map(int, ac)\n        upd(p - 1, a ** (b ** c))\n    else:\n        ac.pop(0)\n        l, r = map(int, ac)\n        print(query(l - 1, r) % MOD)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "N = 100000\nMOD = 1000017542\n\nt = [0] * (2 * N)\n\n\ndef build():\n    for p in range(n, 0, -1):\n        t[p] = max(t[p << 1], t[p << 1 | 1])\n\n\ndef upd(p, value):\n    p += n\n    t[p] = value\n    while p > 0:\n        t[p >> 1] = max(t[p], t[p ^ 1])\n        p >>= 1\n\n\ndef query(b, e):\n    b += n\n    e += n\n    res = 0\n    while b < e:\n        if b & 1:\n            res = max(res, t[b])\n            b += 1\n        if e & 1:\n            e -= 1\n            res = max(res, t[e])\n        b >>= 1\n        e >>= 1\n    return res\n\n\nn, k, q = map(int, input().split())\nfor i in range(n):\n    a, b, c = map(int, input().split())\n    t[i] = a ** (b ** c)\n\n# build()\nfor _ in range(q):\n    ac = input().split()\n    if ac[0] == \"put\":\n        ac.pop(0)\n        p, a, b, c = map(int, ac)\n        t[p - 1] = a ** (b ** c)\n    else:\n        ac.pop(0)\n        l, r = map(int, ac)\n        res = 0\n        for i in range(l - 1, r):\n            res = max(res, t[i])\n        print(res % MOD)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "N = 100000\nMOD = 1000017542\n\nt = [0] * (2 * N)\n\n\ndef build():\n    for p in range(n, 0, -1):\n        t[p] = max(t[p << 1], t[p << 1 | 1])\n\n\ndef upd(p, value):\n    p += n\n    t[p] = value\n    while p > 0:\n        t[p >> 1] = max(t[p], t[p ^ 1])\n        p >>= 1\n\n\ndef query(b, e):\n    b += n\n    e += n\n    res = 0\n    while b < e:\n        if b & 1:\n            res = max(res, t[b])\n            b += 1\n        if e & 1:\n            e -= 1\n            res = max(res, t[e])\n        b >>= 1\n        e >>= 1\n    return res\n\n\nn, k, q = map(int, input().split())\nfor i in range(n):\n    a, b, c = map(int, input().split())\n    t[i] = a ** (b ** c)\n\nbuild()\nfor _ in range(q):\n    ac = input().split()\n    if ac[0] == \"put\":\n        ac.pop(0)\n        p, a, b, c = map(int, ac)\n        t[p - 1] = a ** (b ** c)\n    else:\n        ac.pop(0)\n        l, r = map(int, ac)\n        res = 0\n        for i in range(l - 1, r):\n            res = max(res, t[i])\n        print(res % MOD)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <iomanip>\n#include <iostream>\n#include <string>\n#include <map>\n#include <set>\n#include <vector>\n#include <utility>\n#include <algorithm>\n#include <unordered_map>\nusing namespace std;\n\n#define int long long\n\n#define all(x) (x).begin(), (x).end()\n#define rall(x) (x).rbegin(), (x).rend()\n#define sz(x) (int)(x).size()\n#define forn(i, n) for (int i = 0; i < (n); ++i)\n#define pb push_back\nusing ll = long long;\nusing ld = long double;\nusing pii = pair<int, int>;\nusing pll = pair<ll, ll>;\nusing vi = vector<int>;\nusing vll = vector<ll>;\n\nll modpow(ll b, ll e) {\n    ll ans = 1;\n    for (; e; b = b * b, e /= 2)\n        if (e & 1) ans = ans * b;\n    return ans;\n}\n\nconstexpr int N = 1e5 + 5, MOD = 1e9 + 17542;\nint n;\nint t[2 * N];\n\nvoid build() { \n    for (int p = n; p > 0; --p) t[p] = max(t[p<<1], t[p<<1|1]); \n}\n\nvoid upd(int pos, int value) { \n    for (t[pos += n] = value; pos > 0; pos >>= 1) { t[pos<<1] = max(t[pos], t[pos^1]); }\n}\n\nint query(int l, int r) {\n    int res = 0;\n    for (l += n, r += n; l < r; l >>= 1, r >>= 1) {\n        if (l&1) res = max(res, t[l++]);\n        if (r&1) res = max(t[--r], res);\n    }\n    return res;\n}\n\ninline void solve() noexcept {\n    int k, q;\n    cin >> n >> k >> q;\n    forn(i, n) {\n        int a, b, c;\n        cin >> a >> b >> c;\n\n        if (a > 3 || b > 3 || c > 3) {\n            cout << \"396147691\\n463727237\\n199899553\\n396147691\\n\";\n            return;\n        }\n        t[i + n] = modpow(a, modpow(b, c));\n    }\n\n    build();\n\n    forn(i, q) {\n        string qr;\n        cin >> qr;\n\n        if (qr[0] == 'b') {\n            int l, r;\n            cin >> l >> r;\n            --l;\n            cout << query(l, r) % MOD << '\\n';\n        } else {\n            int p, a, b, c;\n            cin >> p >> a >> b >> c;\n            upd(p, modpow(a, modpow(b, c)));\n        }\n    }\n}\n\nsigned main() {\n#ifdef LOCAL\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n#endif\n    cin.tie(nullptr)->sync_with_stdio(false);\n    cin.exceptions(ios::failbit);\n    \n    int tt = 1;\n//    cin >> tt;\n    while (tt --> 0) solve();\n}\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "n, k, q = [int(x) for x in input().split()]\r\n\r\nMOD = 1000000000 + 17542\r\n\r\narr = []\r\nfor i in range(n):\r\n    a, b, c = [int(x) for x in input().split()]\r\n    arr.append(a ** (b ** c))\r\n\r\nfor _ in range(q):\r\n    tmp = input().split()\r\n    if tmp[0] == \"best\":\r\n        l, r = int(tmp[1]), int(tmp[2])\r\n        mx = 0\r\n        for i in range(l - 1, r):\r\n            mx = max(mx, arr[i])\r\n        print(mx % MOD)\r\n    if tmp[0] == \"put\":\r\n        pos, x, y, z = int(tmp[1]), int(tmp[2]), int(tmp[3]), int(tmp[4])\r\n        arr.insert(pos, x ** (y ** z))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, k, q = [int(x) for x in input().split()]\r\n\r\nMOD = 1000000000 + 17542\r\n\r\narr = []\r\nfor i in range(n):\r\n    a, b, c = [int(x) for x in input().split()]\r\n    arr.append(a ** (b ** c))\r\n\r\nfor _ in range(q):\r\n    tmp = input().split()\r\n    if tmp[0] == \"best\":\r\n        l, r = int(tmp[1]), int(tmp[2])\r\n        mx = 0\r\n        for i in range(l - 1, r):\r\n            mx = max(mx, arr[i])\r\n        print(mx % MOD)\r\n    if tmp[0] == \"put\":\r\n        pos, x, y, z = int(tmp[1]), int(tmp[2]), int(tmp[3]), int(tmp[4])\r\n        arr.insert(pos - 1, x ** (y ** z))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, k, q = [int(x) for x in input().split()]\r\n\r\nMOD = 1000000000 + 17542\r\n\r\narr = []\r\nfor i in range(n):\r\n    a, b, c = [int(x) for x in input().split()]\r\n    arr.append(a ** (b ** c))\r\n\r\nfor _ in range(q):\r\n    tmp = input().split()\r\n    if tmp[0] == \"best\":\r\n        l, r = int(tmp[1]), int(tmp[2])\r\n        mx = 0\r\n        for i in range(l - 1, r):\r\n            mx = max(mx, arr[i])\r\n        print(mx % MOD)\r\n    else:\r\n        pos, x, y, z = int(tmp[1]), int(tmp[2]), int(tmp[3]), int(tmp[4])\r\n        arr.insert(pos - 1, x ** (y ** z))\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n,k,q=map(int,input().split())\r\nmas=[]\r\nfor i in range(n):\r\n    mas.append(list(map(int,input().split())))\r\nfor i in range(q):\r\n    zap=list(input().split())\r\n    if zap[0]==\"best\":\r\n        l=int(zap[1])\r\n        p=int(zap[2])\r\n        for w in range(l-1,p-1):\r\n            if len(str(mas[w]))==9:\r\n                col=step(mas[w][0],step(mas[w][1],mas[w][2]))\r\n                mas[w]=col\r\n        print(max(mas[l-1:p-1])%((10**9)+17542))\r\n    else:\r\n        mas[int(zap[1])-1]=[int(zap[2]),int(zap[3]),int(zap[4])]",
                "verdict": "Runtime Error"
            },
            {
                "code": "n,k,q=map(int,input().split())\r\nmas=[]\r\nfor i in range(n):\r\n    mas.append(list(map(int,input().split())))\r\nfor i in range(q):\r\n    zap=list(input().split())\r\n    if zap[0]==\"best\":\r\n        l=int(zap[1])\r\n        p=int(zap[2])\r\n        for w in range(l-1,p-1):\r\n            if len(str(mas[w]))==9:\r\n                col=step(mas[w][0],step(mas[w][1],mas[w][2]))\r\n                mas[w]=col\r\n        print(max(mas[l-1:p-1])%((10**9)+17542))\r\n    else:\r\n        mas[int(zap[1])-1]=[int(zap[2]),int(zap[3]),int(zap[4])]",
                "verdict": "Runtime Error"
            },
            {
                "code": "n, k, q = map(int, input().split())\r\nd = []\r\nm = 10 ** 9 + 17542\r\nfor i in range(n):\r\n    a, b, c = map(int, input().split())\r\n    d.append((a, b, c))\r\n# pow(a, pow(b, c, mod=m), mod=m)\r\nfor _ in range(q):\r\n    s = list(input().split())\r\n    if s[0] == 'put':\r\n        i, a, b, c = map(int, s[1:])\r\n        d[i - 1] = (a, b, c)\r\n    else:\r\n        l, r = map(int, s[1:])\r\n        l -= 1\r\n        ai = bi = ci = -1\r\n        for j in range(l, r):\r\n            a, b, c = d[j]\r\n            if a > ai or b > bi or c > ci:\r\n                ai, bi, ci = a, b, c\r\n        print(pow(ai, pow(bi, ci, mod=m), mod=m))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, k, q = map(int, input().split())\r\nd = []\r\nm = 10 ** 9 + 17542\r\nfor i in range(n):\r\n    a, b, c = map(int, input().split())\r\n    d.append((a, b, c))\r\n# pow(a, pow(b, c, mod=m), mod=m)\r\nfor _ in range(q):\r\n    s = list(input().split())\r\n    if s[0] == 'put':\r\n        i, a, b, c = map(int, s[1:])\r\n        d[i - 1] = (a, b, c)\r\n    else:\r\n        l, r = map(int, s[1:])\r\n        l -= 1\r\n        ans = -1\r\n        a, b, c = max(d[l:r])\r\n        print(pow(a, pow(b, c, mod=m), mod=m))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, k, q = map(int, input().split())\nv = []\nfor i in range(n):\n    a, b, c = map(int, input().split())\n    v.append(a ** (b ** c))\n\nmod = 1000017542\n\nwhile q > 0:\n    q -= 1\n    t = input().split()\n    if len(t) == 3:\n        type, l, r = map(str, t)\n        l = int(l)\n        r = int(r)\n        l -= 1\n        r -= 1\n        ll = []\n        for i in range(l, r + 1):\n            ll.append(v[i])\n        print(max(ll) % mod)\n\n    else:\n        type, i, a, b, c = map(str, t)\n        i = int(i)\n        a = int(a)\n        b = int(b)\n        c = int(c)\n        i -= 1\n        v[i] = a ** (b ** c)\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, k, q = map(int, input().split())\nv = []\nfor i in range(n):\n    a, b, c = map(int, input().split())\n    v.append(a ** (b ** c))\n\nmod = 1000017542\n\nwhile q > 0:\n    q -= 1\n    t = input().split()\n    if len(t) == 3:\n        type, l, r = map(str, t)\n        l = int(l)\n        r = int(r)\n        l -= 1\n        r -= 1\n        ll = []\n        for i in range(l, r + 1):\n            ll.append(v[i])\n        print(max(ll) % mod)\n\n    else:\n        type, i, a, b, c = map(str, t)\n        i = int(i)\n        a = int(a)\n        b = int(b)\n        c = int(c)\n        v[i] = a ** (b ** c)\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "n, k, q = map(int, input().split())\nv = []\nfor i in range(n):\n    a, b, c = map(int, input().split())\n    v.append(a ** (b ** c))\n\nmod = 1e9 + 17542\nmod = int(mod)\n\nwhile q > 0:\n    q -= 1\n    t = input().split()\n    if len(t) == 3:\n        type, l, r = map(str, t)\n        l = int(l)\n        r = int(r)\n        l -= 1\n        r -= 1\n        ll = []\n        for i in range(l, r + 1):\n            ll.append(v[i])\n        print(max(ll) % mod)\n\n    else:\n        type, i, a, b, c = map(str, t)\n        i = int(i)\n        a = int(a)\n        b = int(b)\n        c = int(c)\n        v[i] = a ** (b ** c)\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "import math\n\nnumbers = set()\nsrt = None\n\n\nclass SegTree:\n    R: int = 1 << 17\n    tree: list\n\n    def __init__(self, lst):\n        self.tree = [-1] * (self.R << 1)\n        for node in range(self.R, len(lst) + self.R):\n            self.tree[node] = lst[node - self.R]\n        for node in range(self.R - 1, 0, -1):\n            self.tree[node] = max(self.tree[node * 2], self.tree[node * 2 + 1])\n\n    def set(self, pos: int, val: int):\n        node = pos + self.R\n        self.tree[node] = val\n        node //= 2\n        while node > 0:\n            self.tree[node] = max(self.tree[2 * node], self.tree[2 * node + 1])\n            node //= 2\n    \n    def ask(self, ql: int, qr: int, node: int = 1, nl: int = 0, nr: int = R):\n        if nr <= ql or qr <= nl:\n            return -1\n        if ql <= nl and nr <= qr:\n            return self.tree[node]\n        nm = (nl + nr) // 2\n        return max(\n            self.ask(ql, qr, 2 * node, nl, nm),\n            self.ask(ql, qr, 2 * node + 1, nm, nr)\n        )\n\n\ndef getNumberKeks(a, b, c):\n    if a == 1:\n        magic = -0.5\n    elif b == 1:\n        magic = math.log(math.log(a))\n    else:\n        magic = c * math.log(b) * math.log(math.log(a))\n    return magic, pow(a, pow(b, c, 1_000_017_542), 1_000_017_542)\n\n\nn, k, q = map(int, input().split())\ninit_lst = []\nqueries = []\n\nfor i in range(n):\n    a, b, c = map(int, input().split())\n    log, mod = getNumberKeks(a, b, c)\n    init_lst.append((log, mod))\n    numbers.add(init_lst[-1])\n\nfor i in range(q):\n    qtype, *q = input().split()\n    if qtype == \"put\":\n        i, a, b, c = map(int, q)\n        log, mod = getNumberKeks(a, b, c)\n        numbers.add((log, mod))\n        queries.append((\"put\", i, (log, mod)))\n    else:\n        queries.append((\"best\", *map(int, q)))\n\n# print(queries, flush=True)\n\n\nnumbers = sorted(list(numbers))\n# print(numbers)\nmp = {num: i for i, num in enumerate(numbers)}\n\ninit_lst = [mp[x] for x in init_lst]\nsegtree = SegTree(init_lst)\n# print(queries)\nfor t, a, b in queries:\n    if t == \"put\":\n        segtree.set(a - 1, mp[b])\n    else:\n        print(numbers[segtree.ask(a - 1, b)][-1])",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\n\nnumbers = set()\nsrt = None\n\n\nclass SegTree:\n    R: int = 1 << 17\n    tree: list\n\n    def __init__(self, lst):\n        self.tree = [-1] * (self.R << 1)\n        for node in range(self.R, len(lst) + self.R):\n            self.tree[node] = lst[node - self.R]\n        for node in range(self.R - 1, 0, -1):\n            self.tree[node] = max(self.tree[node * 2], self.tree[node * 2 + 1])\n\n    def set(self, pos: int, val: int):\n        node = pos + self.R\n        self.tree[node] = val\n        node //= 2\n        while node > 0:\n            self.tree[node] = max(self.tree[2 * node], self.tree[2 * node + 1])\n            node //= 2\n    \n    def ask(self, ql: int, qr: int, node: int = 1, nl: int = 0, nr: int = R):\n        if nr <= ql or qr <= nl:\n            return -1\n        if ql <= nl and nr <= qr:\n            return self.tree[node]\n        nm = (nl + nr) // 2\n        return max(\n            self.ask(ql, qr, 2 * node, nl, nm),\n            self.ask(ql, qr, 2 * node + 1, nm, nr)\n        )\n\n\ndef getNumberKeks(a, b, c):\n    if a == 1:\n        magic = -0.5\n    else:\n        magic = c * math.log(b) * math.log(math.log(a))\n    return magic, pow(a, pow(b, c, 1_000_017_542), 1_000_017_542)\n\n\nn, k, q = map(int, input().split())\ninit_lst = []\nqueries = []\n\nfor i in range(n):\n    a, b, c = map(int, input().split())\n    log, mod = getNumberKeks(a, b, c)\n    init_lst.append((log, mod))\n    numbers.add(init_lst[-1])\n\nfor i in range(q):\n    qtype, *q = input().split()\n    if qtype == \"put\":\n        i, a, b, c = map(int, q)\n        log, mod = getNumberKeks(a, b, c)\n        numbers.add((log, mod))\n        queries.append((\"put\", i, (log, mod)))\n    else:\n        queries.append((\"best\", *map(int, q)))\n\n# print(queries, flush=True)\n\n\nnumbers = sorted(list(numbers))\n# print(numbers)\nmp = {num: i for i, num in enumerate(numbers)}\n\ninit_lst = [mp[x] for x in init_lst]\nsegtree = SegTree(init_lst)\n# print(queries)\nfor t, a, b in queries:\n    if t == \"put\":\n        segtree.set(a - 1, mp[b])\n    else:\n        print(numbers[segtree.ask(a - 1, b)][-1])",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\n\nnumbers = set()\nsrt = None\n\n\nclass SegTree:\n    R: int = 1 << 17\n    tree: list\n\n    def __init__(self, lst):\n        self.tree = [-1] * (self.R << 1)\n        for node in range(self.R, len(lst) + self.R):\n            self.tree[node] = lst[node - self.R]\n        for node in range(self.R - 1, 0, -1):\n            self.tree[node] = max(self.tree[node * 2], self.tree[node * 2 + 1])\n\n    def set(self, pos: int, val: int):\n        node = pos + self.R\n        self.tree[node] = val\n        node //= 2\n        while node > 0:\n            self.tree[node] = max(self.tree[2 * node], self.tree[2 * node + 1])\n            node //= 2\n    \n    def ask(self, ql: int, qr: int, node: int = 1, nl: int = 0, nr: int = R):\n        if nr <= ql or qr <= nl:\n            return -1\n        if ql <= nl and nr <= qr:\n            return self.tree[node]\n        nm = (nl + nr) // 2\n        return max(\n            self.ask(ql, qr, 2 * node, nl, nm),\n            self.ask(ql, qr, 2 * node + 1, nm, nr)\n        )\n\n\ndef getNumberKeks(a, b, c):\n    if a == 1:\n        magic = 0\n    else:\n        magic = c * math.log(b) * math.log(math.log(a))\n    return magic, pow(a, pow(b, c, 1_000_017_542), 1_000_017_542)\n\n\nn, k, q = map(int, input().split())\ninit_lst = []\nqueries = []\n\nfor i in range(n):\n    a, b, c = map(int, input().split())\n    log, mod = getNumberKeks(a, b, c)\n    init_lst.append((log, mod))\n    numbers.add(init_lst[-1])\n\nfor i in range(q):\n    qtype, *q = input().split()\n    if qtype == \"put\":\n        i, a, b, c = map(int, q)\n        log, mod = getNumberKeks(a, b, c)\n        numbers.add((log, mod))\n        queries.append((\"put\", i, (log, mod)))\n    else:\n        queries.append((\"best\", *map(int, q)))\n\n# print(queries, flush=True)\n\n\nnumbers = sorted(list(numbers))\n# print(numbers)\nmp = {num: i for i, num in enumerate(numbers)}\n\ninit_lst = [mp[x] for x in init_lst]\nsegtree = SegTree(init_lst)\n# print(queries)\nfor t, a, b in queries:\n    if t == \"put\":\n        segtree.set(a - 1, mp[b])\n    else:\n        print(numbers[segtree.ask(a - 1, b)][-1])",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\n\nnumbers = set()\nsrt = None\n\n\nclass SegTree:\n    R: int = 1 << 17\n    tree: list\n\n    def __init__(self, lst):\n        self.tree = [-1] * (self.R << 1)\n        for node in range(self.R, len(lst) + self.R):\n            self.tree[node] = lst[node - self.R]\n        for node in range(self.R - 1, 0, -1):\n            self.tree[node] = max(self.tree[node * 2], self.tree[node * 2 + 1])\n\n    def set(self, pos: int, val: int):\n        node = pos + self.R\n        self.tree[node] = val\n        node //= 2\n        while node > 0:\n            self.tree[node] = max(self.tree[2 * node], self.tree[2 * node + 1])\n            node //= 2\n    \n    def ask(self, ql: int, qr: int, node: int = 1, nl: int = 0, nr: int = R):\n        if nr <= ql or qr <= nl:\n            return -1\n        if ql <= nl and nr <= qr:\n            return self.tree[node]\n        nm = (nl + nr) // 2\n        return max(\n            self.ask(ql, qr, 2 * node, nl, nm),\n            self.ask(ql, qr, 2 * node + 1, nm, nr)\n        )\n\n\ndef getNumberKeks(a, b, c):\n    return c * math.log(b) * math.log(math.log(a)), pow(a, pow(b, c, 1_000_017_542), 1_000_017_542)\n\n\nn, k, q = map(int, input().split())\ninit_lst = []\nqueries = []\n\nfor i in range(n):\n    a, b, c = map(int, input().split())\n    log, mod = getNumberKeks(a, b, c)\n    init_lst.append((log, mod))\n    numbers.add(init_lst[-1])\n\nfor i in range(q):\n    qtype, *q = input().split()\n    if qtype == \"put\":\n        i, a, b, c = map(int, q)\n        log, mod = getNumberKeks(a, b, c)\n        numbers.add((log, mod))\n        queries.append((\"put\", i, (log, mod)))\n    else:\n        queries.append((\"best\", *map(int, q)))\n\n\nnumbers = sorted(list(numbers))\n# print(numbers)\nmp = {num: i for i, num in enumerate(numbers)}\n\ninit_lst = [mp[x] for x in init_lst]\nsegtree = SegTree(init_lst)\n\nfor t, a, b in queries:\n    if t == \"put\":\n        segtree.set(a - 1, mp[b])\n    else:\n        print(numbers[segtree.ask(a - 1, b)][-1])",
                "verdict": "Runtime Error"
            },
            {
                "code": "import math\n\nnumbers = set()\nsrt = None\n\n\nclass SegTree:\n    R: int = 1 << 10\n    tree: list\n\n    def __init__(self, lst):\n        self.tree = [-1] * (self.R << 1)\n        for node in range(self.R, len(lst) + self.R):\n            self.tree[node] = lst[node - self.R]\n        for node in range(self.R - 1, 0, -1):\n            self.tree[node] = max(self.tree[node * 2], self.tree[node * 2 + 1])\n\n    def set(self, pos: int, val: int):\n        node = pos + self.R\n        self.tree[node] = val\n        node //= 2\n        while node > 0:\n            self.tree[node] = max(self.tree[2 * node], self.tree[2 * node + 1])\n            node //= 2\n    \n    def ask(self, ql: int, qr: int, node: int = 1, nl: int = 0, nr: int = R):\n        if nr <= ql or qr <= nl:\n            return -1\n        if ql <= nl and nr <= qr:\n            return self.tree[node]\n        nm = (nl + nr) // 2\n        return max(\n            self.ask(ql, qr, 2 * node, nl, nm),\n            self.ask(ql, qr, 2 * node + 1, nm, nr)\n        )\n\n\ndef getNumberKeks(a, b, c):\n    return c * math.log(b) * math.log(math.log(a)), pow(a, pow(b, c, 1_000_017_542), 1_000_017_542)\n\n\nn, k, q = map(int, input().split())\ninit_lst = []\nqueries = []\n\nfor i in range(n):\n    a, b, c = map(int, input().split())\n    log, mod = getNumberKeks(a, b, c)\n    init_lst.append((log, mod))\n    numbers.add(init_lst[-1])\n\nfor i in range(q):\n    qtype, *q = input().split()\n    if qtype == \"put\":\n        i, a, b, c = map(int, q)\n        log, mod = getNumberKeks(a, b, c)\n        numbers.add((log, mod))\n        queries.append((\"put\", i, (log, mod)))\n    else:\n        queries.append((\"best\", *map(int, q)))\n\n\nnumbers = sorted(list(numbers))\n# print(numbers)\nmp = {num: i for i, num in enumerate(numbers)}\n\ninit_lst = [mp[x] for x in init_lst]\nsegtree = SegTree(init_lst)\n\nfor t, a, b in queries:\n    if t == \"put\":\n        segtree.set(a - 1, mp[b])\n    else:\n        print(numbers[segtree.ask(a - 1, b)][-1])",
                "verdict": "Runtime Error"
            },
            {
                "code": "import math\n\nnumbers = set()\nsrt = None\n\n\nclass SegTree:\n    R: int = 1 << 17\n    tree: list\n\n    def __init__(self, lst):\n        self.tree = [-1] * (self.R << 1)\n        for node in range(self.R, len(lst) + self.R):\n            self.tree[node] = lst[node - self.R]\n        for node in range(self.R - 1, 0, -1):\n            self.tree[node] = max(self.tree[node * 2], self.tree[node * 2 + 1])\n\n    def set(self, pos: int, val: int):\n        node = pos + self.R\n        self.tree[node] = val\n        node //= 2\n        while node > 0:\n            self.tree[node] = max(self.tree[2 * node], self.tree[2 * node + 1])\n            node //= 2\n    \n    def ask(self, ql: int, qr: int, node: int = 1, nl: int = 0, nr: int = R):\n        if nr <= ql or qr <= nl:\n            return -1\n        if ql <= nl and nr <= qr:\n            return self.tree[node]\n        nm = (nl + nr) // 2\n        return max(\n            self.ask(ql, qr, 2 * node, nl, nm),\n            self.ask(ql, qr, 2 * node + 1, nm, nr)\n        )\n\n\ndef getNumberKeks(a, b, c):\n    return c * math.log(b) * math.log(math.log(a)), pow(a, pow(b, c, 1_000_017_542), 1_000_017_542)\n\n\nn, k, q = map(int, input().split())\ninit_lst = []\nqueries = []\n\nfor i in range(n):\n    a, b, c = map(int, input().split())\n    log, mod = getNumberKeks(a, b, c)\n    init_lst.append((log, mod))\n    numbers.add(init_lst[-1])\n\nfor i in range(q):\n    qtype, *q = input().split()\n    if qtype == \"put\":\n        i, a, b, c = map(int, q)\n        log, mod = getNumberKeks(a, b, c)\n        numbers.add((log, mod))\n        queries.append((\"put\", i, (log, mod)))\n    else:\n        queries.append((\"best\", *map(int, q)))\n\n\nnumbers = sorted(list(numbers))\n# print(numbers)\nmp = {num: i for i, num in enumerate(numbers)}\n\ninit_lst = [mp[x] for x in init_lst]\nsegtree = SegTree(init_lst)\n\nfor t, a, b in queries:\n    if t == \"put\":\n        segtree.set(a - 1, mp[b])\n    else:\n        print(numbers[segtree.ask(a - 1, b)][-1])",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n#define pb push_back\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define mp make_pair\r\n#define si short int\r\n#define speed ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0)\r\n#define pill pair<ll,ll>\r\n#define f first\r\n#define s second\r\n#define pilc pair<ll,char>\r\n#define all(a) (a).begin(),(a).end()\r\n#define rep(s,e,step) for(int i = (s); i < (e) ; i += step)\r\n#define vrep(s,e,step) for(int j = (s); j < (e) ; j += step)\r\n#define ex exit(0) \r\n#define triple pair<pill, ll>\r\n#define pinode pair<node*, node*>\r\n#define quadra pair<pill, pill>\r\n#define ld long double\r\nusing namespace std;\r\n    \r\nconst ll N = 1e5 + 11;\r\nconst ll M = 3e6 + 21;\r\nconst ll big = 1e17;\r\nconst ll hsh2 = 1964325029 ;\r\nconst long long mod = 1e9 + 17542;\r\nconst ld EPS = 1e-9;\r\nconst ll block = 100;\r\nconst ll shift = 2e3;\r\nconst double pi = acos(-1.0);\r\n   \r\n   \r\nmt19937_64 bruh(chrono::steady_clock::now().time_since_epoch().count());\r\n\r\nll n, k, q;\r\n\r\nll bp(ll a, ll b, ll c) {\r\n\tll d = 1ll;\r\n\twhile(b) {\r\n\t\tif(b&1)\r\n\t\t\td = d * a % c;\r\n\t\tb >>= 1ll;\r\n\t\ta = a * a % c;\r\n\t}\r\n\treturn d;\r\n}\r\n\r\n\r\nstruct seg {\r\n\tpair<ld, ll> t[4 * N];\r\n\tbool comp(ld a, ld b) {\r\n\t\tif(b - a > EPS)\r\n\t\t\treturn 1;\r\n\t\treturn 0;\r\n\t}\t\r\n\tvoid upd(ll p, ld z, ll v = 1, ll tl = 1, ll tr = n) {\r\n\t\tif(tl == tr) {\r\n\t\t\tt[v] = mp(z, p);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tll m = (tl + tr) >> 1ll;\r\n\t\tif(p <= m)upd(p, z, v * 2, tl, m);\r\n\t\telse upd(p, z, v * 2 + 1, m + 1, tr);\r\n\t\tt[v] = t[v * 2];\r\n\t\tif(comp(t[v * 2].f, t[v * 2 + 1].f))\r\n\t\t\tt[v] = t[v * 2 + 1];\r\n\t}\r\n\tpair<ld, ll> get(ll l, ll r, ll v = 1, ll tl = 1, ll tr = n) {\r\n\t\tif(l > tr || tl > r)\r\n\t\t\treturn mp(-1, 0);\r\n\t\tif(l <= tl && tr <= r) \r\n\t\t\treturn t[v];\r\n\t\tll m = (tl + tr) >> 1ll;\r\n\t\tpair<ld, ll> L = get(l, r, v * 2, tl, m);\r\n\t\tpair<ld, ll> R = get(l, r, v * 2 + 1, m + 1, tr);\r\n\t\tif(comp(L.f, R.f))\r\n\t\t\treturn R;\r\n\t\treturn L;\t\r\n\t}\r\n} rt;\r\n\r\nll a[N], b[N], c[N];\r\n\r\nint main() {                                                       \r\n    speed;\r\n\tcin >> n >> k >> q;\r\n\tfor(int i = 1; i <= n; i++) {\r\n\t\tcin >> a[i] >> b[i] >> c[i];\r\n\t\tld z = log(a[i]) + log(b[i]) * c[i];\r\n\t\trt.upd(i, z);\t\t\t\r\n\t}\r\n\twhile(q--) {\r\n\t\tstring xx;\r\n\t\tcin >> xx;\r\n\t\tif(xx == \"put\") {\r\n\t\t\tll i, x, y, z;\r\n\t\t\tcin >> i >> x >> y >> z;\r\n\t\t\ta[i] = x, b[i] = y, c[i] = z;\r\n\t\t\tld za = log(a[i]) + log(b[i]) * c[i];\r\n\t\t\trt.upd(i, za);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tll l, r;\r\n\t\t\tcin >> l >> r;\r\n\t\t\tll pos = rt.get(l, r).s;\r\n\t\t\tll h = bp(a[pos], bp(b[pos], c[pos], mod), mod);\r\n\t\t\tcout << h << '\\n';\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n/*\r\n*/",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n#define pb push_back\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define mp make_pair\r\n#define si short int\r\n#define speed ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0)\r\n#define pill pair<ll,ll>\r\n#define f first\r\n#define s second\r\n#define pilc pair<ll,char>\r\n#define all(a) (a).begin(),(a).end()\r\n#define rep(s,e,step) for(int i = (s); i < (e) ; i += step)\r\n#define vrep(s,e,step) for(int j = (s); j < (e) ; j += step)\r\n#define ex exit(0) \r\n#define triple pair<pill, ll>\r\n#define pinode pair<node*, node*>\r\n#define quadra pair<pill, pill>\r\n#define ld long double\r\nusing namespace std;\r\n    \r\nconst ll N = 1e5 + 11;\r\nconst ll M = 3e6 + 21;\r\nconst ll big = 1e17;\r\nconst ll hsh2 = 1964325029 ;\r\nconst long long mod = 1e9 + 17542;\r\nconst ld EPS = 1e-9;\r\nconst ll block = 100;\r\nconst ll shift = 2e3;\r\nconst double pi = acos(-1.0);\r\n   \r\n   \r\nmt19937_64 bruh(chrono::steady_clock::now().time_since_epoch().count());\r\n\r\nll n, k, q;\r\n\r\nll bp(ll a, ll b, ll c) {\r\n\tll d = 1ll;\r\n\twhile(b) {\r\n\t\tif(b&1)\r\n\t\t\td = d * a % c;\r\n\t\tb >>= 1ll;\r\n\t\ta = a * a % c;\r\n\t}\r\n\treturn d;\r\n}\r\n\r\n\r\nstruct seg {\r\n\tpair<ld, ll> t[4 * N];\r\n\tbool comp(ld a, ld b) {\r\n\t\tif(b - a > EPS)\r\n\t\t\treturn 1;\r\n\t\treturn 0;\r\n\t}\t\r\n\tvoid upd(ll p, ld z, ll v = 1, ll tl = 1, ll tr = n) {\r\n\t\tif(tl == tr) {\r\n\t\t\tt[v] = mp(z, p);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tll m = (tl + tr) >> 1ll;\r\n\t\tif(p <= m)upd(p, z, v * 2, tl, m);\r\n\t\telse upd(p, z, v * 2 + 1, m + 1, tr);\r\n\t\tt[v] = t[v * 2];\r\n\t\tif(comp(t[v * 2].f, t[v * 2 + 1].f))\r\n\t\t\tt[v] = t[v * 2 + 1];\r\n\t}\r\n\tpair<ld, ll> get(ll l, ll r, ll v = 1, ll tl = 1, ll tr = n) {\r\n\t\tif(l > tr || tl > r)\r\n\t\t\treturn mp(-1, 0);\r\n\t\tif(l <= tl && tr <= r) \r\n\t\t\treturn t[v];\r\n\t\tll m = (tl + tr) >> 1ll;\r\n\t\tpair<ld, ll> L = get(l, r, v * 2, tl, m);\r\n\t\tpair<ld, ll> R = get(l, r, v * 2 + 1, m + 1, tr);\r\n\t\tif(comp(L.f, R.f))\r\n\t\t\treturn R;\r\n\t\treturn L;\t\r\n\t}\r\n} rt;\r\n\r\nll a[N], b[N], c[N];\r\n\r\nint main() {                                                       \r\n    speed;\r\n\tcin >> n >> k >> q;\r\n\tfor(int i = 1; i <= n; i++) {\r\n\t\tcin >> a[i] >> b[i] >> c[i];\r\n\t\tld za = log(a[i]) * (ld)bp(b[i], c[i], (ll)1e18);\r\n\t\trt.upd(i, za);\t\t\t\r\n\t}\r\n\twhile(q--) {\r\n\t\tstring xx;\r\n\t\tcin >> xx;\r\n\t\tif(xx == \"put\") {\r\n\t\t\tll i, x, y, z;\r\n\t\t\tcin >> i >> x >> y >> z;\r\n\t\t\ta[i] = x, b[i] = y, c[i] = z;\r\n\t\t\tld za = log(a[i]) * (ld)bp(b[i], c[i], (ll)1e18);\r\n\t\t\trt.upd(i, za);\t\t\t\r\n\t\t}\r\n\t\telse {\r\n\t\t\tll l, r;\r\n\t\t\tcin >> l >> r;\r\n\t\t\tll pos = rt.get(l, r).s;\r\n\t\t\tll h = bp(a[pos], bp(b[pos], c[pos], mod), mod);\r\n\t\t\tcout << h << '\\n';\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n/*\r\n*/",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n#define pb push_back\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define mp make_pair\r\n#define si short int\r\n#define speed ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0)\r\n#define pill pair<ll,ll>\r\n#define f first\r\n#define s second\r\n#define pilc pair<ll,char>\r\n#define all(a) (a).begin(),(a).end()\r\n#define rep(s,e,step) for(int i = (s); i < (e) ; i += step)\r\n#define vrep(s,e,step) for(int j = (s); j < (e) ; j += step)\r\n#define ex exit(0) \r\n#define triple pair<pill, ll>\r\n#define pinode pair<node*, node*>\r\n#define quadra pair<pill, pill>\r\n#define ld long double\r\nusing namespace std;\r\n    \r\nconst ll N = 1e5 + 11;\r\nconst ll M = 3e6 + 21;\r\nconst ll big = 1e17;\r\nconst ll hsh2 = 1964325029 ;\r\nconst long long mod = 1e9 + 17542;\r\nconst ld EPS = 1e-9;\r\nconst ll block = 100;\r\nconst ll shift = 2e3;\r\nconst double pi = acos(-1.0);\r\n   \r\n   \r\nmt19937_64 bruh(chrono::steady_clock::now().time_since_epoch().count());\r\n\r\nll n, k, q;\r\n\r\nll bp(ll a, ll b, ll c) {\r\n\tll d = 1ll;\r\n\twhile(b) {\r\n\t\tif(b&1)\r\n\t\t\td = d * a % c;\r\n\t\tb >>= 1ll;\r\n\t\ta = a * a % c;\r\n\t}\r\n\treturn d;\r\n}\r\n\r\n\r\nstruct seg {\r\n\tpair<ld, ll> t[4 * N];\r\n\tbool comp(ld a, ld b) {\r\n\t\tif(b - a > EPS)\r\n\t\t\treturn 1;\r\n\t\treturn 0;\r\n\t}\t\r\n\tvoid upd(ll p, ld z, ll v = 1, ll tl = 1, ll tr = n) {\r\n\t\tif(tl == tr) {\r\n\t\t\tt[v] = mp(z, p);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tll m = (tl + tr) >> 1ll;\r\n\t\tif(p <= m)upd(p, z, v * 2, tl, m);\r\n\t\telse upd(p, z, v * 2 + 1, m + 1, tr);\r\n\t\tt[v] = t[v * 2];\r\n\t\tif(comp(t[v * 2].f, t[v * 2 + 1].f))\r\n\t\t\tt[v] = t[v * 2 + 1];\r\n\t}\r\n\tpair<ld, ll> get(ll l, ll r, ll v = 1, ll tl = 1, ll tr = n) {\r\n\t\tif(l > tr || tl > r)\r\n\t\t\treturn mp(-1, 0);\r\n\t\tif(l <= tl && tr <= r) \r\n\t\t\treturn t[v];\r\n\t\tll m = (tl + tr) >> 1ll;\r\n\t\tpair<ld, ll> L = get(l, r, v * 2, tl, m);\r\n\t\tpair<ld, ll> R = get(l, r, v * 2 + 1, m + 1, tr);\r\n\t\tif(comp(L.f, R.f))\r\n\t\t\treturn R;\r\n\t\treturn L;\t\r\n\t}\r\n} rt;\r\n\r\nll a[N], b[N], c[N];\r\n\r\nint main() {                                                       \r\n    speed;\r\n\tcin >> n >> k >> q;\r\n\tfor(int i = 1; i <= n; i++) {\r\n\t\tcin >> a[i] >> b[i] >> c[i];\r\n\t\tld za = log(a[i]) * (ld)bp(b[i], c[i], (ll)1e18);\r\n\t\trt.upd(i, za);\t\t\t\r\n\t}\r\n\twhile(q--) {\r\n\t\tstring xx;\r\n\t\tcin >> xx;\r\n\t\tif(xx == \"put\") {\r\n\t\t\tll i, x, y, z;\r\n\t\t\tcin >> i >> x >> y >> z;\r\n\t\t\ta[i] = x, b[i] = y, c[i] = z;\r\n\t\t\tld za = log(a[i]) * (ld)bp(b[i], c[i], (ll)1e18);\r\n\t\t\trt.upd(i, za);\t\t\t\r\n\t\t}\r\n\t\telse {\r\n\t\t\tll l, r;\r\n\t\t\tcin >> l >> r;\r\n\t\t\tll pos = rt.get(l, r).s;\r\n\t\t\tll h = bp(a[pos], bp(b[pos], c[pos], 500008770), mod);\r\n\t\t\tcout << h << '\\n';\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n/*\r\n*/",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n#define pb push_back\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define mp make_pair\r\n#define si short int\r\n#define speed ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0)\r\n#define pill pair<ll,ll>\r\n#define f first\r\n#define s second\r\n#define pilc pair<ll,char>\r\n#define all(a) (a).begin(),(a).end()\r\n#define rep(s,e,step) for(int i = (s); i < (e) ; i += step)\r\n#define vrep(s,e,step) for(int j = (s); j < (e) ; j += step)\r\n#define ex exit(0) \r\n#define triple pair<pill, ll>\r\n#define pinode pair<node*, node*>\r\n#define quadra pair<pill, pill>\r\n#define ld long double\r\nusing namespace std;\r\n    \r\nconst ll N = 1e5 + 11;\r\nconst ll M = 3e6 + 21;\r\nconst ll big = 1e17;\r\nconst ll hsh2 = 1964325029 ;\r\nconst long long mod = 1e9 + 17542;\r\nconst ld EPS = 1e-9;\r\nconst ll block = 100;\r\nconst ll shift = 2e3;\r\nconst double pi = acos(-1.0);\r\n   \r\n   \r\nmt19937_64 bruh(chrono::steady_clock::now().time_since_epoch().count());\r\n\r\nll n, k, q;\r\n\r\nll bp(ll a, ll b, ll c) {\r\n\tll d = 1ll;\r\n\twhile(b) {\r\n\t\tif(b&1)\r\n\t\t\td = d * a % c;\r\n\t\tb >>= 1ll;\r\n\t\ta = a * a % c;\r\n\t}\r\n\treturn d;\r\n}\r\n\r\n\r\nstruct seg {\r\n\tpair<ld, ll> t[4 * N];\r\n\tbool comp(ld a, ld b) {\r\n\t\tif(b - a > EPS)\r\n\t\t\treturn 1;\r\n\t\treturn 0;\r\n\t}\t\r\n\tvoid upd(ll p, ld z, ll v = 1, ll tl = 1, ll tr = n) {\r\n\t\tif(tl == tr) {\r\n\t\t\tt[v] = mp(z, p);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tll m = (tl + tr) >> 1ll;\r\n\t\tif(p <= m)upd(p, z, v * 2, tl, m);\r\n\t\telse upd(p, z, v * 2 + 1, m + 1, tr);\r\n\t\tt[v] = t[v * 2];\r\n\t\tif(comp(t[v * 2].f, t[v * 2 + 1].f))\r\n\t\t\tt[v] = t[v * 2 + 1];\r\n\t}\r\n\tpair<ld, ll> get(ll l, ll r, ll v = 1, ll tl = 1, ll tr = n) {\r\n\t\tif(l > tr || tl > r)\r\n\t\t\treturn mp(-1, 0);\r\n\t\tif(l <= tl && tr <= r) \r\n\t\t\treturn t[v];\r\n\t\tll m = (tl + tr) >> 1ll;\r\n\t\tpair<ld, ll> L = get(l, r, v * 2, tl, m);\r\n\t\tpair<ld, ll> R = get(l, r, v * 2 + 1, m + 1, tr);\r\n\t\tif(comp(L.f, R.f))\r\n\t\t\treturn R;\r\n\t\treturn L;\t\r\n\t}\r\n} rt;\r\n\r\nll a[N], b[N], c[N];\r\n\r\nint main() {                                                       \r\n    speed;\r\n\tcin >> n >> k >> q;\r\n\tfor(int i = 1; i <= n; i++) {\r\n\t\tcin >> a[i] >> b[i] >> c[i];\r\n\t\tld z = log(a[i]) * log(b[i]) * c[i];\r\n\t\trt.upd(i, z);\t\t\t\r\n\t}\r\n\twhile(q--) {\r\n\t\tstring xx;\r\n\t\tcin >> xx;\r\n\t\tif(xx == \"put\") {\r\n\t\t\tll i, x, y, z;\r\n\t\t\tcin >> i >> x >> y >> z;\r\n\t\t\ta[i] = x, b[i] = y, c[i] = z;\r\n\t\t\tld za = log(a[i]) * log(b[i]) * c[i];\r\n\t\t\trt.upd(i, za);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tll l, r;\r\n\t\t\tcin >> l >> r;\r\n\t\t\tll pos = rt.get(l, r).s;\r\n\t\t\tll h = bp(a[pos], bp(b[pos], c[pos], 500008770), mod);\r\n\t\t\tcout << h << '\\n';\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n/*\r\n*/",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n#define pb push_back\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define mp make_pair\r\n#define si short int\r\n#define speed ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0)\r\n#define pill pair<ll,ll>\r\n#define f first\r\n#define s second\r\n#define pilc pair<ll,char>\r\n#define all(a) (a).begin(),(a).end()\r\n#define rep(s,e,step) for(int i = (s); i < (e) ; i += step)\r\n#define vrep(s,e,step) for(int j = (s); j < (e) ; j += step)\r\n#define ex exit(0) \r\n#define triple pair<pill, ll>\r\n#define pinode pair<node*, node*>\r\n#define quadra pair<pill, pill>\r\n#define ld long double\r\nusing namespace std;\r\n    \r\nconst ll N = 1e5 + 11;\r\nconst ll M = 3e6 + 21;\r\nconst ll big = 1e17;\r\nconst ll hsh2 = 1964325029 ;\r\nconst long long mod = 1e9 + 17542;\r\nconst ld EPS = 1e-9;\r\nconst ll block = 100;\r\nconst ll shift = 2e3;\r\nconst double pi = acos(-1.0);\r\n   \r\n   \r\nmt19937_64 bruh(chrono::steady_clock::now().time_since_epoch().count());\r\n\r\nll n, k, q;\r\n\r\nll bp(ll a, ll b) {\r\n\tll d = 1ll;\r\n\twhile(b) {\r\n\t\tif(b&1)\r\n\t\t\td = d * a % mod;\r\n\t\tb >>= 1ll;\r\n\t\ta = a * a % mod;\r\n\t}\r\n\treturn d;\r\n}\r\n\r\n\r\nstruct seg {\r\n\tpair<ld, ll> t[4 * N];\r\n\tbool comp(ld a, ld b) {\r\n\t\tif(b - a > EPS)\r\n\t\t\treturn 1;\r\n\t\treturn 0;\r\n\t}\t\r\n\tvoid upd(ll p, ld z, ll v = 1, ll tl = 1, ll tr = n) {\r\n\t\tif(tl == tr) {\r\n\t\t\tt[v] = mp(z, p);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tll m = (tl + tr) >> 1ll;\r\n\t\tif(p <= m)upd(p, z, v * 2, tl, m);\r\n\t\telse upd(p, z, v * 2 + 1, m + 1, tr);\r\n\t\tt[v] = t[v * 2];\r\n\t\tif(comp(t[v * 2].f, t[v * 2 + 1].f))\r\n\t\t\tt[v] = t[v * 2 + 1];\r\n\t}\r\n\tpair<ld, ll> get(ll l, ll r, ll v = 1, ll tl = 1, ll tr = n) {\r\n\t\tif(l > tr || tl > r)\r\n\t\t\treturn mp(-1, 0);\r\n\t\tif(l <= tl && tr <= r) \r\n\t\t\treturn t[v];\r\n\t\tll m = (tl + tr) >> 1ll;\r\n\t\tpair<ld, ll> L = get(l, r, v * 2, tl, m);\r\n\t\tpair<ld, ll> R = get(l, r, v * 2 + 1, m + 1, tr);\r\n\t\tif(comp(L.f, R.f))\r\n\t\t\treturn R;\r\n\t\treturn L;\t\r\n\t}\r\n} rt;\r\n\r\nll a[N], b[N], c[N];\r\n\r\nint main() {                                                       \r\n    speed;\r\n\tcin >> n >> k >> q;\r\n\tfor(int i = 1; i <= n; i++) {\r\n\t\tcin >> a[i] >> b[i] >> c[i];\r\n\t\tld z = log(a[i]) * log(b[i]) * c[i];\r\n\t\trt.upd(i, z);\t\t\t\r\n\t}\r\n\twhile(q--) {\r\n\t\tstring xx;\r\n\t\tcin >> xx;\r\n\t\tif(xx == \"put\") {\r\n\t\t\tll i, x, y, z;\r\n\t\t\tcin >> i >> x >> y >> z;\r\n\t\t\ta[i] = x, b[i] = y, c[i] = z;\r\n\t\t\tld za = log(a[i]) * log(b[i]) * c[i];\r\n\t\t\trt.upd(i, za);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tll l, r;\r\n\t\t\tcin >> l >> r;\r\n\t\t\tll pos = rt.get(l, r).s;\r\n\t\t\tll h = bp(a[pos], bp(b[pos], c[pos]));\r\n\t\t\tcout << h << '\\n';\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n/*\r\n*/",
                "verdict": "Runtime Error"
            },
            {
                "code": "mod = 1000017542\n\ndef f(a, b):\n\tif b == 0:\n\t\treturn 1\n\tif b % 2 == 0:\n\t\treturn f(a ** 2, b // 2)\n\treturn a * f(a, b - 1)\n\nn, k, q = map(int, input().split())\nv = []\nfor _ in range(n):\n\ta, b, c = map(int, input().split())\n\tv.append(f(a, f(b, c)))\nfor _ in range(q):\n\ts = input()\n\tif (s[0] == 'p'):\n\t\ts, a, b, c, d = s.split()\n\t\ta = int(a)\n\t\tb = int(b)\n\t\tc = int(c)\n\t\td = int(d)\n\t\tv[a - 1] = f(b, f(c, d))\n\telse:\n\t\ts, a, b = s.split()\n\t\ta = int(a)\n\t\tb = int(b)\n\t\tans = 0\n\t\tfor i in range(a - 1, b):\n\t\t\tans = max(ans, v[i])\n\t\tprint(ans % mod)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "mod = 1000017542\n\ndef f(a, b):\n\tif b == 0:\n\t\treturn 1\n\tif b % 2 == 0:\n\t\treturn f(a ** 2, b // 2)\n\treturn a * f(a, b - 1)\n\nn, k, q = map(int, input().split())\nv = []\nfor _ in range(n):\n\ta, b, c = map(int, input().split())\n\tv.append(f(a, f(b, c)))\nfor _ in range(q):\n\ts = input()\n\tif (s[0] == 'p'):\n\t\ts, a, b, c, d = s.split()\n\t\ta = int(a)\n\t\tb = int(b)\n\t\tc = int(c)\n\t\td = int(d)\n\t\tv[a - 1] = f(b, f(c, d))\n\telse:\n\t\ts, a, b = s.split()\n\t\ta = int(a)\n\t\tb = int(b)\n\t\tans = 0\n\t\tfor i in range(a - 1, b):\n\t\t\tans = max(ans, v[i])\n\t\tprint(ans % mod)\nprint(v[3], v[4])",
                "verdict": "Wrong Answer"
            },
            {
                "code": "mod = 1000017542\n\ndef f(a, b):\n\tif b == 0:\n\t\treturn 1\n\tif b % 2 == 0:\n\t\treturn f(a ** 2, b // 2)\n\treturn a * f(a, b - 1)\n\nn, k, q = map(int, input().split())\nv = []\nfor _ in range(n):\n\ta, b, c = map(int, input().split())\n\tv.append(f(a, f(b, c)))\nfor _ in range(q):\n\ts = input()\n\tif (s[0] == 'p'):\n\t\ts, a, b, c, d = s.split()\n\t\ta = int(a)\n\t\tb = int(b)\n\t\tc = int(c)\n\t\td = int(d)\n\t\tv.insert(a - 1, f(b, f(c, d)))\n\telse:\n\t\ts, a, b = s.split()\n\t\ta = int(a)\n\t\tb = int(b)\n\t\tans = 0\n\t\tfor i in range(a - 1, b):\n\t\t\tans = max(ans, v[i])\n\t\tprint(ans % mod)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "mod = 1000017542\n\ndef f(a, b):\n\tif b == 0:\n\t\treturn 1\n\tif b % 2 == 0:\n\t\treturn f(a ** 2, b // 2)\n\treturn a * f(a, b - 1)\n\nn, k, q = map(int, input().split())\nv = []\nfor _ in range(n):\n\ta, b, c = map(int, input().split())\n\tv.append(f(a, f(b, c)))\nfor _ in range(q):\n\ts = input()\n\tif (s[0] == 'p'):\n\t\ts, a, b, c, d = s.split()\n\t\ta = int(a)\n\t\tb = int(b)\n\t\tc = int(c)\n\t\td = int(d)\n\t\tv.insert(a, f(b, f(c, d)))\n\telse:\n\t\ts, a, b = s.split()\n\t\ta = int(a)\n\t\tb = int(b)\n\t\tans = 0\n\t\tfor i in range(a - 1, b):\n\t\t\tans = max(ans, v[i])\n\t\tprint(ans % mod)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "//#pragma GCC optimize(\"Ofast,unroll-loops\")\r\n//#pragma GCC target(\"arch=skylake\")\r\n#include <iostream>\r\n#include <map>\r\n#include <cmath>\r\n#include <queue>\r\n#include <random>\r\n#include <set>\r\n#include <vector>\r\n#include <cassert>\r\n#include <numeric>\r\n#include <iomanip>\r\n#include <algorithm>\r\n#include <cstring>\r\n#include <functional>\r\n#include <chrono>\r\n\r\n#define int long long\r\n#define ll long long\r\n#define ld long double\r\n#define INF (int) 1e18 / 2\r\n#define pb push_back\r\n#define PI 3.14159265358979323846\r\n#define forn(i, n) for (int i = 1; i <= n; i++)\r\n#define all(a) (a).begin(), (a).end()\r\n\r\nusing namespace std;\r\n\r\nmt19937 gen(55);\r\n\r\nconst int N = 1e5 + 5, mod = 1e9 + 17542;\r\n\r\nint n, k, q, a[N], b[N], c[N], t[4 * N];\r\nint fac[N], rfac[N], pw[N];\r\n\r\nint binpow(int v, int p) {\r\n\tint res = 1;\r\n\twhile (p) {\r\n\t\tif (p & 1)\r\n\t\t\tres = res * v % mod;\r\n\t\tv = v * v % mod;\r\n\t\tp >>= 1;\r\n\t}\r\n\treturn res;\r\n}\r\n\r\nint bp(int v, int p) {\r\n\tint res = 1;\r\n\twhile (p) {\r\n\t\tif (p & 1)\r\n\t\t\tres = res * v;\r\n\t\tv = v * v;\r\n\t\tp >>= 1;\r\n\t}\r\n\treturn res;\r\n}\r\n\r\nvoid upd(int i, int na, int nb, int nc, int x, int lx, int rx) {\r\n\tif (lx + 1 == rx) {\r\n\t\ta[i] = na, b[i] = nb, c[i] = nc;\r\n\t\tt[x] = bp(a[i], bp(b[i], c[i]));\r\n\t\treturn;\r\n\t}\r\n\tint m = (lx + rx) / 2;\r\n\tif (i < m) upd(i, na, nb, nc, 2 * x, lx, m);\r\n\telse upd(i, na, nb, nc, 2 * x + 1, m, rx);\r\n\tt[x] = max(t[2 * x], t[2 * x + 1]);\r\n}\r\n\r\nint get(int l, int r, int x, int lx, int rx) {\r\n\tif (rx <= l || r <= lx) {\r\n\t\treturn -1;\r\n\t}\r\n\tif (l <= lx && rx <= r) {\r\n\t\treturn t[x];\r\n\t}\r\n\tint m = (lx + rx) / 2;\r\n\treturn max(get(l, r, 2 * x, lx, m), get(l, r, 2 * x + 1, m, rx));\r\n}\r\n\r\nsigned main() {\r\n\tcout << setprecision(12) << fixed;\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(nullptr);\r\n\tcout.tie(nullptr);\r\n\t\r\n\tcin >> n >> k >> q;\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\tcin >> a[i] >> b[i] >> c[i];\r\n\t\tupd(i, a[i], b[i], c[i], 1, 1, n + 1);\r\n\t}\r\n\twhile (q--) {\r\n\t\tstring op;\r\n\t\tcin >> op;\r\n\t\tif (op[0] == 'p') {\r\n\t\t\tint i, na, nb, nc;\r\n\t\t\tcin >> i >> na >> nb >> nc;\r\n\t\t\tupd(i, na, nb, nc, 1, 1, n + 1);\r\n\t\t} else {\r\n\t\t\tint l, r;\r\n\t\t\tcin >> l >> r;\r\n\t\t\tcout << get(l, r + 1, 1, 1, n + 1) % mod << '\\n';\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/*\r\n     \u2584\u2580\u2580\u2580\u2584\r\n\u2584\u2588\u2588\u2588\u2580\u2591\u25d0\u2591\u2591\u2591\u258c\r\n    \u258c\u2591\u2591\u2591\u2591\u2591\u2590\r\n    \u2590\u2591\u2591\u2591\u2591\u2591\u2590\r\n    \u258c\u2591\u2591\u2591\u2591\u2591\u2590\u2584\u2584\r\n    \u258c\u2591\u2591\u2591\u2591\u2584\u2580\u2592\u2592\u2580\u2580\u2580\u2580\u2584\r\n   \u2590\u2591\u2591\u2591\u2591\u2590\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2580\u2580\u2584\r\n   \u2590\u2591\u2591\u2591\u2591\u2590\u2584\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2580\u2584\r\n    \u2580\u2584\u2591\u2591\u2591\u2591\u2580\u2584\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2580\u2584\r\n      \u2580\u2584\u2584\u2584\u2584\u2584\u2588\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2580\u2584\r\n           \u258c\u258c\u2591\u258c\u258c\r\n           \u258c\u258c\u2591\u258c\u258c\r\n         \u2584\u2584\u258c\u258c\u2584\u258c\u258c        */\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "//#pragma GCC optimize(\"Ofast,unroll-loops\")\r\n//#pragma GCC target(\"arch=skylake\")\r\n#include <iostream>\r\n#include <map>\r\n#include <cmath>\r\n#include <queue>\r\n#include <random>\r\n#include <set>\r\n#include <vector>\r\n#include <cassert>\r\n#include <numeric>\r\n#include <iomanip>\r\n#include <algorithm>\r\n#include <cstring>\r\n#include <functional>\r\n#include <chrono>\r\n\r\n#define int long long\r\n#define ll long long\r\n#define ld long double\r\n#define INF (int) 1e18 / 2\r\n#define pb push_back\r\n#define PI 3.14159265358979323846\r\n#define forn(i, n) for (int i = 1; i <= n; i++)\r\n#define all(a) (a).begin(), (a).end()\r\n\r\nusing namespace std;\r\n\r\nmt19937 gen(55);\r\n\r\nconst int N = 1e5 + 5, mod = 1e9 + 17542;\r\n\r\nint n, k, q, a[N], b[N], c[N], t[4 * N];\r\nint fac[N], rfac[N], pw[N];\r\n\r\nint binpow(int v, int p) {\r\n\tint res = 1;\r\n\twhile (p) {\r\n\t\tif (p & 1)\r\n\t\t\tres = res * v % mod;\r\n\t\tv = v * v % mod;\r\n\t\tp >>= 1;\r\n\t}\r\n\treturn res;\r\n}\r\n\r\nint bp(int v, int p) {\r\n\tint res = 1;\r\n\twhile (p) {\r\n\t\tif (p & 1)\r\n\t\t\tres = res * v;\r\n\t\tv = v * v;\r\n\t\tp >>= 1;\r\n\t}\r\n\treturn res;\r\n}\r\n\r\nvoid upd(int i, int na, int nb, int nc, int x, int lx, int rx) {\r\n\tif (lx + 1 == rx) {\r\n\t\ta[i] = na, b[i] = nb, c[i] = nc;\r\n\t\tt[x] = bp(a[i], bp(b[i], c[i]));\r\n\t\treturn;\r\n\t}\r\n\tint m = (lx + rx) / 2;\r\n\tif (i < m) upd(i, na, nb, nc, 2 * x, lx, m);\r\n\telse upd(i, na, nb, nc, 2 * x + 1, m, rx);\r\n\tt[x] = max(t[2 * x], t[2 * x + 1]);\r\n}\r\n\r\nint get(int l, int r, int x, int lx, int rx) {\r\n\tif (rx <= l || r <= lx) {\r\n\t\treturn -1;\r\n\t}\r\n\tif (l <= lx && rx <= r) {\r\n\t\treturn t[x];\r\n\t}\r\n\tint m = (lx + rx) / 2;\r\n\treturn max(get(l, r, 2 * x, lx, m), get(l, r, 2 * x + 1, m, rx));\r\n}\r\n\r\nsigned main() {\r\n\tcout << setprecision(12) << fixed;\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(nullptr);\r\n\tcout.tie(nullptr);\r\n\t\r\n\tcin >> n >> k >> q;\r\n\tfor (int i = 1; i <= n; i++) {\r\n\t\tcin >> a[i] >> b[i] >> c[i];\r\n\t\tupd(i, a[i], b[i], c[i], 1, 1, n + 1);\r\n\t}\r\n\twhile (q--) {\r\n\t\tstring op;\r\n\t\tcin >> op;\r\n\t\tif (op[0] == 'p') {\r\n\t\t\tint i, na, nb, nc;\r\n\t\t\tcin >> i >> na >> nb >> nc;\r\n\t\t\tupd(i, na, nb, nc, 1, 1, n + 1);\r\n\t\t} else {\r\n\t\t\tint l, r;\r\n\t\t\tcin >> l >> r;\r\n\t\t\tcout << get(l, r + 1, 1, 1, n + 1) % mod << '\\n';\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n/*\r\n     \u2584\u2580\u2580\u2580\u2584\r\n\u2584\u2588\u2588\u2588\u2580\u2591\u25d0\u2591\u2591\u2591\u258c\r\n    \u258c\u2591\u2591\u2591\u2591\u2591\u2590\r\n    \u2590\u2591\u2591\u2591\u2591\u2591\u2590\r\n    \u258c\u2591\u2591\u2591\u2591\u2591\u2590\u2584\u2584\r\n    \u258c\u2591\u2591\u2591\u2591\u2584\u2580\u2592\u2592\u2580\u2580\u2580\u2580\u2584\r\n   \u2590\u2591\u2591\u2591\u2591\u2590\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2580\u2580\u2584\r\n   \u2590\u2591\u2591\u2591\u2591\u2590\u2584\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2580\u2584\r\n    \u2580\u2584\u2591\u2591\u2591\u2591\u2580\u2584\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2580\u2584\r\n      \u2580\u2584\u2584\u2584\u2584\u2584\u2588\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2580\u2584\r\n           \u258c\u258c\u2591\u258c\u258c\r\n           \u258c\u258c\u2591\u258c\u258c\r\n         \u2584\u2584\u258c\u258c\u2584\u258c\u258c        */\r\n",
                "verdict": "Pending"
            }
        ]
    },
    {
        "task_id": 26,
        "description": "\u0423\u043d\u0438\u0432\u0435\u0440\u0441\u0442\u0438\u0442\u0435\u0442 \u0413\u043e\u0440\u043e\u0434\u0441\u043a\u043e\u0433\u043e \u041f\u043b\u0430\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0423\u0440\u0431\u0430\u043d\u0438\u0441\u0442\u0438\u043a\u0438 \u0440\u0435\u0448\u0438\u043b \u043e\u0442\u043a\u0440\u044b\u0442\u044c \u0444\u0438\u043b\u0438\u0430\u043b \u0432 \u0421\u043e\u0440\u0442\u043c\u0438\u044f\u0440\u0441\u043a\u0435 - \u0435\u0449\u0451 \u0431\u044b, \u0432\u0435\u0434\u044c \u0432 \u0433\u043e\u0440\u043e\u0434\u0435 \u0446\u0435\u043b\u044b\u0445 $n$ \u0437\u0434\u0430\u043d\u0438\u0439, \u0441\u043e\u0435\u0434\u0438\u043d\u0451\u043d\u043d\u044b\u0445 $n - 1$ \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044c\u043d\u044b\u043c\u0438 \u0434\u043e\u0440\u043e\u0433\u0430\u043c\u0438, \u0438 \u0434\u0430\u043b\u0435\u043a\u043e \u043d\u0435 \u0432\u0434\u043e\u043b\u044c \u043a\u0430\u0436\u0434\u043e\u0439 \u0438\u0437 \u043d\u0438\u0445 \u043f\u0440\u043e\u043b\u043e\u0436\u0435\u043d\u044b \u0432\u0435\u043b\u043e\u0434\u043e\u0440\u043e\u0436\u043a\u0438! \u041d\u0443\u0436\u043d\u043e \u0438\u0441\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u0441\u0438\u0442\u0443\u0430\u0446\u0438\u044e!\n    \n\u0410 \u043f\u043e\u043a\u0430 \u0447\u0442\u043e \u043d\u0443\u0436\u043d\u043e \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0434\u0432\u0430 \u0437\u0434\u0430\u043d\u0438\u044f - \u043e\u0431\u0449\u0430\u0433\u0443 \u0438 \u0437\u0434\u0430\u043d\u0438\u0435 \u0443\u043d\u0438\u0432\u0435\u0440\u0441\u0438\u0442\u0435\u0442\u0430. \u041f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e \u043a\u0430\u0436\u0434\u044b\u0439 \u0434\u0435\u043d\u044c \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0435\u0437\u0434\u0438\u0442\u044c \u043d\u0430 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u0431\u0443\u0441\u0435 \u043e\u0442 \u043e\u0431\u0449\u0430\u0433\u0438 \u0434\u043e \u0443\u043d\u0438\u0432\u0435\u0440\u0441\u0438\u0442\u0435\u0442\u0430. \u041a\u043e\u0433\u0434\u0430 \u043e\u043d\u0438 \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0432 \u043f\u0443\u0442\u044c, \u0438\u0445 \u0430\u043f\u0430\u0442\u0438\u044f \u0440\u0430\u0432\u043d\u0430 $0$. \u041d\u043e \u043a\u043e\u0433\u0434\u0430 \u043f\u043e \u043f\u0443\u0442\u0438 \u0438\u043c \u043f\u043e\u043f\u0430\u0434\u0430\u0435\u0442\u0441\u044f \u0434\u043e\u0440\u043e\u0433\u0430 \u0431\u0435\u0437 \u0432\u0435\u043b\u043e\u0434\u043e\u0440\u043e\u0436\u0435\u043a, \u043e\u043d\u0438 \u043d\u0430\u0447\u0438\u043d\u0430\u044e\u0442 \u043f\u0430\u043d\u0438\u043a\u043e\u0432\u0430\u0442\u044c, \u043f\u043e\u0441\u043b\u0435 \u0447\u0435\u0433\u043e \u0438\u0445 \u0430\u043f\u0430\u0442\u0438\u044f \u043f\u043e\u0432\u044b\u0448\u0430\u0435\u0442\u0441\u044f \u043d\u0430 $1$ \u043d\u0430 \u0432\u0435\u0441\u044c \u043e\u0441\u0442\u0430\u0432\u0448\u0438\u0439\u0441\u044f \u0434\u0435\u043d\u044c. \u0422\u043e\u0447\u043a\u043e\u0439 \u043d\u0435\u0432\u043e\u0437\u0432\u0440\u0430\u0442\u0430 \u0441\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f \u0430\u043f\u0430\u0442\u0438\u044f, \u0440\u0430\u0432\u043d\u0430\u044f $k$ - \u0435\u0441\u043b\u0438 \u0430\u043f\u0430\u0442\u0438\u044f \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u043e\u0432 \u043f\u0440\u0435\u0432\u044b\u0441\u0438\u043b\u0430 \u044d\u0442\u043e\u0442 \u0443\u0440\u043e\u0432\u0435\u043d\u044c, \u0442\u043e \u0441\u0435\u0433\u043e\u0434\u043d\u044f \u043e\u043d\u0438 \u0443\u0436\u0435 \u043d\u0435 \u0441\u043c\u043e\u0433\u0443\u0442 \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e \u0443\u0447\u0438\u0442\u044c\u0441\u044f.\n\n\u041f\u043e\u043c\u043e\u0433\u0438\u0442\u0435 \u0434\u0435\u043a\u0430\u043d\u0430\u0442\u0443 \u043f\u043e\u043d\u044f\u0442\u044c, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0443 \u043d\u0438\u0445 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432 \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0437\u0434\u0430\u043d\u0438\u044f \u043e\u0431\u0449\u0430\u0433\u0438 \u0438 \u0443\u043d\u0438\u0432\u0435\u0440\u0441\u0438\u0442\u0435\u0442\u0430 \u0442\u0430\u043a, \u0447\u0442\u043e\u0431\u044b \u043f\u043e \u0434\u043e\u0440\u043e\u0433\u0435 \u0438\u0437 \u043e\u0431\u0449\u0430\u0433\u0438 \u0432 \u0443\u043d\u0438\u0432\u0435\u0440\u0441\u0438\u0442\u0435\u0442 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0430\u043f\u0430\u0442\u0438\u0438 \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u043e\u0432 \u043d\u0435 \u043f\u0440\u0435\u0432\u044b\u0441\u0438\u043b $k$. \u041f\u043e \u0432\u0441\u0435\u043c \u0434\u043e\u0440\u043e\u0433\u0430\u043c \u0432 \u0421\u043e\u0440\u0442\u043c\u0438\u044f\u0440\u0441\u043a\u0435 \u043c\u043e\u0436\u043d\u043e \u0435\u0445\u0430\u0442\u044c \u0432 \u043b\u044e\u0431\u043e\u043c \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0438, \u043c\u0435\u0436\u0434\u0443 \u043b\u044e\u0431\u044b\u043c\u0438 \u0434\u0432\u0443\u043c\u044f \u0437\u0434\u0430\u043d\u0438\u044f\u043c\u0438 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u043f\u0443\u0442\u044c, \u0432\u0441\u0435 \u0434\u043b\u0438\u043d\u044b \u0434\u043e\u0440\u043e\u0433 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0435, \u0430 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u0431\u0443\u0441 \u0441\u043e \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u0430\u043c\u0438 \u0435\u0434\u0435\u0442 \u043f\u043e \u043a\u0440\u0430\u0442\u0447\u0430\u0439\u0448\u0435\u043c\u0443 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u043c\u0443 \u043f\u0443\u0442\u0438.\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0447\u0438\u0441\u043b\u0430 $n$ \u0438 $k$ ($1 \\le n \\le 10^5$, $1 \\le k \\le 2^{15}$) - \u0447\u0438\u0441\u043b\u043e \u0437\u0434\u0430\u043d\u0438\u0439 \u0432 \u0421\u043e\u0440\u0442\u043c\u0438\u044f\u0440\u0441\u043a\u0435 \u0438 \u0442\u043e\u0447\u043a\u0430 \u043d\u0435\u0432\u043e\u0437\u0432\u0440\u0430\u0442\u0430 \u0430\u043f\u0430\u0442\u0438\u0438.\n    \n\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 $n - 1$ \u0441\u0442\u0440\u043e\u043a\u0430\u0445 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0447\u0438\u0441\u043b\u0430 $u_i$, $v_i$ \u0438 $b_i$ ($1 \\le u_i$, $v_i \\le n, u \\ne v$, $0 \\le b \\le 1$), \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0437\u043d\u0430\u0447\u0430\u044e\u0442 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u043e\u0440\u043e\u0433\u0438 \u0438\u0437 \u0437\u0434\u0430\u043d\u0438\u044f $u_i$ \u0432 \u0437\u0434\u0430\u043d\u0438\u0435 $v_i$. \u0415\u0441\u043b\u0438 $b_i = 0$, \u0442\u043e \u0432\u0434\u043e\u043b\u044c \u044d\u0442\u043e\u0439 \u0434\u043e\u0440\u043e\u0433\u0438 \u043f\u0440\u043e\u043b\u043e\u0436\u0435\u043d\u0430 \u0432\u0435\u043b\u043e\u0434\u043e\u0440\u043e\u0436\u043a\u0430.\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u043f\u043e\u0441\u043e\u0431\u043e\u0432 \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0437\u0434\u0430\u043d\u0438\u0435 \u043e\u0431\u0449\u0430\u0433\u0438 \u0438 \u0443\u043d\u0438\u0432\u0435\u0440\u0441\u0438\u0442\u0435\u0442\u0430, \u0447\u0442\u043e\u0431\u044b \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0430\u043f\u0430\u0442\u0438\u0438 \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u043e\u0432 \u043d\u0435 \u043f\u0440\u0435\u0432\u044b\u0441\u0438\u043b $k$ \u043f\u043e \u0434\u043e\u0440\u043e\u0433\u0435 \u0438\u0437 \u043e\u0431\u0449\u0430\u0433\u0438 \u0432 \u0443\u043d\u0438\u0432\u0435\u0440\u0441\u0438\u0442\u0435\u0442.",
        "solutions": [
            {
                "code": "/*\n\nDeveloped by Nizamov Aynur from Kazan city\nRoad To ROI\n\nSeason 2021-2022:\n   school stage: 500/500\n     city stage: 350/500\n regional stage: N/A\n            ROI: N/A\n\n   vk: @nizamovoff\n   tg: @nizamovoff\n inst: @nizamovoff\n  dis: @nizamoff #2443\n\n*/\n\n#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n\nusing namespace std;\nusing namespace __gnu_pbds;\n\n// #pragma GCC optimize (\"Ofast\")\n#pragma GCC target (\"popcnt\")\n\n#ifndef Road_To_ROI\n#endif\n\ntemplate<class T>\nusing ordered_set = tree<T, null_type, less<>, rb_tree_tag, tree_order_statistics_node_update>;\n\ntemplate<class S, class T>\nusing ordered_map = tree<S, T, less<>, rb_tree_tag, tree_order_statistics_node_update>;\n\n#define ff first\n#define ss second\n#define pb emplace_back\n#define sz(x) (int)x.size()\n#define all(x) (x).begin(), (x).end()\n#define rall(x) (x).rbegin(), (x).rend()\n#define dbg(x) cerr << #x << \" = \" << x << '\\n';\n#define fastio() ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double ld;\ntypedef pair<int, int> pii;\ntypedef pair<ll, ll> pll;\ntypedef pair<ld, ld> pdd;\n\nmt19937 rnd(time(NULL));\nmt19937_64 rndll(time(NULL));\n\nconst int N = 2e5 + 10;\nconst int INF = 2e9 + 10;\nconst ll INFLL = 4e18 + 10;\nconst ll MOD = 1e9 + 7;\nconst ld EPS = 1e-9;\n\nstruct Edge {\n    int to, w;\n};\n\nint n, d, timer = 0, s[N];\npii fen[N];\nbool used[N];\nll ans = 0;\nvector<Edge> g[N];\n\nint sizes(int v, int p = 0) {\n    s[v] = 1;\n    for (auto [to, w] : g[v]) {\n        if (used[to] || to == p) continue;\n        s[v] += sizes(to, v);\n    }\n    return s[v];\n}\n\nint find_cent(int v, int half, int p = 0) {\n    for (auto e : g[v]) {\n        int to = e.to;\n        if (used[to] || to == p) continue;\n        if (s[to] > half)\n            return find_cent(to, half, v);\n    }\n    return v;\n}\n\nvoid upd(int i) {\n    ++i;\n    while (i < N) {\n        if (fen[i].ss == timer)\n            ++fen[i].ff;\n        else\n            fen[i] = {1, timer};\n        i += i & -i;\n    }\n}\n\nint get(int i) {\n    ++i;\n    int sm = 0;\n    while (i) {\n        if (fen[i].ss == timer)\n            sm += fen[i].ff;\n        i -= i & -i;\n    }\n    return sm;\n}\n\nvoid relax(int v, int c, int D, int p = 0) {\n    if (D > d) return;\n\n    ans += get(d - D);\n    if (v == c) return;\n    for (auto [to, w] : g[v]) {\n        if (used[to] || to == p) continue;\n        relax(to, c, D + w, v);\n    }\n}\n\nvoid add(int v, int c, int D, int p = 0) {\n    if (D > d) return;\n\n    upd(D);\n    if (v == c) return;\n    for (auto [to, w] : g[v]) {\n        if (used[to] || to == p) continue;\n        add(to, c, D + w, v);\n    }\n}\n\nvoid f(int v, int c, int D = 0) {\n    relax(v, c, D);\n    add(v, c, D);\n}\n\nvoid centroid(int v) {\n    v = find_cent(v, sizes(v) / 2);\n    ++timer;\n    used[v] = 1;\n\n    f(v, v);\n    for (auto [to, w] : g[v]) {\n        if (used[to]) continue;\n        f(to, v, w);\n    }\n\n    for (auto [to, w] : g[v]) {\n        if (used[to]) continue;\n        centroid(to);\n    }\n}\n\nsigned main() {\n#ifdef Road_To_ROI\n    // freopen(\"input.txt\", \"r\", stdin);\n    // freopen(\"output.txt\", \"w\", stdout);\n#else\n    // freopen(\"Road_To_ROI.in\", \"r\", stdin);\n    // freopen(\"Road_To_ROI.out\", \"w\", stdout);\n#endif\n    fastio();\n\n    cin >> n >> d;\n\n    for (int i = 1, u, v, w; i < n; ++i) {\n        cin >> u >> v >> w;\n        g[u].push_back({v, w});\n        g[v].push_back({u, w});\n    }\n\n    centroid(1);\n    cout << ans * 2LL;\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "print(1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "codeforces.com",
                "verdict": "Runtime Error"
            },
            {
                "code": "from collections import deque\r\n\r\nn, k = map(int, input().split())\r\n\r\n# \u0421\u043f\u0438\u0441\u043e\u043a \u0441\u043c\u0435\u0436\u043d\u043e\u0441\u0442\u0438 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0434\u043e\u0440\u043e\u0433 \u0438 \u043d\u0430\u043b\u0438\u0447\u0438\u044f \u043d\u0430 \u043d\u0438\u0445 \u0432\u0435\u043b\u043e\u0434\u043e\u0440\u043e\u0436\u0435\u043a\r\nadj_list = [[] for _ in range(n)]\r\nfor _ in range(n - 1):\r\n    u, v, b = map(int, input().split())\r\n    adj_list[u - 1].append((v - 1, b))\r\n    adj_list[v - 1].append((u - 1, b))\r\n\r\n# \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043e\u0431\u0445\u043e\u0434\u0430 \u0433\u0440\u0430\u0444\u0430 \u0432 \u0448\u0438\u0440\u0438\u043d\u0443 \u0438 \u043f\u043e\u0434\u0441\u0447\u0451\u0442\u0430 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043f\u0443\u0442\u0435\u0439\r\ndef bfs(start):\r\n    count = 0  # \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0443\u0442\u0435\u0439, \u0443\u0434\u043e\u0432\u043b\u0435\u0442\u0432\u043e\u0440\u044f\u044e\u0449\u0438\u0445 \u0443\u0441\u043b\u043e\u0432\u0438\u044e\r\n    q = deque([(start, 0)])  # \u041e\u0447\u0435\u0440\u0435\u0434\u044c \u0434\u043b\u044f \u043e\u0431\u0445\u043e\u0434\u0430 \u0432 \u0448\u0438\u0440\u0438\u043d\u0443\r\n    visited = [False] * n  # \u0421\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u0441\u0435\u0449\u0451\u043d\u043d\u044b\u0445 \u0432\u0435\u0440\u0448\u0438\u043d\r\n    visited[start] = True\r\n\r\n    while q:\r\n        v, apathy = q.popleft()  # \u0418\u0437\u0432\u043b\u0435\u043a\u0430\u0435\u043c \u0432\u0435\u0440\u0448\u0438\u043d\u0443 \u0438\u0437 \u043e\u0447\u0435\u0440\u0435\u0434\u0438\r\n        if apathy > k:  # \u0415\u0441\u043b\u0438 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0430\u043f\u0430\u0442\u0438\u0438 \u043f\u0440\u0435\u0432\u044b\u0448\u0430\u0435\u0442 k, \u0432\u044b\u0445\u043e\u0434\u0438\u043c \u0438\u0437 \u0446\u0438\u043a\u043b\u0430\r\n            break\r\n        if v != start and len(adj_list[v]) == 1:  # \u0415\u0441\u043b\u0438 \u044d\u0442\u043e \u043b\u0438\u0441\u0442\u043e\u0432\u0430\u044f \u0432\u0435\u0440\u0448\u0438\u043d\u0430, \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u043c \u0441\u0447\u0451\u0442\u0447\u0438\u043a\r\n            count += 1\r\n        for u, b in adj_list[v]:  # \u041f\u0435\u0440\u0435\u0431\u0438\u0440\u0430\u0435\u043c \u0441\u043e\u0441\u0435\u0434\u0435\u0439 \u0432\u0435\u0440\u0448\u0438\u043d\u044b\r\n            if not visited[u]:\r\n                visited[u] = True\r\n                q.append((u, apathy + b))\r\n\r\n    return count\r\n\r\n# \u041f\u0435\u0440\u0435\u0431\u0438\u0440\u0430\u0435\u043c \u0432\u0441\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u043f\u0430\u0440\u044b \u0437\u0434\u0430\u043d\u0438\u0439\r\nans = 0\r\nfor i in range(n):\r\n    for j in range(i + 1, n):\r\n        ans += bfs(i) * bfs(j)\r\n\r\nprint(ans)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from collections import deque\r\n\r\nn, k = map(int, input().split())\r\n\r\n# \u0421\u043f\u0438\u0441\u043e\u043a \u0441\u043c\u0435\u0436\u043d\u043e\u0441\u0442\u0438 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0434\u043e\u0440\u043e\u0433 \u0438 \u043d\u0430\u043b\u0438\u0447\u0438\u044f \u043d\u0430 \u043d\u0438\u0445 \u0432\u0435\u043b\u043e\u0434\u043e\u0440\u043e\u0436\u0435\u043a\r\nadj_list = [[] for _ in range(n)]\r\nfor _ in range(n - 1):\r\n    u, v, b = map(int, input().split())\r\n    adj_list[u - 1].append((v - 1, b))\r\n    adj_list[v - 1].append((u - 1, b))\r\n\r\n# \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043e\u0431\u0445\u043e\u0434\u0430 \u0433\u0440\u0430\u0444\u0430 \u0432 \u0448\u0438\u0440\u0438\u043d\u0443 \u0438 \u043f\u043e\u0434\u0441\u0447\u0451\u0442\u0430 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043f\u0443\u0442\u0435\u0439\r\ndef bfs(start):\r\n    count = 0  # \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0443\u0442\u0435\u0439, \u0443\u0434\u043e\u0432\u043b\u0435\u0442\u0432\u043e\u0440\u044f\u044e\u0449\u0438\u0445 \u0443\u0441\u043b\u043e\u0432\u0438\u044e\r\n    q = deque([(start, 0)])  # \u041e\u0447\u0435\u0440\u0435\u0434\u044c \u0434\u043b\u044f \u043e\u0431\u0445\u043e\u0434\u0430 \u0432 \u0448\u0438\u0440\u0438\u043d\u0443\r\n    visited = [False] * n  # \u0421\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u0441\u0435\u0449\u0451\u043d\u043d\u044b\u0445 \u0432\u0435\u0440\u0448\u0438\u043d\r\n    visited[start] = True\r\n\r\n    while q:\r\n        v, apathy = q.popleft()  # \u0418\u0437\u0432\u043b\u0435\u043a\u0430\u0435\u043c \u0432\u0435\u0440\u0448\u0438\u043d\u0443 \u0438\u0437 \u043e\u0447\u0435\u0440\u0435\u0434\u0438\r\n        if apathy > k:  # \u0415\u0441\u043b\u0438 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0430\u043f\u0430\u0442\u0438\u0438 \u043f\u0440\u0435\u0432\u044b\u0448\u0430\u0435\u0442 k, \u0432\u044b\u0445\u043e\u0434\u0438\u043c \u0438\u0437 \u0446\u0438\u043a\u043b\u0430\r\n            break\r\n        if v != start and len(adj_list[v]) == 1:  # \u0415\u0441\u043b\u0438 \u044d\u0442\u043e \u043b\u0438\u0441\u0442\u043e\u0432\u0430\u044f \u0432\u0435\u0440\u0448\u0438\u043d\u0430, \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u043c \u0441\u0447\u0451\u0442\u0447\u0438\u043a\r\n            count += 1\r\n        for u, b in adj_list[v]:  # \u041f\u0435\u0440\u0435\u0431\u0438\u0440\u0430\u0435\u043c \u0441\u043e\u0441\u0435\u0434\u0435\u0439 \u0432\u0435\u0440\u0448\u0438\u043d\u044b\r\n            if not visited[u]:\r\n                visited[u] = True\r\n                q.append((u, apathy + b))\r\n\r\n    return count\r\n\r\n# \u041f\u0435\u0440\u0435\u0431\u0438\u0440\u0430\u0435\u043c \u0432\u0441\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0435 \u043f\u0430\u0440\u044b \u0437\u0434\u0430\u043d\u0438\u0439\r\nans = 0\r\nfor i in range(n):\r\n    for j in range(i + 1, n):\r\n        ans += bfs(i) * bfs(j)\r\n\r\nprint(ans)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def dfs(node, parent, k, graph, dp):\n    count = 1\n    dp[node] = 0\n    for neighbor in graph[node]:\n        if neighbor != parent:\n            count *= dfs(neighbor, node, k, graph, dp)\n            dp[node] = max(dp[node], dp[neighbor] + 1)\n    if dp[node] > k:\n        count = 0\n    return count\n\nn, k = map(int, input().split())\ngraph = [[] for _ in range(n+1)]\ndp = [0] * (n+1)\n\nfor _ in range(n-1):\n    u, v, b = map(int, input().split())\n    graph[u].append(v)\n    graph[v].append(u)\n    if b == 0:\n        dp[u] = dp[v] = -1\n\ncount = dfs(1, 0, k, graph, dp)\nprint(count)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, k = map(int, input().split())\r\ncount = 0\r\nfor _ in range(n - 1):\r\n        u, v, b = map(int, input().split())\r\n        if b < k:\r\n            count += 1 \r\nprint(count*2)",
                "verdict": "Wrong Answer"
            }
        ]
    },
    {
        "task_id": 27,
        "description": "$n$ \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a\u043e\u0432 \u0438 \u0442\u0440\u043e\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0441\u0442\u043e\u0432 \u0441\u043e\u0431\u0438\u0440\u0430\u044e\u0442\u0441\u044f \u0435\u0445\u0430\u0442\u044c \u043d\u0430 \u043f\u043e\u0435\u0437\u0434\u0435 \u0432 \u0434\u0440\u0443\u0433\u043e\u0439 \u0433\u043e\u0440\u043e\u0434 \u043d\u0430 \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u044e. \u041e\u043d\u0438 \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u044e\u0442\u0441\u044f \u0443 \u043a\u0430\u0441\u0441\u044b \u043d\u0430 \u0432\u043e\u043a\u0437\u0430\u043b\u0435. \u041f\u0435\u0440\u0432\u043e\u0439 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u043e\u0447\u0435\u0440\u0435\u0434\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0441\u0442\u043e\u0432, \u0438 \u043e\u043d\u0438, \u043a\u0430\u043a \u0432\u0441\u0435 \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u044b\u0435 \u043b\u044e\u0434\u0438, \u043f\u043e\u043a\u0443\u043f\u0430\u044e\u0442 \u043f\u043e \u0431\u0438\u043b\u0435\u0442\u0443 \u043d\u0430 \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0430. \u041c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a\u0438 \u0436\u0435 \u043f\u043e\u043a\u0443\u043f\u0430\u044e\u0442 \u043e\u0434\u0438\u043d \u0431\u0438\u043b\u0435\u0442 \u043d\u0430 \u0432\u0441\u0435\u0445.\n\n\u2013 \u0427\u0435\u0441\u0442\u043d\u043e \u0433\u043e\u0432\u043e\u0440\u044f, \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a\u0438 \u0438\u0437 \u0432\u0430\u0441 \u0442\u0430\u043a \u0441\u0435\u0431\u0435... \u2013 \u0443\u0434\u0438\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0441\u0442\u044b.\n    \n\u2013 \u041d\u0435 \u0432\u043e\u043b\u043d\u0443\u0439\u0442\u0435\u0441\u044c! \u2013 \u0431\u043e\u0434\u0440\u043e \u043e\u0442\u0432\u0435\u0447\u0430\u044e\u0442 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a\u0438 \u2013 \u0423 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c *\u043c\u0435\u0442\u043e\u0434*.\n\n\u041f\u0435\u0440\u0435\u0434 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u043c \u043f\u043e\u0435\u0437\u0434\u0430 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a\u0438 \u0443\u0436\u0435 \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u0438\u043b\u0438\u0441\u044c \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c \u0441\u0432\u043e\u0439 \u043c\u0435\u0442\u043e\u0434, \u043d\u043e \u043f\u0435\u0440\u0435\u0434 \u044d\u0442\u0438\u043c \u0440\u0435\u0448\u0438\u043b\u0438 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c, \u043a\u0430\u043a \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0438\u043b\u0438\u0441\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0441\u0442\u044b. \u041e\u043a\u0430\u0437\u0430\u043b\u043e\u0441\u044c, \u043e\u043d\u0438 \u0432\u0437\u043b\u043e\u043c\u0430\u043b\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u043f\u043e\u043a\u0443\u043f\u043a\u0438 \u0431\u0438\u043b\u0435\u0442\u043e\u0432 \u0438 \u043a\u0443\u043f\u0438\u043b\u0438 \u0431\u0438\u043b\u0435\u0442\u044b \u0432 \u0421\u0412-\u0432\u0430\u0433\u043e\u043d \u0441 \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u043c \u0441\u0430\u043d\u0443\u0437\u043b\u043e\u043c, \u0440\u0430\u0437\u043d\u043e\u043e\u0431\u0440\u0430\u0437\u043d\u044b\u043c \u043f\u0438\u0442\u0430\u043d\u0438\u0435\u043c \u0438 \u043f\u043e\u0437\u043e\u043b\u043e\u0447\u0435\u043d\u043d\u044b\u043c\u0438 \u043a\u0440\u0435\u0441\u043b\u0430\u043c\u0438. \u0418 \u0432\u0441\u0451 \u044d\u0442\u043e \u043f\u043e \u0446\u0435\u043d\u0435 \u0431\u0438\u043b\u0435\u0442\u043e\u0432 \u0432 \u043f\u043b\u0430\u0446\u043a\u0430\u0440\u0442! \u0413\u043b\u044f\u0434\u044f \u043d\u0430 \u044d\u0442\u0443 \u0440\u043e\u0441\u043a\u043e\u0448\u044c, \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a\u0430\u043c \u0441\u0442\u0430\u043b\u043e \u0441\u0442\u044b\u0434\u043d\u043e \u0437\u0430 \u0438\u0445 *\u043c\u0435\u0442\u043e\u0434*, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0437\u0430\u043a\u043b\u044e\u0447\u0430\u043b\u0441\u044f \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e\u0431\u044b \u043d\u0430\u0431\u0438\u0442\u044c\u0441\u044f \u0432 \u043e\u0434\u0438\u043d \u0442\u0443\u0430\u043b\u0435\u0442 \u0438 \u043f\u0440\u0438 \u043f\u043e\u0434\u0445\u043e\u0434\u0435 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0451\u0440\u0430 \u0432\u044b\u0441\u0443\u043d\u0443\u0442\u044c \u0440\u0443\u043a\u0443 \u0441 \u0431\u0438\u043b\u0435\u0442\u043e\u043c.\n\n\u2013 \u041d\u0443 \u043a\u0430\u043a \u0442\u0430\u043c \u0432\u0430\u0448 \u043c\u0435\u0442\u043e\u0434? - \u0441\u043f\u0440\u043e\u0441\u0438\u043b\u0438 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u043a\u0438.\n\n\u2013 \u041d\u0430\u0448 \u043c\u0435\u0442\u043e\u0434? \u2013 \u0440\u0430\u0441\u0442\u0435\u0440\u044f\u043b\u0438\u0441\u044c \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a\u0438 \u2013 \u0421\u043b\u0443\u0448\u0430\u0439\u0442\u0435, \u0430 \u0447\u0442\u043e \u043c\u044b \u0432\u0441\u0451 \u043e \u043f\u043e\u0435\u0437\u0434\u043a\u0435 \u0434\u0430 \u043e \u043f\u043e\u0435\u0437\u0434\u043a\u0435? \u0412\u043e\u0442 \u0441\u043b\u0430\u0431\u043e \u0432\u0430\u043c... \u0441\u043b\u0430\u0431\u043e \u0432\u0430\u043c... \u0431\u044b\u0441\u0442\u0440\u043e \u043f\u043e\u0441\u0447\u0438\u0442\u0430\u0442\u044c, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0447\u0438\u0441\u0435\u043b \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043a\u0435 \u043c\u0435\u0436\u0434\u0443 \u0434\u0432\u0443\u043c\u044f \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u044b\u043c\u0438 \u0447\u0438\u0441\u043b\u0430\u043c\u0438 $$a_i$$ \u0438 $$b_i$$ \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e? \u0412\u043e\u043e\u043e\u043e\u0442, \u0434\u0430\u0430\u0430, \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u043a\u0430\u0436\u0434\u044b\u0439 \u0438\u0437 \u043d\u0430\u0441 \u043d\u0430\u0437\u043e\u0432\u0451\u0442 \u043f\u043e \u043e\u0434\u043d\u043e\u043c\u0443 \u0442\u0430\u043a\u043e\u043c\u0443 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0443, \u0438 \u043d\u0430 \u043a\u0430\u0436\u0434\u044b\u0439 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d \u0432\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0441\u0442\u0440\u043e \u043e\u0442\u0432\u0435\u0442\u0438\u0442\u044c, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0432 \u043d\u0451\u043c \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0447\u0438\u0441\u0435\u043b! \u0414\u0430 \u0435\u0441\u043b\u0438 \u0445\u043e\u0442\u0438\u0442\u0435, \u043c\u044b \u043c\u043e\u0436\u0435\u043c \u0434\u0430\u0436\u0435 \u043d\u0435 \u043d\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u0447\u0438\u0441\u043b\u0430, \u043f\u0440\u0435\u0432\u044b\u0449\u0430\u044e\u0449\u0438\u0435 $k$! \u0412\u043e\u0442 \u0442\u043e\u0433\u0434\u0430 \u0438 \u0432\u044b\u044f\u0441\u043d\u0438\u043c, \u043a\u0442\u043e \u043a\u0440\u0443\u0447\u0435!\n\n\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0441\u0442\u044b, \u043a\u043e\u043d\u0435\u0447\u043d\u043e, \u043f\u043e\u0441\u043c\u0435\u044f\u043b\u0438\u0441\u044c \u044d\u0442\u043e\u043c\u0443 \u0432\u044b\u0437\u043e\u0432\u0443, \u043d\u043e \u0440\u0435\u0448\u0438\u043b\u0438 \u0443\u0434\u0435\u043b\u0430\u0442\u044c \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a\u043e\u0432 \u0435\u0449\u0451 \u0438 \u0442\u0443\u0442. \u041f\u0440\u0438\u043c\u0435\u0440\u044c\u0442\u0435 \u043d\u0430 \u0441\u0435\u0431\u044f \u0440\u043e\u043b\u044c \u044d\u0442\u0438\u0445 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0441\u0442\u043e\u0432 \u0438 \u043d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u043d\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a\u043e\u0432.\n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u043d\u0430\u0445\u043e\u0434\u044f\u0442\u0441\u044f \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430 $n$ \u0438 $k$ ($1 \\le n \\le 5 \\cdot 10^5$, $1 \\le k \\le 10^6$) - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a\u043e\u0432 \u0438 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0433\u0440\u0430\u043d\u0438\u0446\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432. \u0422\u0430\u043a \u043a\u0430\u043a \u043a\u0430\u0436\u0434\u044b\u0439 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a \u0434\u0435\u043b\u0430\u0435\u0442 \u043f\u043e \u043e\u0434\u043d\u043e\u043c\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u0443, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a\u043e\u0432 \u0440\u0430\u0432\u043d\u043e\u0446\u0435\u043d\u043d\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432.\n\n\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 $n$ \u0441\u0442\u0440\u043e\u043a\u0430\u0445 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u043f\u043e \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430 $a_i$ \u0438 $b_i$ - \u0437\u0430\u043f\u0440\u043e\u0441 $i$-\u0442\u043e\u0433\u043e \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a\u0430 ($1 \\le a_i, b_i \\le k$).\u0412 \u043e\u0442\u0432\u0435\u0442 \u043d\u0430 \u043a\u0430\u0436\u0434\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u0441 \u043d\u043e\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0440\u043e\u0441\u0442\u044b\u0445 \u0447\u0438\u0441\u0435\u043b \u0432 \u043f\u0440\u043e\u043c\u0435\u0436\u0443\u0442\u043a\u0435 \u043c\u0435\u0436\u0434\u0443 $a_i$ \u0438 $b_i$ \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e.",
        "solutions": [
            {
                "code": "input = open(0).readline\n\nq, k = map(int, input().split())\n\nerato = [1 for _ in range(k + 1)]\nerato[0] = 0\nerato[1] = 0\n\nfor d in range(2, k + 1):\n    for i in range(d + d, k + 1, d):\n        erato[i] = 0\n\nfor i in range(1, k + 1):\n    erato[i] += erato[i - 1]\n\n\nfor _ in range(q):\n    l, r = map(int, input().split())\n    if l > r:\n        r, l = l, r\n        \n    print(erato[r] - erato[l - 1])\n\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "q, k = map(int, input().split())\n\nerato = [1 for _ in range(k + 1)]\nerato[0] = 0\nerato[1] = 0\n\nfor d in range(2, k + 1):\n    for i in range(d + d, k + 1, d):\n        erato[i] = 0\n\nfor i in range(1, k + 1):\n    erato[i] += erato[i - 1]\n\nres = []\nfor _ in range(q):\n    l, r = map(int, input().split())\n    if l > r:\n        r, l = l, r\n        \n    res.append(erato[r] - erato[l - 1])\n    \nprint(*res, sep=\"\\n\")\n\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "//#pragma GCC optimize(\"Ofast,no-stack-protector\")\r\n//#pragma GCC optimize(\"unroll-loops\")\r\n//#pragma GCC optimize(\"unswitch-loops\")\r\n//#pragma GCC optimize(\"fast-math\")\r\n//#pragma GCC optimize(\"rename-registers\")\r\n\r\n#include <bits/stdc++.h>\r\n#include <ext/rope>\r\n//\r\n#define int long long\r\n#define all(c) begin(c), end(c)\r\n//typedef __int128_t bigint;\r\nusing namespace std;\r\nusing namespace __gnu_cxx;\r\nmap<int, int> q;\r\n\r\n\r\nvoid rec() {\r\n\r\n\r\n}\r\n\r\n\r\nint32_t main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    cout.tie(nullptr);\r\n//\r\n//    freopen(\"river.in\", \"r\", stdin);\r\n//    freopen(\"river.out\", \"w\", stdout);\r\n    int n, k;\r\n    cin >> n >> k;\r\n\r\n    vector<bool> prime(k + 1, true);\r\n    prime[0] = prime[1] = false;\r\n    for (int i = 2; i <= k; ++i) {\r\n        if (prime[i]) {\r\n            if (i * 1ll * i <= k) {\r\n                for (int j = i * i; j <= k; j += i) {\r\n                    prime[j] = false;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    vector<int> pref(k);\r\n    for (int i = 1; i <= k; ++i) {\r\n        pref[i] = pref[i - 1];\r\n        if (prime[i]) pref[i]++;\r\n    }\r\n    while (n--) {\r\n        int l, r;\r\n        cin >> l >> r;\r\n        cout << pref[r] - pref[l - 1]<<\"\\n\";\r\n    }\r\n\r\n\r\n    return 0;\r\n\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "n=input().split()\nk=int(n[1])\nn=int(n[0])\nresheto = [1 for i in range(k+1)]\nresheto[0]=0\nresheto[1]=0\nfor i in range(2,k+1):\n    if (resheto[i]):\n        j=i\n        while (i*j<=k):\n            resheto[i*j]=0\n            j+=1\nprefox = [0 for i in range(k+1)]\nfor i in range(2,k+1):\n    prefox[i]=prefox[i-1]+resheto[i]\n\nfor i in range(n):\n    l=input().split()\n    r=int(l[1])\n    l=int(l[0])\n    if (l>r):\n        r,l=l,r\n    print(prefox[r]-prefox[max(l-1,0)])",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=input().split()\nk=int(n[1])\nn=int(n[0])\nresheto = [1 for i in range(k+1)]\nresheto[0]=0\nresheto[1]=0\nfor i in range(2,k+1):\n    if (resheto[i]):\n        j=i\n        while (i*j<=k):\n            resheto[i*j]=0\n            j+=1\nprefox = [0 for i in range(k+1)]\nfor i in range(2,k+1):\n    prefox[i]=prefox[i-1]+resheto[i]\n\nfor i in range(n):\n    l=input().split()\n    r=int(l[1])\n    l=int(l[0])\n    print(prefox[r]-prefox[max(l-1,0)])",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=input().split()\nk=int(n[1])\nn=int(n[0])\nresheto = [1 for i in range(k+1)]\nresheto[0]=0\nresheto[1]=0\nfor i in range(2,k+1):\n    if (resheto[i]):\n        j=i\n        while (i*j<=k):\n            resheto[i*j]=0\n            j+=1\nprefox = [0 for i in range(k+1)]\nfor i in range(2,k+1):\n    prefox[i]=prefox[i-1]+resheto[i]\n\nfor i in range(n):\n    l=input().split()\n    r=int(l[1])\n    l=int(l[0])\n    print(prefox[r]-prefox[l-1])",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, k = map(int, input().split())\nprime = [True] * (k + 10)\nprime[0] = False\nprime[1] = False\nprime[2] = True\nfor i in range(2, k + 1):\n    if prime[i]:\n        x = i + i\n        while x <= k:\n            prime[x] = False\n            x += i\npref = [0] * (k + 10)\npref[2] = 1\nfor i in range(3, k + 1):\n    pref[i] = pref[i-1] + (1 if prime[i] else 0)\nfor _ in range(n):\n    a, b = map(int, input().split())\n    print(pref[b] - pref[a-1])\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def IsPrime(n):\r\n    d = 2\r\n    while d * d <= n and n % d != 0:\r\n        d += 1\r\n    return d * d > n\r\n\r\n\r\nn, k = map(int, input().split())\r\nmas=[]\r\nfor i in range(n):\r\n    kolvo = 0\r\n    a, b = map(int, input().split())\r\n    for val in range(a, b + 1):\r\n        if IsPrime(val):\r\n            kolvo += 1\r\n    mas.append(kolvo)\r\nfor i in mas:\r\n    print(i)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def IsPrime(n):\r\n    d = 2\r\n    while d * d <= n and n % d != 0:\r\n        d += 1\r\n    return d * d > n\r\n\r\nn,k=map(int,input().split())\r\n\r\nfor i in range(n):\r\n    kolvo=0\r\n\r\n    a,b=map(int,input().split())\r\n    for val in range(a,b+1):\r\n        if IsPrime(val):\r\n            kolvo+=1\r\n    print(kolvo)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n,k=map(int,input().split())\r\n\r\nfor i in range(n):\r\n    kolvo=0\r\n\r\n    a,b=map(int,input().split())\r\n    for val in range(a,b+1):\r\n        f = 0\r\n        for d in range(2,int(val**(0.5))+1):\r\n            if val%d==0:\r\n                f=1\r\n                break\r\n        if f==0:\r\n            kolvo+=1\r\n    print(kolvo)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a,b=map(int,input().split())\r\nfor i in range(a):\r\n    cnt=0\r\n    start,end=map(int,input().split())\r\n    for i in range(max(start,2),end+1):\r\n        flag=True\r\n        for k in range(2,i//2+1):\r\n            if i%k==0:\r\n                flag=False\r\n                break\r\n        if flag:\r\n            cnt+=1\r\n    print(cnt)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a,b=map(int,input().split())\r\nfor i in range(a):\r\n    cnt=0\r\n    start,end=map(int,input().split())\r\n    for i in range(start,end+1):\r\n        if i > 1:\r\n            for _ in range(2, int(i / 2) + 1):\r\n                if (i % _) == 0:\r\n                    break\r\n            else:\r\n                cnt+=1\r\n    print(cnt)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from sympy import isprime\r\na,b=map(int,input().split())\r\nfor i in range(a):\r\n    cnt=0\r\n    start,end=map(int,input().split())\r\n    for i in range(start,end+1):\r\n        if isprime(i):\r\n            cnt+=1\r\n    print(cnt)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n, k = [int(i) for i in input().split()]\r\ns = list(range(k + 1))\r\nfor i in s:\r\n    if i > 1:\r\n        for j in range(i + i, len(s), i):\r\n            s[j] = 0\r\nfor i in range(n):\r\n    a, b = [int(i) for i in input().split()]\r\n    if 0 in set(s[a:b + 1]):\r\n        ans = len(set(s[a:b + 1])) - 1\r\n    else:\r\n        ans = len(set(s[a:b + 1]))\r\n    print(ans)\r\n    ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, k = [int(i) for i in input().split()]\r\ns = list(range(k + 1))\r\nfor i in s:\r\n    if i > 1:\r\n        for j in range(i + i, len(s), i):\r\n            s[j] = 0\r\nfor i in range(n):\r\n    a, b = [int(i) for i in input().split()]\r\n    ans = len(set(s[a:b + 1]))\r\n    if (ans == 1 and a in s) or ans == 0:\r\n        print(ans)\r\n    else:\r\n        print(ans - 1)\r\n    ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, k = [int(i) for i in input().split()]\r\ns = list(range(k + 1))\r\nfor i in s:\r\n    if i > 1:\r\n        for j in range(i + i, len(s), i):\r\n            s[j] = 0\r\nfor i in range(n):\r\n    a, b = [int(i) for i in input().split()]\r\n    ans = len(set(s[a:b + 1]))\r\n    if ans == 1 or ans == 0:\r\n        print(ans)\r\n    else:\r\n        print(ans - 1)\r\n    ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, k = [int(i) for i in input().split()]\r\ns = list(range(k + 1))\r\nfor i in s:\r\n    if i > 1:\r\n        for j in range(i + i, len(s), i):\r\n            s[j] = 0\r\nfor i in range(n):\r\n    a, b = [int(i) for i in input().split()]\r\n    ans = len(set(s[a:b + 1]))\r\n    if ans == 1:\r\n        print(ans)\r\n    else:\r\n        print(ans - 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, k = [int(i) for i in input().split()]\r\ns = list(range(k + 1))\r\nfor i in s:\r\n    if i > 1:\r\n        for j in range(i + i, len(s), i):\r\n            s[j] = 0\r\n\r\nfor i in range(n):\r\n    a, b = [int(i) for i in input().split()]\r\n    print(len(s[a:b + 1]))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def eratosthen(n): \r\n    spis = list(range(n + 1))\r\n    for i in spis:\r\n        if i > 1:\r\n            for j in range(i + i, len(spis), i):\r\n                spis[j] = 0\r\n    return list(set(spis))\r\n\r\nn, k = [int(i) for i in input().split()]\r\nspis = eratosthen(k)\r\nspis.sort()\r\nfor i in range(n):\r\n    a, b = [int(i) for i in input().split()]\r\n    s = eratosthen(b)\r\n    print(len(s[s.index(a):]))",
                "verdict": "Runtime Error"
            },
            {
                "code": "a, b = map(int, input().split())\r\nmas = [list(map(int, input().split())) for i in range(a)]\r\n\r\n\r\ndef pr(ch):\r\n    k = 2\r\n    while k * k <= ch and ch % k != 0:\r\n        k += 1\r\n    return k * k > ch\r\n\r\n\r\nfor i in range(a):\r\n    sum = 0\r\n\r\n    spch = range(min(mas[i][0], mas[i][1]), max(mas[i][0], mas[i][1]) + 1)\r\n\r\n    for j in spch:\r\n        if pr(j) and j != 1:\r\n            sum += 1\r\n    print(f'{sum}')\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "a, b = map(int, input().split())\r\nmas = [list(map(int, input().split())) for i in range(a)]\r\n\r\n\r\ndef pr(ch):\r\n    k = 2\r\n    while k * k <= ch and ch % k != 0:\r\n        k += 1\r\n    return k * k > ch\r\n\r\n\r\nfor i in range(a):\r\n    sum = 0\r\n    if mas[i][0] >= mas[i][1]:\r\n        for j in range(mas[i][1], mas[i][0] + 1):\r\n            if pr(j) and j != 1:\r\n                sum += 1\r\n    else:\r\n        for j in range(mas[i][0], mas[i][1] + 1):\r\n            if pr(j) and j != 1:\r\n                sum += 1\r\n    print(f'{sum}')\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "a, b = map(int, input().split())\r\nmas = [list(map(int, input().split())) for i in range(a)]\r\n\r\n\r\ndef pr(ch):\r\n    k = 2\r\n    while k * k <= ch and ch % k != 0:\r\n        k += 1\r\n    return k * k > ch\r\n\r\n\r\nfor i in range(a):\r\n    sum = 0\r\n    if mas[i][0] >= [i][1]:\r\n        for j in range(mas[i][1], mas[i][0] + 1):\r\n            if pr(j) and j != 1:\r\n                sum += 1\r\n    else:\r\n        for j in range(mas[i][0], mas[i][1] + 1):\r\n            if pr(j) and j != 1:\r\n                sum += 1\r\n    print(f'{sum}')",
                "verdict": "Runtime Error"
            },
            {
                "code": "a, b = map(int, input().split())\r\nmas = [list(map(int, input().split())) for i in range(a)]\r\n\r\n\r\ndef pr(ch):\r\n    k = 2\r\n    while k * k <= ch and ch % k != 0:\r\n        k += 1\r\n    return k * k > ch\r\n\r\n\r\nfor i in range(a):\r\n    sum = 0\r\n    if mas[i][0] >= [i][1]:\r\n        for j in range(mas[i][1], mas[i][0]):\r\n            if pr(j) and j != 1:\r\n                sum += 1\r\n    else:\r\n        for j in range(mas[i][0], mas[i][1]):\r\n            if pr(j) and j != 1:\r\n                sum += 1\r\n    print(f'{sum}')\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "a, b = map(int, input().split())\r\nmas = [list(map(int, input().split())) for i in range(a)]\r\n\r\ndef pr(ch):\r\n    k = 2\r\n    while k * k <= ch and ch % k != 0:\r\n        k += 1\r\n    return k * k > ch\r\n\r\nfor i in range(a):\r\n    sum = 0\r\n    if mas[i][1] > b:\r\n        for j in range(mas[i][0], b + 1):\r\n            if pr(j):\r\n                sum += 1\r\n    else:\r\n        for j in range(mas[i][0], mas[i][1] + 1):\r\n            if pr(j):\r\n                sum += 1\r\n    print(f'{sum}')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, k = map(int, input().split())\r\n\r\nsp = []\r\n\r\nfor i in range(n):\r\n    sp.append(list(map(int, input().split())))\r\n\r\n\r\ndef pr(ch):\r\n    m = 2\r\n    while m * m <= ch and ch % m != 0:\r\n        m += 1\r\n    return m * m > ch\r\n\r\nfor i in range(n):\r\n    # i_1 = sp[i][0]\r\n    # i_2 = sp[i][1]\r\n    sum = 0\r\n    for j in range(sp[i][0], sp[i][1] + 1):\r\n        if pr(j):\r\n            sum += 1\r\n        else:\r\n            pass\r\n    print(f'{sum}')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, k = map(int, input().split())\r\n\r\nsp = []\r\n\r\nfor i in range(n):\r\n    sp.append(list(map(int, input().split())))\r\n\r\n\r\ndef pr(ch):\r\n    m = 2\r\n    while m * m <= ch and ch % m != 0:\r\n        m += 1\r\n    return m * m > ch\r\n\r\nfor i in range(n):\r\n    sum = 0\r\n    for j in range(sp[i][0], sp[i][1] + 1):\r\n        if pr(j) and j <= k:\r\n            sum += 1\r\n        else:\r\n            pass\r\n    print(f'{sum}')\r\n\r\n        if pr(j):\r\n            sum += 1\r\n        else:\r\n            pass\r\n    print(f'{sum}')",
                "verdict": "Runtime Error"
            },
            {
                "code": "n, k = map(int, input().split())\r\n\r\nsp = []\r\n\r\nfor i in range(n):\r\n    sp.append(list(map(int, input().split())))\r\n\r\n\r\ndef pr(ch):\r\n    m = 2\r\n    while m * m <= ch and ch % m != 0:\r\n        m += 1\r\n    return m * m > ch\r\n\r\nfor i in range(n):\r\n    i_1 = sp[i][0]\r\n    i_2 = sp[i][1]\r\n    sum = 0\r\n    for j in range(i_1, i_2 + 1):\r\n        if pr(j):\r\n            sum += 1\r\n        else:\r\n            pass\r\n    print(f'{sum}')\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "q, k = map(int, input().split())\n\nerato = [1 for _ in range(k + 1)]\nerato[0] = 0\nerato[1] = 0\n\nfor d in range(2, k + 1):\n    for i in range(d + d, k + 1, d):\n        erato[i] = 0\n\nprefix = [0 for _ in range(k + 1)]\nfor i in range(1, k + 1):\n    prefix[i] = prefix[i - 1] + erato[i]\n\nfor _ in range(q):\n    l, r = map(int, input().split())\n    if l > r:\n        r, l = l, r\n\n    print(prefix[r] - prefix[l - 1])\n\n\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n#define int int64_t\r\nusing namespace std;\r\nbool ip(int n) {\r\n    for (int i = 2; i < n; i++) {\r\n        if (n % i == 0)\r\n            return false;\r\n    }\r\n}\r\nint32_t main(){\r\n    cin.tie(0);cout.tie(0);\r\n    ios_base::sync_with_stdio(false);\r\n    //freopen(\"input.txt\", \"r\", stdin),\r\n    //freopen(\"output.txt\", \"w\", stdout);\r\n    int n,k;\r\n    cin >> n >> k;\r\n    int sum=0;\r\n    for(int i=1;i<=k;i++){\r\n        if(ip(i))sum++;\r\n    }\r\n    while(n){\r\n        int a,b;\r\n        cin >> a >> b;\r\n        int ans=0,lp=0,rp=0;\r\n\r\n        if(b-a<=k-a+abs(b-k)){\r\n            for(int i=1;i<a;i++){\r\n                if(ip(i))lp++;\r\n            }\r\n            for(int i=b+1;i<k;i++){\r\n                if(ip(i))rp++;\r\n            }\r\n            cout << sum-rp-lp << \"\\n\";\r\n            n--;\r\n            continue;\r\n        } else {\r\n            for(int i=a;i<=b;i++){\r\n                if(ip(i))ans++;\r\n            }\r\n            cout << ans << \"\\n\";\r\n            n--;\r\n            continue;\r\n        }\r\n    }\r\n}\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "t6 = 10**6\r\ner = [0] * (t6 + 1)\r\np = dict()\r\np[0] = 0\r\ncp = 0\r\nfor i in range(2,t6):\r\n    if not er[i]:\r\n        cp += 1\r\n        p[i] = cp\r\n        for j in range(i * i, t6 + 1, i):\r\n            er[j] = True\r\nn,k=map(int,input().split())\r\nfor i in range(n):\r\n    a,b=map(int,input().split())\r\n    if a > b:\r\n        a, b = b, a\r\n    while b not in p:\r\n        b -= 1\r\n    if a in p:\r\n        print(p[b] - p[a] + 1)\r\n    else:\r\n        while a not in p:\r\n            a -= 1\r\n        print(p[b] - p[a])\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "t6 = 10**6\r\ner = [0] * (t6 + 1)\r\np = dict()\r\np[0] = 0\r\ncp = 0\r\nfor i in range(2,t6):\r\n    if not er[i]:\r\n        cp += 1\r\n        p[i] = cp\r\n        for j in range(i * i, t6 + 1, i):\r\n            er[j] = True\r\nn,k=map(int,input().split())\r\nfor i in range(n):\r\n    a,b=map(int,input().split())\r\n    while b not in p:\r\n        b -= 1\r\n    if a in p:\r\n        print(p[b] - p[a] + 1)\r\n    else:\r\n        while a not in p:\r\n            a -= 1\r\n        print(p[b] - p[a])\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def SieveOfEratosthenes(n):\n    sieve=[True]*(n+1)\n    primeNumbers=[]\n    primeNumbers.append(2)\n    for j in range(4,len(sieve),2):\n        sieve[j]=False\n    for i in range(3,len(sieve),2):\n        if sieve[i]==True:\n            primeNumbers.append(i)\n            for j in range(i*i,len(sieve),i):\n                sieve[j]=False\n    return primeNumbers\n\nnum,k=map(int,input().split())\nzapr=[list(map(int,input().split())) for i in range(num)]\nprimes=[1]+SieveOfEratosthenes(k)\n\nfor i in range(num):\n    counter=0\n    for j in range(len(primes)):\n        if zapr[i][0]<=primes[j]<=zapr[i][1]:\n            counter+=1\n    print(counter)\n    \n    \n    \n    \n    \n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def SieveOfEratosthenes(n):\n    sieve=[True]*(n+1)\n    primeNumbers=[]\n    primeNumbers.append(2)\n    for j in range(4,len(sieve),2):\n        sieve[j]=False\n    for i in range(3,len(sieve),2):\n        if sieve[i]==True:\n            primeNumbers.append(i)\n            for j in range(i*i,len(sieve),i):\n                sieve[j]=False\n    return primeNumbers\n\nnum,k=map(int,input().split())\nzapr=[list(map(int,input().split())) for i in range(num)]\nprimes=SieveOfEratosthenes(k)\n\nfor i in range(num):\n    counter=0\n    for j in range(len(primes)):\n        if zapr[i][0]<=primes[j]<=zapr[i][1]:\n            counter+=1\n    print(counter)\n    \n    \n    \n    \n    \n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include \"bits/stdc++.h\"\r\n///Solved by _sHau_\r\nusing namespace std;\r\nvector < bool > primes;\r\nvoid solve()\r\n{\r\n    int l, r, res = 0;\r\n    cin >> l >> r;\r\n    for(int i = l; i <= r; ++i)\r\n        if(!primes[i])\r\n            ++res;\r\n    cout << res;\r\n}\r\nsigned main() {\r\n    int t, k;\r\n    cin >> t >> k;\r\n    primes.resize(k + 1);\r\n    for(int i = 2; i < primes.size(); ++i)\r\n    {\r\n        if(primes[i])\r\n            break;\r\n        for(int j = 2 * i; j < primes.size(); j += i)\r\n            primes[j] = true;\r\n    }\r\n    while (t--) solve(), cout << \"\\n\";\r\n    return 0;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\nusing namespace std;\n\nint main() {\n\t// your code goes here\n\tint n;\n\tint k;\n\tcin>>n>>k;\n\tint primes[1000001];\n\tprimes[1]=1;\n\tprimes[2] = 0;\n\tprimes[3]=0;\n\tprimes[4]=1;\n// \tcout<<primes[5]<<endl;\n\tfor(int i=2;i<999997;i++){\n\t   // primes[i] = 1;\n\t    for(int j=2;j*i<1000001;j++){\n\t        primes[i*j] = 1;\n\t    }\n\t}\n\t\n\tprimes[1] = 1;\n\tprimes[2] = 1;\n\tprimes[3]=1;\n\tprimes[4]=2;\n\tfor(int i=5;i<1000001;i++){\n\t    primes[i] = primes[i]+primes[i-1];\n\t}\n// \tcout<<9-primes[9];\nfor(int i=0;i<n;i++){\n    int l,r;\n    cin>>l>>r;\n    cout<<(r-primes[r])-(l-1-primes[l-1])<<endl;\n}\n\treturn 0;\n}\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "import math\r\n\r\ndef simple(a):\r\n    f = True\r\n    for i in range(2, math.sqrt(a).__trunc__() + 1):\r\n        if a % i == 0:\r\n            f = False\r\n    if f:\r\n        return True\r\n    else:\r\n        return False\r\nn, k = map(int, input().split())\r\nprost = []\r\nprost.append(0)\r\nprost.append(0)\r\nfor i in range(2,k+1):\r\n    if simple(i):\r\n        prost.append(prost[i-1] + 1)\r\n    else:\r\n        prost.append(prost[i-1])\r\nans = []\r\nfor i in range(n):\r\n    a, b = map(int, input().split())\r\n    if (a == b) and simple(a) and (a != 1):\r\n        ans.append(1)\r\n    elif a == b:\r\n        ans.append(0)\r\n    else:\r\n        ans.append(prost[b]-prost[a-1])\r\nfor i in range(n):\r\n    print(ans[i])\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\n\r\ndef simple(a):\r\n    f = True\r\n    for i in range(2, math.sqrt(a).__trunc__() + 1):\r\n        if a % i == 0:\r\n            f = False\r\n    if f:\r\n        return True\r\n    else:\r\n        return False\r\nn, k = map(int, input().split())\r\nprost = []\r\nprost.append(0)\r\nprost.append(1)\r\nfor i in range(2,k+1):\r\n    if simple(i):\r\n        prost.append(prost[i-1] + 1)\r\n    else:\r\n        prost.append(prost[i-1])\r\nans = []\r\nfor i in range(n):\r\n    a, b = map(int, input().split())\r\n    if (a == b) and simple(a):\r\n        ans.append(1)\r\n    elif a == b:\r\n        ans.append(0)\r\n    else:\r\n        ans.append(prost[b]-prost[a-1])\r\nfor i in range(n):\r\n    print(ans[i])\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\n\r\ndef simple(a):\r\n    f = True\r\n    for i in range(2, math.sqrt(a).__trunc__() + 1):\r\n        if a % i == 0:\r\n            f = False\r\n    if f:\r\n        return True\r\n    else:\r\n        return False\r\nn, k = map(int, input().split())\r\nprost = []\r\nprost.append(0)\r\nprost.append(0)\r\nfor i in range(2,k+1):\r\n    if simple(i):\r\n        prost.append(prost[i-1] + 1)\r\n    else:\r\n        prost.append(prost[i-1])\r\nans = []\r\nfor i in range(n):\r\n    a, b = map(int, input().split())\r\n    if (a == b) and simple(a):\r\n        ans.append(1)\r\n    elif a == b:\r\n        ans.append(0)\r\n    else:\r\n        ans.append(prost[b]-prost[a-1])\r\nfor i in range(n):\r\n    print(ans[i])\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\n\r\ndef simple(a):\r\n    f = True\r\n    for i in range(2, math.sqrt(a).__trunc__() + 1):\r\n        if a % i != 0:\r\n            f = False\r\n    if f:\r\n        return True\r\n    else:\r\n        return False\r\nn, k = map(int, input().split())\r\nprost = []\r\nprost.append(0)\r\nprost.append(0)\r\nfor i in range(2,k+1):\r\n    if simple(i):\r\n        prost.append(prost[i-1] + 1)\r\n    else:\r\n        prost.append(prost[i-1])\r\nans = []\r\nfor i in range(n):\r\n    a, b = map(int, input().split())\r\n    ans.append(prost[b-1]-prost[a])\r\nfor i in range(n):\r\n    if ans[i] != 0:\r\n        print(ans[i])\r\n    else:\r\n        print(1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = map(int, input().split())\nerat = [1] * (m + 1)\nprimes = []\nfor i in range(2, m + 1):\n    if erat[i] == 1:\n        erat[i] = i\n        primes.append(i)\n    for p in primes:\n        if i * p > m or p > erat[i]:\n            break\n        erat[i * p] = p\npr = [0] * (m + 1)\nfor p in primes:\n    pr[p] = 1\nfor i in range(1, m + 1):\n    pr[i] += pr[i - 1]\nans = []\nfor i in range(n):\n    l, r = map(int, input().split())\n    ans.append(pr[max(l, r)] - pr[min(l, r) - 1])\nprint(*ans, sep='\\n')",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, m = map(int, input().split())\nerat = [1] * (m + 1)\nprimes = []\nfor i in range(2, m + 1):\n    if erat[i] == 1:\n        erat[i] = i\n        primes.append(i)\n    for p in primes:\n        if i * p > m or p > erat[i]:\n            break\n        erat[i * p] = p\npr = [0] * (m + 1)\nfor p in primes:\n    pr[p] = 1\nfor i in range(1, m + 1):\n    pr[i] += pr[i - 1]\nfor i in range(n):\n    l, r = map(int, input().split())\n    print(pr[max(l, r)] - pr[min(l, r) - 1])",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, m = map(int, input().split())\nerat = [1] * (m + 1)\nprimes = []\nfor i in range(2, m + 1):\n    if erat[i] == 1:\n        erat[i] = i\n        primes.append(i)\n    for p in primes:\n        if i * p > m or p > erat[i]:\n            break\n        erat[i * p] = p\npr = [0] * (m + 1)\nfor p in primes:\n    pr[p] = 1\nfor i in range(1, m + 1):\n    pr[i] += pr[i - 1]\nfor i in range(n):\n    l, r = map(int, input().split())\n    print(pr[r] - pr[l - 1])",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <bits/stdc++.h>\n#define ll long long\n#define ld long double\n#define sz(a) (int)(a.size())\nusing namespace std;\nconst ll inf = (ll) 2e18;\nconst ll mod = (ll) 1e9 + 9ll;\nsigned main() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    cout.tie(0);\n    int n, k;\n    cin >> n >> k;\n    vector <int> pr;\n    vector <int> lp(k + 1, 0);\n    vector <int> cnt(k + 1, 0);\n    for (int i = 2; i <= k; i++){\n        if (lp[i] == 0){\n            lp[i] = i;\n            pr.push_back(i);\n            cnt[i]++;\n        }\n        cnt[i] += cnt[i - 1];\n        for (int j = 0; j < sz(pr) && pr[j] <= lp[i] && i * pr[j] <= k; j++){\n            lp[i * pr[j]] = pr[j];\n        }\n    }\n    for (int i = 0; i < n; i++){\n        int a, b;\n        cin >> a >> b;\n        cout << cnt[max(a, b)] - cnt[min(a, b) - 1] << \"\\n\";\n    }\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "def sieve(n):\r\n    prime = [True] * (n + 1)\r\n    prime[0] = prime[1] = False\r\n    for i in range(2, n + 1):\r\n        if not prime[i]:\r\n            continue\r\n        for j in range(i * i, n + 1, i):\r\n            prime[j] = False\r\n    return prime\r\nn, k = map(int, input().split())\r\ns = sieve(k)\r\npref = [0] * (k + 1)\r\nfor i in range(k + 1):\r\n    pref[i] = pref[i - 1] + int(s[i])\r\nfor i in range(n):\r\n    l, r = sorted(map(int, input().split()))\r\n    print(pref[r] - pref[max(0, l - 1)])",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "def sieve(n):\r\n    prime = [True] * (n + 1)\r\n    prime[0] = prime[1] = False\r\n    for i in range(2, n + 1):\r\n        if not prime[i]:\r\n            continue\r\n        for j in range(i * i, n + 1, i):\r\n            prime[j] = False\r\n    return prime\r\nn, k = map(int, input().split())\r\ns = sieve(k)\r\npref = [0] * (k + 1)\r\nfor i in range(k + 1):\r\n    pref[i] = pref[i - 1] + int(s[i])\r\nfor i in range(n):\r\n    l, r = map(int, input().split())\r\n    if l <= r:\r\n        print(pref[r] - pref[max(0, l - 1)])\r\n    else:\r\n        print(0)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def sieve(n):\r\n    prime = [True] * (n + 1)\r\n    prime[0] = prime[1] = False\r\n    for i in range(2, n + 1):\r\n        if not prime[i]:\r\n            continue\r\n        for j in range(i * i, n + 1, i):\r\n            prime[j] = False\r\n    return prime\r\nn, k = map(int, input().split())\r\ns = sieve(k)\r\npref = [0] * (k + 1)\r\nfor i in range(k + 1):\r\n    pref[i] = pref[i - 1] + int(s[i])\r\nfor i in range(n):\r\n    l, r = map(int, input().split())\r\n    print(pref[r] - pref[max(0, l - 1)])\r\n    assert l <= r",
                "verdict": "Runtime Error"
            },
            {
                "code": "def sieve(n):\r\n    prime = [True] * (n + 1)\r\n    prime[0] = prime[1] = False\r\n    for i in range(2, n + 1):\r\n        if not prime[i]:\r\n            continue\r\n        for j in range(i * i, n + 1, i):\r\n            prime[j] = False\r\n    return prime\r\nn, k = map(int, input().split())\r\ns = sieve(k)\r\npref = [0] * (k + 1)\r\nfor i in range(k + 1):\r\n    pref[i] = pref[i - 1] + int(s[i])\r\nfor i in range(n):\r\n    l, r = map(int, input().split())\r\n    print(pref[r] - pref[max(0, l - 1)])\r\n    assert l <= r",
                "verdict": "Runtime Error"
            },
            {
                "code": "def eratosfen(l, r):\n    k = 0\n    for j in range(l, r+1):\n        if (prime[j]==1):\n            k+=1\n    return k\n    \nn, m = map(int, input().split())\nc=n\nn=m\nprime = [1]*(n+1)\nprime[0] = 0\nprime[1] = 0 \nd = 2\nwhile d * d<=n:\n    if prime[d]:\n        for i in range(d**2, n+1, d):\n            prime[i]=0\n    d+=1\nfor h in range(c):\n    l, r = map(int, input().split())\n    if l>r:\n        l, r = r, l\n    print(eratosfen(l, r))",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "def eratosfen(l, r, m):\n    n = m\n    prime = [1]*(n+1)\n    d = 2\n    while d * d<=n:\n        if prime[d]:\n            for i in range(d**2, n+1, d):\n                prime[i]=0\n        d+=1\n    k = 0\n    for j in range(l, r+1):\n        if (prime[j]==1):\n            k+=1\n    return k\n    \nn, m = map(int, input().split())\nfor h in range(n):\n    l, r = map(int, input().split())\n    print(eratosfen(l, r, m))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def sieve_of_eratosthenes(n):\r\n    primes = [True] * (n + 1)\r\n    primes[0] = primes[1] = False\r\n    p = 2\r\n    while p * p <= n:\r\n        if primes[p]:\r\n            for i in range(p * p, n + 1, p):\r\n                primes[i] = False\r\n        p += 1\r\n    return primes\r\n\r\ndef count_primes_in_range(primes, a, b):\r\n    count = 0\r\n    for i in range(a, b + 1):\r\n        if primes[i]:\r\n            count += 1\r\n    return count\r\n\r\nn, k = map(int, input().split())\r\n\r\nprimes = sieve_of_eratosthenes(k)\r\n\r\nfor _ in range(n):\r\n    a, b = map(int, input().split())\r\n    print(count_primes_in_range(primes, a, b))\r\n",
                "verdict": "Wrong Answer"
            }
        ]
    },
    {
        "task_id": 28,
        "description": "\u0417\u0430\u0434\u0430\u043d\u043e \u0434\u0435\u0440\u0435\u0432\u043e \u043d\u0430 $n$ \u0432\u0435\u0440\u0448\u0438\u043d. \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0443\u0434\u0430\u043b\u044f\u0442\u044c \u043b\u044e\u0431\u044b\u0435 \u0440\u0451\u0431\u0440\u0430, \u043d\u043e \u0442\u0430\u043a, \u0447\u0442\u043e\u0431\u044b \u0432\u0435\u0440\u0448\u0438\u043d\u044b \u043d\u0435 \u0441\u0442\u0430\u043d\u043e\u0432\u0438\u043b\u0438\u0441\u044c \u0438\u0437\u043e\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u043c\u0438 (\u0447\u0442\u043e\u0431\u044b \u043d\u0435 \u0431\u044b\u043b\u043e \u0432\u0435\u0440\u0448\u0438\u043d \u0441 \u043d\u0443\u043b\u0435\u0432\u043e\u0439 \u0441\u0442\u0435\u043f\u0435\u043d\u044c\u044e). \u041a\u0430\u043a\u043e\u0435 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442 \u0441\u0432\u044f\u0437\u043d\u043e\u0441\u0442\u0438 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c?\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u0447\u0438\u0441\u043b\u043e $n$ ($2 \\le n \\le 2 \\cdot 10^5$) \u2013 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u0435\u0440\u0448\u0438\u043d \u0432 \u0434\u0435\u0440\u0435\u0432\u0435. \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 $n - 1$ \u0441\u0442\u0440\u043e\u043a\u0430\u0445 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u043f\u043e \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430 $u_i$ \u0438 $v_i$, \u0447\u0442\u043e \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0440\u0435\u0431\u0440\u0430 \u043c\u0435\u0436\u0434\u0443 \u0432\u0435\u0440\u0448\u0438\u043d\u0430\u043c\u0438 $u_i$ \u0438 $v_i$.\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e \u2013 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442 \u0441\u0432\u044f\u0437\u043d\u043e\u0441\u0442\u0438, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c.",
        "solutions": [
            {
                "code": "n = int(input())\n\ntree = [set() for _ in range(n)]\n\nfor i in range(n - 1):\n    u, v = map(int, input().split())\n\n    tree[u - 1].add(v - 1)\n    tree[v - 1].add(u - 1)\n\n\ncomponents = 0\n\nwhile True:\n    edges_1 = [i for i in range(n) if len(tree[i]) == 1]\n\n    if not edges_1:\n        break\n    elif len(edges_1) == 2 and tree[edges_1[0]] == {edges_1[1]}:\n        components += 1\n        break\n\n    edges_set = edges_1\n    parents = []\n\n    for edge in edges_1:\n        if not tree[edge]:\n            continue\n\n        parent = tree[edge].pop()\n        tree[parent].remove(edge)\n\n        if parent in edges_set:\n            components += 1\n            continue\n\n        elif parent not in parents:\n            parents.append(parent)\n            components += 1\n\n    for parent in parents:\n        for pp in tree[parent]:\n            tree[pp].remove(parent)\n\n        tree[parent].clear()\n\n\nprint(components)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\n\ntree = [[] for _ in range(n)]\n\nfor i in range(n - 1):\n    u, v = map(int, input().split())\n\n    tree[u - 1].append(v - 1)\n    tree[v - 1].append(u - 1)\n\n\ncomponents = 0\n\nwhile True:\n    edges_1 = [i for i in range(n) if len(tree[i]) == 1]\n\n    if not edges_1:\n        break\n    elif len(edges_1) == 2 and tree[edges_1[0]] == {edges_1[1]}:\n        components += 1\n        break\n\n    edges_set = set(edges_1)\n    parents = set()\n\n    for edge in edges_1:\n        if not tree[edge]:\n            continue\n\n        parent = tree[edge].pop()\n        tree[parent].remove(edge)\n\n        if parent in edges_set:\n            components += 1\n            continue\n\n        elif parent not in parents:\n            parents.add(parent)\n            components += 1\n\n    for parent in parents:\n        for pp in tree[parent]:\n            tree[pp].remove(parent)\n\n        tree[parent].clear()\n\n\nprint(components)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\n\ntree = [set() for _ in range(n)]\n\nfor i in range(n - 1):\n    u, v = map(int, input().split())\n\n    tree[u - 1].add(v - 1)\n    tree[v - 1].add(u - 1)\n\n\ncomponents = 0\n\nwhile True:\n    edges_1 = [i for i in range(n) if len(tree[i]) == 1]\n\n    if not edges_1:\n        break\n    elif len(edges_1) == 2 and tree[edges_1[0]] == {edges_1[1]}:\n        components += 1\n        break\n\n    edges_set = edges_1\n    parents = []\n\n    for edge in edges_1:\n        if not tree[edge]:\n            continue\n\n        parent = tree[edge].pop()\n        tree[parent].remove(edge)\n\n        if parent in edges_set:\n            components += 1\n            continue\n\n        elif parent not in parents:\n            parents.append(parent)\n            components += 1\n\n    for parent in parents:\n        for pp in tree[parent]:\n            tree[pp].remove(parent)\n\n        tree[parent].clear()\n\n\nprint(components)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\n\ntree = [set() for _ in range(n)]\n\nfor i in range(n - 1):\n    u, v = map(int, input().split())\n\n    tree[u - 1].add(v - 1)\n    tree[v - 1].add(u - 1)\n\n\ncomponents = 0\n\nwhile True:\n    edges_1 = [i for i in range(n) if len(tree[i]) == 1]\n\n    if not edges_1:\n        break\n    elif len(edges_1) == 2 and tree[edges_1[0]] == {edges_1[1]}:\n        components += 1\n        break\n\n    edges_set = set(edges_1)\n    parents = set()\n\n    for edge in edges_1:\n        if not tree[edge]:\n            continue\n\n        parent = tree[edge].pop()\n        tree[parent].remove(edge)\n\n        if parent in edges_set:\n            components += 1\n            continue\n\n        elif parent not in parents:\n            parents.add(parent)\n            components += 1\n\n    for parent in parents:\n        for pp in tree[parent]:\n            tree[pp].remove(parent)\n\n        tree[parent].clear()\n\n\nprint(components)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\n\ntree = [set() for _ in range(n)]\n\nfor i in range(n - 1):\n    u, v = map(int, input().split())\n\n    tree[u - 1].add(v - 1)\n    tree[v - 1].add(u - 1)\n\n\ncomponents = 0\n\nwhile True:\n    edges_1 = [i for i in range(n) if len(tree[i]) == 1]\n\n    if not edges_1:\n        break\n    elif len(edges_1) == 2 and tree[edges_1[0]] == {edges_1[1]}:\n        components += 1\n        break\n\n    edges_set = set(edges_1)\n    parents = set()\n\n    for edge in edges_1:\n        parent = tree[edge].pop()\n        tree[parent].remove(edge)\n\n        if parent not in parents and parent not in edges_set:\n            parents.add(parent)\n\n            components += 1\n\n    for parent in parents:\n        for pp in tree[parent]:\n            tree[pp].remove(parent)\n        tree[parent].clear()\n\n\nprint(components)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\n\ntree = [set() for _ in range(n)]\n\nfor i in range(n - 1):\n    u, v = map(int, input().split())\n\n    tree[u - 1].add(v - 1)\n    tree[v - 1].add(u - 1)\n\n\ncomponents = 0\n\nwhile True:\n    edges_1 = [i for i in range(n) if len(tree[i]) == 1]\n\n    if not edges_1:\n        break\n    elif len(edges_1) == 2 and tree[edges_1[0]] == {edges_1[1]}:\n        components += 1\n        break\n\n    edges_set = set(edges_1)\n    parents = set()\n\n    for edge in edges_1:\n        parent = tree[edge].pop()\n        tree[parent].remove(edge)\n\n        if parent not in parents and parent not in edges_set:\n            parents.add(parent)\n\n            components += 1\n\n    for parent in parents:\n        for pp in tree[parent]:\n            tree[pp].remove(parent)\n        tree[parent].clear()\n\n\nprint(components)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\n\ntree = [set() for _ in range(n)]\n\nfor i in range(n - 1):\n    u, v = map(int, input().split())\n\n    tree[u - 1].add(v - 1)\n    tree[v - 1].add(u - 1)\n\n\ncomponents = 0\n\nwhile True:\n    edges_1 = [i for i in range(n) if len(tree[i]) == 1]\n\n    if not edges_1:\n        break\n    elif len(edges_1) == 2 and tree[edges_1[0]] == {edges_1[1]}:\n        components += 1\n        break\n\n    edges_set = edges_1\n    parents = []\n\n    for edge in edges_1:\n        if not tree[edge]:\n            continue\n\n        parent = tree[edge].pop()\n        tree[parent].remove(edge)\n\n        if parent in edges_set:\n            components += 1\n            continue\n\n        elif parent not in parents:\n            parents.append(parent)\n            components += 1\n\n    for parent in parents:\n        for pp in tree[parent]:\n            tree[pp].remove(parent)\n\n        tree[parent].clear()\n\n\nprint(components)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "#include <bits/stdc++.h>\n#define int int64_t\n\nusing namespace std;\n\nconst int N = 1e5;\n\nint n;\n\nint dp[N][2];\nvector<int> g[N];\n\nvoid dfs (int v, int p = -1) {\n    if (g[v].size() == 1 && p != -1) {\n        dp[v][0] = -1;\n        dp[v][1] = 1;\n        return;\n    }\n    vector<pair<int, int>> e;\n    for (auto u: g[v]) {\n        if (u != p) {\n            dfs(u, v);\n            e.emplace_back(dp[u][0] - dp[u][1], u);\n        }\n    }\n    sort(e.begin(), e.end());\n    if (e.front().first < 0) {\n        int cnt = 0, sum = 0;\n        for (auto & i : e) {\n            if (i.first < 0) {\n                cnt++;\n                sum += dp[i.second][1];\n            } else {\n                sum += dp[i.second][0];\n            }\n        }\n        sum -= cnt - 1;\n        dp[v][0] = dp[v][1] = sum;\n    } else {\n        int sum = 0;\n        for (auto & i : e) {\n            sum += dp[i.second][0];\n        }\n        dp[v][1] = sum + 1;\n        dp[v][0] = sum - dp[e.front().second][0] + dp[e.front().second][1];\n    }\n}\n\nint32_t main() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cin >> n;\n    for (int i = 1; i < n; i++) {\n        int u, v;\n        cin >> u >> v;\n        u--, v--;\n        g[u].push_back(v);\n        g[v].push_back(u);\n    }\n    dfs(0);\n    cout << dp[0][0];\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\n#define int int64_t\n\nusing namespace std;\n\nconst int N = 1e5;\n\nint n;\n\nint dp[N][2];\nvector<int> g[N];\n\nvoid dfs (int v, int p = -1) {\n    if (g[v].size() == 1 && p != -1) {\n        dp[v][0] = -1;\n        dp[v][1] = 1;\n        return;\n    }\n    vector<pair<int, int>> e;\n    for (auto u: g[v]) {\n        if (u != p) {\n            dfs(u, v);\n            e.emplace_back(dp[u][0] + 1 - dp[u][1], u);\n        }\n    }\n    sort(e.begin(), e.end());\n    if (e.front().first < 0) {\n        int cnt = 0, sum = 0;\n        for (auto & i : e) {\n            if (i.first < 0) {\n                cnt++;\n                sum += dp[i.second][1];\n            } else {\n                sum += dp[i.second][0];\n            }\n        }\n        sum -= cnt - 1;\n        dp[v][0] = dp[v][1] = sum;\n    } else {\n        int sum = 0;\n        for (auto & i : e) {\n            sum += dp[i.second][0] + 1;\n        }\n        dp[v][1] = sum;\n        dp[v][0] = sum - dp[e.front().second][0] - 1 + dp[e.front().second][1];\n    }\n}\n\nint32_t main() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cin >> n;\n    for (int i = 1; i < n; i++) {\n        int u, v;\n        cin >> u >> v;\n        u--, v--;\n        g[u].push_back(v);\n        g[v].push_back(u);\n    }\n    dfs(0);\n    /*for (int i = 0; i < n; i++) {\n        for (int j = 0; j < 2; j++)\n            cout << dp[i][j] << ' ';\n        cout << '\\n';\n    }*/\n    cout << dp[0][0];\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "import sys\r\nsys.setrecursionlimit(4*10**5 + 100)\r\nk=input\r\nkk = lambda: int(input())\r\nn=kk()\r\na = [[] for _ in range(n)]\r\nfor i in range(n-1):\r\n    u,v=map(int,input().split())\r\n    u -= 1\r\n    v-=1\r\n    a[v].append(u)\r\n    a[u].append(v)\r\nused = [False] * n\r\np = [-1] * n\r\np[0] = 0\r\ng = [[] for _ in range(n)]\r\ndef ori(v):\r\n    for x in a[v]:\r\n        if p[x] == -1:\r\n            g[v].append(x)\r\n            p[x] = v\r\n            ori(x)\r\nori(0)\r\ndpa = [-n] * n\r\ndps = [0] * n\r\ndef dpc(v):\r\n    for x in g[v]:\r\n        dpc(x)\r\n    cv = 0\r\n    t = False\r\n    for x in g[v]:\r\n        if dps[x] - 1 >= dpa[x]:\r\n            t = True\r\n        cv += max(dpa[x] + 1, dps[x])\r\n    if t:\r\n        dpa[v] = cv\r\n    else:\r\n        dpa[v] = cv - 1\r\n    dps[v] = cv\r\ndpc(0)\r\nprint(dpa[0] + 1)\r\n    \r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "##import sys\r\n##sys.setrecursionlimit(4*10**5 + 100)\r\nk=input\r\nkk = lambda: int(input())\r\nn=kk()\r\na = [[] for _ in range(n)]\r\nfor i in range(n-1):\r\n    u,v=map(int,input().split())\r\n    u -= 1\r\n    v-=1\r\n    a[v].append(u)\r\n    a[u].append(v)\r\nused = [False] * n\r\np = [-1] * n\r\np[0] = 0\r\ng = [[] for _ in range(n)]\r\ndef ori(v):\r\n    for x in a[v]:\r\n        if p[x] == -1:\r\n            g[v].append(x)\r\n            p[x] = v\r\n            ori(x)\r\nori(0)\r\ndpa = [-n] * n\r\ndps = [0] * n\r\ndef dpc(v):\r\n    for x in g[v]:\r\n        dpc(x)\r\n    cv = 0\r\n    t = False\r\n    for x in g[v]:\r\n        if dps[x] - 1 >= dpa[x]:\r\n            t = True\r\n        cv += max(dpa[x] + 1, dps[x])\r\n    if t:\r\n        dpa[v] = cv\r\n    else:\r\n        dpa[v] = cv - 1\r\n    dps[v] = cv\r\ndpc(0)\r\nprint(dpa[0] + 1)\r\n    \r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "import collections\nimport os\nimport queue\nfrom io import BytesIO, IOBase\nimport math\nimport sys\nfrom functools import reduce\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nclass Mod:\n    def __init__(self, mod=10e9 + 7):\n        self.mod = mod\n\n    def add(self, a, b):\n        return (a + b) % self.mod\n\n    def mul(self, a, b):\n        return (a * b) % self.mod\n\n    def div(self, a, b):\n        return self.mul(a, self.inv(b))\n\n    def inv(self, a):\n        if a == 1:\n            return 1\n        return ((self.mod - self.mod // a) * self.inv(self.mod % a)) % self.mod\n\n    def binpow(self, a, b):\n        ans = 1\n        while b > 0:\n            if b % 2 == 1:\n                ans = self.mul(ans, a)\n            a = self.mul(a, a)\n            b //= 2\n        return ans\n\n\nclass Dsu:\n    def __init__(self, n):\n        self.p = [i for i in range(n)]\n        self.count = n\n        self.size = [1] * n\n\n    def root(self, x):\n        if x == self.p[x]:\n            return x\n        else:\n            self.p[x] = self.root(self.p[x])\n            return self.p[x]\n\n    def merge(self, x, y):\n        r1 = self.root(x)\n        r2 = self.root(y)\n        if r1 == r2:\n            return r1\n        if self.size[r2] > self.size[r1]:\n            r1, r2 = r2, r1\n        self.size[r1] += self.size[r2]\n        self.p[r2] = r1\n        self.count -= 1\n        return r1\n\n    def sizee(self, r):\n        return self.size[self.root(r)]\n\n    def count(self):\n        return self.count\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\nL = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nN = lambda: int(L())\nF = lambda: float(L())\nNs = lambda: list(map(int, L().split()))\nSs = lambda: list(L().split())\nNss = lambda: sorted(Ns())\nFs = lambda: list(map(float, L().split()))\n\n\ndef gcd(*args):\n    return reduce(math.gcd, args, 0)\n\n\ndef presolve():\n    pass\n\n\ndef mygcd(a, b):\n    \"\"\"Calculate the Greatest Common Divisor of a and b.\n\n    Unless b==0, the result will have the same sign as b (so that when\n    b is divided by it, the result comes out positive).\n    \"\"\"\n    while b:\n        a, b = b, a % b\n    return a\n\n\n# solution is here\n# sys.setrecursionlimit(10 ** 9)\nmultitest = False\ndef solve():\n    n = N()\n    graph = [[] for _ in range(n)]\n    deg = [0] * n\n    for i in range(n - 1):\n        v, u = Ns()\n        v -= 1\n        u -= 1\n        graph[v].append(u)\n        graph[u].append(v)\n        deg[v] += 1\n        deg[u] += 1\n    q = queue.Queue()\n    deleted = set()\n    for i in range(n):\n        if deg[i] == 1:\n            q.put(i)\n\n    dsu = Dsu(n)\n    while not q.empty():\n        v = q.get()\n        if v in deleted:\n            continue\n        deleted.add(v)\n        for to in graph[v]:\n            if to not in deleted:\n                dsu.merge(v, to)\n                deleted.add(to)\n                for toto in graph[to]:\n                    if toto not in deleted:\n                        deg[toto] -= 1\n                        if deg[toto] == 0:\n                            dsu.merge(v, toto)\n                            deleted.add(toto)\n                        elif deg[toto] == 1:\n                            q.put(toto)\n    print(dsu.count)\n\n\n\n\n\n\n# dp = [[0] * n for _ in range(n)]\n# path = [[0] * n for _ in range(n)]\n# for i in range(n):\n#     dp[i][i] = a[i]\n# # dp[i][j] = min(dp[i][k] + dp[k + 1][j])\n# for ln in range(1, n):\n#     for i in range(n - ln):\n#         left = i\n#         right = i + ln\n#         dp[left][right] = 2 ** 65\n#         for k in range(i, right):\n#             left_sum = dp[left][k]\n#             right_sum = dp[k + 1][right]\n#             if left_sum + right_sum <= dp[left][right]:\n#                 dp[left][right] = left_sum + right_sum\n#                 path[left][right] = k\n# print(dp[0][n - 1])\n\ndef exceptSolve():\n    try:\n        solve()\n    except Exception as e:\n        print(e)\n        raise\n\n\nif multitest:\n    presolve()\n    t = N()\n    while t != 0:\n        exceptSolve()\n        t -= 1\nelse:\n    exceptSolve()\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "# Online Python compiler (interpreter) to run Python online.\n# Write Python 3 code in this online editor and run it.\nn = int(input());\nl = 1\nr = 1e19\nwhile l + 1 < r:\n    mid = int((l + r) / 2)\n    if int(mid * (mid + 1) / 2) <= n:\n        l = mid\n    else:\n        r = mid\nif int(r * (r + 1) / 2) <= n:\n    print(r)\nelse:\n    print(l)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nprint(n // 2)",
                "verdict": "Wrong Answer"
            }
        ]
    },
    {
        "task_id": 29,
        "description": "\u0417\u0430\u0434\u0430\u043d \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u043f\u0443\u0441\u0442\u043e\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 $v$. \u0421\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u0434\u0430\u043d\u043d\u044b\u0445 \"\u0414\u0435\u043a \u0441 \u043f\u043e\u0434\u0432\u043e\u0445\u043e\u043c\" \u0443\u043c\u0435\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0448\u0435\u0441\u0442\u0438 \u0442\u0438\u043f\u043e\u0432:\n\n1. \u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0447\u0438\u0441\u043b\u043e $x$ \u0432 \u043a\u043e\u043d\u0435\u0446 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 $v$;\n2. \u0412\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0447\u0438\u0441\u043b\u043e $x$ \u0432 \u043d\u0430\u0447\u0430\u043b\u043e \u043c\u0430\u0441\u0441\u0438\u0432\u0430 $v$;\n3. \u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0438\u0437 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 $v$;\n4. \u0423\u0434\u0430\u043b\u0438\u0442\u044c \u043f\u0435\u0440\u0432\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0438\u0437 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 $v$;\n5. \u041f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c **XOR-\u043f\u0435\u0440\u0435\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0443** \u0441 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u043c $x$ \u043a \u043c\u0430\u0441\u0441\u0438\u0432\u0443 $v$;\n6. \u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439\u0441\u044f \u0432 $v$.\n\n\u041f\u0443\u0441\u0442\u044c $k$ \u2013 \u0442\u0435\u043a\u0443\u0449\u0430\u044f \u0434\u043b\u0438\u043d\u0430 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 $v$, \u0442\u043e\u0433\u0434\u0430 **XOR-\u043f\u0435\u0440\u0435\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430** \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f, \u043a\u0430\u043a \u043c\u0430\u0441\u0441\u0438\u0432 $p$ \u0434\u043b\u0438\u043d\u043e\u0439 $k$, \u0443 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e $p_i = i \\oplus x$, \u0433\u0434\u0435 $\\oplus$ \u2013 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f \u043f\u043e\u0431\u0438\u0442\u043e\u0432\u043e\u0433\u043e \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u044e\u0449\u0435\u0433\u043e \u0438\u043b\u0438. \u0413\u0430\u0440\u0430\u043d\u0442\u0438\u0440\u0443\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u0432 $p$ \u043a\u0430\u0436\u0434\u043e\u0435 \u0438\u0437 \u0447\u0438\u0441\u0435\u043b $0,1, \\ldots , k-1$ \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u0435\u0442\u0441\u044f \u0440\u043e\u0432\u043d\u043e \u043e\u0434\u0438\u043d \u0440\u0430\u0437. \u041f\u043e\u0441\u043b\u0435 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 $p$ \u043a \u043c\u0430\u0441\u0441\u0438\u0432\u0443 $v$ \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0441\u044f \u043d\u043e\u0432\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 $v'$, \u0442\u0430\u043a\u043e\u0439 \u0447\u0442\u043e $v'_i = v_{p_i}$. \u042d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432 $p$ \u0438 $v$ \u043d\u0443\u043c\u0435\u0440\u0443\u044e\u0442\u0441\u044f \u0441 $0$.\n\n\u0420\u0435\u0430\u043b\u0438\u0437\u0443\u0439\u0442\u0435 \u0414\u0435\u043a \u0441 \u043f\u043e\u0434\u0432\u043e\u0445\u043e\u043c.\u041f\u0435\u0440\u0432\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e $n$ \u2013 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 ($1 \\leq n \\leq 5 \\cdot 10^5$). \u0417\u0430\u0442\u0435\u043c \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432. \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 \u0447\u0438\u0441\u043b\u0430 \u043e\u0442 $1$ \u0434\u043e $6$ \u2013 \u0442\u0438\u043f\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430. \u041f\u043e\u0441\u043b\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0442\u0438\u043f\u0430 $1$, $2$ \u0438 $5$ \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0447\u0438\u0441\u043b\u043e $x$ ($1 \\leq x \\leq 5 \\cdot 10^5$).\u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0442\u0438\u043f\u0430 $3$, $4$ \u0438 $6$ \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u0430: \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0443\u0434\u0430\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0434\u043b\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0442\u0438\u043f\u0430 $3$ \u0438 $4$ \u0438\u043b\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u0434\u043b\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0442\u0438\u043f\u0430 $6$.",
        "solutions": [
            {
                "code": "print(\"\"\"3\r\n7\r\n3\r\n3\r\n7\r\n7\r\n1\"\"\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <bits/stdc++.h>\n#define cs const\n#define pb push_back\nusing namespace std;\n#define fi first\n#define se second\ntypedef vector <int> vi;\ntypedef pair <int, int> pi;\ncs int N = 1 << 19, M = N * 19;\nint n;\n\nint ch[M][2];\nint w[M];\nint TAG, nd; // xor tag\n\nmultiset <int> S;\n\nint main() {\n\t#ifdef FSYo\n\tfreopen(\"1.in\", \"r\", stdin);\n\t#endif\n\tcin >> n;\n\tint m = 0;\n\twhile(n--) {\n\t\tint o, x;\n\t\tscanf(\"%d\", &o);\n\t\tif(o == 1) {\n\t\t\tscanf(\"%d\", &x);\n\t\t\t// back ins\n\t\t\tint r = 0;\n\t\t\tfor(int i = 0; i < 19; i++) {\n\t\t\t\tint c = (m >> i & 1) ^ (TAG >> i & 1);\n\t\t\t\tif(!ch[r][c]) ch[r][c] = ++ nd;\n\t\t\t\tr = ch[r][c];\n\t\t\t} w[r] = x;\n\t\t\tS.insert(x);\n\t\t\t++ m;\n\t\t}\n\t\tif(o == 2) {\n\t\t\tscanf(\"%d\", &x);\n\t\t\tint r = 0;\n\t\t\tfor(int i = 0; i < 19; i++) {\n\t\t\t\tswap(ch[r][0], ch[r][1]);\n\t\t\t\tint c = (TAG >> i & 1);\n\t\t\t\tif(!ch[r][c]) ch[r][c] = ++ nd;\n\t\t\t\tr = ch[r][c];\n\t\t\t}\n\t\t\tw[r] = x;\n\t\t\tS.insert(x);\n\t\t\t++ m;\n\t\t}\n\t\tif(o == 3) {\n\t\t\t// back era\n\t\t\t-- m;\n\t\t\tint r = 0;\n\t\t\tfor(int i = 0; i < 19; i++) {\n\t\t\t\tint c = (m >> i & 1) ^ (TAG >> i & 1);\n\t\t\t\tr = ch[r][c];\n\t\t\t}\n\t\t\tint x = w[r];\n\t\t\tcout << x << '\\n';\n\t\t\tS.erase(S.find(x));\n\t\t}\n\t\tif(o == 4) {\n\t\t\t// front era\n\t\t\t-- m;\n\t\t\tint r = 0;\n\t\t\tfor(int i = 0; i < 19; i++) {\n\t\t\t\tint c = TAG >> i & 1;\n\t\t\t\tr = ch[r][c];\n\t\t\t}\n\t\t\tint x = w[r];\n\t\t\tcout << x << '\\n';\n\t\t\tS.erase(S.find(x));\n\t\t\tfor(int i = 0, r = 0; i < 19; i++) {\n\t\t\t\tint c = TAG >> i & 1;\n\t\t\t\tswap(ch[r][0], ch[r][1]);\n\t\t\t\tr = ch[r][c ^ 1];\n\t\t\t}\n\t\t}\n\t\tif(o == 5) {\n\t\t\tint x;\n\t\t\tscanf(\"%d\", &x);\n\t\t\tTAG ^= x;\n\t\t}\n\t\tif(o == 6) {\n\t\t\tcout << *(--S.end()) << '\\n';\n\t\t}\n\t}\n\treturn 0;\n}\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <stdio.h>\n#include <limits>\n#include <cassert>\n#include <vector>\n\nusing namespace std;\n\nconst int N = 5e5;\nconst int V = 2*N;\n\nstruct Node {\n    using value_t = int;\n\n    int value, perm;\n    int l, r;\n\n    Node() : value(numeric_limits<int>::min()), perm(0), l(-1), r(-1) { }\n} nd[V];\n\nint last_deleted;\n\nint new_node() {\n    static int vc = 0;\n    assert(vc != V);\n    return vc++;\n}\n\nint new_node(int l, int r) {\n    int res = new_node();\n    nd[res].value = max(nd[l].value, nd[r].value);\n    nd[res].l = l;\n    nd[res].r = r;\n    return res;\n}\n\nint new_node(int x) {\n    int res = new_node();\n    nd[res].value = x;\n    return res;\n}\n\nvoid push(int v) {\n    if (nd[v].perm) {\n        if (nd[v].perm & 1) swap(nd[v].l, nd[v].r);\n        if (nd[v].l != -1) nd[nd[v].l].perm ^= nd[v].perm >> 1;\n        if (nd[v].r != -1) nd[nd[v].r].perm ^= nd[v].perm >> 1;\n        nd[v].perm = 0;\n    }\n}\n\nvoid update(int v) {\n    nd[v].value = max(nd[nd[v].l].value, nd[nd[v].r].value);\n}\n\nint push_front(int v, int n, int x) {\n    if (v == -1) {\n        return new_node(x);\n    } else if(n == 1) {\n        return new_node(new_node(x), v);\n    } else {\n        push(v);\n        swap(nd[v].l, nd[v].r);\n        nd[v].l = push_front(nd[v].l, n/2, x);\n        update(v);\n        return v;\n    }\n}\n\nint push_back(int v, int n, int x) {\n    if (v == -1) {\n        return new_node(x);\n    } else if(n == 1) {\n        return new_node(v, new_node(x));\n    } else {\n        push(v);\n\n        if (n % 2 == 0) {\n            nd[v].l = push_back(nd[v].l, n/2, x);\n        } else {\n            nd[v].r = push_back(nd[v].r, n/2, x);\n        }\n\n        update(v);\n        return v;\n    }\n}\n\nint pop_front(int v, int n) {\n    if (n <= 1) {\n        last_deleted = nd[v].value;\n        return -1;\n    } else if (n == 2) {\n        push(v);\n        last_deleted = nd[nd[v].l].value;\n        return nd[v].r;\n    } else {\n        push(v);\n        swap(nd[v].l, nd[v].r);\n        nd[v].r = pop_front(nd[v].r, n-n/2);\n        update(v);\n        return v;\n    }\n}\n\nint pop_back(int v, int n) {\n    if (n <= 1) {\n        last_deleted = nd[v].value;\n        return -1;\n    } else if (n == 2) {\n        push(v);\n        last_deleted = nd[nd[v].r].value;\n        return nd[v].l;\n    } else {\n        push(v);\n\n        if (n % 2 == 0) {\n            nd[v].r = pop_back(nd[v].r, n/2);\n        } else {\n            nd[v].l = pop_back(nd[v].l, n-n/2);\n        }\n\n        update(v);\n        return v;\n    }\n}\n\nint get_max(int v) {\n    if (v == -1) {\n        return numeric_limits<int>::min();\n    } else {\n        return nd[v].value;\n    }\n}\n\nint main() {\n\n    int v = -1, c = 0;\n    int n; scanf(\"%d\", &n);\n    while (n--) {\n        int t; scanf(\"%d\", &t);\n        if (t == 1) {\n            int x; scanf(\"%d\", &x);\n            v = push_back(v, c++, x);\n        }\n\n        if (t == 2) {\n            int x; scanf(\"%d\", &x);\n            v = push_front(v, c++, x);\n        }\n\n        if (t == 3) {\n            v = pop_back(v, c--);\n            printf(\"%d\\n\", last_deleted);\n        }\n\n        if (t == 4) {\n            v = pop_front(v, c--);\n            printf(\"%d\\n\", last_deleted);\n        }\n\n        if (t == 5) {\n            int x; scanf(\"%d\", &x);\n\n            if (c == 0) {\n                assert(x == 0);\n            } else {\n                int free_bits = (c ^ (c-1)) >> 1;\n                assert((x & free_bits) == x);\n                nd[v].perm ^= x;\n            }\n        }\n\n        if (t == 6) {\n            assert(c != 0);\n            printf(\"%d\\n\", nd[v].value);\n        }\n    }\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "v1=[]\nv=[]\np=[]\nn= int(input())\n\nwhile(n>0):\n    n-=1\n    c = input()\n    if len(c)>2:\n        arg = int(c.split()[1])\n    if(c[0]=='1'):\t\t\t#dobavit v konets\n        v.append(arg)\n    elif(c[0]=='2'):\t\t\t#dobavit v nachalo\n        v.insert(0, arg)\n    elif(c[0]=='3'):\t\t\t#udalit v kontse\n        print(v.pop())\n    elif(c[0]=='4'):\t\t\t#udalit v nachale\n        print(v.pop(0))\n    elif(c[0]=='5'):\t\t\t#xor\n        for i in range(len(v)):\n            v1.append(v[i^arg])\n        v.clear()\n        v = v1.copy()\n        v1.clear()\n    elif(c[0]=='6'):#vivesti max\n        print(max(v))",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "v1=[]\nv=[]\np=[]\nn= int(input())\n\nwhile(n>0):\n    n-=1\n    c = input()\n    if len(c)>2:\n        arg = int(c.split()[1])\n    if(c[0]=='1'):\t\t\t#dobavit v konets\n        v.append(arg)\n    elif(c[0]=='2'):\t\t\t#dobavit v nachalo\n        v.insert(0, arg)\n    elif(c[0]=='3'):\t\t\t#udalit v kontse\n        print(v.pop())\n    elif(c[0]=='4'):\t\t\t#udalit v nachale\n        print(v.pop(0))\n    elif(c[0]=='5'):\t\t\t#xor\n        for i in range(len(v)):\n            v1.append(v[i^arg])\n        v.clear()\n        v = v1.copy()\n        v1.clear()\n    elif(c[0]=='6'):#vivesti max\n        print(str(max(v)))",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "v1=[]\nv=[]\np=[]\nn= int(input())\n\nwhile(n>0):\n    n-=1\n    c = input()\n    if len(c)>2:\n        arg = int(c.split()[1])\n    if(c[0]=='1'):\n        v.append(arg)\n    elif(c[0]=='2'):\n        v.insert(0, arg)\n    elif(c[0]=='3'):\n        v.pop()\n    elif(c[0]=='4'):\n        v.pop(0)\n    elif(c[0]=='5'):\n        for i in range(len(v)):\n            v1.append(v[i^arg])\n        v.clear()\n        v = v1.copy()\n        v1.clear()\n    elif(c[0]=='6'):\n        print(max(v))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "v1=[]\nv=[]\np=[]\nn= int(input())\n\nwhile(n>0):\n    n-=1\n    c = input()\n    if len(c)>2:\n        arg = int(c.split()[1])\n    if(c[0]=='1'):\n        v.append(arg)\n    elif(c[0]=='2'):\n        v.insert(0, arg)\n    elif(c[0]=='3'):\n        v.pop()\n    elif(c[0]=='4'):\n        v.pop(0)\n    elif(c[0]=='5'):\n        for i in range(len(v)):\n            v1.append(v[i^arg])\n        v.clear()\n        v = v1.copy()\n        v1.clear()\n    elif(c[0]=='6':\n        print(max(v))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "\r\nfrom collections import deque\r\n\r\n\r\nclass CrazyDeque(deque):\r\n    def __init__(self, *args, **kwargs) -> None:\r\n        super().__init__(*args, **kwargs)\r\n\r\n        self._ops = {\r\n            1: self.append,\r\n            2: self.appendleft,\r\n            3: self.pop,\r\n            4: self.popleft,\r\n            5: self.xorsort,\r\n            6: self.max\r\n        }\r\n\r\n    def xorsort(self, x: int):\r\n        p = []\r\n\r\n        for i in range(len(self)):\r\n            p.append(i ^ x)\r\n\r\n        new = list(map(self.__getitem__, p))\r\n\r\n        self.clear()\r\n        self.extend(new)\r\n\r\n    def op(self, i: int, *args):\r\n        return self._ops[i](*args)\r\n\r\n    def max(self):\r\n        # todo optimize\r\n        return max(self)\r\n\r\n\r\nif __name__ == '__main__':\r\n    deque = CrazyDeque()\r\n    i = int(input())\r\n\r\n    for i in range(i):\r\n        output = deque.op(*map(int, input().split()))\r\n        if output is not None:\r\n            print(output)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from collections import deque\nfrom sys import stdin\n\ndef main():\n    n = int(input())\n    v = deque()\n    xor_permutations = []\n    for _ in range(n):\n        query = list(map(int, input().split()))\n        if query[0] == 1:\n            v.append(query[1])\n        elif query[0] == 2:\n            v.appendleft(query[1])\n        elif query[0] == 3:\n            if xor_permutations:\n                i = xor_permutations[-1] ^ (len(v) - 1)\n                print(v[i])\n                del v[i]\n                for j in range(len(xor_permutations)):\n                    if xor_permutations[j] > i:\n                        xor_permutations[j] -= 1\n            else:\n                print(v.pop())\n        elif query[0] == 4:\n            if xor_permutations:\n                i = xor_permutations[0]\n                print(v[i])\n                del v[i]\n                xor_permutations = [x - 1 for x in xor_permutations]\n            else:\n                print(v.popleft())\n        elif query[0] == 5:\n            x = query[1]\n            xor_permutations = [(i ^ x) for i in range(len(v))]\n        elif query[0] == 6:\n            print(max(v))\n\nif __name__ == \"__main__\":\n    main()\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "class Deque:\n    def __init__(self):\n        self.head = None\n        self.tail = None\n\n    def append(self, value):\n        new_node = Node(value)\n        if self.head is None:\n            self.head = new_node\n            self.tail = new_node\n        else:\n            new_node.prev = self.tail\n            self.tail.next = new_node\n            self.tail = new_node\n\n    def prepend(self, value):\n        new_node = Node(value)\n        if self.head is None:\n            self.head = new_node\n            self.tail = new_node\n        else:\n            new_node.next = self.head\n            self.head.prev = new_node\n            self.head = new_node\n\n    def pop(self):\n        if self.head is None:\n            return None\n        value = self.tail.value\n        if self.head == self.tail:\n            self.head = None\n            self.tail = None\n        else:\n            self.tail = self.tail.prev\n            self.tail.next = None\n        return value\n\n    def shift(self):\n        if self.head is None:\n            return None\n        value = self.head.value\n        if self.head == self.tail:\n            self.head = None\n            self.tail = None\n        else:\n            self.head = self.head.next\n            self.head.prev = None\n        return value\n\n    def xor_permutation(self, x):\n        new_list = Deque()\n        current = self.head\n        while current is not None:\n            new_value = current.value ^ x\n            new_list.append(new_value)\n            current = current.next\n        self.head = new_list.head\n        self.tail = new_list.tail\n\n    def max(self):\n        if self.head is None:\n            return None\n        max_value = self.head.value\n        current = self.head.next\n        while current is not None:\n            if current.value > max_value:\n                max_value = current.value\n            current = current.next\n        return max_value\n\n\nclass Node:\n    def __init__(self, value):\n        self.value = value\n        self.prev = None\n        self.next = None\n\n\nn = int(input())\ndeque = Deque()\nfor _ in range(n):\n    query = input().split()\n    query_type = int(query[0])\n    if query_type == 1:\n        x = int(query[1])\n        deque.append(x)\n    elif query_type == 2:\n        x = int(query[1])\n        deque.prepend(x)\n    elif query_type == 3:\n        print(deque.pop())\n    elif query_type == 4:\n        print(deque.shift())\n    elif query_type == 5:\n        x = int(query[1])\n        deque.xor_permutation(x)\n    elif query_type == 6:\n        print(deque.max())",
                "verdict": "Wrong Answer"
            },
            {
                "code": "class Deque:\r\n    def __init__(self):\r\n        self.data = {}\r\n        self.head = None\r\n        self.tail = None\r\n        self.length = 0\r\n\r\n    def append(self, x):\r\n        self.data[self.length] = x\r\n        if self.length == 0:\r\n            self.head = self.tail = 0\r\n        else:\r\n            self.tail += 1\r\n        self.length += 1\r\n\r\n    def appendleft(self, x):\r\n        self.data[self.length] = x\r\n        if self.length == 0:\r\n            self.head = self.tail = 0\r\n        else:\r\n            self.head -= 1\r\n        self.length += 1\r\n\r\n    def pop(self):\r\n        if self.length == 0:\r\n            return None\r\n        self.length -= 1\r\n        x = self.data[self.length]\r\n        del self.data[self.length]\r\n        if self.length == 0:\r\n            self.head = self.tail = None\r\n        else:\r\n            self.tail -= 1\r\n        return x\r\n\r\n    def popleft(self):\r\n        if self.length == 0:\r\n            return None\r\n        self.length -= 1\r\n        x = self.data[0]\r\n        del self.data[0]\r\n        if self.length == 0:\r\n            self.head = self.tail = None\r\n        else:\r\n            self.head += 1\r\n        return x\r\n\r\n    def xor_permute(self, x):\r\n        permuted_list = {}\r\n        for i in range(self.length):\r\n            permuted_list[i] = self.data[i ^ x]\r\n        return permuted_list\r\n\r\n    def max_element(self):\r\n        if self.length == 0:\r\n            return None\r\n        max_elem = self.data[0]\r\n        for i in range(1, self.length):\r\n            if self.data[i] > max_elem:\r\n                max_elem = self.data[i]\r\n        return max_elem\r\n\r\n# Read input\r\nn = int(input())\r\n\r\n# Initialize deque\r\ndq = Deque()\r\n\r\n# Process queries\r\nfor i in range(n):\r\n    query = input().split()\r\n    if query[0] == '1':\r\n        dq.append(int(query[1]))\r\n    elif query[0] == '2':\r\n        dq.appendleft(int(query[1]))\r\n    elif query[0] == '3':\r\n        removed = dq.pop()\r\n        print(removed)\r\n    elif query[0] == '4\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "class Deque:\r\n    def __init__(self):\r\n        self.data = {}\r\n        self.head = None\r\n        self.tail = None\r\n        self.length = 0\r\n\r\n    def append(self, x):\r\n        self.data[self.length] = x\r\n        if self.length == 0:\r\n            self.head = self.tail = 0\r\n        else:\r\n            self.tail += 1\r\n        self.length += 1\r\n\r\n    def appendleft(self, x):\r\n        self.data[self.length] = x\r\n        if self.length == 0:\r\n            self.head = self.tail = 0\r\n        else:\r\n            self.head -= 1\r\n        self.length += 1\r\n\r\n    def pop(self):\r\n        if self.length == 0:\r\n            return None\r\n        self.length -= 1\r\n        x = self.data[self.length]\r\n        del self.data[self.length]\r\n        if self.length == 0:\r\n            self.head = self.tail = None\r\n        else:\r\n            self.tail -= 1\r\n        return x\r\n\r\n    def popleft(self):\r\n        if self.length == 0:\r\n            return None\r\n        self.length -= 1\r\n        x = self.data[0]\r\n        del self.data[0]\r\n        if self.length == 0:\r\n            self.head = self.tail = None\r\n        else:\r\n            self.head += 1\r\n        return x\r\n\r\n    def xor_permute(self, x):\r\n        permuted_list = {}\r\n        for i in range(self.length):\r\n            permuted_list[i] = self.data[i ^ x]\r\n        return permuted_list\r\n\r\n    def max_element(self):\r\n        if self.length == 0:\r\n            return None\r\n        max_elem = self.data[0]\r\n        for i in range(1, self.length):\r\n            if self.data[i] > max_elem:\r\n                max_elem = self.data[i]\r\n        return max_elem\r\n\r\n# Read input\r\nn = int(input())\r\n\r\n# Initialize deque\r\ndq = Deque()\r\n\r\n# Process queries\r\nfor i in range(n):\r\n    query = input().split()\r\n    if query[0] == '1':\r\n        dq.append(int(query[1]))\r\n    elif query[0] == '2':\r\n        dq.appendleft(int(query[1]))\r\n    elif query[0] == '3':\r\n        removed = dq.pop()\r\n        print(removed)\r\n    elif query[0] == '4\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "class Deque:\r\n    def __init__(self):\r\n        self.stack1 = []\r\n        self.stack2 = []\r\n\r\n    def insert_last(self, x):\r\n        self.stack2.append(x)\r\n\r\n    def insert_first(self, x):\r\n        self.stack1.append(x)\r\n\r\n    def delete_last(self):\r\n        if not self.stack2:\r\n            while self.stack1:\r\n                self.stack2.append(self.stack1.pop())\r\n        if self.stack2:\r\n            return self.stack2.pop()\r\n        return None\r\n\r\n    def delete_first(self):\r\n        if not self.stack1:\r\n            while self.stack2:\r\n                self.stack1.append(self.stack2.pop())\r\n        if self.stack1:\r\n            return self.stack1.pop()\r\n        return None\r\n\r\n    def apply_xor_permutation(self, x):\r\n        new_stack1 = []\r\n        new_stack2 = []\r\n        for i in range(len(self.stack1)):\r\n            new_stack1.append(self.stack1[i] ^ x)\r\n        for i in range(len(self.stack2)):\r\n            new_stack2.append(self.stack2[i] ^ x)\r\n        self.stack1 = new_stack1\r\n        self.stack2 = new_stack2\r\n\r\n    def get_max_element(self):\r\n        max_element = float('-inf')\r\n        if self.stack1:\r\n            max_element = max(max_element, max(self.stack1))\r\n        if self.stack2:\r\n            max_element = max(max_element, max(self.stack2))\r\n        return max_element\r\n\r\n\r\nn = int(input())\r\ndeque = Deque()\r\n\r\nfor _ in range(n):\r\n    query = input().split()\r\n    query_type = int(query[0])\r\n    if query_type == 1:\r\n        x = int(query[1])\r\n        deque.insert_last(x)\r\n    elif query_type == 2:\r\n        x = int(query[1])\r\n        deque.insert_first(x)\r\n    elif query_type == 3:\r\n        print(deque.delete_last())\r\n    elif query_type == 4:\r\n        print(deque.delete_first())\r\n    elif query_type == 5:\r\n        x = int(query[1])\r\n        deque.apply_xor_permutation(x)\r\n    elif query_type == 6:\r\n        print(deque.get_max_element())",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nv = []\np = []\nk = 0\nx = 0\n\nfor i in range(n):\n    query = input().split()\n    if query[0] == '1':\n        x = int(query[1])\n        v.append(x)\n        p.append(k ^ x)\n        k += 1\n    elif query[0] == '2':\n        x = int(query[1])\n        v.insert(0, x)\n        p.insert(0, (k+1) ^ x)\n        k += 1\n    elif query[0] == '3':\n        x = v.pop()\n        p.pop()\n        print(x)\n    elif query[0] == '4':\n        x = v.pop(0)\n        p.pop(0)\n        print(x)\n    elif query[0] == '5':\n        x = int(query[1])\n        for i in range(k):\n            p[i] ^= x\n        v, p = [v[p[i]] for i in range(k)], [i for i in range(k)]\n    else:\n        max_val = float('-inf')\n        for i in range(k):\n            if p[i] == i:\n                max_val = max(max_val, v[i])\n        print(max_val)\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "from collections import deque\n\nn = int(input())\nv = deque()\np = []\nk = 0\nx = 0\n\nfor i in range(n):\n    query = input().split()\n    if query[0] == '1':\n        x = int(query[1])\n        v.append(x)\n        p.append(k ^ x)\n        k += 1\n    elif query[0] == '2':\n        x = int(query[1])\n        v.appendleft(x)\n        p.appendleft((k+1) ^ x)\n        k += 1\n    elif query[0] == '3':\n        x = v.pop()\n        p.pop()\n        print(x)\n    elif query[0] == '4':\n        x = v.popleft()\n        p.popleft()\n        print(x)\n    elif query[0] == '5':\n        x = int(query[1])\n        for i in range(k):\n            p[i] ^= x\n        v, p = deque([v[p[i]] for i in range(k)]), [i for i in range(k)]\n    else:\n        max_val = float('-inf')\n        for i in range(k):\n            if p[i] == i:\n                max_val = max(max_val, v[i])\n        print(max_val)\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "om collections import deque\n\nn = int(input())\nv = deque()\np = []\nk = 0\nx = 0\n\nfor i in range(n):\n    query = input().split()\n    if query[0] == '1':\n        x = int(query[1])\n        v.append(x)\n        p.append(k ^ x)\n        k += 1\n    elif query[0] == '2':\n        x = int(query[1])\n        v.appendleft(x)\n        p.appendleft((k+1) ^ x)\n        k += 1\n    elif query[0] == '3':\n        x = v.pop()\n        p.pop()\n        print(x)\n    elif query[0] == '4':\n        x = v.popleft()\n        p.popleft()\n        print(x)\n    elif query[0] == '5':\n        x = int(query[1])\n        for i in range(k):\n            p[i] ^= x\n        v, p = deque([v[p[i]] for i in range(k)]), [i for i in range(k)]\n    else:\n        max_val = float('-inf')\n        for i in range(k):\n            if p[i] == i:\n                max_val = max(max_val, v[i])\n        print(max_val)\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "from collections import deque\n\ndef deck_with_trick(n, queries):\n    d = deque()  # Deque to store the elements\n    max_d = deque()  # Deque to store the max elements for efficient maximum retrieval\n\n    result = []\n\n    for query in queries:\n        if query[0] == 1:\n            # Append to the end\n            x = query[1]\n            d.append(x)\n            # Update max deque\n            while max_d and max_d[-1] < x:\n                max_d.pop()\n            max_d.append(x)\n        elif query[0] == 2:\n            # Append to the beginning\n            x = query[1]\n            d.appendleft(x)\n            # Update max deque\n            while max_d and max_d[-1] < x:\n                max_d.pop()\n            max_d.append(x)\n        elif query[0] == 3:\n            # Remove last element\n            if d:\n                removed = d.pop()\n                result.append(removed)\n                if removed == max_d[-1]:\n                    max_d.pop()\n        elif query[0] == 4:\n            # Remove first element\n            if d:\n                removed = d.popleft()\n                result.append(removed)\n                if removed == max_d[0]:\n                    max_d.popleft()\n        elif query[0] == 5:\n            # XOR permutation\n            x = query[1]\n            k = len(d)\n            p = [i ^ x for i in range(k)]\n            d = deque([d[p[i]] for i in range(k)])\n        elif query[0] == 6:\n            # Output the maximum element\n            if max_d:\n                result.append(max_d[0])\n\n    return result\n\n\n# Input reading\nn = int(input())\nqueries = [list(map(int, input().split())) for _ in range(n)]\n\n# Get the result and print\nresult = deck_with_trick(n, queries)\nprint(\"\\n\".join(map(str, result)))\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from collections import deque, defaultdict\nimport sys\ninput = sys.stdin.read\n\nclass DequeWithTwist:\n    def __init__(self):\n        self.deque = deque()\n        self.freq = defaultdict(int)\n        self.max_value = float('-inf')\n    \n    def insert_end(self, x):\n        self.deque.append(x)\n        self.freq[x] += 1\n        if x > self.max_value:\n            self.max_value = x\n    \n    def insert_start(self, x):\n        self.deque.appendleft(x)\n        self.freq[x] += 1\n        if x > self.max_value:\n            self.max_value = x\n    \n    def remove_end(self):\n        if not self.deque:\n            return\n        value = self.deque.pop()\n        self.freq[value] -= 1\n        if self.freq[value] == 0:\n            del self.freq[value]\n        if value == self.max_value:\n            if self.freq:\n                self.max_value = max(self.freq)\n            else:\n                self.max_value = float('-inf')\n        return value\n    \n    def remove_start(self):\n        if not self.deque:\n            return\n        value = self.deque.popleft()\n        self.freq[value] -= 1\n        if self.freq[value] == 0:\n            del self.freq[value]\n        if value == self.max_value:\n            if self.freq:\n                self.max_value = max(self.freq)\n            else:\n                self.max_value = float('-inf')\n        return value\n    \n    def xor_permutation(self, x):\n        n = len(self.deque)\n        perm = [(i ^ x) for i in range(n)]\n        new_deque = deque(self.deque[i] for i in perm)\n        self.deque = new_deque\n        self.freq.clear()\n        self.max_value = float('-inf')\n        for item in self.deque:\n            self.freq[item] += 1\n            if item > self.max_value:\n                self.max_value = item\n    \n    def get_max(self):\n        return self.max_value\n\ndef solve():\n    data = input().strip().split()\n    index = 0\n    n = int(data[index])\n    index += 1\n    \n    dwt = DequeWithTwist()\n    results = []\n    \n    while index < len(data):\n        query_type = int(data[index])\n        index += 1\n        \n        if query_type == 1:\n            x = int(data[index])\n            index += 1\n            dwt.insert_end(x)\n        elif query_type == 2:\n            x = int(data[index])\n            index += 1\n            dwt.insert_start(x)\n        elif query_type == 3:\n            result = dwt.remove_end()\n            results.append(result)\n        elif query_type == 4:\n            result = dwt.remove_start()\n            results.append(result)\n        elif query_type == 5:\n            x = int(data[index])\n            index += 1\n            dwt.xor_permutation(x)\n        elif query_type == 6:\n            results.append(dwt.get_max())\n    \n    sys.stdout.write(\"\\n\".join(map(str, results)) + \"\\n\")\n\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <iostream>\n#include <deque>\n#include <vector>\n#include <algorithm>\n#include <limits>\n\nusing namespace std;\n\nvector<int> xor_permutation(int length, int x) {\n    vector<int> perm(length);\n    for (int i = 0; i < length; ++i) {\n        perm[i] = i ^ x;\n    }\n    return perm;\n}\n\nvector<int> apply_permutation(const vector<int>& arr, const vector<int>& perm) {\n    int n = arr.size();\n    vector<int> new_arr(n);\n    for (int i = 0; i < n; ++i) {\n        new_arr[i] = arr[perm[i]];\n    }\n    return new_arr;\n}\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    \n    int n;\n    cin >> n;\n\n    deque<int> v;\n    int max_value = numeric_limits<int>::min();\n    vector<int> results;\n    \n    while (n--) {\n        int type;\n        cin >> type;\n\n        if (type == 1) { // Insert at end\n            int x;\n            cin >> x;\n            v.push_back(x);\n            if (x > max_value) {\n                max_value = x;\n            }\n        } else if (type == 2) { // Insert at start\n            int x;\n            cin >> x;\n            v.push_front(x);\n            if (x > max_value) {\n                max_value = x;\n            }\n        } else if (type == 3) { // Remove from end\n            if (!v.empty()) {\n                int removed_value = v.back();\n                v.pop_back();\n                results.push_back(removed_value);\n                if (removed_value == max_value) {\n                    max_value = (v.empty()) ? numeric_limits<int>::min() : *max_element(v.begin(), v.end());\n                }\n            }\n        } else if (type == 4) { // Remove from start\n            if (!v.empty()) {\n                int removed_value = v.front();\n                v.pop_front();\n                results.push_back(removed_value);\n                if (removed_value == max_value) {\n                    max_value = (v.empty()) ? numeric_limits<int>::min() : *max_element(v.begin(), v.end());\n                }\n            }\n        } else if (type == 5) { // XOR permutation\n            int x;\n            cin >> x;\n            vector<int> perm = xor_permutation(v.size(), x);\n            vector<int> arr(v.begin(), v.end());\n            vector<int> new_arr = apply_permutation(arr, perm);\n            v = deque<int>(new_arr.begin(), new_arr.end());\n        } else if (type == 6) { // Print maximum\n            results.push_back(max_value);\n        }\n    }\n\n    for (int result : results) {\n        cout << result << '\\n';\n    }\n    \n    return 0;\n}\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "from collections import deque\nimport sys\n\ninput = sys.stdin.read\ndata = input().split()\nindex = 0\n\ndef next_int():\n    global index\n    value = int(data[index])\n    index += 1\n    return value\n\ndef xor_permutation(length, x):\n    return [i ^ x for i in range(length)]\n\ndef apply_permutation(arr, perm):\n    return [arr[perm[i]] for i in range(len(arr))]\n\ndef main():\n    n = next_int()\n    v = deque()\n    max_value = -float('inf')\n    results = []\n\n    for _ in range(n):\n        query_type = next_int()\n\n        if query_type == 1:  # Insert at end\n            x = next_int()\n            v.append(x)\n            if x > max_value:\n                max_value = x\n\n        elif query_type == 2:  # Insert at start\n            x = next_int()\n            v.appendleft(x)\n            if x > max_value:\n                max_value = x\n\n        elif query_type == 3:  # Remove from end\n            if v:\n                removed_value = v.pop()\n                results.append(removed_value)\n                if removed_value == max_value:\n                    max_value = max(v, default=-float('inf'))\n\n        elif query_type == 4:  # Remove from start\n            if v:\n                removed_value = v.popleft()\n                results.append(removed_value)\n                if removed_value == max_value:\n                    max_value = max(v, default=-float('inf'))\n\n        elif query_type == 5:  # XOR permutation\n            x = next_int()\n            perm = xor_permutation(len(v), x)\n            v = deque(apply_permutation(v, perm))\n\n        elif query_type == 6:  # Print maximum\n            results.append(max_value)\n\n    sys.stdout.write('\\n'.join(map(str, results)) + '\\n')\n\nif __name__ == \"__main__\":\n    main()\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "from collections import deque\nfrom typing import List, Optional\n\nclass TrickyDeque:\n    def __init__(self):\n        self.deque: deque[int] = deque()\n        self.max_stack: List[int] = []\n\n    def push_back(self, x: int) -> None:\n        self.deque.append(x)\n        if not self.max_stack or x >= self.max_stack[-1]:\n            self.max_stack.append(x)\n\n    def push_front(self, x: int) -> None:\n        self.deque.appendleft(x)\n        if not self.max_stack or x >= self.max_stack[-1]:\n            self.max_stack.append(x)\n\n    def pop_back(self) -> Optional[int]:\n        if not self.deque:\n            return None\n        x = self.deque.pop()\n        if x == self.max_stack[-1]:\n            self.max_stack.pop()\n        return x\n\n    def pop_front(self) -> Optional[int]:\n        if not self.deque:\n            return None\n        x = self.deque.popleft()\n        if x == self.max_stack[-1]:\n            self.max_stack.pop()\n        return x\n\n    def xor_permutation(self, x: int) -> None:\n        n = len(self.deque)\n        permutation = [i ^ x for i in range(n)]\n        new_deque = [0] * n\n        for i, p in enumerate(permutation):\n            new_deque[p] = self.deque[i]\n        self.deque = deque(new_deque)\n        self.max_stack = [max(self.deque)] if self.deque else []\n\n    def get_max(self) -> Optional[int]:\n        return self.max_stack[-1] if self.max_stack else None\n\ndef main():\n    n = int(input())\n    tricky_deque = TrickyDeque()\n\n    for _ in range(n):\n        query = list(map(int, input().split()))\n        \n        if query[0] == 1:\n            tricky_deque.push_back(query[1])\n        elif query[0] == 2:\n            tricky_deque.push_front(query[1])\n        elif query[0] == 3:\n            result = tricky_deque.pop_back()\n            print(result if result is not None else \"Error: Deque is empty\")\n        elif query[0] == 4:\n            result = tricky_deque.pop_front()\n            print(result if result is not None else \"Error: Deque is empty\")\n        elif query[0] == 5:\n            tricky_deque.xor_permutation(query[1])\n        elif query[0] == 6:\n            result = tricky_deque.get_max()\n            print(result if result is not None else \"Error: Deque is empty\")\n\nif __name__ == \"__main__\":\n    main()\n\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from typing import List, Optional\n\nclass TrickyDeque:\n    def __init__(self):\n        self.data: List[int] = []\n        self.front: int = 0\n        self.back: int = 0\n        self.max_val: Optional[int] = None\n        self.size: int = 0\n        self.capacity: int = 1\n\n    def _resize(self) -> None:\n        new_capacity = self.capacity * 2\n        new_data = [0] * new_capacity\n        for i in range(self.size):\n            new_data[i] = self.data[(self.front + i) % self.capacity]\n        self.data = new_data\n        self.front = 0\n        self.back = self.size\n        self.capacity = new_capacity\n\n    def push_back(self, x: int) -> None:\n        if self.size == self.capacity:\n            self._resize()\n        self.data[self.back] = x\n        self.back = (self.back + 1) % self.capacity\n        self.size += 1\n        if self.max_val is None or x > self.max_val:\n            self.max_val = x\n\n    def push_front(self, x: int) -> None:\n        if self.size == self.capacity:\n            self._resize()\n        self.front = (self.front - 1) % self.capacity\n        self.data[self.front] = x\n        self.size += 1\n        if self.max_val is None or x > self.max_val:\n            self.max_val = x\n\n    def pop_back(self) -> Optional[int]:\n        if self.size == 0:\n            return None\n        self.back = (self.back - 1) % self.capacity\n        x = self.data[self.back]\n        self.size -= 1\n        if self.size == 0:\n            self.max_val = None\n        elif x == self.max_val:\n            self.max_val = max(self.data[i % self.capacity] for i in range(self.front, self.front + self.size))\n        return x\n\n    def pop_front(self) -> Optional[int]:\n        if self.size == 0:\n            return None\n        x = self.data[self.front]\n        self.front = (self.front + 1) % self.capacity\n        self.size -= 1\n        if self.size == 0:\n            self.max_val = None\n        elif x == self.max_val:\n            self.max_val = max(self.data[i % self.capacity] for i in range(self.front, self.front + self.size))\n        return x\n\n    def xor_permutation(self, x: int) -> None:\n        if self.size == 0:\n            return\n        new_data = [0] * self.capacity\n        for i in range(self.size):\n            old_index = (self.front + i) % self.capacity\n            new_index = i ^ x\n            new_data[new_index] = self.data[old_index]\n        self.data = new_data\n        self.front = 0\n        self.back = self.size\n\n    def get_max(self) -> Optional[int]:\n        return self.max_val\n\ndef main():\n    n = int(input())\n    tricky_deque = TrickyDeque()\n\n    for _ in range(n):\n        query = list(map(int, input().split()))\n        \n        if query[0] == 1:\n            tricky_deque.push_back(query[1])\n        elif query[0] == 2:\n            tricky_deque.push_front(query[1])\n        elif query[0] == 3:\n            result = tricky_deque.pop_back()\n            print(result)\n        elif query[0] == 4:\n            result = tricky_deque.pop_front()\n            print(result)\n        elif query[0] == 5:\n            tricky_deque.xor_permutation(query[1])\n        elif query[0] == 6:\n            result = tricky_deque.get_max()\n            print(result)\n\nif __name__ == \"__main__\":\n    main()\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "class DequeWithTrick:\n    def __init__(self):\n        self.v = []\n\n    def insert_back(self, x):\n        self.v.append(x)\n\n    def insert_front(self, x):\n        self.v.insert(0, x)\n\n    def remove_back(self):\n        if self.v:\n            return self.v.pop()\n        return None\n\n    def remove_front(self):\n        if self.v:\n            return self.v.pop(0)\n        return None\n\n    def xor_permutation(self, x):\n        k = len(self.v)\n        p = [i ^ x for i in range(k)]\n        self.v = [self.v[p[i]] for i in range(k)]\n\n    def get_max(self):\n        if self.v:\n            return max(self.v)\n        return None\n\nimport sys\n\ninput = sys.stdin.read\ndata = input().splitlines()\nn = int(data[0])\ndeque = DequeWithTrick()\n\nresults = []\nfor i in range(1, n + 1):\n    query = list(map(int, data[i].split()))\n    if query[0] == 1:\n        deque.insert_back(query[1])\n    elif query[0] == 2:\n        deque.insert_front(query[1])\n    elif query[0] == 3:\n        result = deque.remove_back()\n        if result is not None:\n            results.append(result)\n    elif query[0] == 4:\n        result = deque.remove_front()\n        if result is not None:\n            results.append(result)\n    elif query[0] == 5:\n        deque.xor_permutation(query[1])\n    elif query[0] == 6:\n        result = deque.get_max()\n        if result is not None:\n            results.append(result)\n\nprint('\\n'.join(map(str, results)))\n",
                "verdict": "Time Limit Exceeded"
            }
        ]
    },
    {
        "task_id": 31,
        "description": "\u0412 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u0435 \u043d\u0435\u0440\u0435\u0434\u043a\u043e \u043c\u043e\u0436\u043d\u043e \u0432\u0441\u0442\u0440\u0435\u0442\u0438\u0442\u044c \u0442\u0430\u043a\u0443\u044e \u0437\u0430\u0434\u0430\u0447\u043a\u0443 \u0438\u0437 5-\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430:\n\n![](https://pic.sort-me.org/ac0bdc90-dd8f-43fb-8be0-09f8ec769a61)\n\n\u0412\u0430\u0448\u0430 \u0437\u0430\u0434\u0430\u0447\u0430 \u0435\u0449\u0451 \u043f\u0440\u043e\u0449\u0435: \u0434\u043b\u044f \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \ud83c\udf47 \u0432\u044b\u0447\u0438\u0441\u043b\u0438\u0442\u0435 \u043b\u044e\u0431\u044b\u0435 *\u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u044b\u0435* \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \ud83c\udf53, \ud83c\udf50 \u0438 \ud83c\udf4b.\n\u0412 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u0447\u0438\u0441\u043b\u043e \ud83c\udf47. ($2 < \ud83c\udf47 < 1000 - 7$)\u0427\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u0442\u0440\u0438 \u0447\u0438\u0441\u043b\u0430 \ud83c\udf53, \ud83c\udf50 \u0438 \ud83c\udf4b - \u043a\u043e\u0440\u043d\u0438 \u0443\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f. \u0415\u0441\u043b\u0438 \u0442\u0430\u043a\u0438\u0445 \u043a\u043e\u0440\u043d\u0435\u0439 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e, \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043b\u044e\u0431\u044b\u0435. \u0415\u0441\u043b\u0438 \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u043a\u043e\u0440\u043d\u0435\u0439 \u043d\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442, \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 `NO`.",
        "right_solution": "print(\"NO\")",
        "solutions": [
            {
                "code": "123",
                "verdict": "Wrong Answer"
            },
            {
                "code": "123",
                "verdict": "Wrong Answer"
            },
            {
                "code": "123",
                "verdict": "Wrong Answer"
            },
            {
                "code": "123",
                "verdict": "Wrong Answer"
            },
            {
                "code": "123",
                "verdict": "Wrong Answer"
            },
            {
                "code": "123",
                "verdict": "Wrong Answer"
            },
            {
                "code": "123",
                "verdict": "Wrong Answer"
            },
            {
                "code": "123",
                "verdict": "Wrong Answer"
            },
            {
                "code": "123",
                "verdict": "Wrong Answer"
            },
            {
                "code": "123",
                "verdict": "Wrong Answer"
            },
            {
                "code": "123",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(\"No\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n#include <regex>\r\nusing namespace std;\r\n#pragma region defines\r\n#define pll pair<ll, ll>\r\n#define pss pair<str, str>\r\n#define vll vector<ll>\r\n#define vstr vector<str>\r\n#define vvll vector<vector<ll>>\r\n#define vpll vector<pll>\r\n#define vvpll vector<vector<pll>>\r\n#define spll set<pll>\r\n#define sll set<ll>\r\n#define pld pair<ld, ld>\r\n#define pstl pair<str, ll>\r\n#define vld vector<ld>\r\n#define vvld vector<vector<ld>>\r\n#define vpld vector<pld>\r\n#define sld set<ld>\r\n#define PI 3.14159265358979323846\r\n#define pout(x) cout << fixed << setprecision(x)\r\n#define IOS ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n#define FR freopen(\"in.txt\", \"r\", stdin);\r\n#define FW freopen(\"out.txt\", \"w\", stdout);\r\n#define pb push_back\r\n#define ins insert\r\n#define mp make_pair\r\n#define siz(x) (ll)x.size()\r\n#define all(x) x.begin(), x.end()\r\n#define alln(x, n) x.begin(), x.begin() + n\r\n#define summ(a) (accumulate((a).begin(), (a).end(), 0ll))\r\n#define mine(a) (*min_element((a).begin(), (a).end()))\r\n#define maxe(a) (*max_element((a).begin(), (a).end()))\r\n#define mini(a) (min_element((a).begin(), (a).end()) - (a).begin())\r\n#define maxi(a) (max_element((a).begin(), (a).end()) - (a).begin())\r\n#define lowb(a, x) (lower_bound((a).begin(), (a).end(), (x)) - (a).begin())\r\n#define uppb(a, x) (upper_bound((a).begin(), (a).end(), (x)) - (a).begin())\r\n#define RED     \"\\033[31m\" \r\n#define RESET   \"\\033[0m\"\r\ntypedef long double ld;\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef string str;\r\ntemplate<class T1, class T2> istream& operator>>(istream& in, pair<T1, T2>& a) { in >> a.first >> a.second; return in; }\r\ntemplate<class T1, class T2> ostream& operator<<(ostream& out, pair<T1, T2>& a) { out << a.first << ' ' << a.second; return out; }\r\n#pragma endregion\r\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native\")\r\n#pragma GCC optimization (\"Ofast\")\r\n#pragma GCC optimization (\"unroll-loops\")\r\n#define mod (ll)(1e9 + 7)\r\n#define INF (ll)3'000'000'000'000'000'00\r\nconst double EPS = 1e-9;\r\nvoid solve();\r\nll _ = 1, n;\r\nvoid solve() {\r\n    cin >> n;\r\n    cout << \"NO\\n\";\r\n}\r\nint main() {\r\n    srand(time(NULL));\r\n    IOS;\r\n    //FR;\r\n    //FW;\r\n    //cin >> _;\r\n    while (_--) {\r\n        solve();\r\n    }\r\n    return 0;\r\n}",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#pragma GCC optimize(\"O3\")\r\n#pragma GCC optimize(\"unroll-loops\")\r\n//#pragma GCC target(\"avx2,avx,fma,bmi2\")\r\n \r\n#include <bits/stdc++.h>\r\n#include <immintrin.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n \r\n#define endl '\\n'\r\n#define int long long\r\n#define all(arr) arr.begin(), arr.end()\r\n#define multitest() int _gorilla_silverback; cin >> _gorilla_silverback; while (_gorilla_silverback --> 0)\r\n#define ls(id) (id << 1 | 1)\r\n#define rs(id) ((id << 1) + 2)\r\n#define dlg(x) (31 - __builtin_clz(x))\r\n#define ulg(x) (32 - __builtin_clz(x))\r\n#define sqr(x) ((x) * (x))\r\n#define out(x) cout << (x) << endl, exit(0)\r\n \r\ntypedef pair<int, int> ipair;\r\ntypedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> treap;\r\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\n\r\nint n, a, b, c;\r\n\r\nbool solve() {\r\n\tif (n > 2) return false;\r\n\ta = 3, b = 4, c = 5;\r\n\treturn true;\r\n}\r\n\r\nint32_t main() {\r\n\tios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);\r\n\t#ifdef LOCAL\r\n\tfreopen(\"input.txt\", \"r\", stdin), freopen(\"output.txt\", \"w\", stdout);\r\n\t#endif\r\n\tcin >> n;\r\n\tif (!solve()) out(\"NO\");\r\n\tcout << a << ' ' << b << ' ' << c << endl;\r\n}",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\r\nif a == 3 or a == 4 or a == 5:\r\n    for x in range(1, 100):\r\n    if f == 0:\r\n        for i in range(1, 100):\r\n            if f == 0:\r\n                for j in range(1, 100):\r\n                    if x ** a + i ** a == j ** a:\r\n                        print(x, i, j)\r\n                        f = 1\r\n                        break\r\nelse:\r\n    print('NO')",
                "verdict": "Runtime Error"
            },
            {
                "code": "a = int(input())\r\nb = 10\r\nprint(10, 10, (b ** a) * 2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\r\na = 2\r\nprint(1, 1, (1 ** a) + 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\r\nprint(1, 0, 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\r\nf = 0\r\nfor x in range(1, 100):\r\n    if f == 0:\r\n        for i in range(1, 100):\r\n            if f == 0:\r\n                for j in range(1, 100):\r\n                    if x ** a + i ** a == j ** a:\r\n                        print(x, i, j)\r\n                        f = 1\r\n                        break\r\nif f == 0:\r\n    print('NO')",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "print(\"no\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\nprint(1)\n    ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <bits/stdc++.h>\n\n#pragma GCC target(\"popcnt\")\n\nusing namespace std;\nusing ll = long long;\nusing ull = unsigned long long;\nusing db = double;\nusing pii = pair<int,int>;\nusing graph = vector<vector<int>>;\nconst int mod = 1e9 + 7;\nconst int MOD = 998244353;\nconst double EPS = 1e-15;\n\nstruct point{\n    double x;\n    double y;\n};\n\nstruct point3D{\n    double x;\n    double y;\n    double z;\n};\n\n// Bitsets\nint popcount(int x) {\n    return __builtin_popcount(x);\n}\n\nint popcount(ll x) {\n    return __builtin_popcountll(x);\n}\n\n// Graphs\n\nvoid dfs(int u,int prev,graph &g,vector<bool> &visited) {\n    visited[u] = true;\n    for(int v:g[u])\n        if(!visited[v]) dfs(v,u,g,visited);\n}\n\nvoid bfs(int u,graph &g, vector<int> &dist) {\n    queue<int> q;\n    q.push(u);\n    dist[u] = 0;\n    while(!q.empty()) {\n        int s = q.front();\n        q.pop();\n        for(int v: g[s]) {\n            if(dist[v] == -1) {\n                q.push(v);\n                dist[v] = dist[s] + 1;\n            }\n        }\n    }\n}\n\nbool doubleEqual(double a,double b){\n    return abs(a - b) <= EPS;\n}\n\nbool doubleGreater(double a,double b){\n    if(a > b && !doubleEqual(a,b));\n}\n\nbool doubleLess(double a,double b){\n    if(a < b && !doubleEqual(a,b));\n}\n\nbool doubleEqualOrLess(double a,double b){\n    if(a < b || doubleEqual(a,b));\n}\n\nbool doubleEqualOrGreater(double a,double b){\n    if(a > b || doubleEqual(a,b));\n}\n\npoint3D Vect3D(point3D A,point3D B){\n    point3D res;\n    res.x = B.x - A.x;\n    res.y = B.y - A.y;\n    res.z = B.z - A.z;\n    return res;\n}\n\npoint Vect(point A,point B){\n    point res;\n    res.x = B.x - A.x;\n    res.y = B.y - A.y;\n    return res;\n}\n\ndouble Length(point v){\n    return sqrt(v.x * v.x + v.y * v.y);\n}\n\ndouble Length3D(point3D v){\n    return sqrt(v.x * v.x + v.y * v.y + v.z * v.z);\n}\n\npoint Opposite(point v){\n    v.x = -v.x;\n    v.y = -v.y;\n    return v;\n}\n\npoint3D Opposite(point3D v){\n    v.x = -v.x;\n    v.y = -v.y;\n    v.z = -v.z;\n    return v;\n}\n\npoint vectAdd(point v,point w){\n    point res;\n    res.x = w.x + v.x;\n    res.y = w.y + v.y;\n    return res;\n}\n\npoint3D vect3DAdd(point3D v,point3D w){\n    point3D res;\n    res.x = v.x + w.x;\n    res.y = v.y + w.y;\n    res.z = v.z + w.z;\n    return res;\n}\n\npoint vectSub(point v,point w){\n    point res;\n    res.x = v.x - w.x;\n    res.y = v.y - w.y;\n    return res;\n}\n\npoint3D vect3DSub(point3D v,point3D w){\n    point3D res;\n    res.x = v.x - w.x;\n    res.y = v.y - w.y;\n    res.z = v.z - w.y;\n}\n\npoint vectMul(point v,double k){\n    point res;\n    res.x = v.x * k;\n    res.y = v.y * k;\n    return res;\n}\n\npoint3D vect3DMul(point3D v,double k){\n    point3D res;\n    res.x = v.x * k;\n    res.y = v.y * k;\n    res.z = v.z * k;\n    return res;\n}\n\npoint vectNorm(point v,double k){\n    point res;\n    double len = 1 / Length(v);\n    res.x = len * v.x;\n    res.y = len * v.y;\n    return res;\n}\n\npoint3D vectNorm3D(point3D v,double k){\n    point3D res;\n    double len = 1 / Length3D(v);\n    res.x = len * v.x;\n    res.y = len * v.y;\n    res.z = len * v.z;\n    return res;\n}\n\npoint relPoint(point v,point w,double r,double q){\n    point res;\n    res.x = (q * v.x + r * w.x) / (r + q);\n    res.y = (q * v.y + r * w.y) / (r + q);\n    return res;\n}\n\npoint3D relPoint3D(point3D v,point3D w,double r,double q){\n    point3D res;\n    res.x = (q * v.x + r * w.x) / (r + q);\n    res.y = (q * v.y + r * w.y) / (r + q);\n    res.z = (q * v.z + r * w.z) / (r + q);\n    return res;\n}\n\nlong long scalarProd(point v,point w){\n    return v.x * w.x + v.y * w.y;\n}\n\nlong long scalarProd3D(point3D v,point3D w){\n    return v.x * w.x + v.y * w.y + v.z * w.z;\n}\n\ndouble polarAngle(point v){\n    point e;\n    e.x = 1;\n    e.y = 0;\n    double sp = scalarProd(v,e);\n    return acos(sp / Length(v));\n}\n\nlong long crossProd(point v,point w){\n    return v.x * w.y - v.y * w.x;\n}\n\ndouble crossProd3D(point3D v,point3D w){\n    point3D c;\n    c.x = v.y * w.z - v.z * w.y;\n    c.y = -(v.x * w.z - v.z * w.x);\n    c.z = v.x * w.y - v.y * w.x;\n    return Length3D(c);\n}\n\npoint Orthogonal(point v){\n    point res;\n    res.x = -v.y;\n    res.y = v.x;\n    return res;\n}\n\n\ndouble AreaN(int n,vector<point> &A){\n    double s = 0;\n    for(int i = 1;i < n - 1;i++){\n        s += crossProd(Vect(A[0],A[i]), Vect(A[0],A[i + 1]));\n    }\n    return abs(s) / 2;\n}\n\nint angleType(point A,point B,point C){\n    point ab = Vect(A,B);\n    point ac = Vect(A,C);\n    double sp = scalarProd(ab,ac);\n    if(sp == 0LL) return 0; //\u043f\u0440\u044f\u043c\u043e\u0439\n    if(sp < 0LL) return -1; //\u0442\u0443\u043f\u043e\u0439\n    return 1; //\u043e\u0441\u0442\u0440\u044b\u0439\n}\n\nint angleType(point3D A,point3D B,point3D C){\n    point3D ab = Vect3D(A,B);\n    point3D ac = Vect3D(A,C);\n    double sp = scalarProd3D(ab,ac);\n    if(sp == 0LL) return 0;\n    if(sp < 0LL) return -1;\n    return 1;\n}\n\nll gcd(ll a,ll b) {\n    if (a < b) swap(a, b);\n    if (b == 0) return a;\n    else return gcd(b, a % b);\n}\n\nint bin_pow_mod(ll a, ll n, int mod) {\n    int res = 1;\n    while (n > 0) {\n        if (n % 2 == 1) {\n            res = (res * a) % mod;\n        }\n        a = (a * a) % mod;\n        n /= 2;\n    }\n    return res;\n}\n\nll extended_gcd(ll a,ll b,ll &x,ll &y) {\n    if (a == 0) {\n        x = 0;\n        y = 1;\n        return b;\n    }\n    ll x1,y1;\n    ll d = extended_gcd(b % a,a,x1,y1);\n    x = (y1 - (b / a) * x1);\n    y = x1;\n    return d;\n}\n\nll lcm(ll a,ll b){\n    return a * b / gcd(a,b);\n}\n\ndouble distanceDotLine(point O,point A,point B){\n    if(angleType(A,O,B) == -1 || angleType(B,O,A) == -1){\n        return min(Length(Vect(O,A)), Length(Vect(O,B)));\n    }\n    else{\n        if(doubleEqual(Length(Vect(A,B)),0)) return Length(Vect(O,A));\n        else return fabs(crossProd(Vect(O,A), Vect(O,B))) / Length(Vect(A,B));\n    }\n}\n\nbool dotEqual(pair<double,double> a,pair<double,double> b){\n    double x1 = a.first;\n    double y1 = a.second;\n    double x2 = b.first;\n    double y2 = b.second;\n    if(doubleEqual(x1,x2) && doubleEqual(y1,y2)) return 1;\n    else return 0;\n}\n\nll euler(ll n) {\n    ll res = n;\n    for (int i = 2; i * i <= n; i++) {\n        if (n % i != 0)\n            continue;\n        while (n % i == 0) {\n            res = (res - res / i);\n        }\n    }\n    if (n > 1) {\n        res = (res - res / n);\n    }\n    return res;\n}\n\nbool isPallindrome(string s) {\n    bool st = true;\n    for(int i = 0;i <= s.size() / 2;i++)\n        if(s[i] != s[s.size() - 1 - i]) st = false;\n\n    return st;\n}\n\nstring to_binary(int x) {\n    string s;\n    while(x > 0) {\n        s += (x % 2 ? '1' : '0');\n        x /= 2;\n    }\n    reverse(s.begin(),s.end());\n    return s;\n}\n\nbool isPrime(int x) {\n    for(int i = 2;i * i <= x;i++) {\n        if(x % i == 0) return false;\n    }\n    return true;\n}\n\nvoid solve() {\n    int n;\n    cin >> n;\n    if(n == 2) cout << \"3 4 5\";\n    else cout << \"NO\";\n}\n\nint main() {\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    int t;\n    //cin >> t;\n    //while(t--)\n    solve();\n}",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(\"No\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "NO",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n#include <Windows.h>\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    cout << 1;\r\n}",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include<bits/stdc++.h>\r\n#define pb push_back\r\ntypedef long long ll ;\r\nusing namespace std;\r\nconst int N = 2e5 + 7 ;\r\nint n , a[N] , c[N];\r\nvoid solve(){\r\n\tcin >> n ;\r\n\tcout << \"NO\\n\";\r\n}\r\nint main(){\r\n\tios_base::sync_with_stdio(0);\r\n\tcin.tie(0);\r\n\tcout.tie(0);\r\n\tll test = 1 , t = 1 ;\r\n\tcin >> test ;\r\n\twhile(test--){\r\n//\t\tcout << \"Case \" << t++ << \": \";\r\n\t\tsolve();\r\n\t}\r\n}",
                "verdict": "Wrong Answer"
            },
            {
                "code": "k = int(input())\nfor a in range(1000):\n    for b in range(1000):\n        t = a**k+b**k\n        if t**(1/k) == int(t**(1/k)):\n            print(a, b, int(t**(1/k)))\n            quit()\nprint(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "k = int(input())\nfor a in range(100):\n    for b in range(100):\n        t = a**k+b**k\n        if t**(1/k) == int(t**(1/k)):\n            print(a, b, int(t**(1/k)))\n            quit()\nprint(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#pragma comment(linker, \"/stack:20000000\")\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx\")\n\n#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n\n#define se second\n#define fi first\n#define ss size()\n#define pb push_back\n#define mp make_pair\n#define ins insert\n#define ll long long\n#define y1 y12313312312\n#define endl '\\n'\n#define gcd __gcd\n#define b_p __builtin_popcount\n#define next nqweqweeqeqe\n#define prev ppawfawfpfaw\n#define er erase\n#define pii pair < int, int >\n#define vi vector < int >\n#define vpii vector < pii >\n#define si set < int >\n#define spii set < pii >\n#define mii map < int, int >\n#define umii unordered_map < int, int >\n#define msi multiset < int >\n#define qi queue < int >\n#define mci map < char, int >\n#define mdi map < double, int >\n#define vd vector < double >\n#define all(x) x.begin(), x.end()\n#define mems(x, y) memset(x, y, sizeof x)\n#define srt(x, y) sort(x + 1, x + y + 1)\n#define rvs(x, y) reverse(x + 1, x + y + 1)\n//#define int ll\n\nusing namespace std;\nusing namespace __gnu_pbds;\n\nmt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());\n\ntemplate <typename T> using ordered_set = tree<T, null_type, std::less_equal<T>, rb_tree_tag, tree_order_statistics_node_update>;\n\nvoid freop()\n{\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n}\n\nvoid boos()\n{\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n}\n\nint bp (int x, int y)\n{\n    int res = x;\n\tint ret = 1;\n\twhile(y > 0)\n    {\n        if(y % 2)\n            ret = (ret * res);\n        res = (res * res);\n        y /= 2;\n    }\n    return ret;\n}\n\nint bpm(int x, int y, int md)\n{\n    int res = x;\n\tint ret = 1;\n\twhile(y > 0)\n    {\n        if(y % 2)\n            ret = (ret * res) % md;\n        res = (res * res) % md;\n        y /= 2;\n    }\n    return ret % md;\n}\n\nint cd(char c)\n{\n    return c - '0';\n}\n\nchar cc(int x)\n{\n    return x + '0';\n}\n\n/*\nstring sum (string s1,string s2){\n    int carry = 0;\n    reverse(all(s1));\n    reverse(all(s2));\n    for (int i = 0; i < s1.ss; i++) s1[i] -= '0';\n    for (int i = 0; i < s2.ss; i++) s2[i] -= '0';\n    for (int i = 0; i < max(s1.ss, s2.ss) || carry; i++) {\n        if (i == s1.ss)\n            s1.pb (0);\n        s1[i] += carry + (i < s2.ss ? s2[i] : 0);\n        carry = (s1[i] >= 10);\n        if (carry)  s1[i] -= 10;\n    }\n    for(int i = 0; i < s1.ss; i++) s1[i] += '0';\n    reverse(all(s1));\n    return s1;\n}*/\n/*\nint cnk(int x, int y, int md)\n{\n    if (y < 0 || y > x) return 0;\n    int res = fact[x];\n    res *= inv[x - y];\n    res %= md;\n    res *= inv[y];\n    res %= md;\n    return res;\n}*/\n\nint diff(int x, int y)\n{\n    return abs(x - y);\n}\n\nvoid abandon()\n{\n    cout << \"NO\";\n    exit(0);\n}\n\nconst ll INF = 8e15 + 7;\nconst int N = 1e6 + 40, T = 8 * N, logN = (int)log2(N) + 2, basic = 2011, inf = 1e9 + 7, Mod = 998244353, sx[4] = {0, 0, 1, -1}, sy[4] = {1, -1, 0, 0}, mod = 1e9 + 3;\nconst int dx[8] = {1, 1, 1, 0, 0, -1, -1, -1}, dy[8] = {1, 0, -1, 1, -1, 1, 0, -1}, BL = 1000, sqN = (int)sqrt(N);\n\nll n, m, r, l, e, id, mx, mn = INF, w, timer, ts;\n\nint a[N], b[N], c[N];\nmap < ll, ll > M, M1;\nset < ll > S;\nint add[N], del[N];\nll f;\n\nvoid solve()\n{\n    int x = 0, y = 0, z = 0;\n    cin >> x;\n    cout << \"NO\";\n}\n\nmain()\n{\n    int x, y, z;\n    //setprecision(9);\n    boos();\n    //freop();\n    ts = 1;\n    //cin >> ts;\n    for (int i = 1; i <= ts; ++i)\n    {\n        //cout << \"Case \" << i << \": \";\n        solve();\n        cout << endl;\n    }\n}\n\n/*\n(()())\n*/\n\n/*\nA.in\nA.out\n*/\n\n\n\n/* 20\n1 2 3 5 7\n*/\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "f = float(input())\r\nanswer = []\r\nfor a in range(0, 100):\r\n    for b in range(0, 100):\r\n        c = (a ** f + b ** f) ** (1 / f)\r\n        if type(c) == 'int' and a != b:\r\n            answer = [a, b, c]\r\n            break\r\nif len(answer) != 0:\r\n    print(' '.join(answer))\r\nelse:\r\n    print('NO')\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "f = float(input())\r\nanswer = []\r\nfor a in range(0, 100):\r\n    for b in range(0, 100):\r\n        for c in range(0, 1000):\r\n            if a ** f + b ** f == c ** f and a != b != c:\r\n                answer = [a, b, c]\r\nif len(answer) != 0:\r\n    print(' '.join(answer))\r\nelse:\r\n    print('NO')\r\n\r\n\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "f = float(input())\r\nanswer = []\r\nfor a in range(0, 100):\r\n    for b in range(0, 100):\r\n        for c in range(0, 1000):\r\n            if a ** f + b ** f == c ** f:\r\n                answer = [a, b, c]\r\nif len(answer) != 0:\r\n    print(' '.join(answer))\r\nelse:\r\n    print('NO')\r\n\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "f = float(input())\r\nanswer = []\r\nfor a in range(-100, 100):\r\n    for b in range(-100, 100):\r\n        for c in range(-1000, 1000):\r\n            if a ** f + b ** f == c ** f:\r\n                answer = [a, b, c]\r\nif len(answer) != 0:\r\n    print(' '.join(answer))\r\nelse:\r\n    print('NO')\r\n\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "f = float(input())\r\nanswer = []\r\nfor a in range(-100, 100):\r\n    for b in range(-100, 100):\r\n        for c in range(-1000, 1000):\r\n            if a ** f + b ** f == c ** f and type(a) == 'int' and type(b) == 'int' and type(c) == 'int':\r\n                answer = [a, b, c]\r\nif len(answer) != 0:\r\n    print(' '.join(answer))\r\nelse:\r\n    print('NO')\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "f = float(input())\r\nanswer = []\r\nfor a in range(-1000, 1000):\r\n    for b in range(-1000, 1000):\r\n        for c in range(-10000, 10000):\r\n            if a ** f + b ** f == c ** f and type(a) == 'int' and type(b) == 'int' and type(c) == 'int':\r\n                answer = [a, b, c]\r\nif len(answer) != 0:\r\n    print(' '.join(answer))\r\nelse:\r\n    print('NO')\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "f = float(input())\r\nanswer = []\r\nfor a in range(-1000, 1000):\r\n    for b in range(-1000, 1000):\r\n        for c in range(-10000, 10000):\r\n            if a ** f + b ** f == c ** f and type(a) == 'int' and type(b) == 'int' and type(c) == 'int':\r\n                answer = [a, b, c]\r\nif len(answer) != 0:\r\n    print(' '.join(answer))\r\nelse:\r\n    print('NO')\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "f = float(input())\r\nanswer = []\r\nfor a in range(-1000, 1000):\r\n    for b in range(-1000, 1000):\r\n        for c in range(-10000, 10000):\r\n            if a ** f + b ** f == c ** f and type(a) == 'int' and type(b) == 'int' and type(c) == 'int':\r\n                answer = [a, b, c]\r\nif len(answer) != 0:\r\n    print(' '.join(answer))\r\nelse:\r\n    print('NO')\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "#include <algorithm>\r\n#include <iostream>\r\n#include <vector>\r\n#include <memory>\r\n#include <array>\r\n#include <cassert>\r\n#include <vector>\r\n#include <map>\r\n\r\nusing namespace std;\r\n\r\n#define int long long\r\n\r\nsigned main() {\r\n    int a;\r\n    cout << \"NO\";\r\n}\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "//created py pafimov\n//   __      _   _   _           _          ___      _         _ _  _\n//\t|__ |   | |\t|_| |_| /_\\     | | |\\ |     |  |_| |_    |\\/|  |  |\n//\t|   |__ |_| |   |  /   \\    |_| | \\|     |  | | |_    |  | _|_ |_\n#pragma GCC optimize (\"O3\")\n#include<bits/stdc++.h>\nusing namespace std;\n\n//TEMPLATE DEFINES\n//#define int long long\ntypedef long long ll;\ntypedef vector<int> vi; typedef pair<int, int> pii;typedef vector<pair<int, int>> vpii;\n//typedef vector<long long> vi; typedef pair<long long, long long> pii;typedef vector<pair<long long, long long>> vpii;\n//#define pb push_back\n\n//TEMPLATE----------------------------------------------------------------------------------------------------------------------------------------------------\nvoid output_vector(vi& v){\n\tfor(int i : v)cout << i << \" \";\n\tcout << '\\n';\n}\nvoid input_vector(vi& v){\n\tfor(auto& i : v)cin >> i;\n}\n\n//DEV SPACE---------------------------------------------------------------------------------------------------------------------------------------------------\n\nvoid run_case(){\n\tint n;\n\tcin >> n;\n\tcout << \"NO\";\n}\t\n\n\n\n\nsigned main(){\n\tios_base::sync_with_stdio(0);\n\tcin.tie(0);\n\tcout.tie(0);\n\tint tt = 1;\n\t//cin >> tt;\n\twhile(tt--){\n\t\trun_case();\n\t}\n}",
                "verdict": "Wrong Answer"
            },
            {
                "code": "//created py pafimov\n//   __      _   _   _           _          ___      _         _ _  _\n//\t|__ |   | |\t|_| |_| /_\\     | | |\\ |     |  |_| |_    |\\/|  |  |\n//\t|   |__ |_| |   |  /   \\    |_| | \\|     |  | | |_    |  | _|_ |_\n#pragma GCC optimize (\"O3\")\n#include<bits/stdc++.h>\nusing namespace std;\n\n//TEMPLATE DEFINES\n//#define int long long\ntypedef long long ll;\ntypedef vector<int> vi; typedef pair<int, int> pii;typedef vector<pair<int, int>> vpii;\n//typedef vector<long long> vi; typedef pair<long long, long long> pii;typedef vector<pair<long long, long long>> vpii;\n//#define pb push_back\n\n//TEMPLATE----------------------------------------------------------------------------------------------------------------------------------------------------\nvoid output_vector(vi& v){\n\tfor(int i : v)cout << i << \" \";\n\tcout << '\\n';\n}\nvoid input_vector(vi& v){\n\tfor(auto& i : v)cin >> i;\n}\n\n//DEV SPACE---------------------------------------------------------------------------------------------------------------------------------------------------\n\nvoid run_case(){\n\tint n;\n\tcin >> n;\n\tcout << \"No\";\n}\t\n\n\n\n\nsigned main(){\n\tios_base::sync_with_stdio(0);\n\tcin.tie(0);\n\tcout.tie(0);\n\tint tt = 1;\n\t//cin >> tt;\n\twhile(tt--){\n\t\trun_case();\n\t}\n}",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nint main() {\r\n    int n;\r\n    cin>>n;\r\n    cout<<\"NO\";\r\n}",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\nb = 0\nc = 0\nprint(f\"{b} {c} {a}\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\nprint(f\"0 {-a} {a}\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(NO)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <bits/stdc++.h>\n\nint main() {\n    int n;\n    cin >> n;\n    cout << \"NO\\n\";\n}",
                "verdict": "Wrong Answer"
            },
            {
                "code": "vinograd = int(input())\n\nprint(1, 1, 2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "q=int(input)\nif q==1:\n    print(1,1,2)\nelif q==2:\n    print(3,4,5)\nelse:\n    print('NO')",
                "verdict": "Runtime Error"
            },
            {
                "code": "q=int(input)\nprint('NO')",
                "verdict": "Runtime Error"
            },
            {
                "code": "print(0)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "if n>2:\n    print('NO')",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <cmath>\r\n#include <numeric>\r\nusing namespace std;\r\n\r\n\r\n \r\n\r\nint main(){\r\n\r\n    int n;\r\n    \r\n    cin >> n;\r\n    cout << \"NO\";\r\n   \r\n   \r\n   \r\n  \r\n\r\n\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "print(NO)",
                "verdict": "Runtime Error"
            },
            {
                "code": "a = int(input())\nfor i in range(1000000):\n    for j in range(100000):\n        for n in range(100100):\n            if i == (j ** 2 - n ** 2)**1/2:\n                print(i)\n                break\n            else:\n                print(\"NO\")",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "v = int(input())\nif v == 11:\n    print(NO)",
                "verdict": "Runtime Error"
            },
            {
                "code": "print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def fibo(n):\n    if n in (1, 2):\n        return 1\n    return fibo(n - 1) + fibo(n - 2)\n\nx = int(input())\na, b, c = fibo(1), fibo(2), 0\nf = 3\n\nwhile True:\n    c = a**x + b**x\n    try:\n        c = c**(1./x)\n    except OverflowError:\n        print('NO')\n        break\n\n    if c.is_integer():\n        print(a, b, c)\n        break\n    else:\n        if a < 50000:\n            a, b = fibo(f), fibo(f+1)\n            f += 2\n        else:\n            print('NO')\n            break\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def fibo(n):\n    if n in (1, 2):\n        return 1\n    return fibo(n - 1) + fibo(n - 2)\n\nx = int(input())\na, b, c = fibo(1), fibo(2), 0\nf = 3\n\nwhile True:\n    c = a**x + b**x\n    c = c**(1./x)\n\n    if c.is_integer():\n        print(a, b, c)\n        break\n    else:\n        if a < 50000:\n            a, b = fibo(f), fibo(f+1)\n            f += 2\n        else:\n            print('NO')\n            break",
                "verdict": "Runtime Error"
            },
            {
                "code": "grape = int(input())\n\nfound_solution = False\n\nfor strawberry in range(1, grape):\n    for pear in range(1, grape):\n        lemon = grape - strawberry - pear\n        if lemon > 0 and strawberry ** 2 + pear ** 2 == lemon ** 2:\n            print(strawberry, pear, lemon)\n            found_solution = True\n            break\n    if found_solution:\n        break\n\nif not found_solution:\n    print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "grape = int(input())\n\nfound_solution = False\n\nfor strawberry in range(1, grape):\n    for pear in range(1, grape):\n        for lemon in range(1, grape):\n            if strawberry + pear + lemon == grape and strawberry**2 + pear**2 == lemon**2:\n                print(strawberry, pear, lemon)\n                found_solution = True\n                break\n        if found_solution:\n            break\n    if found_solution:\n        break\n\nif not found_solution:\n    print(\"NO\")",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "print(0,0,0)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(1,1,1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(NO)",
                "verdict": "Runtime Error"
            },
            {
                "code": "11",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nprint(NO)",
                "verdict": "Runtime Error"
            },
            {
                "code": "flag = True\r\nn = int(input())\r\nfor a in range(1,100):\r\n    a1=a\r\n    for b in range(1,100):\r\n        b1=b\r\n        for c in range(1,100):\r\n            c1=c\r\n            if (a1**n) + (b1**n) == c1**n:\r\n                flag=False\r\n                a2=a1\r\n                b2=b1\r\n                c2=c1\r\n                \r\n                \r\n\r\nif flag==True:\r\n    print('NO')\r\nelse:\r\n    print(a2,b2,c2)\r\n            \r\n                ",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "flag = True\r\nn = int(input())\r\nfor a in range(1,100):\r\n    a1=a\r\n    for b in range(1,100):\r\n        b1=b\r\n        for c in range(1,100):\r\n            c1=c\r\n            if (a1**n) + (b1**n) == c1**n:\r\n                flag=False\r\n                a2=a1\r\n                b2=b1\r\n                c2=c1\r\n                \r\n                \r\n\r\nif flag==True:\r\n    print('NO')\r\nelse:\r\n    print(a2,b2,c2)\r\n            \r\n                ",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "\ud83c\udf47 = int(input())\r\nsumm = 0\r\nfor i in range(n):\r\n    a, b = [int(i) for i in input().split()]\r\n    summ += b\r\nprint(summ)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nsumm = 0\r\nfor i in range(n):\r\n    a, b = [int(i) for i in input().split()]\r\n    summ += b\r\nprint(summ)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nsumm = 0\r\nfor i in range(n):\r\n    a, b = [int(i) for i in input().split()]\r\n    summ += b\r\nprint(summ)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nm=0\r\nfor a in range(1,100):\r\n    if m==1:\r\n        break\r\n    else:\r\n        for b in range(1, 100):\r\n            for c in range(1, 100):\r\n                if (a**n+b**n) == c**n:\r\n                    print(a,b,c)\r\n                    m+=1\r\n\r\nif m==0:\r\n    print(\"NO\")\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\nif n>2:\n    print('no')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a=int(input())\r\nd=0\r\nfor k in range(1, 100):\r\n    if d==1:\r\n        break\r\n    for g in range(1, 100):\r\n        for l in range(1, 100):\r\n            if k**a + g**a == l**a:\r\n                print(k,g,l)\r\n                d=d+1\r\nif d==0:\r\n    print('NO')",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "v=int(input())\r\nh=0\r\nfor k in range(1000):\r\n    if h==1:\r\n        break\r\n    for g in range(1000):        \r\n        for l in range(1000):          \r\n            if k**v+g**v == l**v:\r\n                print(k, g, l)\r\n                h=h+1\r\nif h==0:\r\n    print(\"NO\")",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "v=int(input())\r\nh=0\r\nfor k in range(1000):\r\n    h==1:\r\n    break\r\n    for g in range(1000):        \r\n        for l in range(1000):          \r\n            if k**v+g**v == l**v:\r\n                print(k, g, l)\r\n                h+=1\r\nif h==0:\r\n    print(\"NO\")",
                "verdict": "Runtime Error"
            },
            {
                "code": "v=int(input())\r\nh=0\r\nfor k in range(1000):\r\n    if h==1:\r\n        break\r\n    for g in range(1000):        \r\n        for l in range(1000):          \r\n            if k**v+g**v == l**v:\r\n                print(k, g, l)\r\n                h+=1\r\nif h==0:\r\n    print(\"NO\")",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "v=int(input())\r\nh=0\r\nfor k in range(1000):\r\n    if h==1:\r\n        break\r\n    for g in range(1, 100):        \r\n        for l in range(1, 100):          \r\n            if k**v+g**v == l**v:\r\n                print(k, g, l)\r\n                h+=1\r\nif h==0:\r\n    print(\"NO\")",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "v=int(input())\r\nh=0\r\nfor k in range(1, 100):\r\n    if h==1:\r\n        break\r\n    for g in range(1, 100):\r\n        if h==1:\r\n            break        \r\n        for l in range(1, 100):\r\n            if h==1:\r\n                break            \r\n            if k**v+g**v == l**v:\r\n                print(k, g, l)\r\n                h+=1\r\nif h==0:\r\n    print(\"NO\")",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "\u0449",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\n\r\nif n-1 == 2:\r\n    print('3 4 5')\r\nelse:\r\n    print('NO')\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nfor a in range(1,10):\r\n    for b in range(1,10):\r\n        for c in range(1,10):\r\n            if a**n+b**n==c**n:\r\n                print(a,b,c)\r\n            else:\r\n                print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a,n = map(int, input().split()) \r\ndx = [0]*(n+1) \r\ndx[0] = 1 \r\nx = 10**9 + 7 \r\nsoume = 1 \r\nfor i in range(1, n+1): \r\n    if i - a > 0: \r\n        soume -= dx[i - a - 1] \r\n        soume = (soume + x) % x \r\n    dx[i] = soume \r\n    soume += dx[i] \r\n    soume %= x \r\nprint(dx[n])",
                "verdict": "Runtime Error"
            },
            {
                "code": "a,n = map(int, input().split()) \r\ndx = [0]*(n+1) \r\ndx[0] = 1 \r\nx = 10**9 + 7 \r\nsoume = 1 \r\nfor i in range(1, n+1): \r\n    if i - a > 0: \r\n        soume -= dx[i - a - 1] \r\n        soume = (soume + x) % x \r\n    dx[i] = soume \r\n    soume += dx[i] \r\n    soume %= x \r\nprint(dx[n])",
                "verdict": "Runtime Error"
            },
            {
                "code": "a,c = map(int, input().split()) \r\ndx = [0]*(c+1) \r\ndx[0] = 1 \r\nx = 10**9 + 7 \r\nsoume = 1 \r\nfor i in range(1, c+1): \r\n    if i - a > 0: \r\n        soume -= dx[i - a - 1] \r\n        soume = (soume + x) % x \r\n    dx[i] = soume \r\n    soume += dx[i] \r\n    soume %= x \r\nprint(dx[c])",
                "verdict": "Runtime Error"
            },
            {
                "code": "a,c = map(int, input().split()) \r\ndx = [0]*(c+1) \r\ndx[0] = 1 \r\nx = 10**9 + 7 \r\nsoume = 1 \r\nfor i in range(1, c+1): \r\n    if i - a > 0: \r\n        soume -= dx[i - a - 1] \r\n        soume = (soume + x) % x \r\n    dx[i] = soume \r\n    soume += dx[i] \r\n    soume %= x \r\nprint(dx[c])",
                "verdict": "Runtime Error"
            },
            {
                "code": "v = int(input())\nfor k in range(1,10):\n    for g in range(1,10):\n        for l in range(1,10):\n            if k**v + g**v == l**v:\n                print(k, g, l)\n            else:\n                print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "v = int(input())\nfor k in range(1,10):\n    for g in range(1,10):\n        for l in range(1,10):\n            if k^v + g^v == l^v:\n                print(k, g, l)\n            else:\n                print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "v=int(input())\r\nfor k in range (1, 10):\r\n    for g in range (1, 10):\r\n        for i in range (1, 10):\r\n            if k**v+g**v==i**v:\r\n                print(k, g, i)\r\n            else:\r\n                print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "v=int(input())\r\nfor k in range (1, 10):\r\n    for g in range (1, 10):\r\n        for i in range (1, 10):\r\n            if k**v+g**v==i**v:\r\n                print(k, g, i)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a=int(input())\r\nd=0\r\nfor k in range(1, 100):\r\n    if d==1:\r\n        break\r\n    for g in range(1, 100):\r\n        for l in range(1, 100):\r\n            if k**a + g**a == l**a:\r\n                print(k,g,l)\r\n                d=d+1\r\nif d==0:\r\n    print('NO')\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\ns = 0\nfor x in range(1, 100):\n    if s != 0:\n        break\n    for y in range(x + 1, 100):\n        for z in range(y + 1, 100):\n            if x ** n + y ** n == z ** n:\n                print(x, y, z)\n                s += 1\n                \nif s == 0:\n    print('NO')",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\ns = 0\nfor x in range(1, 100):\n    if s != 0:\n        break\n    for y in range(1, 100):\n        for z in range(1, 100):\n            if x ** n + y ** n == z ** n:\n                print(x, y, z)\n                s += 1\n                \nif s == 0:\n    print('NO')",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "def fibo(n):\n    if n in (1, 2):\n        return 1\n    return fibo(n - 1) + fibo(n - 2)\n\nx = int(input())\na, b, c = fibo(1), fibo(2), 0\nf = 3\n\nwhile True:\n    c = a**x + b**x\n    try:\n        c = c**(1./x)\n    except OverflowError:\n        print('NO')\n        break\n\n    if c.is_integer():\n        print(a, b, c)\n        break\n    else:\n        if a < 50000:\n            a, b = fibo(f), fibo(f+1)\n            f += 2\n        else:\n            print('NO')\n            break",
                "verdict": "Wrong Answer"
            },
            {
                "code": "NO",
                "verdict": "Runtime Error"
            },
            {
                "code": "x = int(input())\nfor a in range(0, 100):\n    for b in range(0,100):\n        while c**x != (a**x + b**x):\n            c += 1\n        print(a,b, c)\nprint('NO')",
                "verdict": "Runtime Error"
            },
            {
                "code": "x = int(input())\nfor a in range(0,10000):\n    for b in range(0, 10000):\n        for c in range(0, 10000):\n            if (a**x+b**x) == c**x:\n                print(a,b,c)\n                \n            \n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "v = int(input())\r\n\r\nfor l in range(1, 21):\r\n    for g in range(1, 100):\r\n        for k in range(1, 100):\r\n            if l ** 2 == (g ** 2 + k ** 2):\r\n                a,b,c = l,g,k\r\nprint(a,b,c)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "v = int(input())\r\n\r\nfor l in range(1, 21):\r\n    for g in range(1, 100):\r\n        for k in range(1, 100):\r\n            if l ** 2 == (g ** 2 + k ** 2):\r\n                a,b,c = l,g,k\r\nprint(a,b,c)\r\n\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "v = int(input())\r\nfor l in range(1,10):\r\n    for g in range(1,100):\r\n        for k in range(1,100):\r\n            if (l ** v) == (g ** v) + (k ** v):\r\n                print(l, g, k)\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "v = int(input())\r\nfor l in range(1,10):\r\n    for g in range(1,100):\r\n        for k in range(1,100):\r\n            if (l ** v) == (g ** v) + (k ** v):\r\n                print(l**2, g**2+ k**2)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\nc = 1\nd = 0\nb = 0\nwhile d <= a:\n    d += c\n    c += 1\n    b += 1\nprint(b-1)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "2 3 5",
                "verdict": "Runtime Error"
            },
            {
                "code": "2 3 5",
                "verdict": "Runtime Error"
            },
            {
                "code": "for number in range(10):\r\n    print(number)\r\n    number(10)",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\r\n\r\n#include <vector>\r\n\r\n#include <algorithm>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n\r\n {\r\n\r\n    int l;\r\n\r\n    cin >> l;\r\n    int n;\r\n\r\n    cin >> n;\r\n    int m;\r\n\r\n    cin >> m;\r\n    vector<int> a (n);\r\n    vector<int> b(n);\r\n    vector<int> c(m);\r\n\r\n    for(int i = 0 ; i < n;i++) {\r\n        cin >> a[i];\r\n        cin >> b[i];\r\n\r\n    }\r\n\r\n    for(int i = 0 ; i < m;i++) {\r\n        cin >> c[i];\r\n\r\n    }\r\n\r\n\r\nfor(int j=0;j<m;j++) {\r\n    int ans = 0;\r\n    for(int i = 0 ; i < n;i++) {\r\n        if (a[i] <= c[j] && c[j] <= b[i]) {\r\n            ans++;\r\n\r\n        }\r\n\r\n    }\r\n\r\n       cout << ans <<  endl;\r\n}\r\n\r\n\r\n\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "n=int(input)\nprint(\"NO\")",
                "verdict": "Runtime Error"
            },
            {
                "code": "0",
                "verdict": "Wrong Answer"
            },
            {
                "code": "echo \"NO\";",
                "verdict": "Runtime Error"
            },
            {
                "code": "a = int(input())\r\nb = 10\r\nn = 0\r\nwhile n < 1:\r\n    for i in range(1, b):\r\n        for c in range(1, b):\r\n            for d in range(1, b):\r\n                if i ** a + c ** a == d ** a:\r\n                    n = 1\r\nif n == 1:\r\n    print(i, c , d)\r\nelse:\r\n    print(\"NO\")\r\n              \r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "a = int(input())\r\nb = 100\r\nn = 0\r\nwhile n < 1:\r\n    for i in range(1, b):\r\n        for c in range(1, b):\r\n            for d in range(1, b):\r\n                if i ** a + c ** a == d ** a:\r\n                    n = 1\r\nif n == 1:\r\n    print(i, c , d)\r\nelse:\r\n    print(\"NO\")\r\n              \r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\nfor x in range(1, 10):\n    for y in range(1, 10):\n        for z in range(1, 10):\n            if x ** n + y ** n == z ** n:\n                print(x, y, z)\n                break\n        print('NO')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nfor x in range(1, 50):\n    for y in range(1, 50):\n        for z in range(1, 50):\n            if x ** n + y ** n == z ** n:\n                print(x, y, z)\n                break\n        print('NO')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "for n in range(3, 1000-7):\n    for x in range(1, 50):\n        for y in range(1, 50):\n            for z in range(1, 50):\n                if x ** n + y ** n == z ** n:\n                    print(x, y, z)\n                    break\n            print('NO')",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "print(\"1 1 1\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "1",
                "verdict": "Wrong Answer"
            },
            {
                "code": "1",
                "verdict": "Wrong Answer"
            },
            {
                "code": "1",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import sys\r\nstrawberry = 0\r\npear = 0\r\nlemon = 0\r\ngrape = 3\r\n\r\nfor straw in range(1, 100):\r\n    for pe in range(1,100):\r\n        for lem in range(max(straw,pe), 100):\r\n            for gra in range(-20, 20):\r\n                if straw**gra + pe**gra == lem ** gra:\r\n                    print(f\"{straw}, {pe}, {lem}\")\r\n                    \r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "import sys\r\nstrawberry = 0\r\npear = 0\r\nlemon = 0\r\ngrape = 3\r\n\r\nfor straw in range(1, 100):\r\n    for pe in range(1,100):\r\n        for lem in range(max(straw,pe), 100):\r\n            for gra in range(-20, 20):\r\n                if straw**gra + pe**gra == lem ** gra:\r\n                    print(f\"{straw}, {pe}, {lem}\")\r\n                    sys.exit()\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\n    int n; \r\n    cin >> n;\r\n    cout << \"NO\";\r\n    return 0;\r\n}\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "Print(\"NO\")",
                "verdict": "Runtime Error"
            },
            {
                "code": "print(\"No\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int (input())\r\na = []\r\na1 = [] \r\ns = 0\r\nfor i in range (0 , n ) :\r\n    a.append (int(input()))\r\n    a1.append (int(input()))\r\nn-=1\r\nfor z in range (0 ,n  ):\r\n    for x in range (0 ,n):\r\n        if a[x] < a[x+1]:                         \r\n            a[x],a[x+1]= a[x+1],a[x]\r\n            a1[x], a1[x+1] =  a1[x+1] ,a1[x]\r\nfor i in range (n , -1 ,-1 ) :\r\n     s+= + a1[i]*a[i]\r\n     a[i-1]=a[i]+a[i-1]\r\nprint (s)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\nfor i in range(1,10**3):\n    for j in range(1,10**3):\n        for k in range(1,10**10):\n            if i**n+j**n == k**n:\n                print(i,j,n)\n                break\n\n                \n    ",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\nfor i in range(1,10**10):\n    for j in range(1,10**10):\n        for k in range(1,10**100):\n            if i**n+j**n == k**n:\n                print(i,j,n)\n                break\n\n                \n    ",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\nfor i in range(1,10**10):\n    for j in range(1,10**10):\n        for j in range(1,10**100):\n            if i**n+j**n == j**n:\n                print(i,j,n)\n                break\n\n                \n    ",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "print(1)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\na = 1\nb = 1\nc = 1\nwhile a**n + b**n != c**n:\n    while a**n + b**n != c**n:\n        while a**n + b**n != c**n:\n            \n",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\na = 1\nb = 1\nc = 1\nwhile a**n + b**n != c**n:\n    while a**n + b**n != c**n:\n        while a**n + b**n != c**n:\n            \n",
                "verdict": "Runtime Error"
            },
            {
                "code": "from numba import njit\r\n\r\n@njit\r\ndef poisk(a):\r\n    for i in range(2, a):\r\n        for g in range(2, a):\r\n            for t in range(2, a):\r\n                if i ** a + g ** a == t ** a and (i > 0 and g > 0 and t > 0) :\r\n                    u = i ** a + g ** a == t ** a\r\n                else:\r\n                    u = 1\r\n    if u!= 1:\r\n        return u \r\n    else:\r\n        return 0\r\n\r\na = int(input())\r\nprint('OK' if poisk(a) else 'NO')\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "from functools import lru_cache\r\n\r\n@lru_cache\r\ndef poisk(a):\r\n    for i in range(2, a):\r\n        for g in range(2, a):\r\n            for t in range(2, a):\r\n                if i ** a + g ** a == t ** a and (i > 0 and g > 0 and t > 0) :\r\n                    u = i ** a + g ** a == t ** a\r\n                else:\r\n                    u = 'OK'\r\n    if u!= 'OK':\r\n        return u \r\n    else:\r\n        return 'NO'\r\n\r\na = int(input())\r\nprint(poisk(a))\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "from functools import lru_cache\r\n\r\n@lru_cache\r\ndef poisk(a):\r\n    for i in range(2, a):\r\n        for g in range(2, a):\r\n            for t in range(2, a):\r\n                if i ** a + g ** a == t ** a and (i > 0 and g > 0 and t > 0) :\r\n                    u = i ** a + g ** a == t ** a\r\n                else:\r\n                    u = 'OK'\r\n    if u!= 'OK':\r\n        return u \r\n    else:\r\n        return 'NO'\r\n\r\na = int(input())\r\nprint(poisk(a))\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "def poisk(a):\r\n    for i in range(2, a):\r\n        for g in range(2, a):\r\n            for t in range(2, a):\r\n                if i ** a + g ** a == t ** a and (i > 0 and g > 0 and t > 0) :\r\n                    u = i ** a + g ** a == t ** a\r\n                else:\r\n                    u = 'OK'\r\n    if u!= 'OK':\r\n        return u \r\n    else:\r\n        return 'NO'\r\n\r\na = int(input())\r\nprint(poisk(a))\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "a = int(input())\r\nfor i in range(3, a):\r\n    for g in range(3, a):\r\n        for t in range(3, a):\r\n            if i ** a + g ** a == t ** a and (i > 0 and g > 0 and t > 0) :\r\n                u = i ** a + g ** a == t ** a\r\n            else:\r\n                u = 'OK'\r\nif u!= 'OK':\r\n    print(u)\r\nelse:\r\n    print('NO')\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "a = int(input())\r\nfor i in range(2, a):\r\n    for g in range(2, a):\r\n        for t in range(2, a):\r\n            if i ** a + g ** a == t ** a and (i > 0 and g > 0 and t > 0) :\r\n                u = i ** a + g ** a == t ** a\r\n            else:\r\n                u = 'OK'\r\nif u!= 'OK':\r\n    print(u)\r\nelse:\r\n    print('NO')\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "a = int(input())\r\nfor i in range(2, a + 1):\r\n    for g in range(2, a + 1):\r\n        for t in range(2, a + 1):\r\n            if i ** a + g ** a == t ** a and (i > 0 and g > 0 and t > 0) :\r\n                u = i ** a + g ** a == t ** a\r\n            else:\r\n                u = 'OK'\r\nif u!= 'OK':\r\n    print(u)\r\nelse:\r\n    print('NO')\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "a = int(input())\r\nfor i in range(a):\r\n    for g in range(a):\r\n        for t in range(a):\r\n            if i ** a + g ** a == t ** a and (i > 0 and g > 0 and t > 0) :\r\n                u = i ** a + g ** a == t ** a\r\n            else:\r\n                u = 'OK'\r\nif u!= 'OK':\r\n    print(u)\r\nelse:\r\n    print('NO')\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "print(1, 1, 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nfor i in range(1, 100):\r\n    for j in range(1, 100):\r\n        for k in range(1, 100):\r\n            if i ** n + j ** n == k ** n :\r\n                print(i, j, k)\r\n                exit(0)\r\nprint(\"NO\")",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "import math\n\ndef find_roots(n):\n    if n == 1:\n        # \u0414\u043b\u044f n = 1 \u043b\u044e\u0431\u043e\u0435 \u0440\u0435\u0448\u0435\u043d\u0438\u0435 x + y = z \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440:\n        x, y, z = 1, 2, 3  # 1 + 2 = 3\n        print(x, y, z)\n    elif n == 2:\n        # \u0414\u043b\u044f n = 2 \u0438\u0449\u0435\u043c \u041f\u0438\u0444\u0430\u0433\u043e\u0440\u043e\u0432\u0443 \u0442\u0440\u043e\u0439\u043a\u0443\n        for x in range(1, 100):\n            for y in range(x, 100):  # y >= x\n                z = math.isqrt(x**2 + y**2)\n                if x**2 + y**2 == z**2:\n                    print(x, y, z)\n                    return\n        print(\"NO\")\n    else:\n        # \u0414\u043b\u044f n > 2 \u0440\u0435\u0448\u0435\u043d\u0438\u0439 \u043d\u0435\u0442 \u0441\u043e\u0433\u043b\u0430\u0441\u043d\u043e \u0442\u0435\u043e\u0440\u0435\u043c\u0435 \u0424\u0435\u0440\u043c\u0430\n        print(\"NO\")\n\n# \u0412\u0432\u043e\u0434 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f \u0441\u0442\u0435\u043f\u0435\u043d\u0438\nn = int(input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u0441\u0442\u0435\u043f\u0435\u043d\u0438: \"))\nfind_roots(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\n\ndef find_roots(n):\n    if n == 1:\n        x, y, z = 1, 2, 3  # 1 + 2 = 3\n        print(x, y, z)\n    elif n == 2:\n        # \u0414\u043b\u044f n = 2 \u0438\u0449\u0435\u043c \u041f\u0438\u0444\u0430\u0433\u043e\u0440\u043e\u0432\u0443 \u0442\u0440\u043e\u0439\u043a\u0443\n        for x in range(1, 100):\n            for y in range(x, 100):  # y >= x\n                z = math.isqrt(x**2 + y**2)\n                if x**2 + y**2 == z**2:\n                    print(x, y, z)\n    else:\n        # \u0414\u043b\u044f n > 2 \u0440\u0435\u0448\u0435\u043d\u0438\u0439 \u043d\u0435\u0442 \u0441\u043e\u0433\u043b\u0430\u0441\u043d\u043e \u0442\u0435\u043e\u0440\u0435\u043c\u0435 \u0424\u0435\u0440\u043c\u0430\n        print(\"NO\")\n\n# \u0412\u0432\u043e\u0434 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044f \u0441\u0442\u0435\u043f\u0435\u043d\u0438\nn = int(input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c \u0441\u0442\u0435\u043f\u0435\u043d\u0438: \"))\nfind_roots(n)",
                "verdict": "Wrong Answer"
            }
        ]
    },
    {
        "task_id": 34,
        "description": "\u0412\u0441\u0435\u043c \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u043e, \u0447\u0442\u043e \u043f\u043e\u0431\u0435\u0434\u0430 \u0432 **Sort Me Round** \u0433\u0430\u0440\u0430\u043d\u0442\u0438\u0440\u0443\u0435\u0442 \u0443\u0441\u043f\u0435\u0445 \u0432 \u043b\u0438\u0447\u043d\u043e\u0439 \u0436\u0438\u0437\u043d\u0438. \u041a \u0441\u043e\u0436\u0430\u043b\u0435\u043d\u0438\u044e, \u043f\u0440\u043e\u0448\u043b\u044b\u0439 \u0440\u0430\u0443\u043d\u0434 \u0431\u044b\u043b \u043d\u0435\u0440\u0435\u0439\u0442\u0438\u043d\u0433\u043e\u0432\u044b\u043c, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0413\u0435\u043d\u0430 \u0432 \u043e\u0436\u0438\u0434\u0430\u043d\u0438\u0438 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e \u0440\u0430\u0443\u043d\u0434\u0430 \u0440\u0435\u0448\u0438\u043b \u043f\u043e\u0439\u0442\u0438 \u0437\u043d\u0430\u043a\u043e\u043c\u0438\u0442\u044c\u0441\u044f \u0441 \u0434\u0435\u0432\u0443\u0448\u043a\u0430\u043c\u0438 \u0441\u0432\u043e\u0438\u043c\u0438 \u0441\u0438\u043b\u0430\u043c\u0438.\n    \n\u0413\u043b\u0430\u0432\u043d\u0430\u044f \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u0413\u0435\u043d\u044b - \u043d\u0435\u0443\u0432\u0435\u0440\u0435\u043d\u043d\u043e\u0441\u0442\u044c \u0432 \u0441\u0435\u0431\u0435. \u041a\u0430\u0436\u0434\u044b\u0439 \u0440\u0430\u0437 \u043f\u0435\u0440\u0435\u0434 \u0442\u0435\u043c, \u043a\u0430\u043a \u043f\u043e\u0434\u043e\u0439\u0442\u0438 \u043a \u043f\u043e\u0442\u0435\u043d\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0439 \u043f\u0430\u0441\u0441\u0438\u0438, \u0435\u043c\u0443 \u043a\u0430\u0436\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u0435\u0433\u043e \u0448\u0430\u043d\u0441\u044b \u043d\u0430 \u0443\u0441\u043f\u0435\u0445 \u0440\u0430\u0432\u043d\u044b \u043d\u0443\u043b\u044e. \u0427\u0442\u043e\u0431\u044b \u043f\u0435\u0440\u0435\u0443\u0431\u0435\u0434\u0438\u0442\u044c \u0441\u0435\u0431\u044f \u0432 \u044d\u0442\u043e\u043c, \u043e\u043d \u0440\u0435\u0448\u0438\u043b \u043d\u0430\u0439\u0442\u0438 \u043d\u0430\u0443\u0447\u043d\u044b\u0439 \u0441\u043f\u043e\u0441\u043e\u0431 \u043f\u043e\u0441\u0447\u0438\u0442\u0430\u0442\u044c \u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e\u0441\u0442\u044c, \u0447\u0442\u043e \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u0430\u044f \u0434\u0435\u0432\u043e\u0447\u043a\u0430 \u043e\u0431\u0440\u0430\u0442\u0438\u0442 \u043d\u0430 \u043d\u0435\u0433\u043e \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435.\n    \n\u0413\u0435\u043d\u0435 \u043f\u043e\u043a\u0430\u0437\u0430\u043b\u0430\u0441\u044c \u043f\u0440\u0430\u0432\u0434\u0438\u0432\u043e\u0439 \u0444\u043e\u0440\u043c\u0443\u043b\u0430, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0432 \u043f\u0440\u043e\u0448\u043b\u043e\u043c \u0432\u0435\u043a\u0435 \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0438\u043b \u0438\u0441\u043f\u0430\u043d\u0441\u043a\u0438\u0439 \u043f\u0441\u0438\u0445\u043e\u043b\u043e\u0433 \u0427\u0438\u043b \u041f\u0430\u0434\u0440\u043e. \u041e\u043d\u0430 \u0433\u043b\u0430\u0441\u0438\u0442, \u0447\u0442\u043e \u0435\u0441\u043b\u0438 $n$ - \u044d\u0442\u043e \u043a\u043e\u043a\u0435\u0442\u043b\u0438\u0432\u043e\u0441\u0442\u044c \u0434\u0435\u0432\u0443\u0448\u043a\u0438, $m$ - \u0441\u0430\u043c\u043e\u0443\u0432\u0435\u0440\u0435\u043d\u043d\u043e\u0441\u0442\u044c \u0413\u0435\u043d\u044b, \u0430 $\\gcd{}$ - \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043d\u0430\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u043d\u0430\u0438\u0431\u043e\u043b\u044c\u0448\u0435\u0433\u043e \u043e\u0431\u0449\u0435\u0433\u043e \u0434\u0435\u043b\u0438\u0442\u0435\u043b\u044f, \u0442\u043e \u0448\u0430\u043d\u0441 \u043d\u0430 \u0442\u043e, \u0447\u0442\u043e \u0434\u0435\u0432\u0443\u0448\u043a\u0430 \u043e\u0431\u0440\u0430\u0442\u0438\u0442 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435 \u043d\u0430 \u0413\u0435\u043d\u0443, \u0440\u0430\u0432\u0435\u043d $(\\gcd{(n, n + 1)} - 1) \\cdot m$. \n\n\u0411\u0435\u0437\u043e\u0448\u0438\u0431\u043e\u0447\u043d\u043e \u0432\u044b\u0447\u0438\u0441\u043b\u0438\u0442\u044c \u043a\u043e\u043a\u0435\u0442\u043b\u0438\u0432\u043e\u0441\u0442\u044c \u0434\u0435\u0432\u0443\u0448\u043a\u0438 \u0413\u0435\u043d\u0435 \u043f\u043e\u0434 \u0441\u0438\u043b\u0443, \u0430 \u0432\u043e\u0442 \u043e\u0431\u044a\u0435\u043a\u0442\u0438\u0432\u043d\u043e \u043e\u0446\u0435\u043d\u0438\u0442\u044c \u0441\u0432\u043e\u044e \u0441\u0430\u043c\u043e\u0443\u0432\u0435\u0440\u0435\u043d\u043e\u0441\u0442\u044c - \u043d\u0435\u0442. \u0412\u0430\u0448\u0430 \u0437\u0430\u0434\u0430\u0447\u0430 - \u043f\u043e \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c\u0443 $n$ \u0432\u044b\u0447\u0438\u0441\u043b\u0438\u0442\u044c \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0439 \u0448\u0430\u043d\u0441, \u0447\u0442\u043e \u0434\u0435\u0432\u0443\u0448\u043a\u0430 \u0441 \u043a\u043e\u043a\u0435\u0442\u043b\u0438\u0432\u043e\u0441\u0442\u044c\u044e $n$ \u0437\u0430\u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u0435\u0442\u0441\u044f \u0413\u0435\u043d\u043e\u0439.\n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e $n$ ($1 \\le n \\le 10^{18}$)  - \u043a\u043e\u043a\u0435\u0442\u043b\u0438\u0432\u043e\u0441\u0442\u044c \u0434\u0435\u0432\u043e\u0447\u043a\u0438.\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e: \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u0448\u0430\u043d\u0441, \u0447\u0442\u043e \u0434\u0435\u0432\u043e\u0447\u043a\u0430 \u0437\u0430\u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u0435\u0442\u0441\u044f \u0413\u0435\u043d\u043e\u0439.",
        "right_solution": "print(0)",
        "solutions": [
            {
                "code": "import random\nt = (1<<19**8,)*4**7\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "print(1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\nt = (1<<19**8,)*4**7\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "(1<<19**8,)*2",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n#define int long long\n\nvoid solve() {\n  cout << 0;\n}\n\nsigned main() {\n  ios_base::sync_with_stdio(0);\n  cin.tie(0);\n  solve();\n  return 0;\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\nusing namespace std;\nusing ll = long long;\nusing ld = long double;\n\nvoid solve() {\n\n  \n\n  return;\n}\n\nsigned main() {\n  ios_base::sync_with_stdio(0); cin.tie(0); //cout.precision(10);\n#ifdef pcms2\n  freopen(\".in\", \"r\", stdin);\n  freopen(\".out\", \"w\", stdout);\n#endif\n  // int tt; cin >> tt; while(tt--) solve();\n\n  int n; cin >> n;\n  cout << \"0\\n\";\n\n  return 0;\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "import math\n\nn = int(input())\n\nm = 1 / (math.gcd(n, n + 1) - 1)\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\nprint(0)",
                "verdict": "Pending"
            },
            {
                "code": "from math import gcd\nn = int(input())\nprint(math.gcd(n, n+1) - 1)",
                "verdict": "Runtime Error"
            },
            {
                "code": "\nn = int(input())\ndef gcd(a, b):\n    if (a == 0):\n        return b\n    elif (b == 0):\n        return a\n    if (a > b):\n        return gdc(a-b, b)\n    elif (a < b):\n        return gdc(a, b-c)\n        \nprint(gcd(n, n+1) - 1)",
                "verdict": "Runtime Error"
            },
            {
                "code": "\nn = int(input())\ndef gdc(a, b):\n    if (a == 0):\n        return b\n    elif (b == 0):\n        return a\n    if (a > b):\n        return gdc(a-b, b)\n    elif (a < b):\n        return gdc(a, b-c)\n        \nprint(gcd(n, n+1) - 1)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\ndef gdc(a, b):\n    if (a == 0):\n        return b\n    elif (b == 0):\n        return a\n    if (a > b):\n        return gdc(a-b, b)\n    elif (a < b):\n        return gdc(a, b-c)\n        \nprint(gdc(n, n+1) - 1)",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\n\nint main() {\n    int64_t n;\n    std::cin >> n;\n    std::cout << 0;\n    return 0;\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n#pragma GCC optimize(\"Ofast\")\r\nusing namespace std;\r\n#define pii pair <int,int>\r\n#define F first\r\n#define S second\r\n#define int int64_t\r\nmt19937 gen(chrono::system_clock().now().time_since_epoch().count());\r\n\r\nconst int M = 998244353;\r\n\r\nvoid solve ()\r\n{\r\n    cout << 0;\r\n}\r\n\r\nint32_t main ()\r\n{\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    int q = 1;\r\n    //cin >> q;\r\n    for (;q;--q) {\r\n        solve();\r\n    }\r\n    return 0;\r\n}\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n#define int int64_t\r\nusing namespace std;\r\nint32_t main()\r\n{\r\n    cin.tie(0);cout.tie(0);\r\n    ios_base::sync_with_stdio(false);\r\n    cout << 0;\r\n}\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "def factor(n):\r\n    ans = []\r\n    d = 2\r\n    while d * d <= n:\r\n        if n % d == 0:\r\n            ans.append(d)\r\n            n //= d\r\n        else:\r\n            d += 1\r\n    if n > 1:\r\n        ans.append(n)\r\n    return max(ans)\r\n\r\n\r\nn = int(input())\r\nh = factor(n)\r\nif h == n:\r\n    print(0)\r\nelse:\r\n    print(h)\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "/*\n \u2804\u2804\u2804\u28b0\u28e7\u28fc\u28ef\u2804\u28f8\u28e0\u28f6\u28f6\u28e6\u28fe\u2804\u2804\u2804\u2804\u2840\u2804\u2880\u28ff\u28ff\u2804\u2804\u2804\u28b8\u2847\u2804\u2804\n\u2804\u2804\u2804\u28fe\u28ff\u283f\u283f\u2836\u283f\u28bf\u28ff\u28ff\u28ff\u28ff\u28e6\u28e4\u28c4\u2880\u2845\u28a0\u28fe\u28db\u2849\u2804\u2804\u2804\u2838\u2880\u28ff\u2804\n\u2804\u2804\u2880\u284b\u28e1\u28f4\u28f6\u28f6\u2840\u2804\u2804\u2819\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u28f4\u28ff\u28ff\u28ff\u2883\u28e4\u28c4\u28c0\u28e5\u28ff\u28ff\u2804\n\u2804\u2804\u28b8\u28c7\u283b\u28ff\u28ff\u28ff\u28e7\u28c0\u2880\u28e0\u284c\u28bb\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u283f\u283f\u283f\u28ff\u28ff\u28ff\u2804\n\u2804\u2880\u28b8\u28ff\u28f7\u28e4\u28e4\u28e4\u28ec\u28d9\u28db\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u28ff\u28ff\u284d\u2804\u2804\u2880\u28e4\u28c4\u2809\u280b\u28f0\n\u2804\u28fc\u28d6\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u2887\u28ff\u28ff\u2877\u2836\u2836\u28bf\u28ff\u28ff\u2807\u2880\u28e4\n\u2818\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28fd\u28ff\u28ff\u28ff\u2847\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28f7\u28f6\u28e5\u28f4\u28ff\u2857\n\u2880\u2808\u28bf\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u285f\u2804\n\u28b8\u28ff\u28e6\u28cc\u28db\u28fb\u28ff\u28ff\u28e7\u2819\u281b\u281b\u286d\u2805\u2812\u2826\u282d\u28ed\u287b\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u287f\u2803\u2804\n\u2818\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2846\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2839\u2808\u288b\u28fd\u28ff\u28ff\u28ff\u28ff\u28f5\u28fe\u2803\u2804\n\u2804\u2818\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2804\u28f4\u28ff\u28f6\u28c4\u2804\u28f4\u28f6\u2804\u2880\u28fe\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2803\u2804\u2804\n\u2804\u2804\u2808\u283b\u28ff\u28ff\u28ff\u28ff\u28ff\u28ff\u2844\u28bb\u28ff\u28ff\u28ff\u2804\u28ff\u28ff\u2840\u28fe\u28ff\u28ff\u28ff\u28ff\u28db\u281b\u2801\u2804\u2804\u2804\n\u2804\u2804\u2804\u2804\u2808\u281b\u28bf\u28ff\u28ff\u28ff\u2801\u281e\u28bf\u28ff\u28ff\u2844\u28bf\u28ff\u2847\u28f8\u28ff\u28ff\u283f\u281b\u2801\u2804\u2804\u2804\u2804\u2804\n\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u2809\u283b\u28ff\u28ff\u28fe\u28e6\u2859\u283b\u28f7\u28fe\u28ff\u2803\u283f\u280b\u2801\u2804\u2804\u2804\u2804\u2804\u2880\u28e0\u28f4\n\u28ff\u28ff\u28ff\u28f6\u28f6\u28ee\u28e5\u28d2\u2832\u28ae\u28dd\u287f\u28ff\u28ff\u2846\u28ff\u287f\u2803\u2804\u2804\u2804\u2804\u2804\u2804\u2804\u28e0\u28f4\u28ff\u28ff\u28ff\n */\n\n#include <bits/stdc++.h>\n#include <ext/pb_ds/detail/standard_policies.hpp>\n#include <ext/pb_ds/assoc_container.hpp>\n\nusing namespace std;\nusing namespace __gnu_pbds;\n\ntypedef long long ll;\ntypedef long double ld;\ntypedef double db;\ntypedef unsigned long long ull;\ntypedef pair<ll, ll> pll;\ntypedef pair<int, int> pii;\ntypedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;\n#define all(x) (x).begin(), (x).end()\nmt19937 mt_rand(time(nullptr));\n\ntemplate <typename A, typename B>\nstring to_string(pair<A, B> p);\n\ntemplate <typename A, typename B, typename C>\nstring to_string(tuple<A, B, C> p);\n\ntemplate <typename A, typename B, typename C, typename D>\nstring to_string(tuple<A, B, C, D> p);\n\nstring to_string(const string& s) {\n    return '\"' + s + '\"';\n}\n\nstring to_string(const char* s) {\n    return to_string((string) s);\n}\n\nstring to_string(vector<bool> v) {\n    bool first = true;\n    string res = \"{\";\n    for (int i = 0; i < static_cast<int>(v.size()); i++) {\n        if (!first) {\n            res += \", \";\n        }\n        first = false;\n        res += to_string(v[i]);\n    }\n    res += \"}\";\n    return res;\n}\n\ntemplate <typename A>\nstring to_string(A v) {\n    bool first = true;\n    string res = \"{\";\n    for (const auto &x : v) {\n        if (!first) {\n            res += \", \";\n        }\n        first = false;\n        res += to_string(x);\n    }\n    res += \"}\";\n    return res;\n}\n\ntemplate <typename A, typename B>\nstring to_string(pair<A, B> p) {\n    return \"(\" + to_string(p.first) + \", \" + to_string(p.second) + \")\";\n}\n\ntemplate <typename A, typename B, typename C>\nstring to_string(tuple<A, B, C> p) {\n    return \"(\" + to_string(get<0>(p)) + \", \" + to_string(get<1>(p)) + \", \" + to_string(get<2>(p)) + \")\";\n}\n\ntemplate <typename A, typename B, typename C, typename D>\nstring to_string(tuple<A, B, C, D> p) {\n    return \"(\" + to_string(get<0>(p)) + \", \" + to_string(get<1>(p)) + \", \" + to_string(get<2>(p)) + \", \" + to_string(get<3>(p)) + \")\";\n}\n\nvoid debug_out() { cout << \"\\n\"; }\ntemplate <typename Head, typename... Tail>\nvoid debug_out(Head H, Tail... T) {\n    cout << \" \" << to_string(H);\n    debug_out(T...);\n}\n\n#ifdef CLOWN\n    #define dbg(...) cout << \"[\" << #__VA_ARGS__ << \"]:\", debug_out(__VA_ARGS__);\n#else\n    #define dbg(...);\n#endif\n\nint test = 0;\n\nvoid fastio() {\n    ios_base::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cout.tie(nullptr);\n}\n\nvoid solve() {\n    cout << 0 << \"\\n\";\n}\n\nint32_t main() {\n#ifdef CLOWN\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n#endif\n    int t = 1;\n    fastio();\n    if (test) cin >> t;\n    while (t--) { solve(); }\n    return 0;\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define int int64_t\r\n// codeforces: sdyakonov\r\nint32_t main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << 0;\r\n}\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define int int64_t\r\n// codeforces: sdyakonov\r\nint32_t main() {\r\n    int n;\r\n    cin >> n;\r\n    cout << 0;\r\n}\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "0",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#define int long long\r\n\r\nconst int INF = 1e9;\r\n\r\nsigned main()\r\n{\r\n    ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n\r\n    int n;\r\n    cin >> n;\r\n    cout << \"0\";\r\n    return 0;\r\n}\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\n\r\n\r\ndef gcd(a, b):\r\n    for i in range(min(a, b), 0, -1):\r\n        if a % i == 0 and b % i == 0:\r\n            return i\r\n            break\r\n\r\n\r\nf = (gcd(n, n + 1) - 1)\r\nprint(f)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "print(int(type(input() != str)))",
                "verdict": "Runtime Error"
            },
            {
                "code": "0",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n//#include \"testlib.h\"\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    cout.tie(nullptr);\r\n    int n;\r\n    cin >> n;\r\n    cout << gcd(n, n + 1) - 1;\r\n}\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "no",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\n\nusing namespace std;\n\nint main(){\n    int a;\n    cin >> a;\n    cout << 0;\n    return 0;\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "print(\"10\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nprint(gcd(n, n+1))",
                "verdict": "Runtime Error"
            },
            {
                "code": "print(123)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(m)",
                "verdict": "Runtime Error"
            },
            {
                "code": "print(\"228\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(\"1000\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nn1 = n + 1\r\n\r\n\r\ndef gcd(a, b):\r\n    a = a\r\n    b = b\r\n    if a % b == 0:\r\n        return b\r\n    elif b % a == 0:\r\n        return a\r\n    else:\r\n        n = []\r\n        n1 = []\r\n        while a != 1:\r\n            if a % 2 == 0:\r\n                a //= 2\r\n                n.append(2)\r\n            else:\r\n                for i in range(2, a + 1):\r\n                    if a % i == 0:\r\n                        a //= i\r\n                        n.append(i)\r\n                        break\r\n        while b != 1:\r\n            if b % 2 == 0:\r\n                b //= 2\r\n                n.append(2)\r\n            else:\r\n                for i in range(2, b + 1):\r\n                    if b % i == 0:\r\n                        b //= i\r\n                        n.append(i)\r\n                        break\r\n        m = [e for e in n if e in n1]\r\n        s = 1\r\n        if len(m) != 0:\r\n            for i in m:\r\n                s *= i\r\n            return s\r\n        else:\r\n            return s\r\n\r\n\r\nprint(gcd(n, n1) - 1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "def gcd(x, y):\r\n    l = 0\r\n    for i in range(1, y // 2 + 1):\r\n        if x % i == 0 and y % i == 0:\r\n            l = max(l, i)\r\n    return l\r\nn = int(input())\r\nans = 0\r\nfor m in range(100):\r\n    ans = max(ans, (gcd(n, n + 1) - 1) * m)\r\nprint(ans)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\nd = gcd(n, n+1)\na = (d-1)\nprint(a)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n=int(input())\nd = gcd(n, n+1)\na = (d-1)*100\nprint(a)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n=int(input())\na = (gcd(n, n+1)-1)*100\nprint(a)",
                "verdict": "Runtime Error"
            },
            {
                "code": "def gcd(a, b):\n    while b:\n        a, b = b, a%b\n    return a\n    \ndef chan(n):\n    return gcd(n,n+1)-1\n    \nchan(n)",
                "verdict": "Runtime Error"
            },
            {
                "code": "def gcd(a, b):\n    while b:\n        a, b = b, a%b\n    return a\n    \nprint(gcd(n,n+1)-1)",
                "verdict": "Runtime Error"
            },
            {
                "code": "def gcd(a, b):\n    while b:\n        a, b = b, a%b\n    return a\n    \nreturn gcd(n,n+1)-1",
                "verdict": "Runtime Error"
            },
            {
                "code": "import math\r\ndef check(n):\r\n    k = 0\r\n    for i in range(2, n // 2 + 1):\r\n        if (n % i == 0):\r\n            k = k + 1\r\n    if (k <= 0):\r\n        return True\r\n    else:\r\n        return False\r\nn = int(input('n: '))\r\nif(n <= 10**5 and check(n)):\r\n    print(math.gcd(n, n + 1) - 1)\r\n\r\n\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\ndef check(n):\r\n    k = 0\r\n    for i in range(2, n // 2 + 1):\r\n        if (n % i == 0):\r\n            k = k + 1\r\n    if (k <= 0):\r\n        return True\r\n    else:\r\n        return False\r\nn = int(input('n: '))\r\nif(n <= 100000 and check(n)):\r\n    print(math.gcd(n, n + 1) - 1)\r\n\r\n\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\ndef check(n):\r\n    k = 0\r\n    for i in range(2, n // 2 + 1):\r\n        if (n % i == 0):\r\n            k = k + 1\r\n    if (k <= 0):\r\n        return True\r\n    else:\r\n        return False\r\nn = int(input('n: '))\r\nif(n <= 100000 and check(n)):\r\n    print(math.gcd(n, n + 1) - 1)\r\n\r\n\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\n\r\nn = int(input('n: '))\r\nprint(math.gcd(n,n+1)-1)\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def gcd(a: int, b: int) -> int:\n    while a != b:\n        if a > b:\n            a = a - b\n        else:\n            b = b - a        \n    \n    return a\n\nn = int(input())\nprint((gcd(n, n+1) - 1) * 100)\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = input()\nno = n * 0\nprint (no)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def gcd(a, b):\r\n    while b:\r\n        a, b = b, a % b\r\n    return a\r\n\r\ndef calculate_chance(n):\r\n    result = (gcd(n, n + 1) - 1) * n\r\n    return result\r\n\r\nn = int(input())\r\nprint(calculate_chance(n))\r\ndef is_prime(num):\r\n    if num < 2:\r\n        return False\r\n    for i in range(2, int(num ** 0.5) + 1):\r\n        if num % i == 0:\r\n            return False\r\n    return True\r\n\r\ndef gcd(a, b):\r\n    while b:\r\n        a, b = b, a % b\r\n    return a\r\n\r\ndef calculate_chance(n):\r\n    if not is_prime(n):\r\n        return 0\r\n    result = (gcd(n, n + 1) - 1) * n\r\n    return result\r\n\r\nn = int(input())\r\nprint(calculate_chance(n))\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "import time\ntime.sleep(0.8)\n\nn = int(input())\n\nif n > 10**5:\n    print(1)\nelse:\n    print(1)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import time\ntime.sleep(0.8)\n\nn = int(input())\n\nif n > 10**5:\n    print(1)\nelse:\n    print(1)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import time\ntime.sleep(0.8)\n\nn = int(input())\n\nif n > 10**5:\n    print(1)\nelse:\n    print(1)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import time\ntime.sleep(0.8)\n\nn = int(input())\n\nif n > 10**5:\n    print(1)\nelse:\n    print(1)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import time\ntime.sleep(0.8)\n\nn = int(input())\n\nif n > 10**5:\n    print(1)\nelse:\n    print(1)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import time\ntime.sleep(0.8)\n\nn = int(input())\n\nif n > 10**5:\n    print(1)\nelse:\n    print(1)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import time\ntime.sleep(0.8)\n\nn = int(input())\n\nif n > 10**5:\n    print(1)\nelse:\n    print(0)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import time\ntime.sleep(0.8)\n\nn = int(input())\n\nif n > 10**5:\n    print(1)\nelse:\n    print(0)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import time\ntime.sleep(0.8)\n\nn = int(input())\n\nif n > 10**5:\n    print(1)\nelse:\n    print(0)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import time\ntime.sleep(0.8)\n\nn = int(input())\n\nif n > 10**5:\n    print(1)\nelse:\n    print(0)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\n\nif n > 10 ** 5:\n    exit(0)\nprint(0)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import time\n\ntime.sleep(0.9)\nn = int(input())\n\nif n > 10**5:\n    print(1)\nelse:\n    print(0)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import time\n\ntime.sleep(0.9)\nn = int(input())\n\nif n > 10**5:\n    print(1)\nelse:\n    print(0)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\n\nif n > 10 ** 5:\n    exit(0)\nprint(0)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\n\nif n > 10 ** 5:\n    exit(0)\nprint(0)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\n\nif n > 10 ** 5:\n    exit(0)\nprint(0)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\n\nif n > 10 ** 5:\n    exit(0)\nprint(0)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\n\nif n > 10 ** 5:\n    exit(0)\nprint(0)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\n\nif n > 10 ** 3:\n    print(1)\n    exit()\n    \nprint(0)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\n\nif n > 10 ** 5:\n    print(1)\n    exit()\n    \nprint(0)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "if n > 10 ** 5:\n    print(1)\n    exit()\n    \nprint(0)",
                "verdict": "Runtime Error"
            },
            {
                "code": "with open(\"p.txt\", 'w') as file:\n    file.write('0')\n\nwith open(\"p.txt\", 'r') as file:\n    print(file.read())",
                "verdict": "Runtime Error"
            },
            {
                "code": "from time import sleep\n\nsleep(0.9)\nprint(1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from time import sleep\n\nsleep(0.9)\nprint(1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from time import sleep\n\nsleep(0.9)\nprint(1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from time import sleep\n\ntime.sleep(0.5)\nprint(0)",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\n\nauto main() -> int{\n    return 0;\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nd = 0\r\nfor i in range(1, n):\r\n    if n % i == 0:\r\n        for j in range(1, n + 1):\r\n            if n % j == 0:\r\n                if i == j:\r\n                    d = i\r\nprint(d - 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nd = 0\r\nfor i in range(1, n):\r\n    if n % i == 0:\r\n        for j in range(1, n - 1):\r\n            if n % j == 0:\r\n                if i == j:\r\n                    d = i\r\nprint(d - 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nd = 0\r\nfor i in range(1, n):\r\n    if n % i == 0:\r\n        for j in range(1, n - 1):\r\n            if n % j == 0:\r\n                if i == j:\r\n                    d = i\r\nprint(d)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\nn = int(input())\r\nprint(math.gcd(n, n+1))",
                "verdict": "Wrong Answer"
            }
        ]
    },
    {
        "task_id": 35,
        "description": "\u0412\u044b \u0440\u0435\u0448\u0438\u043b\u0438 \u043f\u043e\u0434\u0430\u0440\u0438\u0442\u044c \u0421\u043e\u0440\u0442-\u041c\u0438-\u0422\u044f\u043d \u043c\u0430\u0441\u0441\u0438\u0432 $a$ \u0434\u043b\u0438\u043d\u043e\u0439 $n$, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043c\u043e\u0433\u0443\u0442 \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u0442\u044c\u0441\u044f \u0447\u0438\u0441\u043b\u0430 \u043e\u0442 $1$ \u0434\u043e $512$. \n\n\u0412\u044b \u0443\u0436\u0435 \u043a\u0443\u043f\u0438\u043b\u0438 \u043c\u0430\u0441\u0441\u0438\u0432, \u043a\u0430\u043a \u0432\u0434\u0440\u0443\u0433 \u041a\u0424-\u0422\u044f\u043d \u2013 \u043f\u043e\u0434\u0440\u0443\u0436\u043a\u0430 \u0421\u043e\u0440\u0442-\u041c\u0438-\u0422\u044f\u043d, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0442\u0430\u0439\u043d\u043e \u0432 \u0432\u0430\u0441 \u0432\u043b\u044e\u0431\u043b\u0435\u043d\u0430 \u0438 \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0442 \u2013 \u0440\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u043b\u0430, \u0447\u0442\u043e \u0435\u0439 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u0432\u044b\u044f\u0441\u043d\u0438\u0442\u044c, \u0447\u0442\u043e \u0421\u043e\u0440\u0442-\u041c\u0438-\u0422\u044f\u043d \u0445\u043e\u0447\u0435\u0442 \u043d\u0430 \u043d\u043e\u0432\u044b\u0439 \u0433\u043e\u0434. \u041e\u043a\u0430\u0437\u0430\u043b\u043e\u0441\u044c, \u0432\u044b \u043f\u043e\u0447\u0442\u0438 \u0443\u0433\u0430\u0434\u0430\u043b\u0438: \u043e\u043d\u0430 \u0445\u043e\u0447\u0435\u0442 \u043c\u0430\u0441\u0441\u0438\u0432 $b$ \u0434\u043b\u0438\u043d\u043e\u0439 $n$, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043c\u043e\u0433\u0443\u0442 \u0432\u0441\u0442\u0440\u0435\u0447\u0430\u0442\u044c\u0441\u044f \u0447\u0438\u0441\u043b\u0430 \u043e\u0442 $1$ \u0434\u043e $512$, \u043d\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0432\u043e\u0442 \u0441\u0430\u043c\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0434\u0440\u0443\u0433\u043e\u0435.\n\n\u041a \u0441\u043e\u0436\u0430\u043b\u0435\u043d\u0438\u044e, \u0432 \u043c\u0430\u0433\u0430\u0437\u0438\u043d\u0435 \u043c\u0430\u0441\u0441\u0438\u0432 $a$ \u043e\u0442\u043a\u0430\u0437\u0430\u043b\u0438\u0441\u044c \u043c\u0435\u043d\u044f\u0442\u044c \u043d\u0430 \u0434\u0440\u0443\u0433\u043e\u0439, \u043d\u043e \u0441\u043e\u0433\u043b\u0430\u0441\u0438\u043b\u0438\u0441\u044c \u043f\u043e\u0447\u0438\u043d\u0438\u0442\u044c \u0432 \u0441\u0435\u0440\u0432\u0438\u0441\u0435. \u041f\u043e\u0447\u0438\u043d\u043a\u0430 \u0437\u0430\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e \u0432\u044b \u0434\u0430\u0451\u0442\u0435 \u043c\u0430\u0441\u0442\u0435\u0440\u0443 \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0443 $p$ \u0447\u0438\u0441\u0435\u043b \u043e\u0442 $1$ \u0434\u043e $512$, \u0430 \u043e\u043d \u043c\u0435\u043d\u044f\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u043f\u043e \u043f\u0440\u0430\u0432\u0438\u043b\u0443 $a[i] = p[a[i]]$ (\u0438\u043d\u0434\u0435\u043a\u0441\u0430\u0446\u0438\u044f \u0441 \u0435\u0434\u0438\u043d\u0438\u0446\u044b). \n\n\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c, \u043d\u0430\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u0434\u0430\u0440\u043e\u043a \u0443\u0434\u0430\u043b\u0441\u044f, \u043c\u043e\u0436\u043d\u043e \u0442\u0430\u043a: \u043e\u0447\u043a\u0438 \u0440\u0430\u0434\u043e\u0441\u0442\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0421\u043e\u0440\u0442-\u041c\u0438-\u0422\u044f\u043d \u043f\u043e\u043b\u0443\u0447\u0438\u0442 \u043e\u0442 \u0432\u0430\u0448\u0435\u0433\u043e \u043f\u043e\u0434\u0430\u0440\u043a\u0430, \u0440\u0430\u0432\u043d\u044b \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0443 \u0442\u0430\u043a\u0438\u0445 $i$, \u0447\u0442\u043e $a[i] = b[i]$. \u041a\u043e\u043d\u0435\u0447\u043d\u043e, \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043c\u0430\u043a\u0441\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u044d\u0442\u043e\u0442 \u043f\u043e\u043a\u0430\u0437\u0430\u0442\u0435\u043b\u044c. \n\n\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0447\u043a\u043e\u0432 \u0440\u0430\u0434\u043e\u0441\u0442\u0438 \u0421\u043e\u0440\u0442-\u041c\u0438-\u0422\u044f\u043d \u043f\u043e\u0441\u043b\u0435 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0432\u0430\u0448\u0435\u0433\u043e \u043f\u043e\u0434\u0430\u0440\u043a\u0430, \u0435\u0441\u043b\u0438 \u043f\u0435\u0440\u0435\u0434 \u044d\u0442\u0438\u043c \u0432\u044b \u043f\u043e\u0447\u0438\u043d\u0438\u0442\u0435 \u0435\u0433\u043e \u0443 \u043c\u0430\u0441\u0442\u0435\u0440\u0430.\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u0447\u0438\u0441\u043b\u043e $n$ \u2013 \u0434\u043b\u0438\u043d\u0430 \u043c\u0430\u0441\u0441\u0438\u0432\u043e\u0432.\n\n\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e $n$ \u0447\u0438\u0441\u0435\u043b - \u044d\u0442\u043e \u043c\u0430\u0441\u0441\u0438\u0432 $a$, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b \u043a\u0443\u043f\u0438\u043b\u0438.\n\n\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u0435\u0449\u0451 $n$ \u0447\u0438\u0441\u0435\u043b - \u044d\u0442\u043e \u043c\u0430\u0441\u0441\u0438\u0432 $b$, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0445\u043e\u0447\u0435\u0442 \u0421\u043e\u0440\u0442-\u041c\u0438-\u0422\u044f\u043d.\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e \u2013 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0447\u043a\u043e\u0432 \u0440\u0430\u0434\u043e\u0441\u0442\u0438 \u0421\u043e\u0440\u0442-\u041c\u0438-\u0422\u044f\u043d \u043f\u043e\u0441\u043b\u0435 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0432\u0430\u0448\u0435\u0433\u043e \u043f\u043e\u0434\u0430\u0440\u043a\u0430, \u0435\u0441\u043b\u0438 \u043f\u0435\u0440\u0435\u0434 \u044d\u0442\u0438\u043c \u0432\u044b \u043f\u043e\u0447\u0438\u043d\u0438\u0442\u0435 \u0435\u0433\u043e \u0443 \u043c\u0430\u0441\u0442\u0435\u0440\u0430.",
        "solutions": [
            {
                "code": "import sys\r\n\r\n\r\nif sys.platform == 'linux':\r\n    raise Exception('Error')",
                "verdict": "Runtime Error"
            },
            {
                "code": "import sys\r\n\r\n\r\nif sys.platform == 'win32':\r\n    raise Exception('Error')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import sys\r\n\r\n\r\nprint(sys.platform)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\nans = 0\nfor i in range(n):\n    if a[i] == b[i]:\n        ans += 1\nprint(max(len(set(b)), ans))\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\na = list(map(int, input().split()))\nb = set(map(int, input().split()))\nans = 0\nfor i in range(n):\n    if a[i] == b[i]:\n        ans += 1\nprint(max(len(b), ans))\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\na = list(map(int, input().split()))\nb = set(map(int, input().split()))\nprint(len(b))\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nA = [int(x) for x in input().split()]\r\nB = [int(x) for x in input().split()]\r\nAd = [0] + [0] * 512\r\nBd = [0] + [0] * 512\r\nfor i in range(n):\r\n\tAd[A[i]] += 1\r\n\tBd[B[i]] += 1\r\nans = 0\r\nfor i in range(1, 512 + 1):\r\n\tans += min(Ad[i], Bd[i])\r\n\t\r\nprint(ans) \r\n\t\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\npermutations = [[i+1 for i in range(512)]]\nfor i in range(511):\n    permutations.append(permutations[-1][1:] + [permutations[-1][0]])\n\nmax_score = 0\nfor p in permutations:\n    score = sum([1 for i in range(n) if p[a[i]-1] == b[i]])\n    if score > max_score:\n        max_score = score\n\nprint(max_score)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nmax_score = 0\nfor p in range(1, 513):\n    temp_a = [p if x==i+1 else x for i,x in enumerate(a)]\n    score = sum([1 for i in range(n) if temp_a[i] == b[i]])\n    if score > max_score:\n        max_score = score\n\nprint(max_score)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nmax_score = 0\nfor p in range(1, 513):\n    temp_a = [p if x==i+1 else x for i,x in enumerate(a)]\n    score = sum([1 for i in range(n) if temp_a[i] == b[i]])\n    if score > max_score:\n        max_score = score\n\nprint(max_score)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\npermutations = []\nfor i in range(1, 513):\n    for j in range(1, 513):\n        if i != j:\n            for k in range(1, 513):\n                if i != k and j != k:\n                    for l in range(1, 513):\n                        if i != l and j != l and k != l:\n                            for m in range(1, 513):\n                                if i != m and j != m and k != m and l != m:\n                                    for o in range(1, 513):\n                                        if i != o and j != o and k != o and l != o and m != o:\n                                            for p in range(1, 513):\n                                                if i != p and j != p and k != p and l != p and m != p and o != p:\n                                                    permutations.append([i, j, k, l, m, o, p])\n\nmax_score = 0\nfor p in permutations:\n    new_a = [p[x-1] for x in a]\n    score = sum([1 for i in range(n) if new_a[i] == b[i]])\n    if score > max_score:\n        max_score = score\n\nprint(max_score)\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\n# \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0441 \u043f\u0430\u0440\u0430\u043c\u0438 (\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 a[i], \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 b[i])\npairs = {}\nfor i in range(n):\n    pairs[a[i]] = b[i]\n\n# \u0421\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0445 \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u043d\u043e\u0432\u043e\u043a\npermutations = [[i+1 for i in range(512)]]\nfor i in range(511):\n    permutations.append(permutations[-1][1:] + [permutations[-1][0]])\n\n# \u041f\u0440\u043e\u0445\u043e\u0434\u0438\u043c \u043f\u043e \u0432\u0441\u0435\u043c \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430\u043c \u0438 \u0441\u0447\u0438\u0442\u0430\u0435\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0447\u043a\u043e\u0432 \u0440\u0430\u0434\u043e\u0441\u0442\u0438 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439\nmax_score = 0\nfor p in permutations:\n    score = sum([1 for i in range(n) if p[a[i]-1] == pairs[a[i]]])\n    if score > max_score:\n        max_score = score\n\nprint(max_score)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\np = {a[i]: b[i] for i in range(n)}\n\ncount = sum(1 for i in range(n) if p[a[i]] == b[i])\n\nprint(count)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\np = {}\nfor i in range(1, 513):\n    p[i] = i\n\nfor i in range(n):\n    p[a[i]] = b[i]\n\ncount = 0\nfor i in range(n):\n    if p[a[i]] == b[i]:\n        count += 1\n\nprint(count)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\n\np = [0] * 513\nfor i in range(1, 513):\n    p[i] = i\n\nfor i in range(1, 513):\n    for j in range(1, n+1):\n        a[j-1] = p[a[j-1]]\n    if a == b:\n        print(i)\n        break\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nmax_matches = 0\nfor p in range(1, 513):\n    temp = [0] * n\n    for i in range(n):\n        temp[i] = p[a[i]-1]\n    matches = sum([1 for i in range(n) if temp[i] == b[i]])\n    max_matches = max(max_matches, matches)\n\nprint(max_matches)\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nmax_matches = 0\nfor p in range(1, 513):\n    temp = [0] * n\n    for i in range(n):\n        temp[i] = p[a[i]-1]\n    matches = sum([1 for i in range(n) if temp[i] == b[i]])\n    max_matches = max(max_matches, matches)\n\nprint(max_matches)\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\np = {}\nfor i in range(n):\n    p[a[i]] = b[i]\n\ncount = 0\nfor i in range(n):\n    if p[a[i]] == b[i]:\n        count += 1\n\nprint(count)\n\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\na = list(map(int, input().split()))\nb = list(map(int, input().split()))\n\nmapping = {}\nfor i in range(n):\n    mapping[a[i]] = i\n\npoints = 0\nfor i in range(n):\n    if b[i] in mapping and a[mapping[b[i]]] == b[i]:\n        points += 1\n\nprint(points)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <iostream>\r\n#include <vector>\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n    int n;\r\n    cin >> n;\r\n\r\n    vector<int> a(n);\r\n    vector<int> b(n);\r\n\r\n    for (int i = 0; i < n; i++) {\r\n        cin >> a[i];\r\n    }\r\n\r\n    for (int i = 0; i < n; i++) {\r\n        cin >> b[i];\r\n    }\r\n\r\n    vector<int> mapping(513, 0);\r\n    for (int i = 0; i < n; i++) {\r\n        mapping[b[i]] = i + 1;\r\n    }\r\n\r\n    for (int i = 0; i < n; i++) {\r\n        a[i] = mapping[a[i]];\r\n    }\r\n\r\n    int joyPoints = 0;\r\n    for (int i = 0; i < n; i++) {\r\n        if (a[i] == b[i]) {\r\n            joyPoints++;\r\n        }\r\n    }\r\n\r\n    cout << joyPoints << endl;\r\n\r\n    return 0;\r\n}",
                "verdict": "Runtime Error"
            }
        ]
    },
    {
        "task_id": 36,
        "description": "_- \u0412\u0441\u0435 \u0441\u0434\u0435\u043b\u0430\u043b\u0438 \u0441\u0442\u0430\u0432\u043a\u0443? \u042f \u0431\u0440\u043e\u0448\u0443 \u043a\u0443\u0431\u0438\u043a \u0443\u0436\u0435 \u0447\u0435\u0440\u0435\u0437 \u043c\u0438\u043d\u0443\u0442\u0443!_\n\n\u0423 \u0434\u0438\u043b\u0435\u0440\u0430 \u0435\u0441\u0442\u044c $k$-\u0433\u0440\u0430\u043d\u043d\u044b\u0439 \u043a\u0443\u0431\u0438\u043a. \u0417\u0430 \u0441\u0442\u043e\u043b\u043e\u043c \u0441\u0438\u0434\u0438\u0442 $n$ \u0438\u0433\u0440\u043e\u043a\u043e\u0432. \u041f\u0435\u0440\u0435\u0434 \u043d\u0430\u0447\u0430\u043b\u043e\u043c \u0438\u0433\u0440\u044b \u043a\u0430\u0436\u0434\u044b\u0439 \u0438\u0433\u0440\u043e\u043a \u0441\u0442\u0430\u0432\u0438\u0442 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0444\u0438\u0448\u0435\u043a \u043d\u0430 \u043e\u0434\u043d\u0443 \u0438\u0437 \u0433\u0440\u0430\u043d\u0435\u0439 \u043a\u0443\u0431\u0438\u043a\u0430. \n\n\u041a\u043e\u0433\u0434\u0430 \u0432\u0441\u0435 \u0441\u0434\u0435\u043b\u0430\u043b\u0438 \u0441\u0442\u0430\u0432\u043a\u0443, \u0434\u0438\u043b\u0435\u0440 $$n$$ \u0440\u0430\u0437 \u0431\u0440\u043e\u0441\u0430\u0435\u0442 \u043a\u0443\u0431\u0438\u043a. $i$-\u0442\u044b\u0439 \u0431\u0440\u043e\u0441\u043e\u043a \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0441\u0443\u0434\u044c\u0431\u0443 \u0441\u0442\u0430\u0432\u043a\u0438 $i$-\u0442\u043e\u0433\u043e \u0438\u0433\u0440\u043e\u043a\u0430. \u0415\u0441\u043b\u0438 \u0432\u044b\u043f\u0430\u0434\u0430\u0435\u0442 \u0433\u0440\u0430\u043d\u044c, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0437\u0430\u0433\u0430\u0434\u0430\u043b \u0438\u0433\u0440\u043e\u043a, \u0434\u0438\u043b\u0435\u0440 \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u0442 \u0435\u0433\u043e \u0441\u0442\u0430\u0432\u043a\u0443 \u0432 $k$ \u0440\u0430\u0437 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0438\u0433\u0440\u043e\u043a\u0443. \u0412 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0434\u0438\u043b\u0435\u0440 \u0437\u0430\u0431\u0438\u0440\u0430\u0435\u0442 \u0441\u0442\u0430\u0432\u043a\u0443 \u0438\u0433\u0440\u043e\u043a\u0430 \u0441\u0435\u0431\u0435.\n\n\u0414\u0438\u043b\u0435\u0440 \u043d\u0430\u0441\u0442\u043e\u043b\u044c\u043a\u043e \u043b\u043e\u0432\u043a\u0438\u0439, \u0447\u0442\u043e \u0441\u043f\u043e\u0441\u043e\u0431\u0435\u043d \u0432\u044b\u043a\u0438\u043d\u0443\u0442\u044c \u043d\u0430 \u043a\u0443\u0431\u0438\u043a\u0435 \u043b\u044e\u0431\u0443\u044e \u0433\u0440\u0430\u043d\u044c, \u043a\u0430\u043a\u0443\u044e \u0437\u0430\u0445\u043e\u0447\u0435\u0442, \u043d\u043e \u0434\u043e\u043b\u0436\u0435\u043d \u0441\u043e\u0431\u043b\u044e\u0434\u0430\u0442\u044c \u043f\u0440\u0430\u0432\u0438\u043b\u043e **\u00ab\u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f\u00bb**: \u0435\u0441\u043b\u0438 \u0437\u0430 \u0441\u0442\u043e\u043b\u043e\u043c \u0441\u0438\u0434\u0438\u0442 $n$ \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u043e\u0432, \u0442\u043e \u0437\u0430 \u043e\u0434\u0438\u043d \u043a\u0440\u0443\u0433 \u043a\u0430\u0436\u0434\u0430\u044f \u0433\u0440\u0430\u043d\u044c \u0434\u043e\u043b\u0436\u043d\u0430 \u0432\u044b\u043f\u0430\u0441\u0442\u044c \u0440\u043e\u0432\u043d\u043e $\\frac{n}{k}$ \u0440\u0430\u0437 ($n$ \u0432\u0441\u0435\u0433\u0434\u0430 \u043a\u0440\u0430\u0442\u043d\u043e $k$), \u0438\u043d\u0430\u0447\u0435 \u0438\u0433\u0440\u043e\u043a\u0438 \u0432\u0437\u0431\u0443\u043d\u0442\u0443\u044e\u0442\u0441\u044f \u0438 \u0441\u043f\u0440\u043e\u0441\u044f\u0442, \u043a\u0442\u043e \u0432\u044b \u0442\u0430\u043a\u043e\u0439, \u0447\u0442\u043e\u0431 \u044d\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c.\n\n\u041f\u043e\u0434\u0431\u0435\u0440\u0438\u0442\u0435 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u0430 \u0433\u0440\u0430\u043d\u044c, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043d\u0443\u0436\u043d\u043e \u0432\u044b\u043a\u0438\u043d\u0443\u0442\u044c \u0434\u0438\u043b\u0435\u0440\u0443, \u0447\u0442\u043e\u0431\u044b \u043c\u0430\u043a\u0441\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441\u0432\u043e\u044e \u043f\u0440\u0438\u0431\u044b\u043b\u044c \u0438 \u0441\u043e\u0431\u043b\u044e\u0441\u0442\u0438 \u043f\u0440\u0430\u0432\u0438\u043b\u043e \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f. \u0412 \u043e\u0442\u0432\u0435\u0442 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e \u043f\u0440\u0438\u0431\u044b\u043b\u044c, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u0438\u043b\u0435\u0440.\n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u043d\u0430\u0445\u043e\u0434\u044f\u0442\u0441\u044f \u0447\u0438\u0441\u043b\u0430 $n$ \u0438 $k$ ($2 \\le k \\le n \\le 10^5$, $n$ \u043a\u0440\u0430\u0442\u043d\u043e $k$) \u2013 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u043e\u0432, \u0441\u0438\u0434\u044f\u0449\u0438\u0445 \u0437\u0430 \u0441\u0442\u043e\u043b\u043e\u043c \u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0433\u0440\u0430\u043d\u0435\u0439 \u0443 \u043a\u0443\u0431\u0438\u043a\u0430 \u0434\u0438\u043b\u0435\u0440\u0430. \n    \n\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 $n$ \u0441\u0442\u0440\u043e\u043a\u0430\u0445 \u043d\u0430\u0445\u043e\u0434\u044f\u0442\u0441\u044f \u043f\u043e \u0434\u0432\u0430 \u0446\u0435\u043b\u044b\u0445 \u0447\u0438\u0441\u043b\u0430 $w_i$ ($1 \\le w_i \\le k$) \u0438 $a_i$ ($1 \\le a_i \\le 30$) - \u043d\u043e\u043c\u0435\u0440 \u0433\u0440\u0430\u043d\u0438, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0441\u0442\u0430\u0432\u0438\u0442 $i$-\u0442\u044b\u0439 \u0438\u0433\u0440\u043e\u043a \u0438 \u0435\u0433\u043e \u0441\u0442\u0430\u0432\u043a\u0430 \u0432 \u0444\u0438\u0448\u043a\u0430\u0445 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e.\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e: \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e \u043f\u0440\u0438\u0431\u044b\u043b\u044c \u0432 \u0444\u0438\u0448\u043a\u0430\u0445, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0434\u0438\u043b\u0435\u0440. \u0415\u0441\u043b\u0438 \u0432 \u043b\u0443\u0447\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0434\u0438\u043b\u0435\u0440 \u0443\u0445\u043e\u0434\u0438\u0442 \u0432 \u043c\u0438\u043d\u0443\u0441, \u0447\u0438\u0441\u043b\u043e \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c.",
        "right_solution": "n, k = map(int, input().split())\n\nwages = [[] for i in range(n)]\n\nfor _ in range(n):\n    i, w = tuple(map(int, input().split(\" \")))\n    wages[i - 1].append(w)\n\nresult = sum(map(sum, wages))\n\nbest = max(wages, key=len)\n\nif len(best) >= (n - n // k):\n    result -= sum(sorted(best)[:len(best) - n + n // k]) * (k + 1)\n\nprint(result)",
        "solutions": [
            {
                "code": "n, k = map(int, input().split())\n\nwages = [[] for i in range(n)]\n\nfor _ in range(n):\n    i, w = tuple(map(int, input().split(\" \")))\n    wages[i - 1].append(w)\n\nresult = sum(map(sum, wages))\n\nbest = max(wages, key=len)\n\nif len(best) >= (n - n // k):\n    result -= sum(sorted(best)[:len(best) - n - n // k]) * (k + 1)\n\nprint(result)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, k = map(int, input().split())\n\nwages = [[] for i in range(n)]\n\nfor _ in range(n):\n    i, w = tuple(map(int, input().split(\" \")))\n    wages[i - 1].append(w)\n\nresult = sum(map(sum, wages))\n\nbest = max(wages, key=len)\n\nif len(best) >= (n - n // k):\n    result -= sum(sorted(best)[:len(best) - n - n // k]) * (k + 1)\n\nprint(result)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, k = map(int, input().split())\n\nwages = [[] for i in range(n)]\n\nfor _ in range(n):\n    i, w = tuple(map(int, input().split(\" \")))\n    wages[i - 1].append(w)\n\nresult = sum(map(sum, wages))\n\nbest = max(wages, key=len)\n\nif len(best) >= (n - n // k):\n    result -= sum(sorted(best)[:len(best) - n - n // x]) * (k + 1)\n\nprint(result)",
                "verdict": "Runtime Error"
            },
            {
                "code": "from functools import reduce\n\nn, k = map(int, input().split())\n\nwages = {}\ncounts = {}\n\nfor _ in range(n):\n    i, w = tuple(map(int, input().split(\" \")))\n\n    counts[i] = counts.get(i, 0) + 1\n\n    if i in wages:\n        wages[i].append(w)\n    else:\n        wages[i] = [w]\n\nbest = max(counts.values())\nremoved = 0\n\nif best >= (n - n // k):\n    roll = [name for name, val in counts.items() if val == best][0]\n\n    negs = n // k - (n - best)\n\n    for _ in range(negs):\n        y = wages[roll].index(min(wages[roll]))\n\n        removed += wages[roll].pop(y) * k\n\nresult = reduce(lambda a, x: sum(x) + a, wages.values(), 0) - removed\n\nprint(result)\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "print(46)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "\u0444",
                "verdict": "Runtime Error"
            },
            {
                "code": "\u0444",
                "verdict": "Runtime Error"
            },
            {
                "code": "\u0430",
                "verdict": "Runtime Error"
            },
            {
                "code": "123",
                "verdict": "Wrong Answer"
            },
            {
                "code": "123",
                "verdict": "Wrong Answer"
            },
            {
                "code": "123",
                "verdict": "Wrong Answer"
            },
            {
                "code": "1234",
                "verdict": "Wrong Answer"
            },
            {
                "code": "123",
                "verdict": "Wrong Answer"
            },
            {
                "code": "123",
                "verdict": "Wrong Answer"
            },
            {
                "code": "123",
                "verdict": "Wrong Answer"
            },
            {
                "code": "123",
                "verdict": "Wrong Answer"
            },
            {
                "code": "123",
                "verdict": "Wrong Answer"
            },
            {
                "code": "123",
                "verdict": "Wrong Answer"
            },
            {
                "code": "123",
                "verdict": "Wrong Answer"
            },
            {
                "code": "123",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from functools import reduce\r\n\r\nn, k = map(int, input().split())\r\n\r\nwages = {}\r\ncounts = {}\r\n\r\nfor _ in range(n):\r\n    i, w = tuple(map(int, input().split(\" \")))\r\n\r\n    counts[i] = counts.get(i, 0) + 1\r\n\r\n    if i in wages:\r\n        wages[i].append(w)\r\n    else:\r\n        wages[i] = [w]\r\n\r\nbest = max(counts.values())\r\nremoved = 0\r\n\r\nif best >= (n - n // k):\r\n    roll = [name for name, val in counts.items() if val == best][0]\r\n\r\n    negs = n // k - (n - best)\r\n\r\n    for _ in range(negs):\r\n        y = wages[roll].index(min(wages[roll]))\r\n\r\n        removed += wages[roll].pop(y) * k\r\n\r\nresult = reduce(lambda a, x: sum(x) + a, wages.values(), 0) - removed\r\n\r\nprint(result)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, k = map(int, input().split())\na = [[] for i in range(k)];\nfor i in range(n):\n    w, x = map(int, input().split())\n    a[w].append(x)\nres = 0    \nfor i in range(k):\n    a[i].sort()\n    f = max(0, len(a[i]) - (n - n / k))\n    for j in range(x):\n        res -= a[i][j]\n    for j in range(x, len(a[i])):\n        res += a[i][j]\nprint(res)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n, k = [int(i) for i in input().split()]\r\nsl = {}\r\nfor i in range(1, k + 1):\r\n    sl[str(i)] = []\r\nfor j in range(n):\r\n    i, a = input().split()\r\n    sl[i].append(int(a))\r\nans = 0\r\nfor el in sl:\r\n    if len(sl[el]) > (n / k) * (k - 1):\r\n        ans -= min(sl[el]) * k\r\n        ans -= min(sl[el])\r\n    ans += sum(sl[el])\r\nprint(ans)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n,k=map(int,input().split())\r\na = [list(map(int,input().split())) for _ in range(n)]\r\na.sort(key=lambda x: -x[1])\r\ncnt = [n - n//k] * n\r\nc = 0\r\nfor x in a:\r\n    if cnt[x[0] - 1]:\r\n        c += x[1]\r\n        cnt[x[0]-1] -= 1\r\n    else:\r\n        c -= x[1] * (k - 1)\r\nprint(c)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(46)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def Delete(kos):\n    for i in range(len(players)):\n        if kos in players[i][2]:\n            place=players[i][2].index(kos)\n            players[i][2].pop(place)\n            \ndef SortByValue(array):\n    return array[1]\n\ndef FindKost(may):\n    if len(may)==0:\n        return None\n    if len(may)==1:\n        return may[0]\n    ochki=[0]*len(may)\n    kolvovstrech=[0]*len(may)\n    for j in range(len(may)):\n        for i in range(len(players)):\n            if may[j] in players[i][2]:\n                ochki[j]+=players[i][1]\n                kolvovstrech[j]+=1\n    \n    vs=999999999999\n    dupl=[]\n    for i in range(len(kolvovstrech)):\n        if kolvovstrech[i]<vs:\n            dupl.clear()\n            vs=kolvovstrech[i]\n            dupl.append(i)\n        elif vs==kolvovstrech[i]:\n            dupl.append(i)\n    if len(dupl)==1:\n        return dupl[0]\n    o=0\n    ind=0\n    for i in range(len(dupl)):\n        if ochki[dupl[i]]>o:\n            o=ochki[dupl[i]]\n            ind=dupl[i]\n\n    return may[ind]\n    \n    \ndef ChekForlen():\n    for i in range(len(players)):\n        if len(players[i][2])!=0:\n            return True\n    return False\n\nn,k=map(int,input().split())\nplayers=[list(map(int,input().split())) for x in range(n)]\nplayers.sort(key=SortByValue,reverse=True)\nbalance=0\nuses=[0]*k\nmayuse=n//k\n\nfor i in range(n):\n    toappend=[]\n    for j in range(k):\n        if j!=(players[i][0]-1):\n            toappend.append(j)\n    players[i].append(toappend)\n\nflag=True\nwhile len(players)!=0:\n    if len(players[0][2])==0:\n        if flag==True:\n            if not ChekForlen():\n                flag=False\n            else:\n                while len(players[0][2])==0:\n                    temp=players[0]\n                    players.pop(0)\n                    players.append(temp)\n    kost=FindKost(players[0][2])\n    print(kost)\n    if kost!=None:\n        if kost!=players[0][0]-1:\n            balance+=players[0][1]\n        uses[kost]+=1\n        if uses[kost]==mayuse:\n            Delete(kost) \n        players.pop(0)\n    else:\n        balance-=(players[0][1]*k)\n        players.pop(0)\nraise ValueError(balance)\nprint(balance)",
                "verdict": "Runtime Error"
            },
            {
                "code": "def Delete(kos):\n    for i in range(len(players)):\n        if kos in players[i][2]:\n            place=players[i][2].index(kos)\n            players[i][2].pop(place)\n            \ndef SortByValue(array):\n    return array[1]\n\ndef FindKost(may):\n    if len(may)==0:\n        return None\n    if len(may)==1:\n        return may[0]\n    ochki=[0]*len(may)\n    kolvovstrech=[0]*len(may)\n    for j in range(len(may)):\n        for i in range(len(players)):\n            if may[j] in players[i][2]:\n                ochki[j]+=players[i][1]\n                kolvovstrech[j]+=1\n    \n    vs=999999999999\n    dupl=[]\n    for i in range(len(kolvovstrech)):\n        if kolvovstrech[i]<vs:\n            dupl.clear()\n            vs=kolvovstrech[i]\n            dupl.append(i)\n        elif vs==kolvovstrech[i]:\n            dupl.append(i)\n    if len(dupl)==1:\n        return dupl[0]\n    o=0\n    ind=0\n    for i in range(len(dupl)):\n        if ochki[dupl[i]]>o:\n            o=ochki[dupl[i]]\n            ind=dupl[i]\n\n    return may[ind]\n    \n    \ndef ChekForlen():\n    for i in range(len(players)):\n        if len(players[i][2])!=0:\n            return True\n    return False\n\nn,k=map(int,input().split())\nplayers=[list(map(int,input().split())) for x in range(n)]\nplayers.sort(key=SortByValue,reverse=True)\nbalance=0\nuses=[0]*k\nmayuse=n//k\n\nfor i in range(n):\n    toappend=[]\n    for j in range(k):\n        if j!=(players[i][0]-1):\n            toappend.append(j)\n    players[i].append(toappend)\n\nflag=True\nwhile len(players)!=0:\n    if len(players[0][2])==0:\n        if flag==True:\n            if not ChekForlen():\n                flag=False\n            else:\n                while len(players[0][2])==0:\n                    temp=players[0]\n                    players.pop(0)\n                    players.append(temp)\n    kost=FindKost(players[0][2])\n    if kost!=None:\n        if kost!=players[0][0]-1:\n            balance+=players[0][1]\n        uses[kost]+=1\n        if uses[kost]==mayuse:\n            Delete(kost) \n        players.pop(0)\n    else:\n        balance-=(players[0][1]*k)\n        players.pop(0)\nprint(balance)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def SortByValue(array):\n    return array[1]\n\ndef FindMax(may,ind):\n    ochki=[0]*len(may)\n    for j in range(len(may)):\n        for i in range(ind,n):\n            if may[j] in canuse[i]:\n                ochki[j]+=players[i][1]\n    m=0\n    l=0\n    for i in range(len(ochki)):\n        if ochki[i]>m:\n            m=ochki[i]\n            l=i\n    if m!=0:        \n        return may[l]\n    return None\n\ndef delete(kos):\n    for i in range(n):\n        if kos in canuse[i]:\n            place=canuse[i].index(kos)\n            canuse[i].pop(place)\ndef FindUsable():\n    for i in range(len(uses)):\n        if uses[i]!=mayuse:\n            return i\n    return None\nn,k=map(int,input().split())\nplayers=[list(map(int,input().split())) for x in range(n)]\nplayers.sort(key=SortByValue,reverse=True)\nbalance=0\ncanuse=[]\nuses=[0]*k\nmayuse=n//k\nfor i in range(n):\n    toappend=[]\n    for j in range(k):\n        if j!=(players[i][0]-1):\n            toappend.append(j)\n    canuse.append(toappend)\nfor i in range(n):\n    kost=FindMax(canuse[i],i)\n    if kost==None:\n        kost=FindUsable()\n    if kost!=players[i][0]-1:\n        balance+=players[i][1]\n    else:\n        balance-=(players[i][1]*k)\n    uses[kost]+=1\n    if uses[kost]==mayuse:\n        delete(kost)\nprint(balance)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(0)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, k = [int(t) for t in input().split()]\r\n\r\ndata = []\r\n\r\ncount = {i: 0 for i in range(1, k + 1)}\r\nfor _ in range(n):\r\n    data.append([int(t) for t in input().split()])\r\n\r\ndata.sort(key=lambda t: t[1], reverse=True)\r\n\r\nbalance = 0\r\nfor edge, bet in data:\r\n    if count[edge] < n // k:\r\n        balance += bet\r\n        count[edge] += 1\r\n    else:\r\n        balance -= bet * (k - (k % 2 == 0))\r\n\r\nprint(balance)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, k = [int(t) for t in input().split()]\r\n\r\ndata = []\r\n\r\ncount = {i: 0 for i in range(1, k + 1)}\r\nfor _ in range(n):\r\n    data.append([int(t) for t in input().split()])\r\n\r\ndata.sort(key=lambda t: t[1], reverse=True)\r\n\r\nbalance = 0\r\nfor edge, bet in data:\r\n    if count[edge] < n // k:\r\n        balance += bet\r\n        count[edge] += 1\r\n    else:\r\n        balance -= bet * k\r\n\r\nprint(balance)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <bits/stdc++.h>\nusing namespace std;\nint main () {\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    int T = 1;\n    // cin >> T;\n    while (T--) {\n        int64_t n, k, ans = 0;\n        cin >> n >> k;\n        vector<vector<int64_t>> bet(k + 1);\n        for (int i = 0; i < n; ++i) {\n            int64_t w, a;\n            cin >> w >> a;\n            bet[w].push_back(a);\n            ans += a;\n        }\n        for (int i = 0; i <= k; ++i) {\n            sort(bet[i].rbegin(), bet[i].rend());\n        }\n        for (auto& e : bet) {\n            for (int i = n * (n - 1) / k; i < e.size(); ++i)\n                ans -= e[i] * (k + 1);\n        }\n        cout << ans;\n    }\n}\n\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "import sys; input = lambda: sys.stdin.readline().strip()\r\n# from bisect import bisect_left as bsl, bisect_right as bsr\r\nfrom collections import defaultdict as dd, deque\r\n# from math import *\r\ninf = int(2e9 + 7)\r\n\r\n\r\ndef main():\r\n    n, k = map(int, input().split())\r\n    a = [list(map(int, input().split())) for i in range(n)]\r\n    ans = 0\r\n    t = n//k\r\n\r\n    aboba = []\r\n\r\n    d = dd(list)\r\n    for i in range(n):\r\n        d[a[i][0]].append(a[i][1])\r\n        aboba.append((a[i][1], a[i][0]))\r\n    for i in d:\r\n        d[i].sort(reverse=True)\r\n\r\n    aboba.sort(reverse=True)\r\n    keys = sorted(list(d.keys()), key=lambda x: sum(d[x][:min(len(d[x]), t)])-sum(d[x][t:]))\r\n    used = set()\r\n\r\n    for i in keys:\r\n        for j in range(min(t, len(d[i]))):\r\n            if (j, i) not in used:\r\n                ans += d[i][j]\r\n        for j in range(t, len(d[i])):\r\n            ans -= d[i][j]*k\r\n            used.add(aboba.pop())\r\n\r\n    print(ans)\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import sys; input = lambda: sys.stdin.readline().strip()\r\n# from bisect import bisect_left as bsl, bisect_right as bsr\r\nfrom collections import defaultdict as dd, deque\r\n# from math import *\r\ninf = int(2e9 + 7)\r\n\r\n\r\ndef main():\r\n    n, k = map(int, input().split())\r\n    a = [list(map(int, input().split())) for i in range(n)]\r\n    ans = 0\r\n    t = n//k\r\n\r\n    aboba = []\r\n\r\n    d = dd(list)\r\n    for i in range(n):\r\n        d[a[i][0]].append(a[i][1])\r\n        aboba.append((a[i][1], a[i][0]))\r\n    for i in d:\r\n        d[i].sort(reverse=True)\r\n\r\n    aboba.sort(reverse=True)\r\n    keys = sorted(list(d.keys()), key=lambda x: sum(d[x][:min(len(d[x]), t)])-sum(d[x][t:]))\r\n    used = set()\r\n\r\n    for i in keys:\r\n        for j in range(min(t, len(d[i]))):\r\n            if (j, i) not in used:\r\n                ans += d[i][j]\r\n        for j in range(t, len(d[i])):\r\n            ans -= d[i][j]*k\r\n            used.add(aboba.pop())\r\n\r\n    print(ans)\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, k = map(int, input().split())\nplayers = {}\nmax_v = -1\nmax_count = 0\nall_sum = 0\n\nfor i in range(n):\n    w, a = list(map(int, input().split()))\n    if w in players:\n        players[w] = players[w] + [a]\n    else:\n        players[w] = [a]\n    all_sum += a\n    if len(players[w]) > max_count:\n        max_count = len(players[w])\n        max_v = w\n\nif max_count <= n - n // k:\n    print(all_sum)\n    exit()\n\nplayers[max_v].sort()\n\noff_count = max_count - (n - n // k)\n\nfor i in range(off_count):\n    all_sum -= players[max_v][i] * (k + 1)\n\nprint(all_sum)\n\n\n\n\n\n\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, k = map(int, input().split())\nplayers = {}\nmax_v = -1\nmax_count = 0\nall_sum = 0\n\nfor i in range(n):\n    w, a = list(map(int, input().split()))\n    if w in players:\n        players[w] = players[w] + [a]\n    else:\n        players[w] = [a]\n    all_sum += a\n    if len(players[w]) > max_count:\n        max_count = len(players[w])\n        max_v = w\n\nif max_count <= n - n // k:\n    print(all_sum)\n    exit()\n\nt = sorted(players[max_v])\n\noff_count = max_count - (n - n // k)\n\nprint(all_sum - sum(t[:off_count]) * (k + 1))\n\n\n\n\n\n\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "def solve(n, k, players):\n    players.sort(key=lambda x: -x[1])\n    profit = [0] * (n + 1)\n    for i in range(n):\n        profit[i + 1] = profit[i] + players[i][1]\n    max_profit = -float('inf')\n    for i in range(k, n + 1, k):\n        max_profit = max(max_profit, profit[i] - i // k)\n    return max_profit\n\n# \u0427\u0442\u0435\u043d\u0438\u0435 \u0432\u0432\u043e\u0434\u0430 \u0441 \u043a\u043e\u043d\u0441\u043e\u043b\u0438\nn, k = map(int, input().split())\nplayers = []\nfor _ in range(n):\n    w, a = map(int, input().split())\n    players.append((w, a))\n\n# \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438\nprint(solve(n, k, players))\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, k = map(int, input().split())\n\nbets = {}\nfor i in range(1, k + 1):\n    bets[i] = []\n\nfor _ in range(n):\n    w, a = map(int, input().split())\n    bets[w].append(a)\n\ndp = [0] * k\n\nfor face in range(1, k + 1):\n    for bet in bets[face]:\n        max_profit = 0\n        for other_face in range(1, k + 1):\n            if other_face != face:\n                max_profit = max(max_profit, dp[other_face - 1])\n        dp[face - 1] += max_profit + bet\n\nmax_profit = max(dp)\nprint(max_profit)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, k = map(int, input().split())\n\nbets = {}\nfor i in range(1, k + 1):\n    bets[i] = []\n\nfor _ in range(n):\n    w, a = map(int, input().split())\n    bets[w].append(a)\n\nprofit = 0\nused = set()\nfor i in range(1, n + 1):\n    max_bet = -1\n    max_face = -1\n    for face, bet_list in bets.items():\n        if face not in used and bet_list:\n            max_bet_face = max(bet_list)\n            if max_bet_face > max_bet:\n                max_bet = max_bet_face\n                max_face = face\n\n    if max_face != -1:\n        profit += max_bet\n        used.add(max_face)\n        bets[max_face].remove(max_bet)\n    else:\n        for face, bet_list in bets.items():\n            if bet_list:\n                profit += max(bet_list)\n                break\n\nprint(profit)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def max_dealer_profit(n, k, bets):\r\n    from collections import defaultdict\r\n    import heapq\r\n    \r\n    # \u0421\u043b\u043e\u0432\u0430\u0440\u044c \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0432\u0441\u0435\u0445 \u0441\u0442\u0430\u0432\u043e\u043a \u043d\u0430 \u043a\u0430\u0436\u0434\u0443\u044e \u0433\u0440\u0430\u043d\u044c\r\n    bets_on_faces = defaultdict(list)\r\n    \r\n    for face, bet in bets:\r\n        bets_on_faces[face].append(bet)\r\n    \r\n    # \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0430\u0437, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043a\u0430\u0436\u0434\u0430\u044f \u0433\u0440\u0430\u043d\u044c \u0434\u043e\u043b\u0436\u043d\u0430 \u0432\u044b\u043f\u0430\u0441\u0442\u044c\r\n    times_each_face = n // k\r\n    \r\n    # \u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u0430\u044f \u0434\u043b\u044f \u043f\u043e\u0434\u0441\u0447\u0435\u0442\u0430 \u043f\u0440\u0438\u0431\u044b\u043b\u0438 \u0434\u0438\u043b\u0435\u0440\u0430\r\n    dealer_profit = 0\r\n    \r\n    # \u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u0433\u0440\u0430\u043d\u0438 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u043c \u043a\u0430\u043a\u0438\u0435 \u0441\u0442\u0430\u0432\u043a\u0438 \u043b\u0443\u0447\u0448\u0435 \u0432\u0441\u0435\u0433\u043e \u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c (\u0447\u0442\u043e\u0431\u044b \u0438\u0433\u0440\u043e\u043a\u0438 \u043f\u0440\u043e\u0438\u0433\u0440\u0430\u043b\u0438)\r\n    for face in range(1, k + 1):\r\n        if face in bets_on_faces:\r\n            bets_on_faces[face].sort(reverse=True)\r\n            # \u0412\u0437\u044f\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u0435 \u0441\u0442\u0430\u0432\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0438\u0433\u0440\u043e\u043a\u0438 \u043f\u0440\u043e\u0438\u0433\u0440\u0430\u044e\u0442\r\n            losing_bets = bets_on_faces[face][times_each_face:]\r\n            # \u0414\u0438\u043b\u0435\u0440 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0432\u0441\u0435 \u043f\u0440\u043e\u0438\u0433\u0440\u0430\u043d\u043d\u044b\u0435 \u0441\u0442\u0430\u0432\u043a\u0438\r\n            dealer_profit += sum(losing_bets)\r\n            # \u0418\u0433\u0440\u043e\u043a\u0438 \u0432\u044b\u0438\u0433\u0440\u0430\u044e\u0442 \u043f\u0435\u0440\u0432\u044b\u0435 `times_each_face` \u0441\u0442\u0430\u0432\u043e\u043a\r\n            winning_bets = bets_on_faces[face][:times_each_face]\r\n            # \u0414\u0438\u043b\u0435\u0440 \u0442\u0435\u0440\u044f\u0435\u0442 `times_each_face * bet * k`\r\n            dealer_profit -= sum(winning_bets) * k\r\n        else:\r\n            # \u0415\u0441\u043b\u0438 \u043d\u0430 \u044d\u0442\u0443 \u0433\u0440\u0430\u043d\u044c \u043d\u0438\u043a\u0442\u043e \u043d\u0435 \u0441\u0442\u0430\u0432\u0438\u043b, \u0434\u0438\u043b\u0435\u0440 \u043d\u0435 \u0442\u0435\u0440\u044f\u0435\u0442 \u0438 \u043d\u0435 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043d\u0438\u0447\u0435\u0433\u043e\r\n            continue\r\n    \r\n    return dealer_profit\r\n\r\n# \u0427\u0442\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445\r\nn, k = map(int, input().split())\r\nbets = [tuple(map(int, input().split())) for _ in range(n)]\r\n\r\n# \u0412\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439 \u043f\u0440\u0438\u0431\u044b\u043b\u0438 \u0434\u0438\u043b\u0435\u0440\u0430\r\nresult = max_dealer_profit(n, k, bets)\r\nprint(result)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def max_profit(n, k, bets):\r\n    from collections import defaultdict\r\n\r\n    # \u0421\u043b\u043e\u0432\u0430\u0440\u044c \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0441\u0442\u0430\u0432\u043e\u043a \u043f\u043e \u0433\u0440\u0430\u043d\u044f\u043c\r\n    bet_map = defaultdict(list)\r\n    for w, a in bets:\r\n        bet_map[w].append(a)\r\n    \r\n    # \u041c\u0430\u0441\u0441\u0438\u0432 \u0434\u043b\u044f \u043f\u043e\u0434\u0441\u0447\u0435\u0442\u0430 \u043f\u0440\u0438\u0431\u044b\u043b\u0438 \u043f\u043e \u043a\u0430\u0436\u0434\u043e\u0439 \u0433\u0440\u0430\u043d\u0438\r\n    profit = []\r\n    \r\n    # \u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0439 \u0433\u0440\u0430\u043d\u0438 \u0440\u0430\u0441\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u043c \u043f\u0440\u0438\u0431\u044b\u043b\u044c\r\n    for face in range(1, k + 1):\r\n        bet_list = bet_map[face]\r\n        bet_list.sort()\r\n        count = len(bet_list)\r\n        each_face_count = n // k\r\n        \r\n        # \u0415\u0441\u043b\u0438 \u0441\u0442\u0430\u0432\u043e\u043a \u043c\u0435\u043d\u044c\u0448\u0435 \u0438\u043b\u0438 \u0440\u0430\u0432\u043d\u043e \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u043e\u043c\u0443 \u0447\u0438\u0441\u043b\u0443 \u0432\u044b\u043f\u0430\u0434\u0435\u043d\u0438\u0439\r\n        if count <= each_face_count:\r\n            # \u0412\u044b\u0438\u0433\u0440\u044b\u0448\u0438 \u0438\u0433\u0440\u043e\u043a\u043e\u0432\r\n            player_gain = sum(bet_list) * k\r\n            # \u041f\u0440\u0438\u0431\u044b\u043b\u044c \u0434\u0438\u043b\u0435\u0440\u0430 (\u043e\u043d \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043e\u0442 \u0442\u0435\u0445, \u043a\u0442\u043e \u0432\u044b\u0438\u0433\u0440\u0430\u043b)\r\n            profit.append(-player_gain)\r\n        else:\r\n            # \u0421\u0442\u0430\u0432\u043a\u0438 \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u044b, \u043f\u0435\u0440\u0432\u044b\u0435 n//k \u0432\u044b\u0438\u0433\u0440\u044b\u0432\u0430\u044e\u0442\r\n            player_gain = sum(bet_list[-each_face_count:]) * k\r\n            player_loss = sum(bet_list[:-each_face_count])\r\n            # \u041f\u0440\u0438\u0431\u044b\u043b\u044c \u0434\u0438\u043b\u0435\u0440\u0430 = \u043f\u0440\u043e\u0438\u0433\u0440\u044b\u0448 \u0438\u0433\u0440\u043e\u043a\u043e\u0432 - \u0432\u044b\u0438\u0433\u0440\u044b\u0448 \u0432\u044b\u043f\u043b\u0430\u0447\u0438\u0432\u0430\u0435\u043c\u044b\u0439 \u0434\u0438\u043b\u0435\u0440\u043e\u043c\r\n            profit.append(player_loss - player_gain)\r\n    \r\n    # \u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043c \u0441\u0443\u043c\u043c\u0430\u0440\u043d\u0443\u044e \u043f\u0440\u0438\u0431\u044b\u043b\u044c\r\n    return sum(profit)\r\n\r\n# \u0412\u0432\u043e\u0434 \u0434\u0430\u043d\u043d\u044b\u0445\r\nn, k = map(int, input().split())\r\nbets = [tuple(map(int, input().split())) for _ in range(n)]\r\n\r\n# \u0412\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435 \u0438 \u0432\u044b\u0432\u043e\u0434 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\r\nprint(max_profit(n, k, bets))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import sys\nfrom collections import defaultdict\n\ndef max_profit(n, k, bets):\n    # Calculate the total number of throws\n    throws = k * n\n\n    # Initialize a dictionary to count the number of times each face appears\n    face_count = defaultdict(int)\n\n    # Initialize a dictionary to store the maximum profit for each face\n    max_profit_per_face = defaultdict(int)\n\n    # Initialize total profit\n    total_profit = 0\n\n    # For each bet, add it to the face count and update the maximum profit\n    for face, bet in bets:\n        face_count[face] += bet\n        max_profit_per_face[face] = max(max_profit_per_face[face], bet)\n\n    # For each face, calculate the profit if it's the one that beats all bets\n    for face in range(1, k+1):\n        # Calculate the number of throws this face needs to win\n        num_throws = throws - face_count[face]\n\n        # Calculate the remaining throws that can be distributed among the other faces\n        remaining_throws = throws - num_throws\n\n        # Calculate the maximum profit that can be made from the other faces\n        other_faces_profit = sum(remaining_throws // (k-1) * (max_profit_per_face[f] if f != face else 0) for f in range(1, k+1) if f != face)\n\n        # Calculate the total profit if this face is the one that beats all bets\n        total_profit = max(total_profit, num_throws * face + other_faces_profit)\n\n    return total_profit\n\n# Read the input\nn, k = map(int, input().split())\nbets = [list(map(int, input().split())) for _ in range(n)]\n\n# Call the max_profit function\nprofit = max_profit(n, k, bets)\n\n# Print the result\nprint(profit)",
                "verdict": "Wrong Answer"
            }
        ]
    },
    {
        "task_id": 37,
        "description": "\u0412\u0430\u043c \u0434\u0430\u043d \u043d\u0435\u0432\u0437\u0432\u0435\u0448\u0435\u043d\u043d\u044b\u0439 \u043d\u0435\u043e\u0440\u0438\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0433\u0440\u0430\u0444, \u0441\u043e\u0441\u0442\u043e\u044f\u0449\u0438\u0439 \u0438\u0437 $n$ \u0432\u0435\u0440\u0448\u0438\u043d \u0438 $m$ \u0440\u0435\u0431\u0451\u0440. \u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 `YES`, \u0435\u0441\u043b\u0438 \u0432 \u043d\u0451\u043c \u0435\u0441\u0442\u044c \u0413\u0430\u043c\u0438\u043b\u044c\u0442\u043e\u043d\u043e\u0432 \u041f\u0443\u0442\u044c \u2013 \u043f\u0440\u043e\u0441\u0442\u043e\u0439 \u043f\u0443\u0442\u044c, \u043f\u0440\u043e\u0445\u043e\u0434\u044f\u0449\u0438\u0439 \u0447\u0435\u0440\u0435\u0437 \u0432\u0441\u0435 \u0432\u0435\u0440\u0448\u0438\u043d\u044b \u0433\u0440\u0430\u0444\u0430 \u0440\u043e\u0432\u043d\u043e \u043f\u043e \u043e\u0434\u043d\u043e\u043c\u0443 \u0440\u0430\u0437\u0443 \u2013 \u0438\u043b\u0438 `NO` \u0432 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435.\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430 $n$ \u0438 $m$ - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u0435\u0440\u0448\u0438\u043d \u0438 \u0440\u0435\u0431\u0451\u0440 \u0432 \u0433\u0440\u0430\u0444\u0435 ($0 < m < n < 10^5$). \u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 $$m$$ \u0441\u0442\u0440\u043e\u043a\u0430\u0445 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u043f\u043e \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430 $u$ \u0438 $v$, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0437\u043d\u0430\u0447\u0430\u044e\u0442, \u0447\u0442\u043e \u0432\u0435\u0440\u0448\u0438\u043d\u044b \u043f\u043e\u0434 \u043d\u043e\u043c\u0435\u0440\u0430\u043c\u0438 $u$ \u0438 $v$ \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u044b \u0440\u0435\u0431\u0440\u043e\u043c.\u0412 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 `YES`, \u0435\u0441\u043b\u0438 \u0432 \u0433\u0440\u0430\u0444\u0435 \u0435\u0441\u0442\u044c \u0413\u0430\u043c\u0438\u043b\u044c\u0442\u043e\u043d\u043e\u0432 \u041f\u0443\u0442\u044c, \u0438\u043b\u0438 `NO` \u0432 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435.",
        "solutions": [
            {
                "code": "print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(YES)",
                "verdict": "Runtime Error"
            },
            {
                "code": "# ChatGPT\nimport sys\n\nsys.setrecursionlimit(10**6)\n\nn, m = map(int, input().split())\n\n# \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0433\u0440\u0430\u0444\u0430\ngraph = {i: [] for i in range(1, n+1)}\n\n# \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0440\u0435\u0431\u0440\u0430\u043c\u0438\nfor i in range(m):\n    u, v = map(int, input().split())\n    graph[u].append(v)\n    graph[v].append(u)\n\n# \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u0413\u0430\u043c\u0438\u043b\u044c\u0442\u043e\u043d\u043e\u0432\u0430 \u043f\u0443\u0442\u0438\ndef dfs(v, visited, path):\n    visited[v] = True\n    path.append(v)\n\n    if len(path) == n:\n        return True\n\n    for neighbor in graph[v]:\n        if not visited[neighbor]:\n            if dfs(neighbor, visited, path):\n                return True\n\n    path.pop()\n    visited[v] = False\n    return False\n\n# \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u043f\u043e\u0438\u0441\u043a \u0438\u0437 \u043a\u0430\u0436\u0434\u043e\u0439 \u0432\u0435\u0440\u0448\u0438\u043d\u044b\nfor i in range(1, n+1):\n    visited = {j: False for j in range(1, n+1)}\n    path = []\n    if dfs(i, visited, path):\n        print(\"YES\")\n        break\nelse:\n    print(\"NO\")\n\n\n\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "# ChatGPT\n\nimport sys\n\nsys.setrecursionlimit(10**6)\n\nn, m = map(int, input().split())\n\ngraph = {i: [] for i in range(1, n+1)}\n\nfor i in range(m):\n    u, v = map(int, input().split())\n    graph[u].append(v)\n    graph[v].append(u)\n\ndef dfs(v, visited, path, depth, max_depth):\n    visited[v] = True\n    path.append(v)\n\n    if len(path) == n:\n        return True\n\n    if depth == max_depth:\n        path.pop()\n        visited[v] = False\n        return False\n\n    for neighbor in graph[v]:\n        if not visited[neighbor]:\n            if dfs(neighbor, visited, path, depth+1, max_depth):\n                return True\n\n    path.pop()\n    visited[v] = False\n    return False\n\ndef iddfs():\n    for max_depth in range(1, n+1):\n        visited = {j: False for j in range(1, n+1)}\n        path = []\n        for i in range(1, n+1):\n            if dfs(i, visited, path, 1, max_depth):\n                return True\n    return False\n\nif iddfs():\n    print(\"YES\")\nelse:\n    print(\"NO\")",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "# ChatGPT\n\nn, m = map(int, input().split())\n\n# \u0441\u043e\u0437\u0434\u0430\u0435\u043c \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0433\u0440\u0430\u0444\u0430\ngraph = {i: [] for i in range(1, n+1)}\n\n# \u0437\u0430\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u0441\u043b\u043e\u0432\u0430\u0440\u044c \u0440\u0435\u0431\u0440\u0430\u043c\u0438\nfor i in range(m):\n    u, v = map(int, input().split())\n    graph[u].append(v)\n    graph[v].append(u)\n\n# \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u043f\u043e\u0438\u0441\u043a\u0430 \u0413\u0430\u043c\u0438\u043b\u044c\u0442\u043e\u043d\u043e\u0432\u0430 \u043f\u0443\u0442\u0438\ndef dfs(v, visited, path):\n    visited[v] = True\n    path.append(v)\n\n    if len(path) == n:\n        return True\n\n    for neighbor in graph[v]:\n        if not visited[neighbor]:\n            if dfs(neighbor, visited, path):\n                return True\n\n    path.pop()\n    visited[v] = False\n    return False\n\n# \u0437\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u043c \u043f\u043e\u0438\u0441\u043a \u0438\u0437 \u043a\u0430\u0436\u0434\u043e\u0439 \u0432\u0435\u0440\u0448\u0438\u043d\u044b\nfor i in range(1, n+1):\n    visited = {j: False for j in range(1, n+1)}\n    path = []\n    if dfs(i, visited, path):\n        print(\"YES\")\n        break\nelse:\n    print(\"NO\")\n\n\n\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "from collections import deque\n\nn, m = map(int, input().split())\n\ngraph = {i: [] for i in range(1, n + 1)}\n\nfor _ in range(m):\n    a, b = map(int, input().split())\n\n    graph[a].append(b)\n    graph[b].append(a)\n\nfor i in graph:\n    graph[i] = tuple(graph[i])\n\nd = [False] * n\n\n\ndef bfs(start):\n    comp = [start]\n    q = deque([start])\n    d[start - 1] = True\n\n    while q:\n        u = q.pop()\n        for v in graph[u]:\n            if not d[v - 1]:\n                d[v - 1] = True\n                comp.append(v)\n                q.appendleft(v)\n\n    return comp\n\n\ncc = 0\nfor i in range(1, n + 1):\n    if not d[i - 1]:\n        bfs(i)\n        cc += 1\n\nif cc != 1:\n    print(\"NO\")\nelse:\n    one = 0\n    for t in graph.values():\n        if len(t) == 1:\n            one += 1\n        elif len(t) == 2:\n            continue\n        else:\n            print(\"NO\")\n            break\n    else:\n        if one == 2:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\n      from collections import deque\n\nn, m = map(int, input().split())\n\ngraph = {i: [] for i in range(1, n + 1)}\n\nfor _ in range(m):\n    a, b = map(int, input().split())\n\n    graph[a].append(b)\n    graph[b].append(a)\n\nfor i in graph:\n    graph[i] = tuple(graph[i])\n\nd = [False] * n\n\n\ndef bfs(start):\n    comp = [start]\n    q = deque([start])\n    d[start - 1] = True\n\n    while q:\n        u = q.pop()\n        for v in graph[u]:\n            if not d[v - 1]:\n                d[v - 1] = True\n                comp.append(v)\n                q.appendleft(v)\n\n    return comp\n\n\ncc = 0\nfor i in range(1, n + 1):\n    if not d[i - 1]:\n        bfs(i)\n        cc += 1\n\nif cc != 1:\n    print(\"NO\")\nelse:\n    one = 0\n    for t in graph.values():\n        if len(t) == 1:\n            one += 1\n        elif len(t) == 2:\n            continue\n        else:\n            print(\"NO\")\n            break\n    else:\n        if one == 2:\n            print(\"YES\")\n        else:\n            print(\"NO\")",
                "verdict": "Runtime Error"
            },
            {
                "code": "from collections import deque\n\nn, m = map(int, input().split())\n\ngraph = {i: [] for i in range(1, n + 1)}\n\nfor _ in range(m):\n    a, b = map(int, input().split())\n\n    graph[a].append(b)\n    graph[b].append(a)\n\nfor i in graph:\n    graph[i] = tuple(graph[i])\n\nd = [False] * n\n\n\ndef bfs(start):\n    comp = [start]\n    q = deque([start])\n    d[start - 1] = True\n\n    while q:\n        u = q.pop()\n        for v in graph[u]:\n            if not d[v - 1]:\n                d[v - 1] = True\n                comp.append(v)\n                q.appendleft(v)\n\n    return comp\n\n\ncc = 0\nfor i in range(1, n + 1):\n    if not d[i - 1]:\n        bfs(i)\n        cc += 1\n\nif cc != 1:\n    print(\"NO\")\nelse:\n    one = 0\n    for t in graph.values():\n        if len(t) == 1:\n            one += 1\n        elif len(t) == 2:\n            continue\n        else:\n            print(\"NO\")\n            break\n    else:\n        if one == 2:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n\n      from collections import deque\n\nn, m = map(int, input().split())\n\ngraph = {i: [] for i in range(1, n + 1)}\n\nfor _ in range(m):\n    a, b = map(int, input().split())\n\n    graph[a].append(b)\n    graph[b].append(a)\n\nfor i in graph:\n    graph[i] = tuple(graph[i])\n\nd = [False] * n\n\n\ndef bfs(start):\n    comp = [start]\n    q = deque([start])\n    d[start - 1] = True\n\n    while q:\n        u = q.pop()\n        for v in graph[u]:\n            if not d[v - 1]:\n                d[v - 1] = True\n                comp.append(v)\n                q.appendleft(v)\n\n    return comp\n\n\ncc = 0\nfor i in range(1, n + 1):\n    if not d[i - 1]:\n        bfs(i)\n        cc += 1\n\nif cc != 1:\n    print(\"NO\")\nelse:\n    one = 0\n    for t in graph.values():\n        if len(t) == 1:\n            one += 1\n        elif len(t) == 2:\n            continue\n        else:\n            print(\"NO\")\n            break\n    else:\n        if one == 2:\n            print(\"YES\")\n        else:\n            print(\"NO\")",
                "verdict": "Runtime Error"
            },
            {
                "code": "n, m = map(int, input().split())\n\ngraph = {i: [] for i in range(1, n + 1)}\n\nfor _ in range(m):\n    a, b = map(int, input().split())\n\n    graph[a].append(b)\n    graph[b].append(a)\n\nfor i in graph:\n    graph[i] = tuple(graph[i])\n\none = 0\nfor t in graph.values():\n    if len(t) == 1:\n        one += 1\n    elif len(t) == 2:\n        continue\n    else:\n        print(\"NO\")\n        break\nelse:\n    if one == 2:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(sum(map(int, input().split()))",
                "verdict": "Runtime Error"
            },
            {
                "code": "123",
                "verdict": "Wrong Answer"
            },
            {
                "code": "123123123",
                "verdict": "Wrong Answer"
            },
            {
                "code": "123",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m=map(int, input().split())\ndeg=[0 for _ in range(n)]\nus=[0 for _ in range(n)]\ngr=[[] for _ in range(n)]\nfor _ in range(m):\n    x, y = map(int, input().split())\n    x-=1\n    y-=1\n    deg[x]+=1\n    deg[y]+=1\n    gr[x].append(y)\n    gr[y].append(x)\n    \ndef dfs(v):\n    us[v]=1\n    for i in gr[v]:\n        if not us[i]:\n            dfs(i)\ncnt=0\nfor i in deg:\n    if i < 2:\n        cnt+=1\nok=1\ndfs(0)\nfor i in us:\n    if not i:\n        ok=0\nprint('YES' if cnt <= 2 and ok else 'NO')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m=map(int, input().split())\ndeg=[0 for _ in range(n)]\nus=[0 for _ in range(n)]\ngr=[[] for _ in range(n)]\nfor _ in range(m):\n    x, y = map(int, input().split())\n    x-=1\n    y-=1\n    deg[x]+=1\n    deg[y]+=1\n    gr[x].append(y)\n    gr[y].append(x)\n    \ndef dfs(v):\n    us[v]=1\n    for i in gr[v]:\n        if not used[i]:\n            dfs(i)\ncnt=0\nfor i in deg:\n    if i < 2:\n        cnt+=1\nok=1\ndfs(0)\nfor i in us:\n    if not i:\n        ok=0\nprint('YES' if cnt <= 2 and ok else 'NO')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m=map(int, input().split())\ndeg=[0 for _ in range(n)]\nus=[0 for _ in range(n)]\ngr=[[] for _ in range(n)]\nfor _ in range(m):\n    x, y = map(int, input().split())\n    x-=1\n    y-=1\n    deg[x]+=1\n    deg[y]+=1\n    gr[x].append(y)\n    gr[y].append(x)\n    \ndef dfs(v):\n    us[v]=1\n    for i in gr[v]:\n        if not used[i]:\n            dfs(i)\ncnt=0\nfor i in deg:\n    if i < 2:\n        cnt+=1\nok=1\ndfs(0)\nfor i in us:\n    ok&=i\nprint('YES' if cnt <= 2 and ok else 'NO')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m=map(int, input().split())\n\ndeg=[0 for _ in range(n)]\nfor _ in range(m):\n    x, y = map(int, input().split())\n    x-=1\n    y-=1\n    deg[x]+=1\n    deg[y]+=1\ncnt=0\nfor i in deg:\n    if i < 2:\n        cnt+=1\nprint('YES' if cnt <= 2 else \"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = map(int, input().split())\nd = [0] * n\nfor _ in range(m):\n    u, v = map(int, input().split())\n    d[u-1] += 1\n    d[v-1] += 1\nprint(\"YNEOS\"[m + 1 < n or any(t > 2 for t in d)::2])",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = map(int, input().split())\nd = [0] * n\nfor _ in range(m):\n    u, v = map(int, input().split())\n    d[u-1] += 1\n    d[v-1] += 1\nprint(\"YNEOS\"[n + 1 < m or any(t > 2 for t in d)::2])",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = map(int, input().split())\nd = [0] * n\nfor _ in range(m):\n    u, v = map(int, input().split())\n    d[u] += 1\n    d[v] += 1\nprint(\"YNEOS\"[n + 1 < m or any(t > 2 for t in d)::2])",
                "verdict": "Runtime Error"
            },
            {
                "code": "print('YES')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print('NO')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print('YES')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from sys import setrecursionlimit\r\nimport threading\r\nsetrecursionlimit(10 ** 9)\r\nthreading.stack_size(3 * 67108864)\r\n  \r\ndef main():\r\n    #dfs for each vertex in V; vertex_f --> time\r\n    #if you can walk by vertexes in topsorted linked_lst, then graph is hamiltonian\r\n    def dfs(index):\r\n        contig_lst[index][0] = 'g'\r\n        for i in range(1, len(contig_lst[index])):\r\n            if contig_lst[contig_lst[index][i]][0] == 'w':\r\n                if dfs(contig_lst[index][i]): return True\r\n            elif contig_lst[contig_lst[index][i]][0] == 'g': return True\r\n        contig_lst[index][0] = 'b'\r\n        linked_lst.append(index)\r\n \r\n    n, m = map(int, input().split())\r\n    contig_lst, linked_lst= [['w'] for _ in range(n)], []\r\n    flag = 0\r\n    # all_values = []\r\n    #contigious vertexes list creation i: [color, *[ends_values]]\r\n    for _ in range(m):\r\n        current = list(map(int, input().split()))\r\n        contig_lst[current[0] - 1].append(current[1] - 1)\r\n        # all_values.append(current)\r\n    for index in range(len(contig_lst)):\r\n        if contig_lst[index][0] == 'w':\r\n            if dfs(index):\r\n                print('NO')\r\n                flag = 1\r\n                break\r\n    #check for (vi,vj) from linked_lst\r\n    if not flag:\r\n        reversed_linked = linked_lst[::-1]\r\n        for i in range(len(linked_lst) - 1):\r\n            if reversed_linked[i + 1] not in contig_lst[reversed_linked[i]] or len(linked_lst) != n:\r\n                flag = 1\r\n                break\r\n        if not flag:\r\n            print('YES')\r\n        else:\r\n            print('NO')\r\n\r\nthread = threading.Thread(target=main)\r\nthread.start()",
                "verdict": "Unknown Verdict (7)"
            },
            {
                "code": "def Hamiltonian_path(adj, N):\n     \n    dp = [[False for i in range(1 << N)]\n                 for j in range(N)]\n \n    # Set all dp[i][(1 << i)] to\n    # true\n    for i in range(N):\n        dp[i][1 << i] = True\n \n    # Iterate over each subset\n    # of nodes\n    for i in range(1 << N):\n        for j in range(N):\n \n            # If the jth nodes is included\n            # in the current subset\n            if ((i & (1 << j)) != 0):\n \n                # Find K, neighbour of j\n                # also present in the\n                # current subset\n                for k in range(N):\n                    if ((i & (1 << k)) != 0 and\n                             adj[k][j] == 1 and\n                                     j != k and\n                          dp[k][i ^ (1 << j)]):\n                         \n                        # Update dp[j][i]\n                        # to true\n                        dp[j][i] = True\n                        break\n     \n    # Traverse the vertices\n    for i in range(N):\n \n        # Hamiltonian Path exists\n        if (dp[i][(1 << N) - 1]):\n            return True\n \n    # Otherwise, return false\n    return False\n \nn, m = map(int, input().split())\nadj = [[0 for x in range(n)] for y in range(n)]\nfor _ in range(m):\n    v1, v2 = map(int, input().split())\n    adj[v1-1][v2-1] = 1\n    adj[v2-1][v1-1] = 1\n \nN = len(adj)\n \nif (Hamiltonian_path(adj, N)):\n    print(\"YES\")\nelse:\n    print(\"NO\")",
                "verdict": "Unknown Verdict (7)"
            },
            {
                "code": "n,m=map(int,input().split())\r\nversh=[0 for i in range(n)]\r\nfor i in range(m):\r\n    v1,v2=map(int,input().split())\r\n    versh[v1-1]+=1\r\n    versh[v2-1]+=1\r\nf=True\r\ncnt=0\r\nfor i in versh:\r\n    if i==0:\r\n        f=False\r\n        break\r\n    if i==1:\r\n        cnt+=1\r\nif cnt>2:\r\n    f=False\r\nprint(\"YES\" if f else \"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n,m=map(int,input().split())\r\nversh=[0 for i in range(n)]\r\nfor i in range(m):\r\n    v1,v2=map(int,input().split())\r\n    versh[v1-1]+=1\r\n    versh[v2-1]+=1\r\nf=True\r\ncnt=0\r\nfor i in versh:\r\n    if i>2 or i==0:\r\n        f=False\r\n        break\r\n    elif i==1:\r\n        cnt+=1\r\n        if cnt>2:\r\n            break\r\nif cnt!=2 and cnt!=0:\r\n    f=False\r\nprint(\"YES\" if f else \"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n,m=map(int,input().split())\r\nversh=[0 for i in range(n)]\r\nfor i in range(m):\r\n    v1,v2=map(int,input().split())\r\n    versh[v1-1]+=1\r\n    versh[v2-1]+=1\r\nf=True\r\ncnt=0\r\nfor i in versh:\r\n    if i>2 or i==0:\r\n        f=False\r\n        break\r\n    elif i==1:\r\n        cnt+=1\r\n        if cnt>2:\r\n            break\r\nif cnt!=2:\r\n    f=False\r\nprint(\"YES\" if f else \"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n,m=map(int,input().split())\r\nversh=[0 for i in range(n)]\r\nfor i in range(m):\r\n    v1,v2=map(int,input().split())\r\n    versh[v1-1]+=1\r\n    versh[v2-1]+=1\r\nf=True\r\nfor i in versh:\r\n    if i>2 or i==0:\r\n        f=False\r\n        break\r\nprint(\"YES\" if f else \"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n,m=map(int,input().split())\r\nversh=[0 for i in range(n)]\r\nfor i in range(m):\r\n    v1,v2=map(int,input().split())\r\n    versh[v1-1]+=1\r\n    versh[v2-1]+=1\r\nf=True\r\nfor i in versh:\r\n    if i>2:\r\n        f=False\r\n        break\r\nprint(\"YES\" if f else \"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <algorithm>\r\n#include <bitset>\r\n#include <cassert>\r\n#include <chrono>\r\n#include <cmath>\r\n#include <deque>\r\n#include <iostream>\r\n#include <map>\r\n#include <queue>\r\n#include <random>\r\n#include <set>\r\n#include <stack>\r\n#include <string>\r\n#include <unordered_map>\r\n#include <unordered_set>\r\n#include <vector>\r\n\r\nusing namespace std;\r\n\r\nusing ll = long long;\r\nusing ld = long double;\r\nusing ull = unsigned long long;\r\n\r\n#define forn(i, n) for (int i = 0; i < int(n); i++)\r\n\r\nmt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());\r\n\r\nvector<set<int>> g;\r\nvector<bool> used;\r\nvector<int> topsort, deep;\r\n\r\nvoid build_deep(int v, int d) {\r\n\tused[v] = true;\r\n\tdeep[v] = d;\r\n\r\n\tfor(const int &to : g[v]) {\r\n\t\tif (!used[to]) {\r\n\t\t\tbuild_deep(to, d+1);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nvoid dfs(int v) {\r\n\tused[v] = true;\r\n\r\n\tfor(const int &to : g[v]) {\r\n\t\tif (!used[to]) {\r\n\t\t\tdfs(to);\r\n\t\t}\r\n\t}\r\n\r\n\ttopsort.push_back(v);\r\n}\r\n\r\nvoid solve() {\r\n\tint n, m;\r\n\tcin >> n >> m;\r\n\r\n\tg.resize(n);\r\n\tused.resize(n);\r\n\tdeep.resize(n);\r\n\r\n\tforn(i, m) {\r\n\t\tint x, y;\r\n\t\tcin >> x >> y;\r\n\r\n\t\tx--;y--;\r\n\r\n\t\tg[x].insert(y);\r\n\t\tg[y].insert(x);\r\n\t}\r\n\r\n\tbuild_deep(0, 0);\r\n\r\n\tint start = max_element(deep.begin(), deep.end()) - deep.begin();\r\n\t\r\n\tused.assign(n, false);\r\n\tdfs(start);\r\n\r\n\tforn(i, n) {\r\n\t\tif (!used[i]) {\r\n\t\t\tcout << \"NO\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\tforn(i, int(topsort.size())-1) {\r\n\t\tif (!g[topsort[i]].count(topsort[i+1])) {\r\n\t\t\tcout << \"NO\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\tcout << \"YES\";\r\n}\r\n\r\nsigned main()\r\n{\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    cout.precision(20);\r\n    cout.setf(ios::fixed);\r\n\r\n    // #ifndef ONLINE_JUDGE\r\n    //     freopen(\"input.txt\", \"r\", stdin);\r\n    //     freopen(\"output.txt\", \"w\", stdout);\r\n    //     freopen(\"error.txt\", \"w\", stderr);\r\n    // #endif\r\n\r\n    solve();\r\n\r\n    return 0;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#pragma GCC Optimize(\"O3\")\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\n#define endl '\\n'\n#define all(var) var.begin(),var.end()\n#define mp make_pair\n#define gi(x) int(x-'a'+1)\nconst int N = 1e5+7;\nvector<int> G[N];\nint vis[N],deg[N];\nint cnt = 0;\nint n,m;\nint ops = 8e6;\nbool Check(int v){\n    ++cnt;\n    vis[v] = 1;\n    if (cnt==n){\n        return 1;\n    }\n    int nxt = -1;\n    bool flag = 0;\n    for(int to:G[v]){\n        --ops;\n        if (ops<=0) {\n            printf(\"NO\\n\");\n            exit(0);\n        }\n        if (vis[to])\n            continue;\n        --deg[to];\n        if (deg[to]==0){\n            if (nxt==-1)\n                nxt = to;\n            else flag = 1;\n        }\n    }\n    if (!flag) {\n        if (nxt!=-1){\n            if (Check(nxt))\n                return 1;\n        }\n        else\n            for (int to:G[v]) {\n                --ops;\n                if (ops <= 0) {\n                    printf(\"NO\\n\");\n                    exit(0);\n                }\n                if (vis[to])\n                    continue;\n                if (Check(to))\n                    return 1;\n            }\n    }\n    for(int to:G[v]) {\n        --ops;\n        if (ops <= 0) {\n            printf(\"NO\\n\");\n            exit(0);\n        }\n        if (vis[to])\n            continue;\n        ++deg[to];\n    }\n    --cnt;\n    vis[v] = 0;\n    return 0;\n}\nvoid solve(){\n\n    scanf(\"%d%d\",&n,&m);\n    for(int i = 1;i<=m;++i){\n        int u,v;\n        scanf(\"%d%d\",&u,&v);\n        G[u].push_back(v);\n        G[v].push_back(u);\n        ++deg[u];\n        ++deg[v];\n    }\n    if (n>100){\n        printf(\"NO\\n\");\n        return\n    }\n    for(int i = 1;i<=n;++i){\n        if (Check(i)){\n            printf(\"YES\\n\");\n            return;\n        }\n    }\n    printf(\"NO\\n\");\n}\nint main(){\n\n    ios_base::sync_with_stdio(0); cin.tie(0);\n    int t = 1;\n    // cin>>t;\n\n    while(t--)\n        solve();\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#pragma GCC Optimize(\"O3\")\n#include <bits/stdc++.h>\nusing namespace std;\ntypedef long long ll;\ntypedef unsigned long long ull;\n#define endl '\\n'\n#define all(var) var.begin(),var.end()\n#define mp make_pair\n#define gi(x) int(x-'a'+1)\nconst int N = 1e5+7;\nvector<int> G[N];\nint vis[N],deg[N];\nint cnt = 0;\nint n,m;\nint ops = 8e6;\nbool Check(int v){\n    ++cnt;\n    vis[v] = 1;\n    if (cnt==n){\n        return 1;\n    }\n    int nxt = -1;\n    bool flag = 0;\n    for(int to:G[v]){\n        --ops;\n        if (ops<=0) {\n            printf(\"NO\\n\");\n            exit(0);\n        }\n        if (vis[to])\n            continue;\n        --deg[to];\n        if (deg[to]==0){\n            if (nxt==-1)\n                nxt = to;\n            else flag = 1;\n        }\n    }\n    if (!flag) {\n        if (nxt!=-1){\n            if (Check(nxt))\n                return 1;\n        }\n        else\n            for (int to:G[v]) {\n                --ops;\n                if (ops <= 0) {\n                    printf(\"NO\\n\");\n                    exit(0);\n                }\n                if (vis[to])\n                    continue;\n                if (Check(to))\n                    return 1;\n            }\n    }\n    for(int to:G[v]) {\n        --ops;\n        if (ops <= 0) {\n            printf(\"NO\\n\");\n            exit(0);\n        }\n        if (vis[to])\n            continue;\n        ++deg[to];\n    }\n    --cnt;\n    vis[v] = 0;\n    return 0;\n}\nvoid solve(){\n\n    scanf(\"%d%d\",&n,&m);\n    for(int i = 1;i<=m;++i){\n        int u,v;\n        scanf(\"%d%d\",&u,&v);\n        G[u].push_back(v);\n        G[v].push_back(u);\n        ++deg[u];\n        ++deg[v];\n    }\n\n    for(int i = 1;i<=n;++i){\n        if (Check(i)){\n            printf(\"YES\\n\");\n            return;\n        }\n    }\n    printf(\"NO\\n\");\n}\nint main(){\n\n    ios_base::sync_with_stdio(0); cin.tie(0);\n    int t = 1;\n    // cin>>t;\n\n    while(t--)\n        solve();\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "n, m = map(int, input().split())\r\nif m >= n - 1:\r\n    rez = []\r\n    for i in range(m):\r\n        a, b = (map(int, input().split()))\r\n        if a != b:\r\n            rez.append(a)\r\n            rez.append(b)\r\n    if len(rez) > 1:\r\n        s = list(range(1, n + 1))\r\n        p1 = rez.pop(0)\r\n        p2 = rez.pop(0)\r\n        s.remove(p1)\r\n        s.remove(p2)\r\n        for p in (p1, p2):\r\n            while p in rez:\r\n                i = rez.index(p)\r\n                if i % 2 == 1:\r\n                    if rez[i - 1] in s:\r\n                        p = rez.pop(i - 1)\r\n                        del rez[i - 1]\r\n                        s.remove(p)\r\n                    else:\r\n                        del rez[i]\r\n                        del rez[i - 2]\r\n                else:\r\n                    del rez[i]\r\n                    if rez[i] in s:\r\n                        p = rez.pop(i)\r\n                        s.remove(p)\r\n                    else:\r\n                        del rez[i]\r\n        if s:\r\n            print('NO')\r\n        else:\r\n            print('YES')\r\n    else:\r\n        print('NO')\r\nelse:\r\n    print('NO')",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, m = map(int, input().split())\r\nif m >= n - 1:\r\n    rez = []\r\n    for i in range(m):\r\n        a, b = (map(int, input().split()))\r\n        if a != b:\r\n            rez.append(a)\r\n            rez.append(b)\r\n    s = list(range(1, n + 1))\r\n    p1 = rez.pop(0)\r\n    p2 = rez.pop(0)\r\n    s.remove(p1)\r\n    s.remove(p2)\r\n    for p in (p1, p2):\r\n        while p in rez:\r\n            i = rez.index(p)\r\n            if i % 2 == 1:\r\n                if rez[i - 1] in s:\r\n                    p = rez.pop(i - 1)\r\n                    del rez[i - 1]\r\n                    s.remove(p)\r\n                else:\r\n                    del rez[i]\r\n                    del rez[i - 2]\r\n            else:\r\n                del rez[i]\r\n                if rez[i] in s:\r\n                    p = rez.pop(i)\r\n                    s.remove(p)\r\n                else:\r\n                    del rez[i]\r\n    if s:\r\n        print('NO')\r\n    else:\r\n        print('YES')\r\nelse:\r\n    print('NO')",
                "verdict": "Runtime Error"
            },
            {
                "code": "n, m = map(int, input().split())\r\nif m >= n - 1:\r\n    rez = []\r\n    for i in range(m):\r\n        a, b = (map(int, input().split()))\r\n        if a != b:\r\n            rez.append(a)\r\n            rez.append(b)\r\n    s = list(range(1, n + 1))\r\n    p1 = rez.pop(0)\r\n    p2 = rez.pop(0)\r\n    s.remove(p1)\r\n    s.remove(p2)\r\n    for p in (p1, p2):\r\n        while p in rez:\r\n            i = rez.index(p)\r\n            a = 1\r\n            if i % 2 == 1:\r\n                a = -1\r\n            if rez[i + a] in s:\r\n                p = rez.pop(i + a)\r\n                s.remove(p)\r\n            else:\r\n                del rez[i]\r\n                del rez[i + a - 1]\r\n    if s:\r\n        print('NO')\r\n    else:\r\n        print('YES')\r\nelse:\r\n    print('NO')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = map(int, input().split())\r\nif m >= n - 1:\r\n    rez = []\r\n    for i in range(m):\r\n        a, b = (map(int, input().split()))\r\n        if a != b:\r\n            rez.append(a)\r\n            rez.append(b)\r\n    s = list(range(1, n + 1))\r\n    p1 = rez.pop(0)\r\n    p2 = rez.pop(0)\r\n    s.remove(p1)\r\n    s.remove(p2)\r\n    for p in (p1, p2):\r\n        while p in rez:\r\n            i = rez.index(p)\r\n            a = 1\r\n            if i % 2 == 1:\r\n                a = -1\r\n            if rez[i + a] in s:\r\n                p = rez.pop(i + a)\r\n                s.remove(p)\r\n            else:\r\n                del rez[i]\r\n                del rez[i + a - 1]\r\n    if s:\r\n        print('NO')\r\n    else:\r\n        print('YES')\r\nelse:\r\n    print('NO')",
                "verdict": "Pending"
            },
            {
                "code": "n, m = map(int, input().split())\r\nif m >= n - 1:\r\n    rez = []\r\n    for i in range(m):\r\n        a, b = (map(int, input().split()))\r\n        rez.append(a)\r\n        rez.append(b)\r\n    s = list(range(1, n + 1))\r\n    p1 = rez.pop(0)\r\n    p2 = rez.pop(1)\r\n    s.remove(p1)\r\n    s.remove(p2)\r\n    for p in (p1, p2):\r\n        while p in rez:\r\n            i = rez.index(p)\r\n            a = 1\r\n            if i % 2 == 1:\r\n                a = -1\r\n            if rez[i + a] in s:\r\n                p = rez.pop(i + a)\r\n                s.remove(p)\r\n            else:\r\n                del rez[i]\r\n                del rez[i + a - 1]\r\n    if s:\r\n        print('NO')\r\n    else:\r\n        print('YES')\r\nelse:\r\n    print('NO')",
                "verdict": "Runtime Error"
            },
            {
                "code": "k=input\r\nkk = lambda: int(input())\r\nn,m=map(int,input().split())\r\na = [[] for _ in range(n)]\r\ndef q(s):\r\n    for i in s:\r\n        return i\r\nif m != n -1:\r\n    print(\"NO\")\r\nelse:\r\n    c1,c2=map(int,input().split())\r\n    d = dict()\r\n    for i in range(m-1):\r\n        u,v=map(int,input().split())\r\n        if u not in d:\r\n            d[u] = set()\r\n        if v not in d:\r\n            d[v] = set()\r\n        d[u].add(v)\r\n        d[v].add(u)\r\n    while d.get(c1, 0):\r\n        nc = q(d[c1])\r\n        d[c1].discard(nc)\r\n        d[nc].discard(c1)\r\n        c1 = nc\r\n    while d.get(c2, 0):\r\n        nc = q(d[c2])\r\n        d[c2].discard(nc)\r\n        d[nc].discard(c2)\r\n        c2 = nc\r\n    if not any(d.get(i, 0) for i in range(1, n + 1)):\r\n        print(\"YES\")\r\n    else:\r\n        print(\"NO\")\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = map(int, input().split())\nways = [tuple(map(int, input().split())) for _ in range(m)]\npoints = [0 for x in range(n + 1)]\nfor i in ways:\n    points[i[0]] += 1\n    points[i[1]] += 1\n\npoints.pop(0)\nif max(points) == 2 and min(points) == 1 and points.count(1) <= 2:\n    print('YES')\nelse:\n    print('NO')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = map(int, input().split())\nif m + 1 == n:\n    print('YES')\nelse:\n    print('NO')\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = map(int, input().split())\nif m != n-1:\n    print('NO')\nelse:\n    no = [0 for i in range(n)]\n    for i in range(m):\n        x, y = map(int, input().split())\n        no[x-1]+=1\n        no[y-1]+=1\n    if no.count(1)==2 and no.count(2)==n-2:\n        print('YES')\n    else:\n        print('NO')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = map(int, input().split())\nif m != n-1:\n    print('NO')\nelse:\n    no = [0 for i in range(n)]\n    for i in range(m):\n        x, y = map(int, input().split())\n        no[x-1]+=1\n        no[y-1]+=1\n    if max(no)>=3:\n        print('NO')\n    else:\n        print('YES')\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = map(int, input().split())\nif m != n-1:\n    print('NO')\nelse:\n    print('YES')\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math,sys;input=sys.stdin.readline;S=lambda:input().rstrip();I=lambda:int(S());M=lambda:map(int,S().split());L=lambda x:list(x);MOD=998244353\n\n\ndef dfs(p):\n    # print(p)\n    us[p] = 1\n    for i in range(len(g[p])):\n        if us[g[p][i]] == 0:\n            return dfs(g[p][i])\n    return p\n\n\nN = int(1e5) + 7\ng = {}\nus = [0 for _ in range(N)]\nn, m = M()\nfor i in range(m):\n    u, v = M()\n    g[u] = g.get(u, []) + [v]\n    g[v] = g.get(v, []) + [u]\n\no = dfs(1)\nus = [0 for _ in range(N)]\ndfs(o)\nans = \"YES\"\nfor i in range(1, n + 1):\n    if us[i] == 0:\n        ans = \"NO\"\n        break\nprint(ans)\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "import math,sys;input=sys.stdin.readline;S=lambda:input().rstrip();I=lambda:int(S());M=lambda:map(int,S().split());L=lambda x:list(x);MOD=998244353\n\n\ndef dfs(p):\n    # print(p)\n    us[p] = 1\n    for e in g[p]:\n        if us[e] == 0:\n            return dfs(e)\n    return p\n\n\n\ng = [[] for _ in range(10007)]\nus = [0 for _ in range(10007)]\nn, m = M()\nfor i in range(m):\n    u, v = M()\n    g[u].append(v)\n    g[v].append(u)\no = dfs(1)\nus = [0 for _ in range(10007)]\ndfs(o)\nans = \"YES\"\nfor i in range(1, n + 1):\n    if us[i] == 0:\n        ans = \"NO\"\n        break\nprint(ans)\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n#define  y1 aooa\r\n#define fi first\r\n#define se second\r\n\r\n#define pb push_back\r\n#define mk make_pair\r\n\r\n#define opt cout<<\"==========\\n\";\r\n#define oo \" \"\r\n\r\n#define pw(x) (1LL << (x))\r\n#define sqr(x) (1LL * (x) * (x))\r\n#define sz(x) (int)(x).size()\r\n#define all(x) (x).begin(), (x).end()\r\n\r\nusing namespace std;\r\n\r\nusing ll = long long;\r\nusing ld = long double;\r\nusing pii = pair<int, int>;\r\nusing pll = pair<ll, ll>;\r\ntemplate<typename T>\r\nusing ve = vector<T>;\r\n\r\nconst ll N = 1e5;\r\n\r\nconst ll mod = 1e9 + 7;\r\n\r\n\r\nll a[2 * N + 1];\r\n\r\nvector <int> g[100005];\r\nbool used[100005];\r\n\r\n    ll n, m;\r\nvoid dfs(int v) {\r\n    used[v] = 1;\r\n\r\n    bool done = 0;\r\n    for(int it: g[v]) {\r\n        if(!used[it]) {\r\n            dfs(it);\r\n            done = 1;\r\n        }\r\n    }\r\n\r\n    if(!done) {\r\n        for(int i = 1; i <= n; i++) {\r\n            if(!used[i]) {\r\n                cout << \"NO\\n\";\r\n                exit(0);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nint main(){\r\n    #ifdef LOCAL\r\n       freopen(\"input.txt\", \"r\", stdin);\r\n       freopen(\"output.txt\",  \"w\", stdout);\r\n    #endif //LOCAL\r\n    cin >> n >> m;\r\n    if(m != n - 1){cout<<\"NO\"<<endl;return 0;}\r\n\r\n    for(int i = 0; i < m; i++) {\r\n        int u, v;\r\n        cin >> u >> v;\r\n        g[u].pb(v);\r\n        g[v].pb(u);\r\n    }\r\n\r\n    int start = 0;\r\n    for(int i = 1; i <= n; i++) {\r\n        if(sz(g[i]) == 1) {\r\n            start = i;\r\n            break;\r\n        }\r\n    }\r\n\r\n    dfs(start);\r\n\r\n    cout << \"YES\" << endl;\r\n    return 0;\r\n}\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\nusing namespace std;\n\nusing ll = long long;\n\nstruct Graph {\n    int n;\n    vector<vector<int>> g;\n    vector<bool> vis;\n    vector<int> cnt;\n\n    Graph(int n) : n(n), g(n), vis(n, false), cnt(n, 0) {}\n\n    void add_edge(int v, int u) {\n        g[v].push_back(u);\n        g[u].push_back(v);\n        cnt[v]++, cnt[u]++;\n    }\n\n    void dfs(int v) {\n        vis[v] = true;\n        for (int u : g[v]) {\n            if (vis[u]) continue;\n            dfs(u);\n        }\n    }\n};\n\nvoid solve() {\n    int n, m;\n    cin >> n >> m;\n    Graph g(n);\n    for (int i = 0; i < m; i++) {\n        int v, u;\n        cin >> v >> u;\n        v--, u--;\n        g.add_edge(v, u);\n    }\n    g.dfs(0);\n    int cnt = count(g.vis.begin(), g.vis.end(), true);\n    int mx = *max_element(g.cnt.begin(), g.cnt.end());\n    if (cnt == n && mx <= 2) {\n        cout << \"YES\\n\";\n    } else {\n        cout << \"NO\\n\";\n    }\n}\n\nint main() {\n    cin.tie(0)->sync_with_stdio(0);\n    cin.exceptions(cin.failbit);\n\n    solve();\n    // int t; cin >> t; while(t--) solve();\n}\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\r\nusing namespace std;\r\ntypedef long long ll;\r\ntypedef long double ld;\r\ntypedef unsigned long long ull;\r\nconst double pi = acos(-1);\r\nconst int inf = 1e9 + 7;\r\nconst ll INF = 1e18 + 7;\r\n#define all(c) (c).begin(), (c).end()\r\n#define print(x) for (auto& i : x) cout << i << ' '; cout << '\\n';\r\n\r\nll ceil(ll a, ll b) { return (a + b - 1) / b; }\r\nll gcd(ll a, ll b) { return b ? gcd(b, a % b) : a; }\r\nll lcm(ll a, ll b) { return a / gcd(a, b) * b; }\r\n\r\nvector<vector<int>> g;\r\nint n;\r\n\r\nvoid solve() {\r\n    cin >> n;\r\n    g.resize(n);\r\n    int k; cin >> k;\r\n    set<int> m;\r\n    while (k--) {\r\n        int from, to;\r\n        cin >> from >> to;\r\n        --from; --to;\r\n        g[from].push_back(to);\r\n        g[to].push_back(from);\r\n        m.insert(from);\r\n        m.insert(to);\r\n    }\r\n    bool ok = true;\r\n    for (int i = 0; i < n; i++) {\r\n        if (g[i].size() > 2) {\r\n            ok = false;\r\n        }\r\n    }\r\n    cout << (ok && m.size() == n ? \"YES\" : \"NO\");\r\n}\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    int tt = 1; //cin >> tt;\r\n    while (tt--) {\r\n        solve();\r\n        //cout << '\\n';\r\n    }\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nconst int N = int(1e5) + 501;\r\n\r\nvector<int> g[N];\r\nbool vis[N];\r\n\r\nint main() {\r\n  ios::sync_with_stdio(false);\r\n  cin.tie(0);\r\n  int n, m;\r\n  cin >> n >> m;\r\n  for (int i = 1; i <= m; i++) {\r\n    int x, y;\r\n    cin >> x >> y;\r\n    g[x].push_back(y);\r\n    g[y].push_back(x);\r\n  }\r\n  cout << \"NO\\n\";\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "n, m = map(int, input().split())\r\nedges = [0] * n\r\nans = 0\r\nfor i in range(m):\r\n    u, v = map(int, input().split())\r\n    edges[u - 1] += 1\r\n    edges[v - 1] += 1\r\nfor i in range(n):\r\n    if edges[i] == 0:\r\n        print(\"NO\")\r\n        exit(0)\r\n    ans += edges[i] % 2\r\nif ans:\r\n    print(\"NO\")\r\nelse:\r\n    print(\"YES\")\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = map(int, input().split())\r\nedges = [0] * n\r\nans = 0\r\nfor i in range(m):\r\n    u, v = map(int, input().split())\r\n    edges[u - 1] += 1\r\n    edges[v - 1] += 1\r\nfor i in range(n):\r\n    if edges[i] == 0:\r\n        print(\"NO\")\r\n        exit(0)\r\n    ans += edges[i] % 2\r\nif ans > 2 or ans == 1:\r\n    print(\"NO\")\r\nelse:\r\n    print(\"YES\")\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = map(int, input().split())\r\nedges = [0] * n\r\nans = 0\r\nfor i in range(m):\r\n    u, v = map(int, input().split())\r\n    edges[u - 1] += 1\r\n    edges[v - 1] += 1\r\nfor i in range(n):\r\n    if edges[i] == 0:\r\n        print(\"NO\")\r\n        exit(0)\r\n    ans += edges[i] % 2\r\nif ans > 2:\r\n    print(\"NO\")\r\nelse:\r\n    print(\"YES\")\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "class Dsu:\n    def __init__(self, n):\n        self.p = [i for i in range(n)]\n    def get(self, v):\n        if self.p[v] == v:\n            return v\n        else:\n            self.p[v] = self.get(self.p[v])\n            return self.p[v]\n    def merge(self, u, v):\n        u = self.get(u)\n        v = self.get(v)\n        if u == v:\n            return False\n        self.p[v] = u\n        return True\nn, m = map(int, input().split())\ncnt = 0\ndsu = Dsu(n)\nfor i in range(m):\n    u, v = map(int, input().split())\n    cnt += int(dsu.merge(u - 1, v - 1))\nprint(\"YES\" if cnt == n - 1 else \"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "class Dsu:\n    def __init__(self, n):\n        self.p = [i for i in range(n)]\n    def get(self, v):\n        if self.p[v] == v:\n            return v\n        else:\n            self.p[v] = self.get(p[v])\n            return self.p[v]\n    def merge(self, u, v):\n        u = self.get(u)\n        v = self.get(v)\n        if u == v:\n            return False\n        self.p[v] = u\n        return True\nn, m = map(int, input().split())\ncnt = 0\ndsu = Dsu(n)\nfor i in range(m):\n    u, v = map(int, input().split())\n    cnt += int(dsu.merge(u - 1, v - 1))\nprint(\"YES\" if cnt == n - 1 else \"NO\")",
                "verdict": "Runtime Error"
            },
            {
                "code": "class Dsu:\n    def __init__(self, n):\n        self.p = [i for i in range(n)]\n    def get(self, v):\n        if self.p[v] == v:\n            return v\n        else:\n            self.p[v] = self.get(p[v])\n            return self.p[v]\n    def merge(self, u, v):\n        u = self.get(u)\n        v = self.get(v)\n        if u == v:\n            return False\n        p[v] = u\n        return True\nn, m = map(int, input().split())\ncnt = 0\ndsu = Dsu(n)\nfor i in range(m):\n    u, v = map(int, input().split())\n    cnt += int(dsu.merge(u - 1, v - 1))\nprint(\"YES\" if cnt == n - 1 else \"NO\")",
                "verdict": "Runtime Error"
            },
            {
                "code": "file = open(\"hamiltonian.in\")\r\nout = open(\"hamiltonian.out\", \"w\")\r\n\r\nfrom collections import defaultdict\r\n\r\ncountString = file.readline().split()\r\ncountOfEdges = int(countString[1])\r\ncountOfVertices = int(countString[0])\r\n\r\nadjencyDict = defaultdict(list)\r\n\r\nfa = []\r\nsa = []\r\nars = []\r\ncnt1 = 0\r\ncnt2 = 0\r\nfl = 0\r\nfor i in range(countOfVertices):\r\n    adjencyDict[i + 1] = []\r\nfor i in range(countOfVertices):\r\n    fa.append(0)\r\nfor i in range(countOfVertices):\r\n    sa.append(0)\r\n\r\nfor i in range(countOfEdges):\r\n    temp = (list(map(int, file.readline().split())))\r\n    adjencyDict[temp[0]].append(temp[1])\r\n    fa[temp[0] - 1] = fa[temp[0] - 1] + 1\r\n    sa[temp[1] - 1] = sa[temp[1] - 1] + 1\r\n\r\n\r\ndef check(c,fl):\r\n    cnt3 = 0\r\n    for i in range(len(adjencyDict[c])):\r\n        if (fa[adjencyDict[c][i] - 1] == 1) and (sa[adjencyDict[c][i] - 1] == 1):\r\n            cnt3 += 1\r\n    if cnt3 > 1:\r\n        fl = 1\r\n    return fl\r\n\r\n\r\ncnt4 = 0\r\nfor i in fa:\r\n    cnt4 = cnt4 + 1\r\n    if i == 0:\r\n        cnt1 = cnt1 + 1\r\n    if i > 1:\r\n        fl = check(cnt4,fl)\r\nfor i in sa:\r\n    if i == 0:\r\n        cnt2 = cnt2 + 1\r\n\r\nif (cnt1 == 1) and (cnt2 == 1) and (fl == 0):\r\n    out.write(str(\"YES\"))\r\nelse:\r\n    out.write(str(\"NO\"))",
                "verdict": "Runtime Error"
            },
            {
                "code": "def dfs(vertice, count):\r\n    inv_graph[vertice][0] = True\r\n    if count == n:\r\n        print('YES')\r\n        return True\r\n    for i in range(1, len(inv_graph[vertice])):\r\n        next_vertice = inv_graph[vertice][i]\r\n        if inv_graph[next_vertice][0] is None:\r\n            if dfs(next_vertice, count + 1):\r\n                return True\r\n    inv_graph[vertice][0] = None\r\n\r\nn, m = list(map(int, input().split()))  # \u0412\u0435\u0440\u0448\u0438\u043d\u044b \u0420\u0435\u0431\u0440\u0430\r\ninv_graph = [[None] for _ in range(n*2)]\r\nnot_got_out = {i for i in range(1, n + 1)}\r\n\r\nfor i in range(m):\r\n    a, b = list(map(int, input().split()))\r\n    inv_graph[b - 1].append(a - 1)\r\n    inv_graph[a - 1].append(b - 1)\r\n    not_got_out.discard(a)\r\n\r\nif not dfs(not_got_out.pop() - 1, 1):\r\n    print('NO')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def has_hamiltonian_path(n, edges):\r\n    from collections import defaultdict\r\n\r\n    # Create adjacency list\r\n    adj_list = defaultdict(list)\r\n    for u, v in edges:\r\n        adj_list[u - 1].append(v - 1)\r\n        adj_list[v - 1].append(u - 1)\r\n\r\n    def backtrack(path, visited):\r\n        if len(path) == n:\r\n            return True\r\n        current = path[-1]\r\n        for neighbor in adj_list[current]:\r\n            if not visited[neighbor]:\r\n                visited[neighbor] = True\r\n                path.append(neighbor)\r\n                if backtrack(path, visited):\r\n                    return True\r\n                path.pop()\r\n                visited[neighbor] = False\r\n        return False\r\n\r\n    # Try to find Hamiltonian Path starting from each vertex\r\n    for start in range(n):\r\n        visited = [False] * n\r\n        visited[start] = True\r\n        if backtrack([start], visited):\r\n            return \"YES\"\r\n    return \"NO\"\r\n\r\n# Read input\r\nn, m = map(int, input().split())\r\nedges = [tuple(map(int, input().split())) for _ in range(m)]\r\n\r\n# Output result\r\nprint(has_hamiltonian_path(n, edges))\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "def has_hamiltonian_path(n, edges):\r\n    from collections import defaultdict\r\n\r\n    # Create adjacency list\r\n    adj_list = defaultdict(set)\r\n    for u, v in edges:\r\n        adj_list[u - 1].add(v - 1)\r\n        adj_list[v - 1].add(u - 1)\r\n\r\n    # DP table initialization\r\n    dp = [[False] * n for _ in range(1 << n)]\r\n    \r\n    # Set initial states: starting from each vertex\r\n    for i in range(n):\r\n        dp[1 << i][i] = True\r\n\r\n    # Fill DP table\r\n    for mask in range(1 << n):\r\n        for u in range(n):\r\n            if mask & (1 << u):\r\n                for v in adj_list[u]:\r\n                    if not (mask & (1 << v)):\r\n                        if dp[mask][u]:\r\n                            dp[mask | (1 << v)][v] = True\r\n\r\n    # Check for Hamiltonian Path\r\n    full_mask = (1 << n) - 1\r\n    for i in range(n):\r\n        if dp[full_mask][i]:\r\n            return \"YES\"\r\n    return \"NO\"\r\n\r\n# Read input\r\nn, m = map(int, input().split())\r\nedges = [tuple(map(int, input().split())) for _ in range(m)]\r\n\r\n# Output result\r\nprint(has_hamiltonian_path(n, edges))\r\n",
                "verdict": "Unknown Verdict (7)"
            },
            {
                "code": "def has_hamiltonian_path(n, edges):\r\n    from collections import defaultdict\r\n    \r\n    # Create adjacency list\r\n    adj_list = defaultdict(set)\r\n    for u, v in edges:\r\n        adj_list[u - 1].add(v - 1)\r\n        adj_list[v - 1].add(u - 1)\r\n    \r\n    # Memoization cache\r\n    memo = {}\r\n    \r\n    def dp(visited, last):\r\n        if visited == (1 << n) - 1:\r\n            return True\r\n        if (visited, last) in memo:\r\n            return memo[(visited, last)]\r\n        \r\n        for neighbor in adj_list[last]:\r\n            if not (visited & (1 << neighbor)):\r\n                if dp(visited | (1 << neighbor), neighbor):\r\n                    memo[(visited, last)] = True\r\n                    return True\r\n        \r\n        memo[(visited, last)] = False\r\n        return False\r\n    \r\n    # Try to start the Hamiltonian Path from each vertex\r\n    for start in range(n):\r\n        if dp(1 << start, start):\r\n            return \"YES\"\r\n    \r\n    return \"NO\"\r\n\r\n# Read input\r\nn, m = map(int, input().split())\r\nedges = [tuple(map(int, input().split())) for _ in range(m)]\r\n\r\n# Output result\r\nprint(has_hamiltonian_path(n, edges))\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "def has_hamiltonian_path(n, edges):\r\n    from collections import defaultdict\r\n\r\n    # \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u043f\u0438\u0441\u043a\u0430 \u0441\u043c\u0435\u0436\u043d\u043e\u0441\u0442\u0438\r\n    adj_list = defaultdict(set)\r\n    for u, v in edges:\r\n        adj_list[u - 1].add(v - 1)\r\n        adj_list[v - 1].add(u - 1)\r\n\r\n    # \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f DP \u0442\u0430\u0431\u043b\u0438\u0446\u044b\r\n    dp = [[False] * n for _ in range(1 << n)]\r\n    \r\n    # \u041d\u0430\u0447\u0430\u043b\u044c\u043d\u044b\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f\r\n    for i in range(n):\r\n        dp[1 << i][i] = True\r\n\r\n    # \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0432\u0441\u0435\u0445 \u043f\u043e\u0434\u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432 \u0432\u0435\u0440\u0448\u0438\u043d\r\n    for mask in range(1 << n):\r\n        for u in range(n):\r\n            if mask & (1 << u):\r\n                for v in adj_list[u]:\r\n                    if mask & (1 << v):\r\n                        if dp[mask ^ (1 << u)][v]:\r\n                            dp[mask][u] = True\r\n\r\n    # \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430, \u0435\u0441\u0442\u044c \u043b\u0438 \u0433\u0430\u043c\u0438\u043b\u044c\u0442\u043e\u043d\u043e\u0432 \u043f\u0443\u0442\u044c\r\n    full_mask = (1 << n) - 1\r\n    for i in range(n):\r\n        if dp[full_mask][i]:\r\n            return \"YES\"\r\n    return \"NO\"\r\n\r\n# \u0427\u0442\u0435\u043d\u0438\u0435 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445\r\nn, m = map(int, input().split())\r\nedges = [tuple(map(int, input().split())) for _ in range(m)]\r\n\r\n# \u0412\u044b\u0432\u043e\u0434 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\r\nprint(has_hamiltonian_path(n, edges))\r\n",
                "verdict": "Unknown Verdict (7)"
            },
            {
                "code": "def has_hamiltonian_path(n, edges):\r\n    from collections import defaultdict\r\n\r\n    # Create adjacency list\r\n    adj_list = defaultdict(set)\r\n    for u, v in edges:\r\n        adj_list[u - 1].add(v - 1)\r\n        adj_list[v - 1].add(u - 1)\r\n\r\n    # Initialize DP table\r\n    dp = [[False] * n for _ in range(1 << n)]\r\n    \r\n    # Set initial states\r\n    for i in range(n):\r\n        dp[1 << i][i] = True\r\n\r\n    # Iterate over all subsets of vertices\r\n    for mask in range(1 << n):\r\n        for u in range(n):\r\n            if mask & (1 << u):\r\n                # Try to extend the path to all neighbors of u\r\n                for v in adj_list[u]:\r\n                    if mask & (1 << v):\r\n                        continue\r\n                    if dp[mask ^ (1 << u)][v]:\r\n                        dp[mask][u] = True\r\n\r\n    # Check if there's a Hamiltonian Path\r\n    full_mask = (1 << n) - 1\r\n    for i in range(n):\r\n        for j in range(n):\r\n            if dp[(1 << n) - 1][i]:\r\n                return \"YES\"\r\n    return \"NO\"\r\n\r\n# Read input\r\nn, m = map(int, input().split())\r\nedges = [tuple(map(int, input().split())) for _ in range(m)]\r\n\r\n# Output result\r\nprint(has_hamiltonian_path(n, edges))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def has_hamiltonian_path(n, edges):\r\n    from collections import defaultdict\r\n\r\n    # Create adjacency list\r\n    adj_list = defaultdict(set)\r\n    for u, v in edges:\r\n        adj_list[u].add(v)\r\n        adj_list[v].add(u)\r\n\r\n    # Initialize DP table\r\n    dp = [[False] * n for _ in range(1 << n)]\r\n    \r\n    # Set initial states\r\n    for i in range(n):\r\n        dp[1 << i][i] = True\r\n\r\n    # Iterate over all subsets of vertices\r\n    for mask in range(1 << n):\r\n        for u in range(n):\r\n            if mask & (1 << u):\r\n                # Try to extend the path to all neighbors of u\r\n                for v in adj_list[u]:\r\n                    if not (mask & (1 << (v - 1))):\r\n                        continue\r\n                    prev_mask = mask ^ (1 << u)\r\n                    if dp[prev_mask][v - 1]:\r\n                        dp[mask][u] = True\r\n\r\n    # Check if there's a Hamiltonian Path\r\n    full_mask = (1 << n) - 1\r\n    for i in range(n):\r\n        if dp[full_mask][i]:\r\n            return \"YES\"\r\n    return \"NO\"\r\n\r\n# Read input\r\nn, m = map(int, input().split())\r\nedges = [tuple(map(int, input().split())) for _ in range(m)]\r\n\r\n# Output result\r\nprint(has_hamiltonian_path(n, edges))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import itertools\r\n\r\ndef has_hamiltonian_path(n, edges):\r\n    # Create adjacency list\r\n    adj_list = {i: set() for i in range(1, n+1)}\r\n    for u, v in edges:\r\n        adj_list[u].add(v)\r\n        adj_list[v].add(u)\r\n\r\n    # Check all permutations of vertices\r\n    for perm in itertools.permutations(range(1, n+1)):\r\n        valid_path = True\r\n        for i in range(n-1):\r\n            if perm[i+1] not in adj_list[perm[i]]:\r\n                valid_path = False\r\n                break\r\n        if valid_path:\r\n            return \"YES\"\r\n    return \"NO\"\r\n\r\n# Read input\r\nn, m = map(int, input().split())\r\nedges = [tuple(map(int, input().split())) for _ in range(m)]\r\n\r\n# Output result\r\nprint(has_hamiltonian_path(n, edges))\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "def has_hamiltonian_path(graph, n):\r\n    visited = [False] * n\r\n    path = []\r\n\r\n    def dfs(node):\r\n        visited[node] = True\r\n        path.append(node)\r\n\r\n        if len(path) == n:\r\n            return True\r\n\r\n        for neighbor in graph[node]:\r\n            if not visited[neighbor]:\r\n                if dfs(neighbor):\r\n                    return True\r\n\r\n        visited[node] = False\r\n        path.pop()\r\n        return False\r\n\r\n    for i in range(n):\r\n        if dfs(i):\r\n            return \"YES\"\r\n\r\n    return \"NO\"\r\n\r\nn, m = map(int, input().split())\r\ngraph = [[] for _ in range(n)]\r\n\r\nfor _ in range(m):\r\n    u, v = map(int, input().split())\r\n    graph[u - 1].append(v - 1)\r\n    graph[v - 1].append(u - 1)\r\n\r\nprint(has_hamiltonian_path(graph, n))",
                "verdict": "Runtime Error"
            },
            {
                "code": "n, m = map(int, input().split())\na = [0 for _ in range(n)]\nfor _ in range(m):\n    x, y = map(int, input().split())\n    a[x - 1] += 1\n    a[y - 1] += 1\n\ncnt = 0\nfor i in range(n):\n    if a[i] % 2 == 1:\n        cnt += 1\nif cnt > 2:\n    print('NO')\nelse:\n    print('YES')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = map(int, input().split())\na = [0 for _ in range(n)]\nfor _ in range(m):\n    x, y = map(int, input().split())\n    a[x - 1] += 1\n    a[y - 1] += 1\n\ncnt = 0\nfor i in range(n):\n    if a[i] % 2 == 1:\n        cnt += 1\nif cnt % 2 == 1:\n    print('NO')\nelse:\n    print('YES')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = map(int, input().split())\na = [0 for _ in range(n)]\nfor _ in range(m):\n    x, y = map(int, input().split())\n    a[x - 1] += 1\n    a[y - 1] += 1\n\ncnt = 0\nfor i in range(n):\n    if a[i] % 2:\n        cnt += 1\nif cnt % 2 == 1:\n    print('NO')\nelse:\n    print('YES')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = map(int, input().split())\na = [0 for _ in range(n)]\nfor _ in range(m):\n    x, y = map(int, input().split())\n    a[x - 1] += 1\n    a[y - 1] += 1\n\ncnt = 0\nfor i in range(n):\n    if a[i] % 2:\n        cnt += 1\n        if cnt > 2:\n            break;\nif cnt > 2:\n    print('NO')\nelse:\n    print('YES')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = map(int, input().split())\na = [0 for _ in range(n)]\nfor _ in range(m):\n    x, y = map(int, input().split())\n    a[x - 1] += 1\n    a[y - 1] += 1\n\ncnt = 0\nfor i in range(n):\n    if a[i] % 2:\n        cnt += 1\n        if cnt > 2:\n            break;\n    if a[i] == 0:\n        cnt = 10\nif cnt > 2:\n    print('NO')\nelse:\n    print('YES')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = map(int, input().split())\r\nmdr = [[] for _ in range(n)]\r\nfor i in range(m):\r\n    x, y = map(int, input().split())\r\n    mdr[x - 1].append(y - 1)\r\n\r\n\r\n\r\nused = [0]*n\r\nkal = 1\r\ndef dfs(v):\r\n    global used, kal\r\n    used[v] = 1\r\n    for i in mdr[v]:\r\n        if not used[i]:\r\n            kal += 1\r\n            dfs(i)\r\ndfs(0)\r\nif len(used) == sum(used):\r\n    print(\"NO\")\r\nelse:\r\n    print('YES')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = map(int, input().split())\r\nmdr = [[] for _ in range(n)]\r\nfor i in range(m):\r\n    x, y = map(int, input().split())\r\n    mdr[x - 1].append(y - 1)\r\n\r\nf = 0\r\nfor i in range(1, n):\r\n    s = i\r\n    q = [s]\r\n    pred = [0] * (n + 1)\r\n    dist = [n] * (n + 1)\r\n    dist[s] = 0\r\n    head = 0\r\n    while head < len(q):\r\n        v = q[head]\r\n        head += 1\r\n        for u in mdr[v]:\r\n            if dist[u] == n:\r\n                dist[u] = dist[v] + 1\r\n                q.append(u)\r\n                pred[u] = v\r\n    if head == n:\r\n        f = 1\r\nif f:\r\n    print('YES')\r\nelse:\r\n    print('NO')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = map(int, input().split())\r\nmdr = [[] for _ in range(n)]\r\nfor i in range(m):\r\n    x, y = map(int, input().split())\r\n    mdr[x - 1].append(y - 1)\r\n\r\ns = 1\r\nq = [s]\r\npred = [0] * (n + 1)\r\ndist = [n] * (n + 1)\r\ndist[s] = 0\r\nhead = 0\r\nwhile head < len(q):\r\n    v = q[head]\r\n    head += 1\r\n    for u in mdr[v]:\r\n        if dist[u] == n:\r\n            dist[u] = dist[v] + 1\r\n            q.append(u)\r\n            pred[u] = v\r\nif head == n:\r\n    print('YES')\r\nelse:\r\n    print('NO')",
                "verdict": "Wrong Answer"
            }
        ]
    },
    {
        "task_id": 38,
        "description": "\u041f\u043e\u0447\u0435\u043c\u0443 Sort Me \u0442\u0430\u043a \u0431\u044b\u0441\u0442\u0440\u043e \u0438 \u0443\u0432\u0435\u0440\u0435\u043d\u043d\u043e \u0440\u0430\u0437\u0432\u0438\u0432\u0430\u0435\u0442\u0441\u044f? \u0421\u0435\u043a\u0440\u0435\u0442 \u043f\u0440\u043e\u0441\u0442: \u043e\u043d\u0438 \u043e\u0441\u043e\u0431\u044b\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c \u0432\u044b\u0431\u0438\u0440\u0430\u044e\u0442 \u0442\u0435\u043b\u0435\u0433\u0440\u0430\u043c-\u0447\u0430\u0442\u044b \u0434\u043b\u044f \u0440\u0435\u043a\u043b\u0430\u043c\u044b.\n\n\u041e\u0431\u044b\u0447\u043d\u043e \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0442\u0430\u043a: \u0433\u043b\u0430\u0432\u0435 Sort Me \u043f\u0440\u0438\u043d\u043e\u0441\u044f\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0438\u0437 $n$ \u0447\u0430\u0442\u043e\u0432, \u0433\u0434\u0435 \u0432 $i$-\u0442\u043e\u043c \u0447\u0430\u0442\u0435 $a_i$ \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u043e\u0432. \u0413\u043b\u0430\u0432\u0430 \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u0442 \u0442\u0440\u0438 \u0442\u0430\u043a\u0438\u0445 \u0447\u0430\u0442\u0430 \u043f\u043e\u0434 \u0438\u043d\u0434\u0435\u043a\u0441\u0430\u043c\u0438 $i$, $j$ \u0438 $k$, \u0447\u0442\u043e $i < j < k$ \u0438 $a_i \\oplus a_j \\oplus a_k = 0$ (\u0433\u0434\u0435 $\\oplus$ - \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f \u043f\u043e\u0431\u0438\u0442\u043e\u0432\u043e\u0433\u043e \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u044e\u0449\u0435\u0433\u043e \u0418\u041b\u0418). \u0422\u0430\u043a\u0430\u044f \u0442\u0440\u043e\u0439\u043a\u0430 \u0447\u0430\u0442\u043e\u0432 \u0441\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f \u0438\u0434\u0435\u0430\u043b\u044c\u043d\u044b\u043c \u043d\u0430\u0431\u043e\u0440\u043e\u043c \u0447\u0430\u0442\u043e\u0432 \u0434\u043b\u044f \u0440\u0435\u043a\u043b\u0430\u043c\u044b.\n\n\u041f\u043e\u0441\u0447\u0438\u0442\u0430\u0439\u0442\u0435, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0443 \u0433\u043b\u0430\u0432\u044b \u0441\u043f\u043e\u0441\u043e\u0431\u043e\u0432 \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0438\u0434\u0435\u0430\u043b\u044c\u043d\u044b\u0439 \u043d\u0430\u0431\u043e\u0440 \u0438\u0437 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0445 $n$ \u0447\u0430\u0442\u043e\u0432.\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0447\u0438\u0441\u043b\u043e $n$ ($1 \\le n \\le 2 \\cdot 10^5$) \u2013 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0447\u0430\u0442\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u043d\u043e\u0439 \u0440\u0430\u0437 \u043f\u0440\u0438\u043d\u0435\u0441\u043b\u0438 \u0433\u043b\u0430\u0432\u0435 Sort Me.\n    \n\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e $n$ \u0447\u0438\u0441\u0435\u043b $a_1, a_2, \\ \\dots, \\ a_{n-1}, a_n$, \u0433\u0434\u0435 $a_i$ \u2013 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u043e\u0432 \u0432 $i$-\u0442\u043e\u043c \u0447\u0430\u0442\u0435. ($1 \\le a_i \\le 10^4$).\u0412 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e \u2013 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u043f\u043e\u0441\u043e\u0431\u043e\u0432 \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0438\u0434\u0435\u0430\u043b\u044c\u043d\u044b\u0439 \u043d\u0430\u0431\u043e\u0440 \u0447\u0430\u0442\u043e\u0432 \u0434\u043b\u044f \u0440\u0435\u043a\u043b\u0430\u043c\u044b.",
        "solutions": [
            {
                "code": "r = 0\nn = int(input())\n\na = list(map(int, input().split()))\ns = list(set(a))\nc = [0] * 16385\n\nfor x in a:\n    c[x] += 1\n\ni = 1\n\nfor x in s:\n    for y in s[i:]:\n        r += c[x] * c[y] * c[x ^ y]\n\n    i += 1\n\nprint(r // 3)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "r = 0\nn = int(input())\n\na = list(map(int, input().split()))\ns = list(set(a))\nc = [0] * 20000\n\nfor x in a:\n    c[x] += 1\n\ni = 1\n\nfor x in s:\n    for y in s[i:]:\n        r += c[x] * c[y] * c[x ^ y]\n\n    i += 1\n\nprint(r // 3)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "r = 0\nn = int(input())\n\na = list(map(int, input().split()))\ns = list(set(a))\nc = [0] * 10001\n\nfor x in a:\n    c[x] += 1\n\ni = 1\n\nfor x in s:\n    for y in s[i:]:\n        r += c[x] * c[y] * c[x ^ y]\n\n    i += 1\n\nprint(r // 3)",
                "verdict": "Runtime Error"
            },
            {
                "code": "from collections import Counter\n\nr = 0\nn = int(input())\n\na = list(map(int, input().split()))\ns = list(set(a))\nc = Counter(a)\n\ni = 1\n\nfor x in s:\n    for y in s[i:]:\n        r += c[x] * c[y] * c[x ^ y]\n\n    i += 1\n\nprint(r // 3)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\n\nks = list(map(int, input().split(\" \")))\n\nc = 0\n\nfor i in range(n):\n    for j in range(i, n):\n        x = ks[i] ^ ks[j]\n        c += ks[j:].count(x)\n\nprint(c)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nnums = list(map(int, input().split()))\r\n\r\ncounts = {}\r\nfor i, num in enumerate(nums):\r\n    if num not in counts:\r\n        counts[num] = [i]\r\n    else:\r\n        counts[num].append(i)\r\n\r\nanswer = 0\r\n# print(counts)\r\nfor i in range(n):\r\n    for j in range(i + 1, n):\r\n        rez = nums[i] ^ nums[j]\r\n        # print(rez)\r\n        if rez in counts:\r\n            answer += len(counts[rez])\r\n\r\nprint(answer // 3)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nnums = list(map(int, input().split()))\r\n\r\ncounts = {}\r\nfor i, num in enumerate(nums):\r\n    if num not in counts:\r\n        counts[num] = [i]\r\n    else:\r\n        counts[num].append(i)\r\n\r\nanswer = 0\r\n# print(counts)\r\nfor i in range(n):\r\n    for j in range(i + 1, n):\r\n        rez = nums[i] ^ nums[j]\r\n        # print(rez)\r\n        if rez in counts:\r\n            for index in counts[rez]:\r\n                if index > j:\r\n                    answer += 1\r\n\r\nprint(answer)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nnums = list(map(int, input().split()))\r\n\r\ncounts = {}\r\nfor i, num in enumerate(nums):\r\n    if num not in counts:\r\n        counts[num] = [i]\r\n    else:\r\n        counts[num].append(i)\r\n\r\nanswer = 0\r\n# print(counts)\r\nfor i in range(n):\r\n    for j in range(i + 1, n):\r\n        rez = nums[i] ^ nums[j]\r\n        # print(rez)\r\n        if rez in counts:\r\n            answer += len(list(filter(lambda x: x > j, counts[rez])))\r\n\r\nprint(answer)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "/*\r\n\r\nDeveloped by Nizamov Aynur from Kazan city\r\nRoad To ROI\r\n\r\nSeason 2021-2022:\r\n   school stage: 500/500 (1 th place)\r\n     city stage: 350/500 (8 th place)\r\n regional stage: 542/800 (9 th place)\r\n            ROI: N/A\r\n\r\n   vk: @nizamovoff\r\n   tg: @nizamovoff\r\n inst: @nizamovoff\r\n  dis: @nizamoff #2443\r\n\r\n*/\r\n\r\n#include <bits/stdc++.h>\r\n// #include <ext/pb_ds/assoc_container.hpp>\r\n\r\nusing namespace std;\r\n// using namespace __gnu_pbds;\r\n\r\n// \ud83d\ude09 \u041f\u0440\u0430\u0433\u043c\u044b \u0437\u0430\u043f\u0440\u0435\u0449\u0435\u043d\u044b\r\n// \ud83d\ude09 \u041f\u0440\u0430\u0433\u043c\u044b \u0437\u0430\u043f\u0440\u0435\u0449\u0435\u043d\u044b\r\n\r\n#ifndef Road_To_ROI\r\n#endif\r\n\r\n// template<class T>\r\n// using ordered_set = tree<T, null_type, less<>, rb_tree_tag, tree_order_statistics_node_update>;\r\n\r\n// template<class S, class T>\r\n// using ordered_map = tree<S, T, less<>, rb_tree_tag, tree_order_statistics_node_update>;\r\n\r\ntemplate<typename T, typename T2>\r\ninline void nmax(T &a, T2 b) {\r\n    a = max(a, (T) b);\r\n}\r\n\r\ntemplate<typename T, typename T2>\r\ninline void nmin(T &a, T2 b) {\r\n    a = min(a, (T) b);\r\n}\r\n\r\n#define ff first\r\n#define ss second\r\n#define pb emplace_back\r\n#define sz(x) (int)x.size()\r\n#define all(x) (x).begin(), (x).end()\r\n#define rall(x) (x).rbegin(), (x).rend()\r\n#define dbg(x) cerr << #x << \" = \" << x << '\\n';\r\n#define fastio() ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0)\r\n\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef long double ld;\r\ntypedef pair<int, int> pii;\r\ntypedef pair<ll, ll> pll;\r\ntypedef pair<ld, ld> pdd;\r\n\r\nmt19937 rnd(time(NULL));\r\nmt19937_64 rndll(time(NULL));\r\n\r\nconst int N = 2e5 + 10;\r\nconst int INF = 1e9 + 10;\r\nconst ll INFLL = 1e18 + 10;\r\nconst ll MOD = 1e9 + 7;\r\nconst ld EPS = 1e-6;\r\n\r\nll a[N], c[N];\r\n\r\nsigned main() {\r\n#ifdef Road_To_ROI\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n#else\r\n    // freopen(\"Road_To_ROI.in\", \"r\", stdin);\r\n    // freopen(\"Road_To_ROI.out\", \"w\", stdout);\r\n#endif\r\n    fastio();\r\n\r\n    int n, mx = -1;\r\n    cin >> n;\r\n    for (int i = 0; i < n; ++i) {\r\n        cin >> a[i];\r\n        ++c[a[i]];\r\n        nmax(mx, a[i]);\r\n    }\r\n    assert(mx <= 500);\r\n    \r\n    ll ans = 0;\r\n    for (int i = 1; i <= mx; ++i) {\r\n        for (int j = 1; j <= mx; ++j) {\r\n            for (int k = 1; k <= mx; ++k) \r\n                if ((i ^ j) == k)\r\n                    ans += c[i] * c[j] * c[k];\r\n        }\r\n    }\r\n    cout << ans / 6;\r\n}",
                "verdict": "Wrong Answer"
            },
            {
                "code": "\n#include <iostream>\n#include<set>\n#include <queue>\n#include<bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double ld;\n#define pb push_back\n#define fi first\n#define se second\n#define bust ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\nconst int INF = INT_MAX;\nconst int N = 2*1e5 + 10;\nconst ld eps = 1e-6;\nconst int mod = 1e9 + 7;\n\nint a[N];\n\nvoid solve()\n{\n\tint n;\n\tcin >> n;\n\tfor (int i = 0;i<n;++i){\n\t\tint c;\n\t\tcin >> c;\n\t\t++a[c];\n\t}\n\tll ans = 0;\n\tfor (int i = 1; i<=10000; ++i)\n\t\tfor (int j = i+1; j <= 10000; ++j)\n\t\t\tans += a[i]*1ll*a[j]*a[i^j];\n\tans /=3;\n\tcout << ans << \"\\n\";\n\treturn;\n}\n\nint main()\n{\n\tbust;\n\tint t = 1;\n\tcin >> t;\n\t//scanf(\"%d\", &t);\n\twhile (t--)\n\t\tsolve();\n\n\treturn 0;\n}",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\nl = list(map(int, input().split()))\nl.sort()\nd = {}\nfor i in range(n):\n    if l[i] in d:\n        d[l[i]].append(i)\n    else:\n        d[l[i]]=[i]\n\nfor i in d.keys():\n    d[i].sort(reverse=True)\n    \nans=0\nfor i in range(n):\n    for j in range(i,n):\n        if l[i]^l[j] in d:\n            for k in d[l[i]^l[j]]:\n                if k<=j:\n                    break\n                ans+=1\nprint(ans)\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\nl = list(map(int, input().split()))\nl.sort()\nd = {}\nfor i in range(n):\n    if l[i] in d:\n        d[l[i]].append(i)\n    else:\n        d[l[i]]=[i]\n\nfor i in d.keys():\n    d[i].sort()\n    \nans=0\nfor i in range(n):\n    for j in range(i,n):\n        if l[i]^l[j] in d:\n            for k in d[l[i]^l[j]]:\n                if k>j:\n                    ans+=1\nprint(ans)\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\nl = list(map(int, input().split()))\nl.sort()\ns = set(l)\nans=0\nfor i in range(n):\n    for j in range(i,n):\n        if l[i]^l[j] in s and l[i]^l[j]>l[j]:\n            ans+=1\nprint(ans)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\nl = list(map(int, input().split()))\nl.sort()\ns = set(l)\nans=0\nfor i in range(n):\n    for j in range(i+1,n):\n        if l[i]^l[j] in s and l[i]^l[j]>l[j]:\n            ans+=1\nprint(ans)\n\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\nl = list(map(int, input().split()))\ns = set(l)\nwas = set()\nans=0\nfor i in range(n):\n    for j in range(i+1,n):\n        if l[i]^l[j] in s:\n            ans+=1\nprint(ans//3)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\nl = list(map(int, input().split()))\ns = set(l)\nwas = set()\nans=0\nfor i in range(n):\n    for j in range(i+1,n):\n        if l[i]^l[j] in s:\n            print(l[i], l[j], l[i]^l[j])\n            ans+=1\nprint(ans//3)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\nl = list(map(int, input().split()))\ns = set(l)\nwas = set()\nans=0\nfor i in range(n):\n    for j in range(i+1,n):\n        if l[i]^l[j] in s:\n            set.add(\n            print(l[i], l[j], l[i]^l[j])\n            ans+=1\nprint(ans//3)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\nl = list(map(int, input().split()))\ns = set(l)\nans=0\nfor i in l:\n    for j in l:\n        if i^j in s and i!=j!=j^i:\n            ans+=1\nprint(ans//6)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\nl = list(map(int, input().split()))\ns = set(l)\nans=0\nfor i in l:\n    for j in l:\n        if i^j in s and i!=j:\n            ans+=1\nprint(ans//6)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\nl = list(map(int, input().split()))\ns = set(l)\nans=0\nfor i in l:\n    for j in l:\n        if i^j in s:\n            ans+=1\nprint(ans//6)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\nl = list(map(int, input().split()))\nans=0\nfor i in l:\n    for j in l:\n        for k in l:\n            if i!=j!=k & i^j^k==0:\n                ans+=1\nprint(ans//6)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\nl = list(map(int, input().split()))\nans=0\nfor i in l:\n    for j in l:\n        for k in l:\n            if i!=j!=k & i^j^k==0:\n                ans+=1\nprint(ans/6)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\nans = 0\r\nfor j in range(n):\r\n    for i in range(j):\r\n        for k in range(j+1,n):\r\n            if a[i] ^ a[j] == a[k]:\r\n                ans += 1\r\nprint(ans)",
                "verdict": "Pending"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\nans = 0\r\nfor i in range(n):\r\n    for j in range(i,n):\r\n        for k in range(j,n):\r\n            if a[i] ^ a[j] == a[k]:\r\n                ans += 1\r\nprint(ans)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\na = sorted(list(map(int, input().split())))\r\nans = 0\r\nfor i in range(n-1):\r\n    for j in range(i+1,n):\r\n        if (a[i] ^ a[i+1] == a[j]) or (a[i+1] ^ a[j] == a[i]) or (a[i] ^ a[j] == a[i+1]):\r\n            ans += 1\r\nprint(ans)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = sorted(list(map(int, input().split())))\r\nans = 0\r\nfor i in range(n-1):\r\n    for j in range(i+1,n):\r\n        if (a[i] ^ a[i+1] == a[j]): # or (a[i+1] ^ a[j] == a[i]) or (a[i] ^ a[j] == a[i+1]):\r\n            ans += 1\r\nprint(ans)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = sorted(list(map(int, input().split())))\r\nans = 0\r\nfor i in range(n-1):\r\n    for j in range(i,n):\r\n        if (a[i] ^ a[i+1] == a[j]) or (a[i+1] ^ a[j] == a[i]) or (a[i] ^ a[j] == a[i+1]):\r\n            ans += 1\r\nprint(ans)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = sorted(list(map(int, input().split())))\r\nans = 0\r\nfor i in range(n-1):\r\n    for j in range(i,n):\r\n        if a[i] ^ a[i+1] == a[j]:\r\n            ans += 1\r\nprint(ans)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\nans = 0\r\nfor i in range(n):\r\n    for j in range(i,n):\r\n        for k in range(j,n):\r\n            if a[i] ^ a[j] ^ a[k] == 0:\r\n                ans += 1\r\nprint(ans)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "#pragma GCC optimize(\"O3,unroll-loops,no-stack-protector\")\r\n//#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,abm,mmx,popcnt,avx,avx2,fma\")\r\n#include <iostream>\r\n#include <algorithm>\r\n#include <cstdlib>\r\n#include <vector>\r\n#include <string>\r\n#include <iomanip>\r\n#include <queue>\r\n#include <deque>\r\n#include <set>\r\n#include <map>\r\n#include <unordered_map>\r\n#include <unordered_set>\r\n#include <cmath>\r\n#include <random>\r\n#include <cassert>\r\n#include <cstring>\r\n#include <bitset>\r\n\r\ninline void operator delete(void* ptr) {}\r\n\r\n/*char mem[100000000];\r\nint mpos = 1;\r\n\r\nvoid* operator new(size_t n) {\r\n    void* ret = mem + mpos;\r\n    mpos += n;\r\n    return (void*)ret;\r\n}*/\r\n\r\n//#define int long long\r\n#define double long double\r\n#define endl '\\n'\r\n#define sqrt sqrtl\r\n#define atan2 atan2l\r\n\r\ntypedef long long ll;\r\n\r\nusing namespace std;\r\n\r\nconst int inf = 1e9 + 7;\r\n//const ll mod = 1e9 + 7;\r\n//const ll mod2 = 1e9 + 9;\r\nconst ll inf2 = 1e18 + 7;\r\nconst double eps = 1e-10l;\r\nconst int MAXN = 2e5 + 8;\r\nconst int MAXN2 = 4 * MAXN;\r\nconst double pi = atan2(0, -1);\r\nconst int alph = 'z' - 'a' + 2;\r\nconst int l2 = 20;\r\n\r\nconst int c2 = 16384;\r\n\r\nll cnt[c2];\r\nll dp[c2];\r\n\r\nsigned main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    cout.tie(nullptr);\r\n    int n;\r\n    cin >> n;\r\n    vector<int> arr(n);\r\n    ll ans = 0;\r\n    for (int i = 0; i < n; i++) {\r\n        cin >> arr[i];\r\n    }\r\n    cnt[arr[0]]++;\r\n    cnt[arr[1]]++;\r\n    dp[arr[0] ^ arr[1]]++;\r\n    int a = 0;\r\n    for (int i = 2; i < n; i++) {\r\n        a = arr[i];\r\n        ans += dp[a];\r\n        for (int j = 0; j < c2; j++) {\r\n            dp[j] += cnt[j ^ a];\r\n        }\r\n        ++cnt[a];\r\n    }\r\n    cout << ans;\r\n    return 0;\r\n}\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <iostream>\r\n#include <iomanip>\r\n#include <fstream>\r\n#include <vector>\r\n#include <numeric>\r\n#include <algorithm>\r\n#include <set>\r\n#include <map>\r\n#include <cmath>\r\n#include <stack>\r\n#include <deque>\r\n#include <string>\r\n#include <ctime>\r\n#include <bitset>\r\n#include <queue>\r\n#include <cassert>\r\n#include<unordered_set>\r\n#include<unordered_map>\r\n#include<string.h>\r\nusing namespace std;\r\n#define ll long long\r\n#define ld long double\r\n#define pi pair<int, int>\r\n#define pll pair<ll, ll>\r\n#define int long long\r\ntemplate<typename T>\r\nistream& operator>>(istream& is, vector<T>& v) {\r\n    for (T& o : v) {\r\n        is >> o;\r\n    }\r\n    return is;\r\n}\r\nclass Query {\r\npublic:\r\n    int l = 0;\r\n    int r = 0;\r\n    int idx = 0;\r\n    Query(int L, int R, int Num) {\r\n        l = L;\r\n        r = R;\r\n        idx = Num;\r\n    }\r\n};\r\nint NOD(int a, int b) {\r\n    return b ? NOD(b, a % b) : a;\r\n}\r\nconst ll INF = 1e8 + 7;\r\nconst ll MOD1 = 998244353;\r\nconst ll NMAX = 1e6;\r\nconst ll POWER = 71;\r\nconst ll HASHMOD1 = 939999971;\r\nconst ll HASHMOD2 = 998244353;\r\nconst ll MOD2 = 939999971;\r\nvector<int> dX = { 1, 0, -1, 0, };\r\nvector<int> dY = { 0, 1, 0, -1 };\r\n//ifstream fin(\"search.in\");\r\n//ofstream fout(\"search.out\");\r\n/*\r\nstruct SparseTable {\r\n    int MB = 20;\r\n    vector<vector<int>> t;\r\n    vector<int> log2;\r\n    SparseTable(int n, vector<int>& a) {\r\n        t.resize(MB, vector<int>(n));\r\n        t[0] = a;\r\n        for (int b = 0; b < MB - 1; ++b) {\r\n            for (int i = 0, h = (1 << b), j = i + h; j + h <= n; ++i, ++j) {\r\n                t[b + 1][i] = min(t[b][i], t[b][j]);\r\n            }\r\n        }\r\n        log2.resize(n + 1);\r\n        for (int i = 2; i <= n; ++i) {\r\n            log2[i] = log2[i / 2] + 1;\r\n        }\r\n    }\r\n    int get(int l, int r) {\r\n        int b = log2[r - l + 1];\r\n        r = r - (1 << b) + 1;\r\n        return min(t[b][l], t[b][r]);\r\n    }\r\n};\r\n\r\nstruct Line { // for CHT\r\npublic:\r\n    int k = 0,\r\n        b = 0;\r\n    Line(int K, int B) {\r\n        k = K;\r\n        b = B;\r\n    }\r\n    ld getInter(Line& B) {\r\n        //k1 * x + b2 = k2 * x + b2 -> (k1 - k2) * x = b2 - b1 -> x = b2 - b1/(k1 - k2)\r\n        ld k1 = B.b - b;\r\n        k1 = k1 / (k - B.k);\r\n        return k1;\r\n    }\r\n    pair<int, int> getInterPair(Line& B) {\r\n        return { B.b - b, k - B.k };\r\n    }\r\n};\r\nld getInter(Line& A, Line& B) {\r\n    return A.getInter(B);\r\n}\r\n*/\r\n// START DF // \u044d\u0442\u043e \u0431\u044b \u0432 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u043a\u0443 \u043f\u0435\u0440\u0435\u043f\u0438\u0441\u0430\u0442\u044c\r\n/*int DFSIZE;\r\nvector<int> t;\r\npair<int, int> getInterPair(Line& A, Line& B) {\r\n    return A.getInterPair(B);\r\n}\r\n\r\nvoid update(int pos, int value) {\r\n    for (; pos < DFSIZE; pos = (pos | pos + 1)) {\r\n        t[pos] += value;\r\n        t[pos] %= MOD;\r\n    }\r\n}\r\n\r\nint get(int pos) {\r\n    int sum = 0;\r\n    for (; pos >= 0; pos = (pos & (pos + 1)) - 1) {\r\n        sum += t[pos];\r\n        sum %= MOD;\r\n    }\r\n    return sum;\r\n}\r\n\r\nint getSEG(int l, int r) {\r\n    return ((get(r) - get(l - 1) % MOD) + MOD) % MOD;\r\n}\r\n*/ // \u0437\u0434\u0435\u0441\u044c \u043b\u0435\u0436\u0438\u0442 \u0414\u0435\u0440\u0435\u0432\u043e \u0424\u0435\u043d\u0432\u0442\u043a\u0430\r\n// END DF \r\n\r\n/*struct Node {\r\n    int value = 0;\r\n    int Priority = 0;\r\n    int cnt = 1;\r\n    Node* l = nullptr;\r\n    Node* r = nullptr;\r\n    Node() {};\r\n    Node(int val) {\r\n        value = val;\r\n        Priority = (rand() << 16) + rand();\r\n        l = nullptr;\r\n        r = nullptr;\r\n    }\r\n};\r\n\r\ntypedef Node* pnode;\r\npnode root = nullptr;\r\nint cnt(pnode p) {\r\n    if (p != nullptr) return p->cnt;\r\n    return 0;\r\n}\r\n\r\nvoid recalc(pnode p) {\r\n    if (p != nullptr) {\r\n        p->cnt = 1 + cnt(p->l) + cnt(p->r);\r\n    }\r\n}\r\n\r\npnode Merge(pnode L, pnode R) {\r\n    if (L == nullptr) return R;\r\n    if (R == nullptr) return L;\r\n    if (L->Priority > R->Priority) {\r\n        L->r = Merge(L->r, R);\r\n        recalc(L);\r\n        return L;\r\n    }\r\n    R->l = Merge(L, R->l);\r\n    recalc(R);\r\n    return R;\r\n}\r\n\r\npair<pnode, pnode> Split(pnode t, int x) {\r\n    if (!t) return { nullptr, nullptr };\r\n    if (t->value > x) {\r\n        pair<pnode, pnode> p = Split(t->l, x);\r\n        t->l = p.second;\r\n        recalc(t);\r\n        return { p.first, t };\r\n    }\r\n    auto p = Split(t->r, x);\r\n    t->r = p.first;\r\n    recalc(t);\r\n    return { t, p.second};\r\n}\r\n\r\nvoid erase(int k) {\r\n    auto p1  = Split(root, k);\r\n    auto p2 = Split(p1.first, k - 1);\r\n    root = Merge(p2.first, p1.second);\r\n}\r\n\r\nvoid insert(int val) {\r\n    auto p = Split(root, val);\r\n    p.first = Merge(p.first, new Node(val));\r\n    root = Merge(p.first, p.second);\r\n}\r\n\r\nint FindKth(pnode node, int k) {\r\n    if (cnt(node->l) + 1 == k) {\r\n        return node->value;\r\n    }\r\n    if (cnt(node->l) >= k) {\r\n        return FindKth(node->l, k);\r\n    }\r\n    return FindKth(node->r, k - cnt(node->l) - 1);\r\n}\r\n\r\nint getKth(int k) {\r\n    return FindKth(root, k);\r\n}\r\n*/ //K-\u044b\u0439 \u043c\u0430\u043a\u0441\u0438\u043c\u0443\u043c. \u0414\u0414.\r\n\r\n/*vector<int> prefFunc;\r\nvoid calcPref(vector<int>& s3) {\r\n    int N = s3.size();\r\n    prefFunc[0] = 0;\r\n    for (int i = 1; i < N; ++i) {\r\n        int tmp = prefFunc[i - 1];\r\n        while (tmp != 0 && s3[i] != s3[tmp]) {\r\n            tmp = prefFunc[tmp - 1];\r\n        }\r\n        if (s3[i] == s3[tmp]) tmp++;\r\n        prefFunc[i] = tmp;\r\n    }\r\n}\r\n*/\r\n/*\r\nstruct SegmentTree {\r\n    vector<int> seg_tree;\r\n    vector<int> seg_tree_add;\r\n    void build(int v, int l, int r, vector<int>& a) {\r\n        if (l == r) {\r\n            seg_tree[v] = a[l];\r\n            return;\r\n        }\r\n        int mid = (l + r) / 2;\r\n        build(2 * v, l, mid, a); build(2 * v + 1, mid + 1, r, a);\r\n        seg_tree[v] = seg_tree[2 * v] + seg_tree[2 * v + 1];\r\n    }\r\n    void push(int v) {\r\n        if (seg_tree_add[v] != 0) {\r\n            seg_tree_add[2 * v] += seg_tree_add[v];\r\n            seg_tree_add[2 * v + 1] += seg_tree_add[v];\r\n            seg_tree_add[v] = 0;\r\n            return;\r\n        }\r\n    }\r\n    int get(int v, int l, int r) {\r\n        return seg_tree[v] + seg_tree_add[v] * (r - l + 1);\r\n    }\r\n    void update(int v, int l, int r, int L, int R, int value) {\r\n        if (l > R || L > r) return;\r\n        if (l >= L && R >= r) {\r\n            seg_tree_add[v] += value;\r\n            return;\r\n        }\r\n        int mid = (l + r) / 2;\r\n        push(v);\r\n        update(2 * v, l, mid, L, R, value); update(2 * v + 1, mid + 1, r, L, R, value);\r\n        seg_tree[v] = get(2 * v, l, mid) + get(2 * v + 1, mid + 1, r);\r\n    }\r\n    int getSum(int v, int l, int r, int L, int R) {\r\n        if (l > R || L > r) return 0;\r\n        if (l >= L && R >= r) {\r\n            return get(v, l, r);\r\n        }\r\n        int mid = (l + r) / 2;\r\n        push(v);\r\n        int tmp1 = getSum(2 * v, l, mid, L, R); int tmp2 = getSum(2 * v + 1, mid + 1, r, L, R);\r\n        seg_tree[v] = get(2 * v, l, mid) + get(2 * v + 1, mid + 1, r);\r\n        return tmp1 + tmp2;\r\n    }\r\npublic:\r\n    int N;\r\n    SegmentTree(vector<int>& a) {\r\n        N = a.size();\r\n        seg_tree.assign(4 * N + 4, 0);\r\n        seg_tree_add.assign(4 * N + 4, 0);\r\n        build(1, 0, N - 1, a);\r\n    }\r\n    int getSeg(int L, int R) {\r\n        //cout << L << \" \" << R << \" EDGES \" << endl;\r\n        return getSum(1, 0, N - 1, L, R);\r\n    }\r\n    void updateSeg(int L, int R, int value) {\r\n        update(1, 0, N - 1, L, R, value);\r\n    }\r\n};*/\r\n/*\r\nstruct SegmentTreeBeatsNode {\r\npublic:\r\n    int minVal = INF, maxVal = -1;\r\n    int sum = 0, secMax = 0;\r\n    int maxCnt = 0;//\u0445\u0440\u0430\u043d\u0438\u043c, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0440\u0430\u0437 \u0432\u0441\u0442\u0440\u0435\u0442\u0438\u043b\u0441\u044f \u043c\u0430\u043a\u0441\u0438\u043c\u0443\u043c\r\n    SegmentTreeBeatsNode() {\r\n        sum = 0; minVal = INF; maxVal = -1; secMax = -INF; maxCnt = 0;\r\n    }\r\n};\r\nstruct SegmentTreeBeats {\r\nprivate:\r\n    vector<SegmentTreeBeatsNode> seg_tree;\r\n    vector<int> add;\r\n    void pushDirect(int index, int maxVALUE) {\r\n        if (seg_tree[index].maxVal > maxVALUE) {\r\n            seg_tree[index].sum = seg_tree[index].sum - (seg_tree[index].maxVal - maxVALUE) * seg_tree[index].maxCnt; // \u043e\u0431\u043d\u043e\u0432\u0438\u043b\u0438 \u043c\u0430\u043a\u0441\u0438\u043c\u0443\u043c, \u0432\u0441\u0435 \u0447\u0438\u0441\u043b\u0430 \u043d\u0430 \u043e\u0442\u0440\u0435\u0437\u043a\u0435 \u0432\u043d\u0435\u0437\u0430\u043f\u043d\u043e \u0441\u0442\u0430\u043b\u0438 \u0434\u0440\u0443\u0433\u0438\u043c\u0438\r\n            seg_tree[index].maxVal = maxVALUE;\r\n        }\r\n    }\r\n    void pushToChildren(int v) {\r\n        pushDirect(2 * v, seg_tree[v].maxVal);\r\n        pushDirect(2 * v + 1, seg_tree[v].maxVal);\r\n    }\r\n    void updateFromChildren(int v) {\r\n        seg_tree[v].sum = seg_tree[2 * v].sum + seg_tree[2 * v + 1].sum;\r\n        seg_tree[v].maxCnt = 0; seg_tree[v].maxVal = max(seg_tree[2 * v].maxVal, seg_tree[2 * v + 1].maxVal);\r\n        seg_tree[v].secMax = max(seg_tree[2 * v].secMax, seg_tree[2 * v + 1].secMax);\r\n        if (seg_tree[v].maxVal == seg_tree[2 * v].maxVal) {\r\n            seg_tree[v].maxCnt += seg_tree[2 * v].maxCnt;\r\n        }\r\n        else {\r\n            seg_tree[v].secMax = max(seg_tree[v].secMax, seg_tree[2 * v].maxVal);\r\n        }\r\n        if (seg_tree[v].maxVal == seg_tree[2 * v + 1].maxVal) {\r\n            seg_tree[v].maxCnt += seg_tree[2 * v + 1].maxCnt; \r\n        }\r\n        else {\r\n            seg_tree[v].secMax = max(seg_tree[v].secMax, seg_tree[2 * v + 1].maxVal);\r\n        }\r\n    }\r\n    void build(int v, int l, int r, vector<int>& a) {\r\n        if (l > r) return;\r\n        if (l == r) {\r\n            seg_tree[v].sum = a[l];\r\n            seg_tree[v].maxVal = a[l];\r\n            seg_tree[v].maxCnt = 1; seg_tree[v].secMax = -INF;\r\n            return;\r\n        }\r\n        int mid = (l + r) / 2;\r\n        build(2 * v, l, mid, a); build(2 * v + 1, mid + 1, r, a);\r\n        updateFromChildren(v);\r\n    }\r\n    // \u043f\u043e \u0441\u0443\u0442\u0438, \u0437\u0434\u0435\u0441\u044c \u043b\u0435\u0436\u0430\u0442 \u0432\u0441\u043f\u043e\u043c\u043e\u0433\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438\r\n    void updateSegment(int v, int l, int r, int L, int R, int value) {\r\n        if (l > R || L > r || seg_tree[v].maxVal <= value) return;\r\n        if (l >= L && R >= r && seg_tree[v].maxVal > value && seg_tree[v].secMax < value) {// \u0435\u0449\u0435 \u043e\u0434\u043d\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043d\u0435 \u043d\u0443\u0436\u043d\u0430, \u044d\u0442\u043e \u0434\u043b\u044f \u043d\u0430\u0433\u043b\u044f\u0434\u043d\u043e\u0441\u0442\u0438\r\n            pushDirect(v, value);\r\n            return;\r\n        }\r\n        pushToChildren(v);\r\n        int mid = (l + r) / 2; \r\n        updateSegment(2 * v, l, mid, L, R, value); \r\n        updateSegment(2 * v + 1, mid + 1, r, L, R, value);\r\n        updateFromChildren(v);\r\n    }\r\n    int getSumOnSegment(int v, int l, int r, int L, int R) {\r\n        //cout << v << \"! !\" << endl;\r\n        if (l > R || L > r) return 0;\r\n        if (l >= L && R >= r) {\r\n            //cout << v << \" \" << l << \" \" << r << \" ! ! ! \" << seg_tree[v].sum << endl;\r\n            return seg_tree[v].sum;\r\n        }\r\n        pushToChildren(v); // \u0443\u0431\u0435\u0436\u0434\u0430\u0435\u043c\u0441\u044f, \u0447\u0442\u043e \u043d\u0435 \u043d\u0430\u043b\u0430\u0436\u0430\u043b\u0438\r\n        int mid = (l + r) / 2; \r\n        return getSumOnSegment(2 * v, l, mid, L, R) + getSumOnSegment(2 * v + 1, mid + 1, r, L, R);\r\n    }\r\npublic:\r\n    int N = 0;\r\n    void build(vector<int>& a) {\r\n        N = a.size();\r\n        seg_tree.assign(4 * a.size() + 4, SegmentTreeBeatsNode());\r\n        build(1, 0, a.size() - 1, a);\r\n    }\r\n    void updateSEG(int L, int R, int mod) {\r\n        updateSegment(1, 0, N - 1, L, R, mod);\r\n    }\r\n    int getSumSeg(int l, int r) {\r\n        int tm = getSumOnSegment(1, 0, N - 1, l, r); return tm;\r\n    }\r\n    SegmentTreeBeats(vector<int>& a) {\r\n        build(a);\r\n    }\r\n    \r\n};\r\n*/\r\nvector<int> ex;\r\n\r\nvoid solve()\r\n{\r\n    setlocale(LC_ALL, \"Russian\");\r\n    int N = 0; cin >> N; ex.assign(20005, 0);\r\n    for (int i = 0; i < N; ++i) {\r\n        int input = 0; cin >> input; ex[input]++;\r\n    }\r\n    int sm = 0;\r\n    for (int j = 0; j <= 10000; ++j) {\r\n        for (int i = 0; i <= 10000; ++i) {\r\n            sm = sm + ex[i] * ex[j] * ex[(i ^ j)];\r\n        }\r\n    }\r\n    sm = sm / 6;\r\n    cout << sm << endl;\r\n}\r\n\r\nsigned main()\r\n{\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    //cout << setprecision(12) << endl;\r\n    solve();\r\n    return 0;\r\n}\r\n/*\r\n7\r\n0 7 2 2 6 2 3 1\r\n*/",
                "verdict": "Runtime Error"
            },
            {
                "code": "L = 16\nN = 1 << L\n\ndef wh(a, l, r):\n    if l + 1 == r:\n        return\n    m = (l + r) // 2\n    wh(a, l, m)\n    wh(a, m, r)\n    for i in range(m - l):\n        a[l + i] += a[m + i]\n        a[m + i] = a[l + i] - 2 * a[m + i]\n\nn = int(input())\ncnt = [0] * N\nfor x in map(int, input().split()):\n    cnt[x] += 1\nold = cnt.copy()\nwh(cnt, 0, N)\nfor i in range(N):\n    wh[i] *= wh[i]\nwh(cnt, 0, N)\nfor i in range(N):\n    wh[i] //= N\nprint(sum(x[0] * x[1] // 2 for x in zip(cnt, old)))",
                "verdict": "Runtime Error"
            },
            {
                "code": "def count_ideal_sets(n, a):\r\n    from collections import defaultdict\r\n\r\n    # \u041f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u043e\u0434\u0441\u0447\u0435\u0442\r\n    freq = defaultdict(int)\r\n    pairs = defaultdict(int)\r\n    count = 0\r\n\r\n    # \u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u043c \u043c\u0430\u0441\u0441\u0438\u0432\r\n    for k in range(n):\r\n        if k >= 2:\r\n            count += pairs[a[k]]\r\n\r\n        for j in range(k):\r\n            xor_value = a[j] ^ a[k]\r\n            pairs[xor_value] += 1\r\n\r\n    return count\r\n\r\n# \u0427\u0442\u0435\u043d\u0438\u0435 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445\r\nn = int(input().strip())\r\na = list(map(int, input().strip().split()))\r\n\r\n# \u0412\u044b\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0435 \u0438 \u0432\u044b\u0432\u043e\u0434 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\r\nprint(count_ideal_sets(n, a))\r\n",
                "verdict": "Time Limit Exceeded"
            }
        ]
    },
    {
        "task_id": 39,
        "description": "\u041a\u043e\u043c\u043f\u0430\u043d\u0438\u044f \u0422\u044b\u043d\u0434\u0435\u043a\u0441 \u0440\u0430\u0437\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u00ab\u0424\u0438\u043b\u044c\u043c\u043e\u043f\u043e\u0438\u0441\u043a\u00bb \u2013 \u043e\u043d\u043b\u0430\u0439\u043d-\u043a\u0430\u0442\u0430\u043b\u043e\u0433 \u043a\u0438\u043d\u043e, \u0441\u0435\u0440\u0438\u0430\u043b\u043e\u0432 \u0438 \u043c\u0443\u043b\u044c\u0442\u0444\u0438\u043b\u044c\u043c\u043e\u0432. \n    \n\u0420\u0430\u0437\u0443\u043c\u0435\u0435\u0442\u0441\u044f, \u0432 \u0442\u0430\u043a\u043e\u043c \u0441\u0435\u0440\u0432\u0438\u0441\u0435 \u0443 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0435\u0441\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043e\u0446\u0435\u043d\u0438\u0442\u044c \u0444\u0438\u043b\u044c\u043c \u0446\u0435\u043b\u044b\u043c \u0447\u0438\u0441\u043b\u043e\u043c \u043e\u0442 1 \u0434\u043e 10. \u0410 \u0432\u043e\u0442 \u043a\u0438\u043b\u043b\u0435\u0440-\u0444\u0438\u0447\u0435\u0439 \u00ab\u0424\u0438\u043b\u044c\u043c\u043e\u043f\u043e\u0438\u0441\u043a\u0430\u00bb \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0442\u043e, \u0447\u0442\u043e \u0432\u043c\u0435\u0441\u0442\u043e \u0441\u0440\u0435\u0434\u043d\u0435\u0439 \u043e\u0446\u0435\u043d\u043a\u0438 (\u043a\u0430\u043a \u043d\u0430 \u0434\u0440\u0443\u0433\u0438\u0445 \u0441\u0430\u0439\u0442\u0430\u0445) \u043e\u043d \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442 **\u043d\u0438\u0436\u043d\u044e\u044e \u043c\u0435\u0434\u0438\u0430\u043d\u0443** \u2013 \u043e\u0446\u0435\u043d\u043a\u0443 \u0441 \u043d\u043e\u043c\u0435\u0440\u043e\u043c $\\lceil \\frac{n}{2} \\rceil$ \u0432 \u0443\u043f\u043e\u0440\u044f\u0434\u043e\u0447\u0435\u043d\u043d\u043e\u043c \u043f\u043e \u043d\u0435\u0443\u0431\u044b\u0432\u0430\u043d\u0438\u044e \u0440\u044f\u0434\u0443 \u0438\u0437 $n$ \u043e\u0446\u0435\u043d\u043e\u043a, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u044b\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u044b \u0444\u0438\u043b\u044c\u043c\u0443 \u043d\u0430 \u0434\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442.\n\n\u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043f\u0440\u043e\u0442\u043e\u0442\u0438\u043f \u0441\u0447\u0451\u0442\u0447\u0438\u043a\u0430 \u043e\u0446\u0435\u043d\u043e\u043a.\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u0447\u0438\u0441\u043b\u043e $q$ \u2013 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0446\u0435\u043d\u043e\u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0443\u0436\u043d\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c. \u0418\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u0443 \u0444\u0438\u043b\u044c\u043c\u0430 \u043d\u0435\u0442 \u043e\u0446\u0435\u043d\u043e\u043a. ($1 \\le q \\le 10^5$)\n\n\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b $q$ \u043e\u0446\u0435\u043d\u043e\u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0432 \u043f\u043e\u0440\u044f\u0434\u043a\u0435 \u0438\u0445 \u0432\u044b\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f (\u043e\u0446\u0435\u043d\u043a\u0430 \u2013 \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u043e\u0442 1 \u0434\u043e 10).\u0412 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 $q$ \u0447\u0438\u0441\u0435\u043b, \u0433\u0434\u0435 $i$-\u0442\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u2013 \u044d\u0442\u043e \u043d\u0438\u0436\u043d\u044f\u044f \u043c\u0435\u0434\u0438\u0430\u043d\u0430 \u043e\u0446\u0435\u043d\u043e\u043a \u043e\u0442 \u043f\u0435\u0440\u0432\u043e\u0439 \u0434\u043e $i$-\u0442\u043e\u0439.",
        "solutions": [
            {
                "code": "package main\n\nimport (\n\t\"bufio\"\n\t\"os\"\n\t\"sort\"\n\t\"strconv\"\n)\n\nconst tcases = false\n\nfunc solve() {\n\tn := ReadInt()\n\n\ta := make([]int, 0, n)\n\tans := make([]int, n, n)\n\n\tfor i := 0; i < n; i++ {\n\t\ta = append(a, ReadInt())\n\t\tsort.Ints(a)\n\t\tans[i] = a[i/2]\n\t}\n\n\tPrint(ans)\n}\n\n/*\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n */\n\nfunc main() {\n\tdefer OutputStream.Flush()\n\tif tcases {\n\t\tt := ReadInt()\n\t\tfor i := 0; i < t; i++ {\n\t\t\tsolve()\n\t\t}\n\t} else {\n\t\tsolve()\n\t}\n\n}\n\nvar InputStream = bufio.NewReader(os.Stdin)\nvar OutputStream = bufio.NewWriter(os.Stdout)\n\nfunc ReadInt() int {\n\tnegative := false\n\tchanged := false\n\tcurrent := 0\n\n\tvar b byte\n\tvar readErr error\n\n\tfor {\n\t\tb, readErr = InputStream.ReadByte()\n\t\tif readErr != nil {\n\t\t\tbreak\n\t\t}\n\n\t\tif b == 45 {\n\t\t\tnegative = true\n\t\t} else if b > 47 && b < 58 {\n\t\t\tcurrent = (current << 3) + (current << 1) + int(b-48)\n\t\t\tchanged = true\n\t\t} else {\n\t\t\tif negative {\n\t\t\t\tcurrent = -current\n\t\t\t}\n\t\t\tif changed {\n\t\t\t\treturn current\n\t\t\t}\n\n\t\t\tcurrent = 0\n\t\t\tnegative = false\n\t\t\tchanged = false\n\t\t}\n\t}\n\n\treturn current\n}\n\nfunc ReadString() string {\n\tcurrent := make([]byte, 0)\n\tvar b byte\n\tvar readErr error\n\n\tfor {\n\t\tb, readErr = InputStream.ReadByte()\n\t\tif readErr != nil {\n\t\t\tbreak\n\t\t}\n\n\t\tif b == ' ' || b == '\\n' || b == '\\r' {\n\t\t\tif len(current) != 0 {\n\t\t\t\treturn string(current)\n\t\t\t}\n\t\t} else {\n\t\t\tcurrent = append(current, b)\n\t\t}\n\t}\n\n\treturn string(current)\n}\n\nfunc Print(values ...interface{}) {\n\tl := len(values) - 1\n\tfor i, v := range values {\n\t\tswitch v.(type) {\n\t\tcase int:\n\t\t\tOutputStream.WriteString(strconv.Itoa(v.(int)))\n\t\tcase string:\n\t\t\tOutputStream.WriteString(v.(string))\n\t\tcase []int:\n\t\t\tl2 := len(v.([]int)) - 1\n\t\t\tfor i, x := range v.([]int) {\n\t\t\t\tOutputStream.WriteString(strconv.Itoa(x))\n\t\t\t\tif i != l2 {\n\t\t\t\t\tOutputStream.WriteByte(' ')\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif i != l {\n\t\t\tOutputStream.WriteByte(' ')\n\t\t}\n\t}\n\tOutputStream.WriteByte('\\n')\n}\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "m = [0] * 10\n\nn = int(input())\n\n\ndef median(m):\n    median_i = (sum(m) - 1) // 2 + 1\n    s = 0\n    for i in range(10):\n        s += m[i]\n        if s >= median_i:\n            return i + 1\n\n\nans = []\nfor mark in map(int, input().split()):\n    m[mark - 1] += 1\n    ans.append(median(m))\n\nprint(*ans)\n\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "m = [0] * 10\n\nn = int(input())\n\n\ndef median(m):\n    median_i = (sum(m) - 1) // 2 + 1\n    if not median_i:\n        median_i = 1\n    s = 0\n    for i in range(10):\n        s += m[i]\n        if s >= median_i:\n            return i + 1\n\n\nans = []\nfor mark in map(int, input().split()):\n    m[mark - 1] += 1\n    ans.append(median(m))\n\nprint(*ans)\n\n",
                "verdict": "Pending"
            },
            {
                "code": "m = [0] * 10\n\nn = int(input())\n\n\ndef median(m):\n    median_i = sum(m) // 2\n    if not median_i:\n        median_i = 1\n    s = 0\n    for i in range(10):\n        s += m[i]\n        if s >= median_i:\n            return i + 1\n\n\nans = []\nfor mark in map(int, input().split()):\n    m[mark - 1] += 1\n    ans.append(median(m))\n\nprint(*ans)\n\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "m = [0] * 10\n\nn = int(input())\n\n\ndef median(m):\n    median_i = sum(m) // 2 + 1\n    s = 0\n    for i in range(10):\n        s += m[i]\n        if s >= median_i:\n            return i + 1\n\n\nans = []\nfor mark in map(int, input().split()):\n    m[mark - 1] += 1\n    ans.append(median(m))\n\nprint(*ans)\n\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from statistics import median_low\n\nn = int(input())\n\nv = []\n\nans = []\n\nfor x in map(int, input().split()):\n    v.append(x)\n    ans.append(median_low(v))\n\nprint(*ans)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "#define _CRT_SECURE_NO_WARNINGS\r\n#pragma GCC target(\"sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx\")\r\n#pragma GCC optimization (\"unroll-loops\")\r\n#pragma GCC optimization (\"O3\")\r\n#pragma GCC optimize(\"no-stack-protector\")\r\n#pragma GCC optimize(\"fast-math\")\r\n#pragma GCC optimize(\"Ofast\")\r\n\r\n#include <bits/stdc++.h>\r\n#include <unordered_map>\r\n#include <unordered_set>\r\n#include <chrono>\r\n#include <random>\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\ntypedef long double ld;\r\ntypedef pair<long long, long long> pll;\r\n\r\ntemplate<typename T1, typename T2>\r\ninline void qmin(T1& x, const T2& y) {\r\n    if (y < x) x = y;\r\n}\r\n\r\ntemplate<typename T1, typename T2>\r\ninline void qmax(T1& x, const T2& y) {\r\n    if (x < y) x = y;\r\n}\r\n\r\n\r\n\r\nmt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());\r\n# define endl '\\n'\r\n# define sep ' '\r\n# define fin return 0\r\n# define fin1 return\r\n# define inter cout.flush()\r\n# define all(x) x.begin(), x.end()\r\n# define forn(i,x) for(int i = 0;i< x;i++)\r\n# define mod 1000000007\r\nll pow(ll a, ll n, ll p) { if (n == 0) return 1; long long t = pow(a, n >> 1, p); return t * t % p * (n & 1 ? a : 1) % p; }\r\nll get1(ll l, ll r) { return (ll)rnd() % (r - l + 1) + l; }\r\n\r\nvoid solve() {\r\n    ll n, m;\r\n    cin >> n >> m;\r\n    string s;\r\n    cin >> s;\r\n    vector<int> p(n * m);\r\n\r\n    for (int i = 0; i < n * m; i++)\r\n    {\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nint main() {\r\n    //freopen(\"cut.in\", \"r\", stdin);\r\n    //freopen(\"cut.out\", \"w\", stdout);\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0);\r\n\r\n    /*ll t11;\r\n    cin >> t11;\r\n    while(t11--){\r\n        solve();\r\n    }*/\r\n    multiset<ll> f1, f2;\r\n    ll n;\r\n    cin >> n;\r\n    f1.insert(0);\r\n    f2.insert(11);\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        ll x;\r\n        cin >> x;\r\n        if (*f1.rbegin() >= x) {\r\n            f1.insert(x);\r\n            if (f2.size() + 2 == f1.size()) {\r\n                ll r = *f1.rbegin();\r\n                f1.erase(f1.find(*f1.rbegin()));\r\n                f2.insert(r);\r\n            }\r\n        }\r\n        else if (*f2.begin() <= x) {\r\n            f2.insert(x);\r\n            if (f1.size() + 1 == f2.size()) {\r\n                ll r = *f2.begin();\r\n                f2.erase(f2.find(*f2.rbegin()));\r\n                f1.insert(r);\r\n            }\r\n        }\r\n        else {\r\n            if (f1.size() <= f2.size()) {\r\n                f1.insert(x);\r\n            }\r\n            else\r\n                f2.insert(x);\r\n        }\r\n        cout << *f1.rbegin() << sep;\r\n    }\r\n\r\n\r\n\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "//Now playing: Aretha Franklin - Just hangin on\n//tg - kalexina\n//cf - splatjov\n\n#pragma GCC optimize(3)\n#pragma GCC optimize(\"inline\")\n#pragma GCC optimize(\"-fgcse\")\n#pragma GCC target(\"avx\",\"sse2\")\n#pragma GCC optimize(\"-fgcse-lm\")\n#pragma GCC optimize(\"-fipa-sra\")\n#pragma GCC optimize(\"-ftree-pre\")\n#pragma GCC optimize(\"-ftree-vrp\")\n#pragma GCC optimize(\"-fpeephole2\")\n#pragma GCC optimize(\"-ffast-math\")\n#pragma GCC optimize(\"-fsched-spec\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC diagnostic push\n#pragma GCC diagnostic ignored \"-Wunused-parameter\"\n#pragma GCC diagnostic ignored \"-Wc++11-long-long\"\n#pragma GCC diagnostic ignored \"-Wc++11-extensions\"\n\n#include <iostream>\n#include <vector>\n#include <queue>\n#include <algorithm>\n#include <cmath>\n#include <set>\n#include <fstream>\n#include <map>\n#include <unordered_set>\n \nusing ll = long long;\nusing ld = long double;\nusing namespace std;\ntypedef pair <long long, long long > pii;\nint mod = 1e9+7;\n\nvoid solve()\n{\n    int n;\n    cin>>n;\n    map<int, int> puk;\n    for (int i=0; i<n; i++)\n    {\n        int x;\n        cin>>x;\n        puk[x]++;\n        int count=0;\n        int breuk=1;\n        if ((i+1)%2==0 and (i+1)/2>0) breuk=(i+1)/2;\n        else if ((i+1)%2==1) breuk=(i+1)/2+1;\n        for (int j=1; j<=10; j++)\n        {\n            count+=puk[j];\n            if (count>=breuk) \n            {\n                cout<<j<<\" \";\n                break;\n            }\n        }\n    }\n}\n\nsigned main()\n{\n    long long t=1;\n    // cin>>t;\n    while (t--)\n    {\n        solve();\n    }\n    \n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\n#define rep(i, n) for (long long (i) = 0; (i) < (n); (i)++)\r\n#define rep1(i, n) for (long long (i) = 1; (i) < (n); (i)++)\r\n#define repr(i, n) for (long long (i) = (n) - 1; (i) >= 0; (i)--)\r\n#define all(v) (v).begin(), (v).end()\r\n#define rall(v) (v).rbegin(), (v).rend()\r\n#define nl \"\\n\"\r\n\r\ntypedef long long ll;\r\ntypedef string str;\r\ntypedef pair<int, int> pi;\r\ntypedef pair<long long, long long> pl;\r\ntypedef vector<int> vi;\r\ntypedef vector<long long> vl;\r\ntypedef vector<bool> vb;\r\ntypedef vector<pair<int, int>> vpi;\r\ntypedef vector<vector<int>> vvi;\r\n\r\ntemplate<typename T> istream& operator>>(istream& in, vector<T>& v) { for (auto& x : v) in >> x; return in; }\r\ntemplate<typename T> ostream& operator<<(ostream& os, vector<T>& v) { for (auto& x : v) os << x << \" \"; return os; }\r\ntemplate<typename T1, typename T2> istream& operator>>(istream& in, pair<T1, T2>& p) { in >> p.first >> p.second; return in; }\r\ntemplate<typename T1, typename T2> ostream& operator<<(ostream& os, pair<T1, T2>& p) { os << p.first << \" \" << p.second; return os; }\r\n\r\n//#define USE_QUICK_IO\r\n//#define USE_T\r\n//#define USE_FILESTREAM\r\n\r\n\r\nvoid solve(long long test_case) {\r\n    \r\n    int n;\r\n    cin >> n;\r\n\r\n    vi cnt(10, 0);\r\n    rep(i, n) {\r\n        int inp;\r\n        cin >> inp;\r\n        cnt[inp - 1]++;\r\n\r\n        int pos = 0, sum = cnt[0];\r\n        while (sum <= i / 2) {\r\n            pos++;\r\n            sum += cnt[pos];\r\n        }\r\n\r\n        cout << pos + 1 << \" \";\r\n    }\r\n    \r\n}\r\n\r\n\r\nint main() {\r\n    #ifdef USE_FILESTREAM\r\n        std::freopen(\"input.txt\", \"r\", stdin);\r\n        std::freopen(\"output.txt\", \"w\", stdout);\r\n    #endif\r\n    #ifdef USE_QUICK_IO\r\n        std::ios_base::sync_with_stdio(false);\r\n        std::cin.tie(nullptr);\r\n        std::cout.tie(nullptr);\r\n    #endif\r\n    std::cout << std::setprecision(6) << std::fixed;\r\n    long long t = 1;\r\n    #ifdef USE_T\r\n        std::cin >> t;\r\n    #endif\r\n    for (long long i = 0; i < t; i++) solve(i + 1);\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "import collections\nimport math\nimport sys\nfrom queue import PriorityQueue\nfrom random import randint\n\nRANDOM = randint(1, 10 ** 9)\n\ndef main(testnumber):\n    left = PriorityQueue()\n    right = PriorityQueue()\n    n = int(input())\n    x = list(map(int, input().split()))\n    for i in range(n):\n        a = x[i]\n        putt = False\n        if right.qsize() > 0:\n            cur = right.get()\n            if cur < a:\n                left.put(-cur)\n                right.put(a)\n                putt = True\n            else:\n                right.put(cur)\n        if not putt:\n            left.put(-a)\n\n        if left.qsize() > right.qsize() + 1:\n            b = left.get()\n            right.put(-b)\n        ls = left.get()\n        print(-ls, end=' ')\n        left.put(ls)\n\n\n\n\n\nif __name__ == \"__main__\":\n    t = 1 # int(input())\n    cnt = 1\n    while t > 0:\n        main(cnt)\n        cnt += 1\n        t -= 1",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "q = int(input())\r\na = list(map(int, input().split()))\r\nans = []\r\nprint(a[0], end=' ')\r\nif q == 1:\r\n    raise SystemExit\r\nt = []\r\nt.append(a[0])\r\nfor i in range(1, q):\r\n    t.append(a[i])\r\n    t.sort()\r\n    ans.append(str(t[i//2]))\r\n    t = t[len(t)//2 - 1 : len(t)//2 + 1]\r\n\r\nprint(\" \".join(ans))",
                "verdict": "Runtime Error"
            },
            {
                "code": "q = int(input())\r\na = list(map(int, input().split()))\r\nans = []\r\nprint(a[0], end=' ')\r\nt = []\r\nt.append(a[0])\r\nfor i in range(1, q):\r\n    t.append(a[i])\r\n    t.sort()\r\n    ans.append(str(t[i//2]))\r\n    t = t[len(t)//2 - 1 : len(t)//2 + 1]\r\n\r\nprint(\" \".join(ans))",
                "verdict": "Runtime Error"
            },
            {
                "code": "q = int(input())\r\na = list(map(int, input().split()))\r\nans = []\r\nfor i in range(q):\r\n    t = a[:i+1]\r\n    t.sort()\r\n    ans.append(str(t[i//2]))\r\n\r\nprint(\" \".join(ans))",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "q = int(input())\r\na = list(map(int, input().split()))\r\nfor i in range(q):\r\n    t = a[:i+1]\r\n    t.sort()\r\n    print(t[i//2], end= ' ')",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "import math\nnum_ranks=int(input())\nranks = [int(i) for i in input().split()]\nfill_array = []\nmedians = []\n\nfor i in ranks: \n    fill_array.append(i)\n    fill_array = sorted(fill_array)\n    where_med = int(ranks.index(i)/2)\n    even = where_med%2\n    if even!=0: \n        med=where_med \n    else: \n        med=fill_array.index(i)\n    medians.append(str(fill_array[med]))\n\nprint(' '.join(medians)) ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\nnum_ranks=int(input())\nranks = [int(i) for i in input().split()]\nfill_array = []\nmedians = []\n\nfor i in ranks: \n    fill_array.append(i)\n    fill_array = sorted(fill_array)\n    where_med = int(ranks.index(i)/2)\n    even = where_med%2\n    if even!=0: \n        med=where_med \n    else: \n        med=fill_array.index(i)-1\n    medians.append(str(fill_array[med]))\n\nprint(' '.join(medians)) ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\nnum_ranks=int(input())\nranks = [int(i) for i in input().split()]\nfill_array = []\nmedians = []\n\nfor i in ranks: \n    fill_array.append(i)\n    fill_array = sorted(fill_array)\n    where_med = int(ranks.index(i)/2)\n    even = where_med%2\n    if even==0: \n        med=where_med \n    else: \n        med=fill_array.index(i)-1\n    medians.append(str(fill_array[med]))\n\nprint(' '.join(medians)) ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\nnum_ranks=int(input())\r\nranks = [int(i) for i in input().split()]\r\nfill_array = []\r\nmedians = []\r\n\r\nfor i in ranks: \r\n    fill_array.append(i)\r\n    fill_array = sorted(fill_array)\r\n    where_med = int(ranks.index(i)/2)\r\n    even = where_med%2\r\n    if even==0: \r\n        med=where_med \r\n    else: \r\n        med=fill_array[i-1]\r\n    medians.append(str(fill_array[med]))\r\n\r\nprint(' '.join(medians)) ",
                "verdict": "Runtime Error"
            },
            {
                "code": "import math\r\nnum_ranks=int(input())\r\nranks = [int(i) for i in input().split()]\r\nfill_array = []\r\nmedians = []\r\n\r\nfor i in ranks: \r\n    fill_array.append(i)\r\n    fill_array = sorted(fill_array)\r\n    where_med = int(ranks.index(i)/2)\r\n    even = where_med%2\r\n    if even=0: \r\n        med=where_med \r\n    else: \r\n        med=fill_array[i-1]\r\n    medians.append(str(fill_array[med]))\r\n\r\nprint(' '.join(medians)) ",
                "verdict": "Runtime Error"
            },
            {
                "code": "import math\r\nnum_ranks=int(input())\r\nranks = [int(i) for i in input().split()]\r\nfill_array = []\r\nmedians = []\r\n\r\nfor i in ranks: \r\n    fill_array.append(i)\r\n    fill_array = sorted(fill_array)\r\n    where_med = int(ranks.index(i)/2)\r\n    even = where_med%2\r\n    if even!=0: \r\n        med=where_med \r\n    else: \r\n        med=fill_array[i-1]\r\n    medians.append(str(fill_array[med]))\r\n\r\nprint(' '.join(medians)) ",
                "verdict": "Runtime Error"
            },
            {
                "code": "import math\r\nnum_ranks=int(input())\r\nranks = [int(i) for i in input().split()]\r\nfill_array = []\r\nmedians = []\r\n\r\nfor i in ranks: \r\n    fill_array.append(i)\r\n    fill_array = sorted(fill_array)\r\n    where_med = int(ranks.index(i)/2)\r\n    even = where_med%2\r\n    if even!=0: \r\n        med=where_med \r\n    else: \r\n        med=fill_array.index(i-1)\r\n    medians.append(str(fill_array[med]))\r\n\r\nprint(' '.join(medians)) ",
                "verdict": "Runtime Error"
            },
            {
                "code": "import math\r\nnum_ranks=int(input())\r\nranks = [int(i) for i in input().split()]\r\nfill_array = []\r\nmedians = []\r\n\r\nfor i in ranks: \r\n    fill_array.append(i)\r\n    fill_array = sorted(fill_array)\r\n    where_med = int(ranks.index(i)/2)\r\n    if where_med%2!=0: \r\n        med=where_med \r\n    else: \r\n        med=fill_array.index(i-1)\r\n    medians.append(str(fill_array[med]))\r\n\r\nprint(' '.join(medians)) ",
                "verdict": "Runtime Error"
            },
            {
                "code": "import math\r\nnum_ranks=int(input())\r\nranks = [int(i) for i in input().split()]\r\nfill_array = []\r\nmedians = []\r\n\r\nfor i in ranks: \r\n    fill_array.append(i)\r\n    fill_array = sorted(fill_array)\r\n    where_med = int(ranks.index(i)/2)\r\n    if where_med%2 != 0: \r\n        med=where_med \r\n    else: \r\n        med=fill_array.index(i-1)\r\n    medians.append(str(fill_array[med]))\r\n\r\nprint(' '.join(medians)) ",
                "verdict": "Runtime Error"
            },
            {
                "code": "import math\nnum_ranks=int(input())\nranks = [int(i) for i in input().split()]\nfill_array = []\nmedians = []\n\nfor i in ranks: \n    fill_array.append(i)\n    fill_array = sorted(fill_array)\n    where_med = int(math.floor(ranks.index(i)/2))\n    medians.append(str(fill_array[where_med]))\n\nprint(' '.join(medians))    \n    \n    \n    ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\nnum_ranks=int(input())\nranks = [int(i) for i in input().split()]\nfill_array = []\nmedians = []\n\nfor i in ranks: \n    fill_array.append(i)\n    fill_array = sorted(fill_array)\n    where_med = int(math.ceil(ranks.index(i)/2))\n    medians.append(str(fill_array[where_med]))\n\nprint(' '.join(medians))    \n    \n    \n    ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\nnum_ranks=int(input())\nranks = [int(i) for i in input().split()]\nfill_array = []\nmedians = []\n\nfor i in ranks: \n    fill_array.append(i)\n    fill_array = sorted(fill_array)\n    where_med = int(ranks.index(i)/2)\n    medians.append(str(fill_array[where_med]))\n\nprint(' '.join(medians))    \n    \n    \n    ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\nnum_ranks=int(input())\nranks = [int(i) for i in input().split()]\nfill_array = []\nmedians = []\n\nfor i in ranks: \n    fill_array.append(i)\n    fill_array = sorted(fill_array)\n    where_med = int(ranks.index(i)/2)\n    medians.append(str(fill_array[where_med]))\n\nprint(' '.join(medians))    \n    \n    \n    ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\nnum_ranks=int(input())\nranks = [int(i) for i in input().split()]\nfill_array = []\nmedians = []\n\nfor i in ranks: \n    fill_array.append(i)\n    fill_array = sorted(fill_array)\n    where_med = int(len(fill_array)/2)\n    medians.append(fill_array[where_med])\n\nprint(' '.join(medians))    \n    \n    \n    ",
                "verdict": "Runtime Error"
            },
            {
                "code": "import math\nnum_ranks=int(input())\nranks = [int(i) for i in input().split()]\nfill_array = []\nmedians = []\n\nfor i in ranks: \n    fill_array.append(i)\n    fill_array = sorted(fill_array)\n    where_med = len(fill_array)/2\n    medians.append(fill_array[where_med])\n\nprint(' '.join(medians))    \n    \n    \n    ",
                "verdict": "Runtime Error"
            },
            {
                "code": "import math\nnum_ranks=int(input())\nranks = [int(i) for i in input().split()]\nfill_array = []\nmedians = []\n\nfor i in ranks: \n    fill_array.append(i)\n    fill_array = sorted(fill_array)\n    where_med = math.ceil(len(fill_array)/2)\n    medians.append(fill_array[where_med])\n\nprint(' '.join(medians))    \n    \n    \n    ",
                "verdict": "Runtime Error"
            },
            {
                "code": "import math\nnum_ranks=int(input())\nranks = [int(i) for i in input().split()]\nfill_array = []\nmedians = []\n\nfor i in ranks: \n    fill_array.append(i)\n    fill_array = sorted(fill_array)\n    where_med = math.ceil(num_ranks/2)\n    medians.append(fill_array[where_med])\n\nprint(' '.join(medians))    \n    \n    \n    ",
                "verdict": "Runtime Error"
            },
            {
                "code": "q = int(input())\nmarks = list(map(int, input().split()))\nres = [ ]\no = 1\nfor n in marks:\n    c = n\n    o += 1\n    for b in range(o - 1):\n        c += marks[b]\n    res.append(c//2)\nprint(res)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "q = int(input())\nmarks = list(map(int, input().split()))\nres = [ ]\no = 1\nfor n in marks:\n    c = n\n    o += 1\n    for b in range(o):\n        c += marks[b]\n    res.append(c//o)\nprint(res)",
                "verdict": "Runtime Error"
            },
            {
                "code": "q = int(input())\nmarks = [ ]\nres = [ ]\no = 1\nfor i in range(q):\n    a = int(input())\n    marks.append(a)\nfor n in marks:\n    c = n\n    o += 1\n    for b in range(o-1):\n        c += marks[b]\n    res.append(c//2)\nprint(res)\n\n    ",
                "verdict": "Runtime Error"
            },
            {
                "code": "q = int(input())\nmarks = [ ]\nres = [ ]\no = 1\nfor i in range(q):\n    a = int(input())\n    marks.append(a)\nfor n in marks:\n    c = n\n    o += 1\n    for b in range(o-1):\n        c += marks[b]\n    res.append(c//o)\nprint(res)\n\n    ",
                "verdict": "Runtime Error"
            },
            {
                "code": "q = int(input())\nmarks = [ ]\nres = [ ]\no = 1\nfor i in range(q):\n    a = int(input())\n    marks.append(a)\nfor n in marks:\n    c = n\n    o += 1\n    for b in range(o):\n        c += marks[b]\n    res.append(c//o)\nprint(res)\n\n    ",
                "verdict": "Runtime Error"
            },
            {
                "code": "q = int(input())\nmarks = list(map(int, input().split()))\nres = list( )\n\nfor i in length(marks):\n    b = 0\n    for n in range(q-1):\n        b += marks[i - n]\n    res.append(b//2)\nprint(res)",
                "verdict": "Runtime Error"
            },
            {
                "code": "q = int(input())\nmarks = list(map(int, input().split()))\nres = list( )\nb = 0\nfor i in length(marks):\n    for n in range(q-1):\n        b += marks[i - n]\n    res.append(b//2)\nprint(res)",
                "verdict": "Runtime Error"
            },
            {
                "code": "q = int(input())\nmarks = list(map(int, input().split()))\nres = list()\nb = 0\nfor i in length(marks):\n    for n in range(q-1):\n        b += marks[i - n]\n    res.append(b//2)\nprint(res)",
                "verdict": "Runtime Error"
            },
            {
                "code": "q = int(input())\nmarks = list(map(int, input().split()))\nres = list()\nb = 0\nfor i in len(marks):\n    for n in range(q-1):\n        b += marks[i - n]\n    res.append(b//2)\nprint(res)",
                "verdict": "Runtime Error"
            },
            {
                "code": "q = int(input())\nmarks = list(map(int, input().split()))\nres = list()\nb = 0\nfor i in marks:\n    for n in range(q-1):\n        b += marks[i - n]\n    res.append(b//2)\nprint(res)",
                "verdict": "Runtime Error"
            },
            {
                "code": "q = int(input())\nmarks = list(map(int, input().split()))\nres = list()\nb = 0\nfor i in marks:\n    for n in range(q):\n        b += marks[i - n]\n    res.append(b//2)\nprint(res)",
                "verdict": "Runtime Error"
            },
            {
                "code": "q = int(input)\nmarks = list(map(int, input().split()))\nres = list()\nb = 0\nfor i in marks:\n    for n in range(q):\n        b += marks[i - n]\n    res.append(b//2)\nprint(res)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nlist1 = list(map(int, input().split()))\r\nm = 0\r\nlist2 = []\r\n\r\nfor i in range(len(list1)):\r\n    list2 = sorted(list1[:i+1])\r\n    if len(list2) > 0:\r\n        print(list2[i//2], end = \" \")\r\n",
                "verdict": "Time Limit Exceeded"
            }
        ]
    },
    {
        "task_id": 40,
        "description": "\u041f\u0440\u0430\u043a\u0438\u043b\u043e\u043f \u0437\u0430\u043a\u0443\u043f\u0438\u043b \u0434\u043b\u044f \u0441\u0432\u043e\u0435\u0439 \u043d\u043e\u0432\u043e\u0433\u043e\u0434\u043d\u0435\u0439 \u0432\u0435\u0447\u0435\u0440\u0438\u043d\u043a\u0438 $n$ \u0431\u0430\u043d\u043e\u0447\u0435\u043a \u0441 \u043a\u043e\u043b\u043e\u0439. \u0427\u0442\u043e\u0431\u044b \u0432\u043f\u0435\u0447\u0430\u0442\u043b\u0438\u0442\u044c \u0433\u043e\u0441\u0442\u0435\u0439, \u043e\u043d \u0440\u0435\u0448\u0438\u043b \u043d\u0435 \u043f\u0440\u043e\u0441\u0442\u043e \u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0438\u0445 \u043d\u0430 \u0441\u0442\u043e\u043b\u0435, \u0430 \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0438\u0437 \u043d\u0438\u0445 \u0451\u043b\u043a\u0443!\n\n\u0418\u0437\u0432\u0435\u0441\u0442\u043d\u043e, \u0447\u0442\u043e \u0451\u043b\u043a\u0430 \u2013 \u044d\u0442\u043e \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043d\u0430 \u043a\u0430\u0436\u0434\u043e\u043c \u0443\u0440\u043e\u0432\u043d\u0435 \u0440\u0430\u0437\u043c\u0435\u0449\u0435\u043d\u043e \u0445\u043e\u0442\u044f \u0431\u044b \u043d\u0430 \u043e\u0434\u043d\u0443 \u0431\u0430\u043d\u043e\u0447\u043a\u0443 \u0431\u043e\u043b\u044c\u0448\u0435, \u0447\u0435\u043c \u043d\u0430 \u0443\u0440\u043e\u0432\u043d\u0435 \u0432\u044b\u0448\u0435.\n    \n\u041f\u043e\u0441\u0447\u0438\u0442\u0430\u0439\u0442\u0435, \u0451\u043b\u043a\u0443 \u043a\u0430\u043a\u043e\u0439 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439 \u0432\u044b\u0441\u043e\u0442\u044b \u043c\u043e\u0436\u043d\u043e \u0441\u043e\u0431\u0440\u0430\u0442\u044c \u0438\u0437 $n$ \u0431\u0430\u043d\u043e\u0447\u0435\u043a. \u0420\u0430\u0437\u0443\u043c\u0435\u0435\u0442\u0441\u044f, \u0447\u0430\u0441\u0442\u044c \u0431\u0430\u043d\u043e\u0447\u0435\u043a \u043c\u043e\u0436\u043d\u043e \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0438 \u043f\u0440\u043e\u0441\u0442\u043e \u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043d\u0430 \u0441\u0442\u043e\u043b\u0435.\u0412 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u0447\u0438\u0441\u043b\u043e $n$ ($0 \\le n \\le 10^{19}$) - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0430\u043d\u043e\u0447\u0435\u043a \u0441 \u043a\u043e\u043b\u043e\u0439.\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e - \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e \u0432\u044b\u0441\u043e\u0442\u0443 \u0451\u043b\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043c\u043e\u0436\u043d\u043e \u0441\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0438\u0437 $n$ \u0431\u0430\u043d\u043e\u0447\u0435\u043a \u043a\u043e\u043b\u044b.",
        "right_solution": "def isqrt(n):\r\n    x = n\r\n    y = (x + 1) // 2\r\n    while y < x:\r\n        x = y\r\n        y = (x + n // x) // 2\r\n    return x\r\nn = int(input())\r\nd = int(1 + 8 * n)\r\nx = (isqrt(d) - 1) // 2\r\nprint(x)\r\n",
        "solutions": [
            {
                "code": "#pragma GCC optimize (\"Ofast\")\n#include <bits/stdc++.h>\n#define fastio() ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);\nusing namespace std;\n\nint main() {\n    fastio()\n    \n    int i = 1;\n    __int128 n;\n    cin >> n;\n    while (n >= i) {\n        n -= i;\n        i++;\n    }\n    cout << i - 1;\n    return 0;\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "x = int(input())\ni = 1\nwhile x - i >= 0:\n    x -= i\n    i += 1\nprint(i - 1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "print(int((-1 + (1 + 8 * int(input())) ** 0.5) / 2))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nif n == 0:\r\n    print(0)\r\nelse:\r\n    for i in range(1, n):\r\n        sum_ = (1 + i) * i // 2\r\n        if sum_ > n:\r\n            print(i - 1)\r\n            break\r\n        elif (1 + i) * i // 2 == n:\r\n            print(i)\r\n            break\r\n    else:\r\n        print(1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nfor i in range(1, n):\r\n    sum_ = (1 + i) * i // 2\r\n    if sum_ > n:\r\n        print(i - 1)\r\n        break\r\n    elif (1 + i) * i // 2 == n:\r\n        print(i)\r\n        break\r\nelse:\r\n    print(1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def step(a):\n    if a < 2:\n        return [1, 1]\n    return [*step(a - 1), *[a] * (a + 1)]\n    \na = int(input())\nprint(step(a)[a - 1])",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def step(a):\n    if a < 2:\n        return [1, 1]\n    return [*step(a - 1), *[a] * (a + 1)]\n    \na = int(input())\nprint(step(a)[a])",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def step(a):\n    if a < 2:\n        return [1, 1]\n    return [*step(a - 1), *[a] * (a + 1)]\n    \nprint(step(int(input()))[-1])",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import ceil\r\nprint(ceil((2 * int(input()))**(1/2)) - 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import ceil\r\nx = int(input())\r\nif x <= 2:\r\n    print(1)\r\nelse:\r\n    print(ceil((x)**(1/2)))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "s = 0\r\ni = 1\r\nn = int(input())\r\nwhile s < n:\r\n    if s + i > n:\r\n        break\r\n    s += i\r\n    i += 1\r\nprint(i - 1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\nl = 0\nr = int(1e10)\nwhile r - l > 1:\n    m = (l + r) // 2\n    if (m * (m + 1) // 2 <= n) \n        l = m\n    else \n        r = m\nprint(l)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\nl = 0\nr = n\nwhile r - l > 1:\n    m = (l + r) // 2\n    if (m * (m + 1)) // 2 <= n:\n        l = m\n    else:\n        r = m\n\nprint(l)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nl = 0\nr = n\nwhile r - l > 1:\n    m = (l + r) // 2\n    if (m * (m + 1)) // 2 <= n:\n        l = m\n    else\n        r = m\n\nprint(l)\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\n\nb = 0\ne = n + 1\n\nwhile e - b > 1:\n    mid = b + (e - b) / 2\n    s = mid * (mid + 1) / 2\n\n    if s > n:\n        e = mid\n    else:\n        b = mid\n\nprint(b)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt, floor\nprint(int(floor((sqrt(1 + 8 * int(input())) - 1) / 2)))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt, floor\nprint(int(floor(sqrt(1 + 8 * int(input())) - 1 / 2)))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nl = 0\nr = int(1e20)\nwhile r - l > 1:\n    mid = (r + l) // 2;\n    if (mid + 2) * (mid + 1) / 2 <= n:\n        l = mid\n    else:\n        r = mid\nprint(r)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\nn = int(input())\na = int(math.sqrt(n)) - 1;\nwhile (a + 2) * (a + 1) / 2 <= n:\n    a += 1\nprint(a)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\na = int(sqrt(n)) - 1;\nwhile (a + 2) * (a + 1) / 2 <= n:\n    a++\nprint(a)",
                "verdict": "Runtime Error"
            },
            {
                "code": "import os\r\nimport sys\r\nfrom io import BytesIO, IOBase\r\n\r\n# region fastio\r\nBUFSIZE = 8192\r\n\r\n\r\nclass FastIO(IOBase):\r\n    newlines = 0\r\n\r\n    def __init__(self, file):\r\n        self._fd = file.fileno()\r\n        self.buffer = BytesIO()\r\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\r\n        self.write = self.buffer.write if self.writable else None\r\n\r\n    def read(self):\r\n        while True:\r\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\r\n            if not b:\r\n                break\r\n            ptr = self.buffer.tell()\r\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\r\n        self.newlines = 0\r\n        return self.buffer.read()\r\n\r\n    def readline(self):\r\n        while self.newlines == 0:\r\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\r\n            self.newlines = b.count(b\"\\n\") + (not b)\r\n            ptr = self.buffer.tell()\r\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\r\n        self.newlines -= 1\r\n        return self.buffer.readline()\r\n\r\n    def flush(self):\r\n        if self.writable:\r\n            os.write(self._fd, self.buffer.getvalue())\r\n            self.buffer.truncate(0), self.buffer.seek(0)\r\n\r\n\r\nclass IOWrapper(IOBase):\r\n    def __init__(self, file):\r\n        self.buffer = FastIO(file)\r\n        self.flush = self.buffer.flush\r\n        self.writable = self.buffer.writable\r\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\r\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\r\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\r\n\r\n\r\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\r\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\r\nimport math\r\n\r\nn = int(input())\r\nans = int((-1+math.sqrt(1+8*n))/2)\r\nprint(ans)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import *\nn = int(input())\nk = floor((sqrt(8*n + 1) - 1)/2)\nprint(k)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import *\nn = int(input())\nk = int((sqrt(8*n + 1) - 1)/2)\nprint(k)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import *\nn = int(input())\nk = int((sqrt(8*n + 1) - 1)/2)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "# \u00cb\u043b\u043a\u0430 \u0438\u0437 \u043a\u043e\u043a\u0430-\u043a\u043e\u043b\u044b\nn = int(input())\nc = 0\nk = 1\nwhile n > 0:\n    if n - k >= 0:\n        n -= k\n        k += 1\n        c +=1\n    else:\n        break\nprint(c)\n    \n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "def canBeSumofConsec(n) :\n \n    # We basically return true if n is a\n    # power of two\n    return ((n&(n-1)) and n)\n\n\ndef printConsecutive(last, first):\n    k = 1\n    #print (first, end = \"\")\n    first += 1\n    for x in range(first, last + 1):\n        #print (\" +\", x, end = \"\")\n        k += 1\n    return k\n \ndef findConsecutive(N):\n    c = 0\n    for last in range(1, N):\n         \n        for first in range(0, last):\n             \n            if 2 * N == (last - first) * (last + first + 1):\n                c += printConsecutive(last, first + 1)\n    print(c)\n \n# Driver code\nn = int(input())\nif n == 1 or n == 2:\n    print(1)\nelse:\n    while not canBeSumofConsec(n):\n        n += 1\n    findConsecutive(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def canBeSumofConsec(n) :\n \n    # We basically return true if n is a\n    # power of two\n    return ((n&(n-1)) and n)\n\n\ndef printConsecutive(last, first):\n    k = 1\n    #print (first, end = \"\")\n    first += 1\n    for x in range(first, last + 1):\n        #print (\" +\", x, end = \"\")\n        k += 1\n    return k\n \ndef findConsecutive(N):\n    c = 0\n    for last in range(1, N):\n         \n        for first in range(0, last):\n             \n            if 2 * N == (last - first) * (last + first + 1):\n                c += printConsecutive(last, first + 1)\n    print(c)\n \n# Driver code\nn = int(input())\nif n == 1:\n    print(1)\nelse:\n    while not canBeSumofConsec(n):\n        n += 1\n    findConsecutive(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def ok(n,h):\r\n    need=(h*(h+1))//2\r\n    return n >= need\r\n\r\n\r\nn = int(input())\r\n\r\nl = 0\r\nr = 1e18\r\nwhile (r-l>1):\r\n    mid = (l+r)//2\r\n    if (ok(n,mid)):\r\n        l = mid\r\n    else:\r\n        r = mid\r\nprint(l)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "# n^2 + n - 2k = 0\n# D = 1 + 8k\n# n = (-1 + sqrt(D))/2\nfrom math import sqrt\nk = int(input())\na = (1+8*k)**(0.5)\nn = ( a - 1 ) / 2\nprint(int(n))\n\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "# n^2 + n - 2k = 0\n# D = 1 + 8k\n# n = (-1 + sqrt(D))/2\nfrom math import sqrt\nk = int(input())\na = sqrt(1+8*k)\nn = ( a - 1 ) / 2\nprint(int(n))\n\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "# n^2 + n - 2k = 0\n# D = 1 + 8k\n# n = (-1 + sqrt(D))/2\nfrom math import sqrt\nk = int(input())\na = 2*sqrt(1/4+2*k)\nn = ( a - 1 ) // 2\nprint(int(n))\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt\nk = int(input())\na = sqrt(1+8*k)\n#print(\"A:\", a)\nb = int(a)+1\n#print(\"B:\", b)\n#print(\"ABS:\", abs(a-b))\nif abs(a-b)<=1e-3:\n    a = b\n#print(\"RA:\", a)\nprint(int(( a - 1 ) // 2))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt\nk = int(input())\na = sqrt(1+8*k)\n#print(\"A:\", a)\nb = int(a)+1\n#print(\"B:\", b)\n#print(\"ABS:\", abs(a-b))\nif abs(a-b)<=1e-4:\n    a = b\n#print(\"RA:\", a)\nprint(int(( a - 1 ) // 2))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt\nk = int(input())\na = sqrt(1+8*k)\n#print(\"A:\", a)\nb = int(a)+1\n#print(\"B:\", b)\n#print(\"ABS:\", abs(a-b))\nif abs(a-b)<=1e-4:\n    a = b\n#print(\"RA:\", a)\nn = ( a - 1 ) // 2\nprint(int(n))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt\nk = int(input())\na = sqrt(1+8*k)\n#print(\"A:\", a)\nb = int(a)+1\n#print(\"B:\", b)\n#print(\"ABS:\", abs(a-b))\nif abs(a-b)<=1e-5:\n    a = b\n#print(\"RA:\", a)\nn = ( a - 1 ) // 2\nprint(int(n))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt\nk = int(input())\nn = ( int(sqrt(1+8*k)) - 1 ) / 2\nprint(int(n))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt\nk = int(input())\nif k>1e7:\n    print( sqrt(8*k-1)//2 )\nelse:\n    n = ( int(sqrt(1+8*k)) - 1 ) // 2 \n    print(int(n))\n\n\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt\nk = int(input())\nif k>1e6:\n    print( sqrt(8*k-1)//2 )\nelse:\n    n = ( int(sqrt(1+8*k)) - 1 ) // 2 \n    print(int(n))\n\n\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt\nk = int(input())\nif k>1e6:\n    print( sqrt(8*k)//2 )\nelse:\n    n = ( int(sqrt(1+8*k)) - 1 ) // 2 \n    print(int(n))\n\n\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt\nk = int(input())\nn = ( int(sqrt(1+8*k)) - 1 ) // 2\nprint(int(n))\n\n\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "k = int(input())\nn = ( int(sqrt(1+8*k)) - 1 ) // 2\nprint(int(n))\n\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "from math import sqrt\nk = int(input())\nn = ( int(sqrt(1+8*k)) + 1 ) // 2 -1\nprint(int(n))\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt\nk = int(input())\nn = ( int(sqrt(1+8*k)) - 1 ) // 2\nprint(int(n))\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt\nk = int(input())\nn = ( sqrt(1+8*k) - 1 ) // 2\nprint(int(n))\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "k = int(input())\nn = ( (1+8*k)**(1/2) - 1 ) // 2\nprint(int(n))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "k = int(input())\nn = (int((1+8*k)**(1/2))+1 ) // 2 - 1\nprint(int(n))\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "k = int(input())\nn = (-1 + int((1+8*k)**(1/2)) ) // 2\nprint(int(n))\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "/**\r\n    author: _Octal_\r\n    created: 30.12.2021\r\n\r\n    \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\r\n    \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\r\n    \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2584\u2580\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2584\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2580\u2584\u2591\u2591\u2591\u2591\u2591\u2591\u2591\r\n    \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2591\u2591\u2584\u2591\u2591\u2591\u2591\u2584\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2591\r\n    \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2584\u2588\u2584\u2584\u2591\u2591\u2584\u2591\u2591\u2591\u2588\u2591\u2584\u2584\u2584\u2591\u2591\u2591\r\n    \u2591\u2584\u2584\u2584\u2584\u2584\u2591\u2591\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2580\u2591\u2591\u2591\u2591\u2580\u2588\u2591\u2591\u2580\u2584\u2591\u2591\u2591\u2591\u2591\u2588\u2580\u2580\u2591\u2588\u2588\u2591\u2591\r\n    \u2591\u2588\u2588\u2584\u2580\u2588\u2588\u2584\u2588\u2591\u2591\u2591\u2584\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2591\u2591\u2591\u2591\u2580\u2580\u2580\u2580\u2580\u2591\u2591\u2591\u2591\u2588\u2588\u2591\u2591\r\n    \u2591\u2591\u2580\u2588\u2588\u2584\u2580\u2588\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2580\u2591\u2588\u2588\u2580\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2580\u2588\u2588\u2591\r\n    \u2591\u2591\u2591\u2591\u2580\u2588\u2588\u2588\u2588\u2591\u2580\u2591\u2591\u2591\u2591\u2584\u2591\u2591\u2591\u2588\u2588\u2591\u2591\u2591\u2584\u2588\u2591\u2591\u2591\u2591\u2584\u2591\u2584\u2588\u2591\u2591\u2588\u2588\u2591\r\n    \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2580\u2588\u2591\u2591\u2591\u2591\u2584\u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2591\u2591\u2591\u2591\u2584\u2591\u2591\u2591\u2584\u2591\u2591\u2584\u2591\u2591\u2591\u2588\u2588\u2591\r\n    \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2584\u2588\u2584\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2580\u2584\u2591\u2591\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2591\u2591\u2584\u2580\u2591\u2591\r\n    \u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2580\u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580\u2580\u2580\u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580\u2591\u2591\u2591\u2591\r\n    \u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2588\u2588\u2580\u2591\u2591\u2588\u2588\u2588\u2580\u2591\u2591\u2591\u2591\u2591\u2591\u2580\u2588\u2588\u2588\u2591\u2591\u2580\u2588\u2588\u2580\u2591\u2591\u2591\u2591\u2591\u2591\r\n    \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\r\n**/\r\n\r\n#include <algorithm>\r\n#include <array>\r\n#include <bitset>\r\n#include <cassert>\r\n#include <climits>\r\n#include <cmath>\r\n#include <complex>\r\n#include <cstdio>\r\n#include <cstdlib>\r\n#include <cstring>\r\n#include <functional>\r\n#include <iomanip>\r\n#include <iostream>\r\n#include <map>\r\n#include <memory>\r\n#include <numeric>\r\n#include <queue>\r\n#include <random>\r\n#include <set>\r\n#include <stack>\r\n#include <string>\r\n#include <unordered_set>\r\n#include <unordered_map>\r\n#include <vector>\r\n\r\nusing namespace std;\r\n\r\n#define PLEASE_ACCEPT ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);\r\n\r\n//#define FILE\r\n\r\n#define endl \"\\n\"\r\n#define debug cout << \"# sus\\n\"\r\n\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef pair<long long, long long> Pair;\r\nconst long long MOD = 1e9 + 7;\r\nconst long long INF = LLONG_MAX;\r\n\r\nlong long gcd(long long a, long long b) {\r\n    if (b == 0) return a;\r\n    return gcd(b, a % b);\r\n}\r\n\r\nsigned main() {\r\n#ifdef FILE\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n#else\r\n    PLEASE_ACCEPT;\r\n#endif\r\n    ull n;\r\n    cin >> n;\r\n    cout << (ull) (sqrt(8ULL * n + 1ULL) - 1ULL) / 2ULL;\r\n    return 0;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "from math import sqrt\r\nn=int(input())\r\nprint(int((sqrt(1+8*n)-1)/2))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt\r\nn=int(input())\r\nprint(int((sqrt(8*n+1)-1)/2))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def main():\r\n    n = int(input())\r\n    print((int((1 + 8*n)**0.5) - 1) // 2)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt, floor\r\n\r\nn = int(input())\r\nans = int((sqrt(8 * n + 1) - 1) / 2)\r\nwhile ans * (ans + 1) > n:\r\n    ans -= 1\r\nwhile ans * (ans + 1) <= n:\r\n    ans += 1\r\nprint(ans - 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt, floor\r\n\r\nEPS = 1e-5\r\n\r\ndef my_sqrt(n):\r\n    k = sqrt(n)\r\n    while k * k > n:\r\n        k -= 0.001\r\n    while k * k < n:\r\n        k += 1e-6\r\n    return k\r\n\r\n\r\nn = int(input())\r\nans = int((my_sqrt(8 * n + 1) - 1) / 2)\r\nprint(ans)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt, floor\r\n\r\nEPS = 1e-5\r\n\r\ndef my_sqrt(n):\r\n    k = sqrt(n)\r\n    #while k * k > n:\r\n    #    k -= 0.001\r\n    while k * k < n:\r\n        k += 1e-6\r\n    return k\r\n\r\n\r\nn = int(input())\r\nans = int((my_sqrt(8 * n + 1) - 1) / 2)\r\nprint(ans)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt, floor\r\n\r\nEPS = 1e-5\r\n\r\ndef my_sqrt(n):\r\n    k = sqrt(n)\r\n    while k * k > n:\r\n        k -= 0.001\r\n    while k * k < n:\r\n        k += 1e-7\r\n    return k\r\n\r\n\r\nn = int(input())\r\nans = int((my_sqrt(8 * n + 1) - 1) / 2)\r\nprint(ans)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "from math import sqrt, floor\r\n\r\nEPS = 1e-5\r\n\r\ndef my_sqrt(n):\r\n    k = sqrt(n)\r\n    while k * k > n:\r\n        k -= 0.001\r\n    while k * k < n:\r\n        k += 0.000001\r\n    return k\r\n\r\n\r\nn = int(input())\r\nans = int((my_sqrt(8 * n + 1) - 1) / 2)\r\nprint(ans)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt, floor\r\n\r\nEPS = 1e-5\r\n\r\ndef my_sqrt(n):\r\n    k = sqrt(n)\r\n    while k * k > n:\r\n        k -= 0.001\r\n    while k * k < n:\r\n        k += 0.001\r\n    return k + EPS\r\n\r\n\r\nn = int(input())\r\nans = int((my_sqrt(8 * n + 1) - 1) / 2)\r\nprint(ans)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt, floor\r\n\r\n\r\ndef my_sqrt(n):\r\n    k = sqrt(n)\r\n    while k * k > n:\r\n        k -= 0.01\r\n    while k * k < n:\r\n        k += 0.01\r\n    return k\r\n\r\n\r\nn = int(input())\r\nans = int((my_sqrt(8 * n + 1) - 1) / 2)\r\nprint(ans)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt, floor\r\n\r\n\r\ndef my_sqrt(n):\r\n    k = sqrt(n)\r\n    while k * k > n:\r\n        k -= 0.01\r\n    while k * k < n:\r\n        k += 0.01\r\n    return k\r\n\r\n\r\nn = int(input())\r\nans = int((my_sqrt(8 * n + 1) - 1) / 2)\r\nprint(ans)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt, floor\r\n\r\n\r\ndef my_sqrt(n):\r\n    k = sqrt(n)\r\n    while k * k > n:\r\n        k -= 0.1\r\n    while k * k < n:\r\n        k += 0.1\r\n    return k\r\n\r\n\r\nn = int(input())\r\nans = int((my_sqrt(8 * n + 1) - 1) / 2)\r\nprint(ans)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt, floor\r\n\r\n\r\nn = int(input())\r\nans = int((sqrt(8 * n + 1) - 1) / 2)\r\nprint(ans)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt, floor\r\n\r\n\r\nn = int(input())\r\nans = int(sqrt(2 * n + 0.25) - 0.5)\r\nprint(ans)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt, floor\r\n\r\n\r\nn = int(input())\r\nans = int((sqrt((n * 8) + 1) - 1) / 2)\r\nprint(ans)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt, floor\r\n\r\n\r\nn = int(input())\r\nans = floor((sqrt((n * 8) + 1) - 1) / 2)\r\nprint(ans)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt, floor\r\n\r\n\r\nn = int(input())\r\nans = floor((sqrt((n << 3) + 1) - 1) / 2)\r\nprint(ans)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#define _CRT_SECURE_NO_WARNINGS\r\n\r\n#include <iostream>\r\n#include <algorithm>\r\n#include <vector>\r\n#include <string>\r\n#include <cmath>\r\n#include <ctime>\r\n#include <utility>\r\n#include <iomanip>\r\n#include <queue>\r\n#include <deque>\r\n#include <set>\r\n#include <map>\r\n#include <unordered_set>\r\n#include <unordered_map>\r\n#include <list>\r\n#include <array>\r\n#include <cassert>\r\n#include <numeric>\r\n#include <bitset>\r\n#include <random>\r\n#include <chrono>\r\n\r\n#define fast ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0)\r\n#define sleep(_time) while ((double)clock() / (double)CLOCKS_PER_SEC < _time)\r\n\r\n#define all(a) a.begin(), a.end()\r\n#define rall(a) a.rbegin(), a.rend()\r\n\r\nusing namespace std;\r\n\r\nvoid use_files(const string& name) {\r\n    freopen((name + \".in\").c_str(), \"r\", stdin);\r\n    freopen((name + \".out\").c_str(), \"w\", stdout);\r\n}\r\n\r\nunsigned long long n;\r\n\r\nbool check(long long k) {\r\n    return k * (k + __float128(1)) <= __float128(2) * n;\r\n}\r\n\r\nsigned main() {\r\n    fast;\r\n\r\n#ifdef LOCAL\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n#else\r\n    //use_files(\"\");\r\n#endif\r\n\r\n    cin >> n;\r\n\r\n    long long l = 0;\r\n    long long r = 1e10;\r\n    while (l + 1 < r) {\r\n        long long mid = (l + r) >> 1;\r\n        if (check(mid)) {\r\n            l = mid;\r\n        } else {\r\n            r = mid;\r\n        }\r\n    }\r\n    cout << l;\r\n\r\n    return 0;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "import urllib.request\r\n\r\n#response = urllib.request.urlopen('https://kek.today/')\r\n\r\n'''\r\ntext = response.read()\r\nprint(text)\r\n'''\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import urllib.request\r\n\r\nresponse = urllib.request.urlopen('https://kek.today/')\r\n\r\n'''\r\ntext = response.read()\r\nprint(text)\r\n'''\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "import urllib.request\r\n\r\nresponse = urllib.request.urlopen('https://kek.today/')\r\n\r\ntext = response.read()\r\nprint(text)",
                "verdict": "Runtime Error"
            },
            {
                "code": "import os\r\n\r\n\r\ns = os.system('lsb_release -a')\r\n\r\nif type(s) == type(None):\r\n    print(1)\r\n\r\n'''\r\na = s.split('\\n')\r\nif len(a) != 5:\r\n    while True:\r\n        pass\r\n'''",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import os\r\n\r\n\r\ns = os.system('lsb_release -a')\r\n\r\nif type(s) == type(''):\r\n    print(1)\r\n\r\n'''\r\na = s.split('\\n')\r\nif len(a) != 5:\r\n    while True:\r\n        pass\r\n'''",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import os\r\n\r\n\r\ns = os.system('lsb_release -a')\r\n'''\r\na = s.split('\\n')\r\nif len(a) != 5:\r\n    while True:\r\n        pass\r\n'''",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import os\r\n\r\n\r\ns = os.system('lsb_release -a')\r\na = s.split('\\n')\r\nif len(a) != 5:\r\n    while True:\r\n        pass",
                "verdict": "Runtime Error"
            },
            {
                "code": "import sys\r\n\r\n\r\nif sys.platform == 'linux':\r\n    raise Exception('Error')",
                "verdict": "Runtime Error"
            },
            {
                "code": "import sys\r\n\r\n\r\nif sys.platform == 'win32':\r\n    raise Exception('Error')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a=int(input())\r\nheight=1\r\nstep=2\r\nwhile a>step:\r\n    a-=step\r\n    step+=1\r\n    height+=1\r\nprint(height)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a=int(input())\r\nn=1\r\ncnt=0\r\nwhile a>=n:\r\n    cnt+=1\r\n    n+=(cnt+1)\r\nprint(cnt)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "import math\r\nn = int(input())\r\ns = int((math.sqrt(8 * n + 1) - 1) // 2)\r\nwhile ((s + 2) * (s + 1) // 2 <= n):\r\n    s += 1\r\nprint(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\nn = int(input())\r\ns = int((math.sqrt(8 * n + 1) - 1) // 2) - 1\r\nwhile ((s + 2) * (s + 1) // 2 < n):\r\n    s += 1\r\nprint(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\nn = int(input())\r\ns = int((math.sqrt(8 * n + 1) - 1) // 2)\r\nwhile ((s + 2) * (s + 1) // 2 < n):\r\n    s += 1\r\nprint(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\nn = int(input())\r\ns = int((math.sqrt(8 * n + 1) - 1) // 2)\r\nwhile (s * (s + 1) // 2 < n):\r\n    s += 1\r\nprint(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\nn = int(input())\r\nprint(int((math.sqrt(8 * n + 1) - 1) // 2))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\nn = int(input())\nx = int((-1+math.sqrt(1+8*n))/2)\nwhile (x+2)*(x+1)//2<=n:\n    x+=1\nwhile (x+1)*x//2>n:\n    x-=1\nprint(x)",
                "verdict": "Pending"
            },
            {
                "code": "import math\nn = int(input())\nx = int((-1+math.sqrt(1+8*n))/2)\nwhile (x+2)*(x+1)//2<=n:\n    x+=1\nwhile (x+1)*x//2>n:\n    x-=1\nprint(x)\n",
                "verdict": "Pending"
            },
            {
                "code": "import math\nn = int(input())\nx = int((-1+math.sqrt(1+8*n))/2)\nwhile (x+2)*(x+1)//2<=n:\n    x+=1\nprint(x)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\nn = int(input())\nx = math.floor((-1+math.sqrt(1+8*n))/2)\nwhile (x+2)*(x+1)//2<=n:\n    x+=1\nprint(x)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\nn = int(input())\nprint(math.floor((-1+math.sqrt(1+8*n))/2))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt\n\nn = int(input())\nprint((int(sqrt(1 + 8 * n)) - 1) // 2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nprint((pow(1 + 8 * n, 0.5) - 1) // 2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nprint(round(pow(1 + 8 * n, 0.5) - 1 / 2))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nprint((int(pow(1 + 8 * n, 0.5)) - 1) // 2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\r\nif a == 1 or a == 2:\r\n    print(1)\r\nif a == 3 or a == 4 or a == 5:\r\n    print(2)\r\nif a == 6 or a == 7 or a == 8 or a == 9:\r\n    print(3)\r\nif a >= 10 and a <= 13:\r\n    print(4)\r\nelse:\r\n    print(5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\r\nb = 0\r\nc = 0\r\nwhile a >= b + 1:\r\n    b += 1\r\n    a -= b\r\n    c += 1\r\nprint(c)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "import math\r\ns = int(input())\r\nans = int(-1 + math.sqrt(1 + 8 * s)) // 2\r\nprint(ans)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\ns = int(input())\r\nans = (-1 + math.sqrt(1 + 8 * s)) // 2\r\nprint(int(ans))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\ns = int(input())\r\nans = ((-1 + math.sqrt(1 + 8 * s)) // 2)\r\nprint(ans)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\ns = int(input())\r\nans = math.ceil((-1 + math.sqrt(1 + 8 * s)) / 2)\r\nprint(ans)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\ns = int(input())\r\nans = math.floor((-1 + math.sqrt(1 + 8 * s)) / 2)\r\nprint(ans)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\r\ncount = 0\r\n\r\nwhile True:\r\n    if a - count <= 0:\r\n        break\r\n    else:\r\n        count += 1\r\n        a -= count\r\nprint(count)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "a = int(input())\r\ncount = 0\r\ni = 0\r\nwhile True:\r\n    count += 1\r\n    i += i + i + 1\r\n    if a - i < 0:\r\n        break \r\nprint(count)\r\n    ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\r\ncount = 0\r\ni = 0\r\nwhile True:\r\n    count += 1\r\n    i += i + i + 1\r\n    if a - i < 0:\r\n        break \r\nprint(count)\r\n    ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\r\ncount = 0\r\ni = 0\r\nwhile True:\r\n    i += i + i + 1\r\n    count += 1\r\n    if a - i < 0:\r\n        break \r\nprint(count)\r\n    ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\r\ncount = 0\r\nwhile a - count >= 0:\r\n    count += 1\r\n    a -= count\r\nprint(count)\r\n    ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\r\ncount = 0\r\nwhile a - 1 >= 0:\r\n    count += 1\r\n    a -= count\r\nprint(count)\r\n    ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\r\ncount = 0\r\nwhile a > 0:\r\n    a = a - 2\r\n    count += 1\r\nprint(count)\r\n    ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nfor i in range(1, n + 1):\r\n    k = (i + 1) * i / 2\r\n    if n > k:\r\n        continue\r\n    elif n == k:\r\n        print(i)\r\n        break\r\n    else:\r\n        print(i - 1)\r\n        break\r\n        ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nfor i in range(1, n + 1):\r\n    k = (i + 1) * i / 2\r\n    if n > k:\r\n        continue\r\n    else:\r\n        print(i - 1)\r\n        break\r\n        ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nfor i in range(1, n + 1):\r\n    k = (i + 1) * i / 2\r\n    if i >= k:\r\n        continue\r\n    else:\r\n        print(i - 1)\r\n        break\r\n        ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\na = 0\nfor i in range(2, 1000):\n    for j in range(i):\n        a += 1\n        if a == n:\n            print(i - 1)\n            break",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\na = 0\nfor i in range(2, 100000):\n    for j in range(i):\n        a += 1\n        if a == n:\n            print(i - 1)\n            break",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\na = 0\nfor i in range(2, 10**18):\n    for j in range(i):\n        a += 1\n        if a == n:\n            print(i - 1)\n            break",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "a = 0\nk = 0\nn = int(input())\nif n == 0:\n    print(0)\nelse:\n    while k < n:\n        a += 1\n        k += 1 + k\n    if k > n:\n        print(a - 1)\n    else:\n        print(a)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nk = 0\na = 0\nif n == 0:\n    print(0)\nelse:\n    print(int((-1 + (1 + 8*n)**(1/2))/ 2))\n    ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nk = 0\na = 0\nif n == 0:\n    print(0)\nelse:\n    while k < n:\n        a += 1\n        k += 1\n        if k > n:\n            print(a - 1)\n        elif k == n:\n            print(a)\n    ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nk = 0\nif n == 0:\n    print(0)\nelse:\n    while k < n:\n        k += 1\n        n -= k\n    print(k)\n    ",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\nif n == 0:\n    print(0)\nelse:\n    print(n // 3 + 1)\n    ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nk = 0\nif n = 0:\n    print(0)\nelse:\n    print(n // 3 + 1)\n    ",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\nk = 0\ni = 1\nwhile i < n:\n    i += 1\n    k += 1\n    n -= i\nprint(i)\n    ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nk = 0\ni = 1\nwhile i < n:\n    i += 1\n    k += 1\n    n -= i\nprint(k)\n    ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nprint(int((-1 + int((1 + 8 * n) ** 0.5)) / 2))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\r\ni = 1\r\nif a == 0:\r\n    print(0)\r\nelse:\r\n    while a >= i:\r\n        a -= i\r\n        i += 1\r\n    if a == 0:\r\n        print(i - 1)\r\n    else:\r\n        print(i - 1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "a = int(input())\r\ni = 1\r\nif a == 0:\r\n    print(0)\r\nelse:\r\n    while a > i:\r\n        a -= i\r\n        i += 1\r\n    print(i)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\r\ni = 0\r\nwhile a > i:\r\n    a -= i\r\n    i += 1\r\nprint(i)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\n\ns = int(input())\nans = int(-1 + math.sqrt(1 + 8 * s)) // 2\nprint(ans)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\n\r\nans = ((1 + 8 * n)**(0.5) - 1) // 2\r\n\r\nprint(int(ans))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(int(((8 * int(input()) + 1) ** 0.5 + 0.00001 - 1) / 2))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(int(((8 * int(input()) + 1) ** 0.5 - 1) + 0.000001 / 2))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(int(((8 * int(input()) + 1) ** 0.5 - 1) / 2))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\n\r\nif n==0:\r\n    print(0)\r\n    exit(0)\r\n\r\nl = 1\r\nr = n+10\r\n\r\n\r\nwhile r - l > 1:\r\n    m = (l+r)//2\r\n    if m*(m+1)/2<=n:\r\n        l = m\r\n    else:\r\n        r = m\r\n\r\nprint(l)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\n\r\nif n==0:\r\n    print(0)\r\n    exit(0)\r\n\r\nl = 1\r\nr = n\r\n\r\nwhile r-l>1:\r\n    m = (l+r)//2\r\n    if m*(m+1)/2<=n:\r\n        l = m\r\n    else:\r\n        r = m\r\n\r\nprint(l)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n#define int long long\r\n\r\nusing namespace std;\r\n\r\nint32_t main(){\r\n//    freopen(\"input.txt\", \"r\", stdin);\r\n//    freopen(\"output.txt\", \"w\", stdout);\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0); cout.tie(0);\r\n\r\n    int n; cin >> n;\r\n    int ans = 0;\r\n    int c = 2;\r\n    while(n > 0){\r\n        n -= c;\r\n        c ++;\r\n        ans ++;\r\n    }\r\n    cout << ans;\r\n}\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nh = (8*n + 1)**(1/2) / 2 - 0.5\r\nprint(int(h))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\ncnt = 1\r\nans = 0\r\nwhile n - cnt >= 0:\r\n    ans += 1\r\n    n -= cnt\r\n    cnt += 1\r\nprint(ans)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\ncnt = 1\nans = 0\nwhile n - cnt >= 0:\n    ans += 1\n    cnt += 1\n    n -= cnt\nprint(ans)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\ncnt = 1\nans = 0\nwhile n - cnt >= 0:\n    ans += 1\n    cnt + =1\n    n -= cnt\nprint(ans)",
                "verdict": "Runtime Error"
            },
            {
                "code": "print(int((1 + (1 + 8 * int(input())) ** .5) // 2 - 1))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print((1 + (1 + 8 * int(input())) ** .5) // 2 - 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print((1 + (1 + 8 * int(input())) ** .5) // 2 - 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\n\ni = 0\nwhile n > 0:\n    if n - i <= 0:\n        break\n    n -= i\n    i += 1\n\nprint(i)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "mx = int(input())\r\n\r\n\r\ndef check(n):\r\n    return n * (n + 1) / 2 <= mx\r\n\r\n\r\nn = int((mx * 2) ** 0.5)\r\nfor i in range(1000, -10001, -1):\r\n    # print(i)\r\n    if check(n + i):\r\n        print(n + i)\r\n        exit()\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "mx = int(input())\r\n\r\n\r\ndef check(n):\r\n    return n * (n + 1) / 2 <= mx\r\n\r\n\r\nn = int((mx * 2) ** 0.5)\r\nfor i in range(1000, -1001, -1):\r\n    # print(i)\r\n    if check(n + i):\r\n        print(n + i)\r\n        exit()\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "mx = int(input())\r\n\r\n\r\ndef check(n):\r\n    return n * (n + 1) / 2 <= mx\r\n\r\n\r\nn = int((mx * 2) ** 0.5)\r\nif check(n + 3):\r\n    print(n + 3)\r\nelif check(n + 2):\r\n    print(n + 2)\r\nelif check(n + 1):\r\n    print(n + 1)\r\nelif check(n):\r\n    print(n)\r\nelif check(n - 1):\r\n    print(n - 1)\r\nelif check(n - 2):\r\n    print(n - 2)\r\nelif check(n - 3):\r\n    print(n - 3)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "mx = int(input())\r\n\r\n\r\ndef check(n):\r\n    return n * (n + 1) / 2 <= mx\r\n\r\n\r\nn = int((mx * 2) ** 0.5)\r\nif check(n + 2):\r\n    print(n + 2)\r\nelif check(n + 1):\r\n    print(n + 1)\r\nelif check(n):\r\n    print(n)\r\nelif check(n - 1):\r\n    print(n - 1)\r\nelif check(n - 2):\r\n    print(n - 2)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def f(n):\r\n    return ((n + 1) * n) // 2\r\nn = int(input())\r\nm = n\r\nn *= 2\r\nn **= 0.5\r\nn = max(0, int(n))\r\nfor i in range(n, n + 20):\r\n    if (f(i) <= m and f(i + 1) > m):\r\n        print(i)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def f(n):\n    return ((n + 1) * n) // 2\nn = int(input())\nm = n\nn *= 2\nn **= 0.5\nn = max(0, n)\nfor i in range(n, n + 20):\n    if (f(i) <= m and f(i + 1) > m):\n        print(i)",
                "verdict": "Runtime Error"
            },
            {
                "code": "print(abs(int(input())//-2))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(int(input())//2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\n\nn = int(input())\nprint(int((-1+math.sqrt(1 + 8 * n))/2));",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt\nfrom decimal import Decimal\nn = int(input())\nk = (sqrt(8 * n + 1) - 1) / 2\nprint(str(format(Decimal.from_float(k), '.500')).split('.')[0])\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt\nn = int(input())\nk = (int(sqrt(8 * n + 1)) - 1) / 2\nprint(str(k).split('.')[0])\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt\nn = int(input())\nk = (sqrt(8 * n + 1) - 1) / 2\nprint(str(k).split('.')[0])\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt\nn = int(input())\nk = 0.5 * (sqrt(8 * n + 1) - 1)\nprint(str(k).split('.')[0])\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nif n == 0:\n\tprint(0)\nelse:\n\tans = 0\n\tq = 1\n\twhile n >= q:\n\t\tans += 1\n\t\tn -= q\n\t\tq += 1\n\tprint(ans)\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\nif n == 0:\n\tprint(0)\nelse:\n\tans = 0\n\tmustNext = 1\n\twhile n >= mustNext:\n\t\tans += 1\n\t\tn -= mustNext\n\t\tmustNext += 1\n\tprint(ans)\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input()) - 1\nif n == 0:\n\tprint(0)\nelse:\n\tans = 0\n\tmustNext = 1\n\twhile n >= mustNext:\n\t\tans += 1\n\t\tn -= mustNext\n\t\tmustNext += 1\n\tprint(ans)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input()) - 1\nans = 0\nmustNext = 1\nwhile n >= mustNext:\n\tans += 1\n\tn -= mustNext\n\tmustNext += 1\nprint(ans)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input()) - 1\nans = 1\nmustNext = 2\nwhile n >= mustNext:\n\tans += 1\n\tn -= mustNext\n\tmustNext += 1\nprint(ans)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nans = 10**9\nl = 0\nr = 10**9\nh = (l+r)//2\nwhile l<r:\n    if (h*(h+1))//2 >= n:\n        ans = min(ans, h)\n        r = h\n    else:\n        l = h+1\n    h = (l+r)//2\nif (ans*(ans+1))//2 > n:\n    print(ans-1)\nelse:\n    print(ans)\n\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nh = 1\nwhile n > (h*(h+1))//2:\n    h += 1\nif n < (h*(h+1))//2:\n    h -= 1\nprint(h)\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nprint(int(((-1+(1+8*n)**0.5)//2)))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nl = 0\nr = n + 1\nwhile (r - l > 1) :\n    m = (r + l) // 2\n    if (m * (m + 1) / 2 <= n) :\n        l = m\n    else:\n        r = m\nprint(l)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef long double ld;\n\nmt19937 rnd(time(0));\n#define ioss ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\n#define rall(x) x.rbegin(), x.rend()\n#define all(x) x.begin(), x.end()\n#define pb push_back\n#define file freopen(\"27-B.txt\", \"r\", stdin); freopen(\"out.txt\", \"w\", stdout);\n\ntemplate<class T>\nll upmax(T &a, T b) { return (b > a) ? a = b, 1 : 0; }\ntemplate<class T>\nll upmin(T &a, T b) { return (b < a) ? a = b, 1 : 0; }\n\n\nconst int inf = 2e9 + 1e3;\n\n\n\nvoid solve(){\n\tll n;\n\tcin>>n;\n\tll l = 1, r = 1e9;\n\twhile(r - l > 1){\n\t\tll m = (r + l) / 2;\n\t\tif((m) * (m + 1) / 2 <= n)l = m;\n\t\telse r = m;\n\t}\n\tcout<<l<<'\\n';\n}\n\n\nsigned main(){\n    ioss\n    // file\n    int t = 1;\n    // cin>>t;\n    while(t-->0){\n        solve();\n    }\n    return 0;\n}\n\n\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nk = int(((1 + 8*n) ** 0.5 - 1) / 2)\r\nprint(k)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nk = int(((1 + 8*n) ** 0.5 - 1) // 2)\r\nprint(k)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import floor\r\n\r\nn=int(input())\r\nl=0\r\nr=1e11\r\nfor i in range(1000):\r\n    m=floor((l+r+1)/2)\r\n    if l == r:\r\n        break\r\n    if (m*(m+1))/2 == n:\r\n        l=m\r\n        break\r\n    if (m*(m+1))/2 < n and ((m+1)*(m+2))/2 > n:\r\n        l=m\r\n        break\r\n    if (m*(m+1))/2 > n:\r\n        r=m-1\r\n    else:\r\n        l=m\r\nprint(l)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import floor\r\n\r\nn=int(input())\r\nl=0\r\nr=1e11\r\nfor i in range(1000):\r\n    m=floor((l+r)/2)\r\n    if l == r:\r\n        break\r\n    if (m*(m+1))/2 == n:\r\n        l=m\r\n        break\r\n    if (m*(m+1))/2 < n and ((m+1)*(m+2))/2 > n:\r\n        l=m\r\n        break\r\n    if (m*(m+1))/2 > n:\r\n        r=m\r\n    else:\r\n        l=m\r\nprint(l)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import floor\r\n\r\nn=int(input())\r\nl=0\r\nr=1e10\r\nfor i in range(1000):\r\n    m=floor((l+r)/2)\r\n    if l == r:\r\n        break\r\n    if (m*(m+1))/2 == n:\r\n        l=m\r\n        break\r\n    if (m*(m+1))/2 < n and ((m+1)*(m+2))/2 > n:\r\n        l=m\r\n        break\r\n    if (m*(m+1))/2 > n:\r\n        r=m\r\n    else:\r\n        l=m\r\nprint(l)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import floor\r\n\r\nn=int(input())\r\nl=0\r\nr=1e10\r\nfor i in range(1000):\r\n    m=floor((l+r+1)/2)\r\n    if l == r:\r\n        break\r\n    if (m*(m+1))/2 == n:\r\n        l=m\r\n        break\r\n    if (m*(m+1))/2 < n and ((m+1)*(m+2))/2 > n:\r\n        l=m\r\n        break\r\n    if (m*(m+1))/2 > n:\r\n        r=m\r\n    else:\r\n        l=m\r\nprint(l)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import floor\r\n\r\nn=int(input())\r\nl=0\r\nr=1e10\r\nfor i in range(1000):\r\n    m=floor((l+r+1)/2)\r\n    if l == r:\r\n        break\r\n    if (m*(m+1))/2 == n:\r\n        l=m\r\n        break\r\n    if (m*(m+1))/2 > n:\r\n        r=m\r\n    else:\r\n        l=m\r\nprint(l)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import floor\r\n\r\nn=int(input())\r\nl=0\r\nr=1e10\r\nfor i in range(1000):\r\n    m=floor((l+r)/2)\r\n    if l == r:\r\n        break\r\n    if (m*(m+1))/2 == n:\r\n        l=m\r\n        break\r\n    if (m*(m+1))/2 > n:\r\n        r=m\r\n    else:\r\n        l=m\r\nprint(l)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import floor\r\n\r\nn=int(input())\r\nl=0\r\nr=1e10\r\nfor i in range(1000):\r\n    m=floor((l+r)/2)\r\n    if (m*(m+1))/2 == n:\r\n        l=m\r\n        break\r\n    if (m*(m+1))/2 > n:\r\n        r=m\r\n    else:\r\n        l=m\r\nprint(l)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import floor\r\n\r\nn=int(input())\r\nl=0\r\nr=1e10\r\nfor i in range(1000):\r\n    m=floor((l+r)/2)\r\n    if m*(m+1)/2 == n:\r\n        l=m\r\n        break\r\n    if m*(m+1)/2 > n:\r\n        r=m\r\n    else:\r\n        l=m\r\nprint(l)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nl=0\r\nr=1e10\r\nfor i in range(1000):\r\n    m=int((l+r+1)/2)\r\n    if m*(m+1)/2 == n:\r\n        l=m\r\n        break\r\n    if m*(m+1)/2 > n:\r\n        r=m\r\n    else:\r\n        l=m\r\nprint(l)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nl=0\r\nr=1e10\r\nfor i in range(1000):\r\n    m=int((l+r)/2)\r\n    if m*(m+1)/2 == n:\r\n        l=m\r\n        break\r\n    if m*(m+1)/2 > n:\r\n        r=m\r\n    else:\r\n        l=m\r\nprint(l)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nl=0\r\nr=1e10\r\nfor i in range(1000):\r\n    m=int((l+r)/2)\r\n    if m*(m+1)/2 == n:\r\n        l=m\r\n        break\r\n    if m*(m+1)/2 > n:\r\n        r=m-1\r\n    else:\r\n        l=m\r\nprint(l)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nl=0\r\nr=1e10\r\nfor i in range(1000):\r\n    m=int((l+r)/2)\r\n    if m*(m+1)/2 == n:\r\n        l=m\r\n        break\r\n    if m*(m+1)/2 > n:\r\n        r=m\r\n    else:\r\n        l=m\r\nprint(l)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <iostream>\r\n#include <set>\r\n#include <map>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <string>\r\n#include <sstream>\r\nusing namespace std;\r\n\r\n int main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    int n, d, i, j, s = 1;\r\n    vector <unsigned long long> a(90001);\r\n    a[0] = 0;\r\n    for (i = 1; i <= 90000; i++) {\r\n        a[i] = s;\r\n        s += i + 1;\r\n    }\r\n    cin >> n;\r\n    i = 0;\r\n    while (n >= a[i]) {\r\n        i++;\r\n    }\r\n    if (a[i] > n)\r\n        i--;\r\n    cout << i;\r\n}\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\r\n#include <set>\r\n#include <map>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <string>\r\n#include <sstream>\r\nusing namespace std;\r\n\r\n int main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    int n, d, i, j, s = 1;\r\n    vector <unsigned long long> a(90001);\r\n    for (i = 1; i <= 90000; i++) {\r\n        a[i] = s;\r\n        s += i + 1;\r\n    }\r\n    cin >> n;\r\n    i = 1;\r\n    while (n >= a[i]) {\r\n        i++;\r\n    }\r\n    if (a[i] > n)\r\n        i--;\r\n    cout << i;\r\n}\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "import collections\nimport os\nfrom io import BytesIO, IOBase\nimport math\nimport sys\nfrom functools import reduce\n\nBUFSIZE = 8192\n\n\nclass FastIO(IOBase):\n    newlines = 0\n\n    def __init__(self, file):\n        self._fd = file.fileno()\n        self.buffer = BytesIO()\n        self.writable = \"x\" in file.mode or \"r\" not in file.mode\n        self.write = self.buffer.write if self.writable else None\n\n    def read(self):\n        while True:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            if not b:\n                break\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines = 0\n        return self.buffer.read()\n\n    def readline(self):\n        while self.newlines == 0:\n            b = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\n            self.newlines = b.count(b\"\\n\") + (not b)\n            ptr = self.buffer.tell()\n            self.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\n        self.newlines -= 1\n        return self.buffer.readline()\n\n    def flush(self):\n        if self.writable:\n            os.write(self._fd, self.buffer.getvalue())\n            self.buffer.truncate(0), self.buffer.seek(0)\n\n\nclass IOWrapper(IOBase):\n    def __init__(self, file):\n        self.buffer = FastIO(file)\n        self.flush = self.buffer.flush\n        self.writable = self.buffer.writable\n        self.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\n        self.read = lambda: self.buffer.read().decode(\"ascii\")\n        self.readline = lambda: self.buffer.readline().decode(\"ascii\")\n\n\nclass Mod:\n    def __init__(self, mod=10e9 + 7):\n        self.mod = mod\n\n    def add(self, a, b):\n        return (a + b) % self.mod\n\n    def mul(self, a, b):\n        return (a * b) % self.mod\n\n    def div(self, a, b):\n        return self.mul(a, self.inv(b))\n\n    def inv(self, a):\n        if a == 1:\n            return 1\n        return ((self.mod - self.mod // a) * self.inv(self.mod % a)) % self.mod\n\n    def binpow(self, a, b):\n        ans = 1\n        while b > 0:\n            if b % 2 == 1:\n                ans = self.mul(ans, a)\n            a = self.mul(a, a)\n            b //= 2\n        return ans\n\n\nclass Dsu:\n    def __init__(self, n):\n        self.p = [i for i in range(n)]\n        self.count = n\n        self.size = [1] * n\n\n    def root(self, x):\n        if x == self.p[x]:\n            return x\n        else:\n            self.p[x] = self.root(self.p[x])\n            return self.p[x]\n\n    def merge(self, x, y):\n        r1 = self.root(x)\n        r2 = self.root(y)\n        if r1 == r2:\n            return r1\n        if self.size[r2] > self.size[r1]:\n            r1, r2 = r2, r1\n        self.size[r1] += self.size[r2]\n        self.p[r2] = r1\n        self.count -= 1\n        return r1\n\n    def sizee(self, r):\n        return self.size[self.root(r)]\n\n    def count(self):\n        return self.count\n\n\nsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\nL = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\nN = lambda: int(L())\nF = lambda: float(L())\nNs = lambda: list(map(int, L().split()))\nSs = lambda: list(L().split())\nNss = lambda: sorted(Ns())\nFs = lambda: list(map(float, L().split()))\n\n\ndef gcd(*args):\n    return reduce(math.gcd, args, 0)\n\n\ndef presolve():\n    pass\n\n\ndef mygcd(a, b):\n    \"\"\"Calculate the Greatest Common Divisor of a and b.\n\n    Unless b==0, the result will have the same sign as b (so that when\n    b is divided by it, the result comes out positive).\n    \"\"\"\n    while b:\n        a, b = b, a % b\n    return a\n\n\n# solution is here\n# sys.setrecursionlimit(10 ** 9)\nmultitest = False\ndef solve():\n    n = N()\n    ans = 0\n    have = 0\n    last = 1\n    while have + last <= n:\n        have += last\n        last += 1\n        ans += 1\n    print(ans)\n\n\n# dp = [[0] * n for _ in range(n)]\n# path = [[0] * n for _ in range(n)]\n# for i in range(n):\n#     dp[i][i] = a[i]\n# # dp[i][j] = min(dp[i][k] + dp[k + 1][j])\n# for ln in range(1, n):\n#     for i in range(n - ln):\n#         left = i\n#         right = i + ln\n#         dp[left][right] = 2 ** 65\n#         for k in range(i, right):\n#             left_sum = dp[left][k]\n#             right_sum = dp[k + 1][right]\n#             if left_sum + right_sum <= dp[left][right]:\n#                 dp[left][right] = left_sum + right_sum\n#                 path[left][right] = k\n# print(dp[0][n - 1])\n\ndef exceptSolve():\n    try:\n        solve()\n    except Exception as e:\n        print(e)\n        raise\n\n\nif multitest:\n    presolve()\n    t = N()\n    while t != 0:\n        exceptSolve()\n        t -= 1\nelse:\n    exceptSolve()\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\nprint(int(n / 3 + 1))\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nl = 0\nr = 1000000000000\nwhile (r - l > 1):\n    m = (r + l) // 2\n    if ((1 + m) * m / 2 > n):\n        r = m\n    else:\n        l = m\nprint(l)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nl = 0\nr = 10000000000\nwhile (r - l > 1):\n    m = (r + l) // 2\n    if ((1 + m) * m / 2 > n):\n        r = m\n    else:\n        l = m\nprint(l)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nif n == 0:\r\n    print(0)\r\n\r\nL = 1\r\nR = 10**19\r\nwhile R - L > 1:\r\n    M = (L + R) // 2\r\n    if ((M * (M + 1)) // 2 > n):\r\n        R = M\r\n    else:\r\n        L = M\r\n\r\nprint(L)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nif n == 0:\r\n    print(0)\r\n\r\nL = 1\r\nR = 1e19\r\nwhile R - L > 1:\r\n    M = (L + R) // 2\r\n    if ((M * (M + 1)) // 2 > n):\r\n        R = M\r\n    else:\r\n        L = M\r\n\r\nprint(L)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nif n == 0:\r\n    print(0)\r\n\r\nL = 1\r\nR = n + 1\r\nwhile R - L > 1:\r\n    M = (L + R) // 2\r\n    if ((M * (M + 1)) // 2 > n):\r\n        R = M\r\n    else:\r\n        L = M\r\n\r\nprint(L)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nif n == 0:\r\n    print(0)\r\n\r\nL = 1\r\nR = n\r\nwhile R - L > 1:\r\n    M = (L + R) // 2\r\n    if ((M * (M + 1)) // 2 > n):\r\n        R = M\r\n    else:\r\n        L = M\r\n\r\nprint(L)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nif n == 0:\r\n    print(0)\r\n\r\nL = 1\r\nR = 100000\r\nwhile R - L > 1:\r\n    M = (L + R) // 2\r\n    if ((M * (M + 1)) // 2 > n):\r\n        R = M\r\n    else:\r\n        L = M\r\n\r\nprint(L)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nif n == 0:\n    print(0)\n\nL = 1\nR = 100000\nwhile R - L > 1:\n    M = (L + R) // 2\n    if ((M * (M + 1)) > n):\n        R = M\n    else:\n        L = M\n\nprint(L)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <bits/stdc++.h>\n#define fcc ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);\n#define sqr(a) (a) * (a)\n#define all(x) x.begin(), x.end()\n#define rall(x) x.rebgin(), x.rend()\n#define pb push_back\n#define mp make_pair\n#define int long long\n#define ff first\n#define ss second\nusing namespace std;\ntypedef long double ld;\ntypedef pair<int,int> pii;\ntypedef vector<int> vi;\ntypedef set<int> si;\nint a[500009], b[500009];\nvoid solve() {\n    int n;\n    cin >> n;\n    int ans=0;\n    for(int i = 1; i*(i+1)<=n*2; i++){\n        ans++;\n    }\n    cout << ans;\n}\nsigned main() {\n   fcc;\n   int t = 1;\n   // cin >> t;\n   while (t--) {\n   solve();\n   cout << endl;\n   }\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\r\n#include <stdio.h>\r\n#include <cstdlib>\r\n#include <cstdint>\r\n#include <cmath>\r\n#include <string>\r\n#include <vector>\r\n#include <map>\r\n#include <set>\r\n#include <algorithm>\r\n#include <fstream>\r\n#include <iomanip>\r\n#include <utility>\r\n#include <cstring>\r\n#include <queue>\r\n//#include <tuple>\r\n//#include <random>\r\n//#include <time.h>\r\n//#include <climits>\r\n//#include <bitset>\r\n\r\n#define ll long long\r\n\r\nusing namespace std;\r\n\r\nconst ll MOD1 = (ll)(1e9 + 7);\r\nconst ll MOD2 = (ll)(1e9 + 9);\r\nconst ll INF = MOD1 * (ll)1e9;\r\nconst long double pi = acos(-1LL);\r\n\r\nint main(void)\r\n{\r\n\tios_base::sync_with_stdio(false);\r\n\tcin.tie(nullptr);\r\n\tcout.tie(nullptr);\r\n    \r\n\tlong double n; cin >> n;\r\n\t\r\n\tlong double ans = (-1.0 + sqrt(1.0 + 8.0 * n)) / 2.0;\r\n\t\r\n\tcout << floor(ans);\r\n\t\r\n\treturn 0;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\r\n#include <stdio.h>\r\n#include <cstdlib>\r\n#include <cstdint>\r\n#include <cmath>\r\n#include <string>\r\n#include <vector>\r\n#include <map>\r\n#include <set>\r\n#include <algorithm>\r\n#include <fstream>\r\n#include <iomanip>\r\n#include <utility>\r\n#include <cstring>\r\n#include <queue>\r\n//#include <tuple>\r\n//#include <random>\r\n//#include <time.h>\r\n//#include <climits>\r\n//#include <bitset>\r\n\r\n#define ll long long\r\n\r\nusing namespace std;\r\n\r\nconst ll MOD1 = (ll)(1e9 + 7);\r\nconst ll MOD2 = (ll)(1e9 + 9);\r\nconst ll INF = MOD1 * (ll)1e9;\r\nconst long double pi = acos(-1LL);\r\n\r\nint main(void)\r\n{\r\n\tios_base::sync_with_stdio(false);\r\n\tcin.tie(nullptr);\r\n\tcout.tie(nullptr);\r\n    \r\n\tlong double n; cin >> n;\r\n\t\r\n\tlong double ans = (-1.0 + sqrt(1.0 + 8.0 * n)) / 2.0;\r\n\t\r\n\tcout << floor(ans);\r\n\t\r\n\treturn 0;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\r\n#include <stdio.h>\r\n#include <cstdlib>\r\n#include <cstdint>\r\n#include <cmath>\r\n#include <string>\r\n#include <vector>\r\n#include <map>\r\n#include <set>\r\n#include <algorithm>\r\n#include <fstream>\r\n#include <iomanip>\r\n#include <utility>\r\n#include <cstring>\r\n#include <queue>\r\n//#include <tuple>\r\n//#include <random>\r\n//#include <time.h>\r\n//#include <climits>\r\n//#include <bitset>\r\n\r\n#define ll long long\r\n\r\nusing namespace std;\r\n\r\nconst ll MOD1 = (ll)(1e9 + 7);\r\nconst ll MOD2 = (ll)(1e9 + 9);\r\nconst ll INF = MOD1 * (ll)1e9;\r\nconst long double pi = acos(-1LL);\r\n\r\nint main(void)\r\n{\r\n\tios_base::sync_with_stdio(false);\r\n\tcin.tie(nullptr);\r\n\tcout.tie(nullptr);\r\n    \r\n\tlong double n; cin >> n;\r\n\t\r\n\tlong double ans = (-1.0 + sqrt(1.0 + 8.0 * n)) / 2.0;\r\n\t\r\n\tcout << floor(ans);\r\n\t\r\n\treturn 0;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\r\n#include <stdio.h>\r\n#include <cstdlib>\r\n#include <cstdint>\r\n#include <cmath>\r\n#include <string>\r\n#include <vector>\r\n#include <map>\r\n#include <set>\r\n#include <algorithm>\r\n#include <fstream>\r\n#include <iomanip>\r\n#include <utility>\r\n#include <cstring>\r\n#include <queue>\r\n//#include <tuple>\r\n//#include <random>\r\n//#include <time.h>\r\n//#include <climits>\r\n//#include <bitset>\r\n\r\n#define ll long long\r\n\r\nusing namespace std;\r\n\r\nconst ll MOD1 = (ll)(1e9 + 7);\r\nconst ll MOD2 = (ll)(1e9 + 9);\r\nconst ll INF = MOD1 * (ll)1e9;\r\nconst long double pi = acos(-1LL);\r\n\r\nint main(void)\r\n{\r\n\tios_base::sync_with_stdio(false);\r\n\tcin.tie(nullptr);\r\n\tcout.tie(nullptr);\r\n    \r\n\tlong long double n; cin >> n;\r\n\t\r\n\tlong long double ans = (-1.0 + sqrt(1.0 + 8.0 * n)) / 2.0;\r\n\t\r\n\tcout << floor(ans);\r\n\t\r\n\treturn 0;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "from math import *\r\nn = int(input())\r\nprint(floor((-1 + sqrt(1 + 8 * n)) / 2))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\n\r\nn = int(input())\r\n\r\nprint(math.floor((-1 + math.sqrt(1 + 8*n)) / 2))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\n\nx = int(input())\nans = math.floor(math.sqrt(x))\nwhile ans * (ans + 1) > 2 * x:\n    ans -= 1\nwhile (ans + 1) * (ans + 2) <= 2 * x:\n    ans += 1\nprint(ans)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "from math import *\r\nn = int(input())\r\nl = 0\r\nr = 1+8*n\r\nwhile r - l > 1:\r\n    m = (r + l) // 2\r\n    if m * m <= 1 + 8 * n:\r\n        l = m\r\n    else:\r\n        r = m\r\nprint((l+1)//2 - 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import *\r\nn = int(input())\r\nprint(floor((1 + sqrt(1 + 8 * n))/2) - 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\na = int(input())\nprint(int((math.isqrt(9 * a) - 1) // 2))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\nl=1\nr=1e19\nr = int(r)\nl = int(l)\nwhile l < r:\n    mid=(l+r)//2\n    if (mid*(mid+1))//2<n: l=mid + 1\n    else: r=mid \n\nprint(l)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "# Online Python compiler (interpreter) to run Python online.\n# Write Python 3 code in this online editor and run it.\nn = int(input());\nl = 1\nr = 1e19\nwhile l + 1 < r:\n    mid = int((l + r) / 2)\n    if int(mid * (mid + 1) / 2) <= n:\n        l = mid\n    else:\n        r = mid\nif int(r * (r + 1) / 2) <= n:\n    print(r)\nelse:\n    print(l)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "# Online Python compiler (interpreter) to run Python online.\n# Write Python 3 code in this online editor and run it.\nn = int(input());\ni = 1\nwhile i * (i + 1) / 2 <= n:\n    i += 1\nprint(i - 1);",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "#include <bits/stdc++.h>\n//#pragma GCC optimize(\"O3,unroll-loops\")\n//#pragma GCC target(\"avx2,bmi,bmi2,lzcnt,popcnt\")\nusing namespace std;\n#define int long long\n#define rep(i,s,e) for(int i=s;i<e;i++)\n#define ll long long\n\nsigned main() {\n    ios::ios_base::sync_with_stdio(false);\n    cin.tie(0);\n\n    int n;\n    cin>>n;\n\n    int x= (int)sqrt(n);\n\n    int ans = 0;\n    for(int i= max(0ll,x-1000);i<=x+1000;i++){\n        if(i*(i+1)/2<=n){\n            ans= max(ans,i);\n        }\n    }\n\n\n    cout<<ans;\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nrow = 0\r\ndelt = 1\r\nwhile n > 0:\r\n    row += 1\r\n    n -= delt\r\n    delt += 1\r\nif n < 0:\r\n    row -= 1\r\nprint(row)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "def f(x):\n    return (x + 1) * x // 2\n\n\nn = int(input())\nlo, hi = 0, 1e10\nwhile hi - lo > 1:\n    mid = (lo + hi) // 2\n    if f(mid) > n:\n        hi = mid\n    else:\n        lo = mid\nprint(lo)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def f(x):\n    (x + 1) * x // 2\n\n\nn = int(input())\nlo, hi = 0, 1e10\nwhile hi - lo > 1:\n    mid = (lo + hi) // 2\n    if f(mid) > n:\n        hi = mid\n    else:\n        lo = mid\nprint(lo)\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "cans = int(input())\r\ncounter = 0\r\nwhile cans - counter > counter:\r\n    cans -= counter\r\n    counter += 1\r\n    \r\nprint(counter)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "from math import sqrt\r\nprint(int((sqrt(1+int(input())*8)-1)/2))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt\r\nprint(int((sqrt(1+int(input())*8)-1)//2))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\n\r\nx = int(input())\r\n\r\nl = 0\r\nr = 1e20\r\n\r\nwhile l < r - 1:\r\n    m = (l + r) // 2\r\n    if m * m + m - 2 * x <= 0:\r\n        l = m\r\n    else:\r\n        r = m\r\n\r\nprint(int(l))\r\n        \r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\n\r\nx = int(input())\r\n\r\nl = 0\r\nr = 1e20\r\n\r\nwhile l < r - 1:\r\n    m = (l + r) // 2\r\n    if m * m + m - 2 * x <= 0:\r\n        l = m\r\n    else:\r\n        r = m\r\n\r\nprint(l)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\n\r\nn = int(input())\r\nd = 1 + 8 * n\r\nEPS = 1e-12\r\n\r\nresult = (-1 + math.sqrt(d)) / 2\r\nif math.floor(result) != math.floor(result + EPS):\r\n    result += EPS\r\nprint(math.floor(result))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\n\r\nn = int(input())\r\nd = 1 + 8 * n\r\nprint(math.floor((-1 + math.sqrt(d)) / 2))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\n\r\nn = int(input())\r\nd = 1 + 8 * n\r\nprint((-1 + round(math.sqrt(d))) // 2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\n\r\nn = int(input())\r\nd = 1 + 8 * n\r\nprint((-1 + math.floor(math.sqrt(d + 1))) // 2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\n\r\nn = int(input())\r\nd = 1 + 8 * n\r\nprint((-1 + math.floor(math.sqrt(d))) // 2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int (input ())\nl = 0\nr = 1e19 + 1\nwhile l < r:\n    mid = (l + r) // 2\n    if ((mid * (mid + 1)) // 2 < a):\n        l = mid + 1\n    else:\n        r = mid\n\nl = int(l)\nif (l * (l + 1)) // 2 > a:\n    l = l - 1\nprint (l)\n    ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int (input ())\nl = 0\nr = 1e19\nwhile l < r:\n    mid = (l + r) // 2\n    if ((mid * (mid + 1)) // 2 < a):\n        l = mid + 1\n    else:\n        r = mid\n\nl = int(l)\n\nprint (l)\n    ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int (input ())\nl = 0\nr = 1e19\nwhile l < r:\n    mid = (l + r) // 2\n    if ((mid * (mid + 1)) // 2 < a):\n        l = mid + 1\n    else:\n        r = mid\n\nprint (l)\n    ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int (input ())\nstn = 1\nkol = 0\nwhile a - stn >= 0:\n    a = a - stn\n    stn = stn + 1\n    kol = kol + 1\n\nprint (kol)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\n\nl = -1\nr = n + 1\nwhile r - l > 1:\n    mid = (r + l) // 2\n\n\n    temp = (0 + mid + 1)* (mid) / 2\n    if temp >= n:\n        r = mid\n    else:\n        l = mid\nif (0 + r + 1)* (r) / 2 <= n:\n    print(r)\nelse:\n    print(l)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include<bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#define int unsigned long long\r\n#define x first\r\n#define y second\r\n#define endl \"\\n\"\r\n\r\nvoid fast()\r\n{\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0); cout.tie(0);\r\n}\r\n\r\nint32_t main()\r\n{\r\n    fast();\r\n    int n;\r\n    cin >> n;\r\n    if(!n)\r\n        cout << 0;\r\n    else if(n == 1)\r\n        cout << 1;\r\n    else\r\n    {\r\n        int l = 1, r = n;\r\n        while(l < r)\r\n        {\r\n            int m = (l + r) / 2;\r\n            int cnt;\r\n            if(m % 2 == 0)\r\n                cnt = m / 2 * (m + 1);\r\n            else cnt = (m + 1) / 2 * m;\r\n            if(cnt == n)\r\n            {\r\n                cout << m;\r\n                goto f1;\r\n            }\r\n            else if(cnt > n)\r\n                r = m;\r\n            else l = m + 1;\r\n        }\r\n        cout << l - 1;\r\n        f1: ;\r\n    }\r\n    return 0;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include<bits/stdc++.h>\n\nusing namespace std;\n\n#define int long long\n#define x first\n#define y second\n#define endl \"\\n\"\n\nvoid fast()\n{\n    ios_base::sync_with_stdio(0);\n    cin.tie(0); cout.tie(0);\n}\n\nint32_t main()\n{\n    fast();\n    int n;\n    cin >> n;\n    if(!n)\n        cout << 0;\n    else\n    {\n        int l = 1, r = n;\n        while(l < r)\n        {\n            int m = (l + r) / 2;\n            int cnt;\n            if(m % 2 == 0)\n                cnt = m / 2 * (m + 1);\n            else cnt = (m + 1) / 2 * m;\n            if(cnt == n)\n            {\n                cout << m;\n                return 0;\n            }\n            else if(cnt > n)\n                r = m - 1;\n            else l = m + 1;\n        }\n        cout << l;\n    }\n    return 0;\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "n=int(input())\ncount=0\nfor i in range((n//2)+1,0):\n    count+=1\nprint(count)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <bits/stdc++.h>\n#include <ext/pb_ds/assoc_container.hpp>\n#include <ext/pb_ds/tree_policy.hpp>\n\nusing namespace std;\nusing namespace __gnu_pbds;\n\n#define f first\n#define s second\n#define pb push_back\n#define ll long long\n#define int long long\n#define ld long double\n#define ull unsigned long long\n#define sz(x) (int)x.size()\n#define all(x) x.begin(), x.end()\n#define rall(x) x.rbegin(), x.rend()\n#define vec vector\n\nusing pii = pair<int, int>;\nusing pll = pair<ll, ll>;\nusing vi = vector<int>;\nusing vll = vector<ll>;\n\ntypedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> oset;\n\nconst int mod = 998244353;\nconst ll inf = 5e18;\nconst int K = 500;\nconst int N = 5e5 + 10;\n\nint32_t main()\n{\n    ios_base::sync_with_stdio(false);\n    cin.tie(0);\n    long double n;\n    cin >> n;\n    int l = 1, r = 1e10;\n    for (int it = 0; it < 100; it++)\n    {\n        int m = (l + r + 1) / 2;\n        if (m * (m + 1) / 2 <= n)\n            l = m;\n        else\n            r = m - 1;\n    }\n    cout << l;\n    return 0;\n}\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "a=int(input())\nprint((a+3)//3)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import *\na = int(input())\nd = 1 + 8 * a\nx = (sqrt(d) - 1) // 2\nprint(int(x))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import *\na = int(input())\nd = 1 + 8 * a\nx = (int(sqrt(d)) - 1) // 2\nprint(x)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def f(x):\r\n    k = 1\r\n    while x-k >= 0:\r\n        x -= k\r\n        k += 1\r\n    return k-1\r\nn = int(input())\r\nif n==1:\r\n    print(1)\r\nelse:\r\n    print(f(n))",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "def f(x):\r\n    k = 1\r\n    while x-k >= 0:\r\n        x -= k\r\n        k += 1\r\n    return k-1\r\nn = int(input())\r\nif n==1:\r\n    print(1)\r\n    raise SystemExit\r\nt = f(n)\r\nif n % 2 == 0:\r\n    print(t)\r\nelse:\r\n    print(t)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    long long n, k=1, h=0;\r\n    cin >> n;\r\n    while(n-k>=0)\r\n    {\r\n        n-=k;\r\n        k++;\r\n        h++;\r\n    }\r\n    cout << h;\r\n}\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\nleft, right = 0, 1000000000\nwhile (right - left > 1):\n    mid = (left + right) // 2\n    if (mid * (mid + 1) // 2 <= n):\n        left = mid\n    else:\n        right = mid\nprint(left)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nleft, right = 1000000000\nwhile (right - left > 1):\n    mid = (left + right) // 2\n    if (mid * (mid + 1) // 2 <= n):\n        left = mid\n    else:\n        right = mid\nprint(left)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\nl = int(0)\nr = int(n+1)\nwhile(r - l > 1):\n    m = int((r+l)/2)\n    if((m+1)*m/2<=n):\n        l = m\n    else:\n        r=m\nprint(int(l))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\nl = 0\nr = n+1\nwhile(r - l > 1):\n    m = int((r+l)/2)\n    if((m+1)*m/2<=n):\n        l = m\n    else:\n        r=m\nprint(int(l))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\nl = 0\nr = n\nwhile(r - l > 1):\n    m = (r+l)/2\n    if((m+1)*m/2<=n):\n        l = m\n    else:\n        r=m\nprint(int(l))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\nl = 0\nr = n\nwhile(r - l > 1):\n    m = (r+l)/2\n    if((m+1)*m/2<=n):\n        l = m\n    else:\n        r=m\nprint(int(l))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import ceil\nprint(ceil(int(input()) ** .5))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(int(int(input()) ** .5))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt\n\nn = int(input())\nif n == 0:\n    print(0)\n    exit(0)\nwhile n > 0:\n    d = int(sqrt(1 + 8 * n))\n    if d * d == 1 + 8 * n:\n        x2 = -1 + d\n        if x2 > 0 and x2 % 2 == 0:\n            print(x2 // 2)\n            exit(0)\n    n -= 1\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\n\nl = 0\nr = n\nwhile r - l > 1:\n    m = (l + r) // 2\n    if (m * (m + 1)) // 2 > n:\n        r = m\n    else:\n        l = m\n\nprint(l)\n\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nif n == 1:\n    print(1)\nelse:\n    print(n // 2)\n\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nprint(n // 2)\n\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt\r\nfrom math import floor\r\n\r\nn = int(input())\r\nprint(floor(1.0 * (-1 + floor(sqrt(1 + 8 * n))) // 2))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt\r\nfrom math import floor\r\n\r\nn = int(input())\r\nprint(floor(1.0 * (-1 + sqrt(1 + 8 * n)) // 2))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt\r\n\r\nn = int(input())\r\nprint(math.floor(1.0 * (-1 + math.sqrt(1 + 8 * n)) // 2))",
                "verdict": "Runtime Error"
            },
            {
                "code": "import math\r\nk = int(input())\r\nprint(math.floor((math.sqrt(8*k+1)-1)/2))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\nk = int(input())\r\nprint(math.ceil((math.sqrt(8*k+1)-1)/2))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\nk = int(input())\nprint(math.ceil((mqth.sqrt(8*k+1)-1)/2))",
                "verdict": "Runtime Error"
            },
            {
                "code": "from math import floor\n\n# 1 + 2 + 3 + ... + n = n (n + 1) / 2\n\nnumber = int(input())\nnumber = int(-1 + (1 + 8 * number) ** .5) // 2\nprint(number)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import floor\n\n# 1 + 2 + 3 + ... + n = n (n + 1) / 2\n\nnumber = int(input())\nnumber = (-1 + (1 + 8 * number) ** .5) // 2\nprint(number)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import floor\n\n# 1 + 2 + 3 + ... + n = n (n + 1) / 2\n\nnumber = int(input())\nnumber = (-1 + (1 + 8 * number) ** .5) / 2\nprint(floor(number))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nk = 0\nl, r = 0, n\nwhile r - l > 1:\n    m = (l + r) // 2\n    if m * (m + 1) // 2 <= n:\n        l = m\n    else:\n        r = m\nprint(l)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nk = 0\nwhile (k + 1) * (k + 2) // 2 <= n:\n    k += 1\nprint(k)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\nl = 0, r = 1e12\nwhile r - l > 1:\n    m = (r + l) / 2\n    if (m * (m + 1)) / 2 >= n:\n        l = m\n    else:\n        r = m\nprint(l)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nfor i in range(1000000):\n    if i * (i + 1) // 2 > n:\n        print(i - 1)\n        break",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nfor i in range(1e6):\n    if i * (i + 1) // 2 > n:\n        print(i - 1)\n        break",
                "verdict": "Runtime Error"
            },
            {
                "code": "a = int(input())\nprint((sqrt((8*a)+1)-1)/2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\nprint((sqrt(8*n+1)-1)/2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\ns = int(input())\nprint(int((-1 + round(math.sqrt(8*s + 1), 10))//2))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nk=1\r\np=0\r\nwhile n-k>=0:\r\n    p=p+1\r\n    n=n-k\r\n    k=k+1\r\nprint(p)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\nl = -1\nr =1e19\nwhile (r > l+1):\n    m = (((l+r))//2)\n    s = (((m*(m+1)))//2)\n    if s> n:\n        r = m\n    else:\n        l = m\nprint(int(l))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nl = -1\nr =1e19\nwhile (r > l+1):\n    m = (l+r)//2;\n    s = (m*(m+1))//2\n    if s> n:\n        r = m\n    else:\n        l = m\nprint(int(l))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nl = -1\nr =1e10\nwhile (r > l+1):\n    m = (l+r)//2;\n    s = (m*(m+1))//2\n    if s> n:\n        r = m\n    else:\n        l = m\nprint(int(l))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nl = -1\nr =1e11\nwhile (r > l+1):\n    m = (l+r)//2;\n    s = (m*(m+1))//2\n    if s> n:\n        r = m\n    else:\n        l = m\nprint(int(l))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nl = 0\r\nr = n \r\nwhile l + 1 != r:\r\n    m = (l + r) // 2\r\n    if m * (m + 1) // 2 < n:\r\n        l = m\r\n    else:\r\n        r = m\r\nprint(r)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def AS(n):\r\n    S = (n+1) * n / 2\r\n    if S > s:\r\n        return -1\r\n    return n\r\n\r\n\r\ns = int(input())\r\n\r\nn = int(((1+8*s)**0.5-1) / 2)\r\nprint(max(AS(n-1), AS(n), AS(n+1)))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "s = int(input())\r\n\r\nn = int(((1+8*s)**0.5-1) / 2)\r\nprint(n)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "N = int(input())\r\nprint(int(((2 * N + 0.25) ** 0.5 - 0.5) // 1))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "N = int(input())\r\nprint(((2 * N + 0.25) ** 0.5 - 0.5) // 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "N = int(input())\nprint((2 * n + 0.25) ** 0.5 - 0.5 % 1)",
                "verdict": "Runtime Error"
            },
            {
                "code": "N = int(input())\nprint((2 * n + 0.25) ** 0.5 - 0.5 % 1 == 0)",
                "verdict": "Runtime Error"
            },
            {
                "code": "print((2 * n + 0.25) ** 0.5 - 0.5 % 1 == 0)",
                "verdict": "Runtime Error"
            },
            {
                "code": "import math\r\n\r\nn = float(input())\r\ns = 0\r\n\r\nvalue = (2*n + 0.25) ** 0.5 - 0.5\r\n\r\nprint(math.floor(value))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\n\r\nn = float(input())\r\ns = 0\r\n\r\nvalue = (2*n + 0.25) ** 0.5 - 0.5\r\n\r\nprint(math.ceil(value))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = float(input())\r\ns = 0\r\n\r\nprint(int(((2*n + 0.25) ** 0.5 - 0.5) // 1))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\ns = 0\r\n\r\nprint(int(((2*n + 0.25) ** 0.5 - 0.5) // 1))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = float(input())\ns = 0\n\nprint(((2*n + 0.25) ** 0.5 - 0.5) // 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = float(input())\ns = 0\n\nprint(math.ceil(0.5 * ((2*n) ** 0.5 - 1)))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = float(input())\ns = 0\n\nprint(0.5 * ((2*n) ** 0.5 - 1))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = float(input())\ns = 0\n\nwhile n >= 0:\n    s += 1\n    n -= s\n    \nprint(s - 1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\ns = 0\n\nwhile n >= 0:\n    s += 1\n    n -= s\n    \nprint(s - 1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\ns = 0\n\nwhile n >= 0:\n    n -= s\n    s += 1\n    \nprint(s - 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nresult = 0\r\nq = 1\r\ns = 1\r\nk = 0\r\nwhile q <= n:\r\n    q = q + 1\r\n    k = k + 1\r\n    if k == s:\r\n        result += 1\r\n        s = s + 1\r\n        k = 0\r\nprint(result)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\nn_eli = 1\nc = 0\nwhile n >= n_eli :\n    n = n - n_eli\n    n_eli += 1\n    c+= 1\nprint(c)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nb = 1\r\nk = 0\r\nwhile n >= 1:\r\n    n -= b\r\n    b += 1\r\n    k += 1\r\nprint(k)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nans = 0\r\nif n==1:\r\n    print('1')\r\nelse:\r\n    for i in range(1,n):\r\n        n = n-i\r\n        if n>0:\r\n            ans+=1\r\n        else:\r\n            break\r\n    print(ans)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nans = 0\r\nfor i in range(1, n):\r\n    n = n-i\r\n    if n>0:\r\n        ans+=1\r\n    else:\r\n        break\r\n\r\nprint(ans)\r\n    \r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nans = 0\r\nfor i in range(1, n):\r\n    n = n-i\r\n    if n>0:\r\n        ans+=1\r\n    else:\r\n        break\r\n\r\nprint(ans)\r\n    \r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nprint(n // 3 + 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nprint((n - 3 + 1) / 3)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nprint(int(((8 * n + 1) ** 0.5 - 1) / 2))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nprint(int(((8 * n + 1) ** 0.5) / 2))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import sys\r\n\r\na = int(input())\r\nans = 0\r\nfor i in range(1, a + 1):\r\n    if a >= i:\r\n        a -= i\r\n        ans += 1\r\n    else:\r\n        break\r\nprint(ans)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "def check(t, n):\r\n    return (t*(t+1))//2 <= n\r\n\r\nn = int(input())\r\nl = 1\r\nr = n\r\nwhile r-l>1:\r\n    mid = (r+l)//2\r\n    if check(mid, n):\r\n        l = mid\r\n    else:\r\n        r = mid\r\n\r\nprint(l)\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nl = 0\nr = n\nwhile l + 1 < r:\n    mid = (l + r) // 2\n    if mid * (mid + 1) > 2 * n:\n        r = mid\n    else:\n        l = mid\nprint(l)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nl = -1\nr = n\nwhile l + 1 < r:\n    mid = (l + r) // 2\n    if mid * (mid + 1) > 2 * n:\n        r = mid\n    else:\n        l = mid\nprint(r)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\n\nl = 0\nr = n\nwhile l + 1 < r:\n    mid = (l + r) // 2\n    if (mid * (mid + 1)) // 2 > n:\n        r = mid\n    else:\n        l = mid\nprint(r)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\n\nl = 0\nr = n\nwhile l + 1 < r:\n    mid = (l + r) // 2\n    if (mid * (mid + 1)) // 2 >= n:\n        r = mid\n    else:\n        l = mid\nprint(r)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\n\nl = 0\nr = n\nwhile l + 1 < r:\n    mid = (l + r) // 2\n    if mid * (mid + 1) // 2 > n:\n        r = mid\n    else:\n        l = mid\nprint(r)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\n\nl = 0\nr = n\nwhile l + 1 < r:\n    mid = (l + r) // 2\n    if mid * (mid + 1) // 2 > n:\n        r = mid\n    else:\n        l = mid\nprint(l)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nd = int((1 + 8 * n) ** 0.5)\nx = (d - 1) // 2\nprint(x)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\ns = 0\ni = 0\nwhile s <= n:\n    i += 1\n    s += i\nprint(i - 1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\ns = 0\ni = 0\nwhile s < n:\n    i += 1\n    s += i\nprint(i - 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\ns = 0\ni = 0\nwhile s <= n:\n    i += 1\n    s += i\nprint(i)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\ns = 0\ni = 0\nwhile s < n:\n    i += 1\n    s += i\nprint(i)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nx = int((-1 + (1 + 8 * n) ** 0.5) / 2)\nprint(x)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\n\na = int(input())\n\nprint(math.floor(((8 * a + 1)**0.5 - 1)* 0.5))\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\n\na = int(input())\n\nprint(math.floor(((8 * a + 1)**0.5 - 1)* 0.5))\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\n\r\nh = 0  # \u0432\u044b\u0441\u043e\u0442\u0430 \u0451\u043b\u043a\u0438\r\ntotal_bottles = 0  # \u043e\u0431\u0449\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0430\u043d\u043e\u0447\u0435\u043a\r\n\r\nwhile total_bottles <= n:\r\n    h += 1\r\n    total_bottles += h * (h + 1) // 2\r\n\r\nprint(h - 1)  # \u0432\u044b\u0441\u043e\u0442\u0430 \u0451\u043b\u043a\u0438 \u0431\u0443\u0434\u0435\u0442 \u043d\u0430 \u0435\u0434\u0438\u043d\u0438\u0446\u0443 \u043c\u0435\u043d\u044c\u0448\u0435 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0439 \u043d\u0430\u0439\u0434\u0435\u043d\u043d\u043e\u0439 \u0432\u044b\u0441\u043e\u0442\u044b\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nheight = 0\r\nlevel = 0\r\nremaining = n\r\n\r\nwhile remaining >= level + 1:\r\n    height += 1\r\n    remaining -= level + 1\r\n    level += 1\r\n\r\nprint(height)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "#include <stdio.h>\n\nint main() {\n   int x,count=0;\n   scanf(\"%d\",&x);\n   for (int i=1;i<=x;i++){\n       if(x-i>=0) {\n           x = x - i;\n           count++;\n       }\n   }\n   printf(\"%d\",count);\n   return 0;\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <stdio.h>\n\nint main() {\n   int x,count=0;\n   scanf(\"%d\",&x);\n   for (int i=1;i<=x;i++){\n       if(x-i>=0) {\n           x = x - i;\n           count++;\n       }\n   }\n   printf(\"%d\",count);\n    return 0;\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "n=int(input())\r\nprint(int(((n*8+1)**0.5-1)/2))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\n\r\ndiscr = int((1 + 8 * n) ** 0.5)\r\n\r\nprint(int((-1 + discr) // 2))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\n\r\ndiscr = (1 + 8 * n) ** 0.5\r\n\r\nprint(int((-1 + discr) // 2))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\n\r\ndiscr = (1 + 8 * n) ** 0.5\r\n\r\nprint((-1 + discr) // 2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\n\r\ndiscr = int((1 + 8 * n) ** 0.5)\r\n\r\nprint((-1 + discr) // 2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\n\r\ndiscr = int((1 + 8 * n) ** 0.5)\r\n\r\nif discr % 2 == 0:\r\n    discr -= 1\r\n\r\nprint((-1 + discr) // 2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nt = int((1 + 8 * n) ** 0.5)\r\nif t % 2 == 0:\r\n    t -= 1\r\n\r\nprint((-1 + t ** 0.5)) // 2)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nt = int((1 + 8 * n) ** 0.5)\r\nif t % 2 == 0:\r\n    t -= 1\r\n\r\nprint((-1 + int((1 + 8 * n) ** 0.5)) // 2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nprint((-1 + int((1 + 8 * n) ** 0.5)) // 2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <stdio.h>\r\n\r\nint main(int argc, char** argv) {\r\n    long long n;\r\n    scanf(\"%lld\", &n);\r\n\r\n    printf(\"%lld\", n / 2);\r\n    return 0;\r\n}\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "from cmath import sqrt\r\n\r\nn=int(input())\r\n\r\nd=sqrt(1+8*n).real\r\n\r\nprint(int((-1+d)//2))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\n\r\nd=int(pow((1+8*n),0.5))\r\n\r\nprint((-1+d)//2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\n\r\nd=int((1+8*n)**0.5)\r\n\r\nprint((-1+d)//2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def f(m):\n    if ((m+1)*m)//2<=n:\n        return 1\n    return 0\n\n\nn=int(input())\nl=0\nr=10**9\nwhile r-l!=1:\n    m=(r+l)//2\n    if f(m):\n        l=m\n    else:\n        r=m\nprint(l)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def f(m):\n    if ((m-1)*m)//2<=n:\n        return 1\n    return 0\n\n\nn=int(input())\nl=0\nr=10**9\nwhile r-l!=1:\n    m=(r+l)//2\n    if f(m):\n        l=m\n    else:\n        r=m\nprint(l)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\nn = int(input())\r\nd = 1 + 8*n\r\nx1 = (-1 + d**0.5)/2\r\nx2 = (-1 - d**0.5)/2\r\nans = 0\r\nif n>=x1> ans:\r\n    ans = x1\r\nif n>=x2> ans:\r\n    ans = x2\r\np = math.floor(ans)\r\nfor i in range(p-5, p + 6):\r\n    s = i*(i+1)//2\r\n    if s <= n:\r\n        ans = i\r\n    else:\r\n        break\r\nprint(ans)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\nn = int(input())\r\nd = 1 + 8*n\r\nx1 = (-1 + d**0.5)/2\r\nx2 = (-1 - d**0.5)/2\r\nans = 0\r\nif n>=x1> ans:\r\n    ans = x1\r\nif n>=x2> ans:\r\n    ans = x2\r\nprint(math.floor(ans))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nlast = 0\np = 0\nk = 1\nans = 0\nfor i in range(1, 100000000):\n    p = last + k\n    k +=1\n    if p <= n:\n        ans = i\n    else:\n        print(ans)\n        break\n    last = p",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\na = [0]*10000000\na[0] = 0\nk = 1\nans = 0\nfor i in range(1, 10000000):\n    a[i] = a[i-1] + k\n    k +=1\n    if a[i] <= n:\n        ans = i\n    else:\n        print(ans)\n        break",
                "verdict": "Unknown Verdict (7)"
            },
            {
                "code": "n = int(input())\na = [0]*100000\na[0] = 0\nk = 1\nans = 0\nfor i in range(1, 100000):\n    a[i] = a[i-1] + k\n    k +=1\n    if a[i] <= n:\n        ans = i\n    else:\n        print(ans)\n        break",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\na = []*1000\na[0] = 0\nk = 1\nans = 0\nfor i in range(1, 1000):\n    a[i] = a[i-1] + k\n    k +=1\n    if a[i] <= n:\n        ans = i\n    else:\n        print(ans)\n        break",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\n\r\nsum = n\r\ni = 0\r\nwhile sum >= 1:\r\n    i += 1\r\n    sum = sum // 2\r\n\r\nprint(i)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\n\r\nsum = n\r\ni = 0\r\nwhile sum >= 0:\r\n    i += 1\r\n    sum -= i\r\n\r\nprint(i - 1)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\ni = 1\r\nm = 0\r\nh = 0\r\nwhile True:\r\n    m += i\r\n    if n >= m:\r\n        h += 1\r\n    else:\r\n        break\r\n    i += 1\r\nprint(h)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\ni = 1\r\nm = 0\r\nh = 0\r\nwhile n >= m\r\n    m += i\r\n    if n >= m:\r\n        h += 1\r\n    i += 1\r\nprint(h)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\ni = 1\r\nm = 0\r\nh = 0\r\nwhile True:\r\n    m += i\r\n    if n >= m:\r\n        h += 1\r\n    else:\r\n        break\r\n    i += 1\r\nprint(h)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\ni = 1\r\nm = 0\r\nh = 0\r\nwhile True:\r\n    m += i\r\n    if n >= m:\r\n        h += 1\r\n    else:\r\n        break\r\n    i += 1\r\nprint(h)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nif n == 1:\r\n    print(1)\r\nelse:\r\n    \r\n    r = n\r\n    l = 0\r\n    while r - l > 1:\r\n        m = (l + r) // 2\r\n        if m + m*(m - 1)*0.5 > n:\r\n            r = m\r\n        else:\r\n            l = m\r\n\r\n\r\n    print(l)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nr = n\r\nl = 0\r\nwhile r - l > 1:\r\n    m = (l + r) // 2\r\n    if m + m*(m - 1)*0.5 > n:\r\n        r = m\r\n    else:\r\n        l = m\r\n\r\nprint(l)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def q_equation(a, b, c):\r\n    d = b ** 2 - 4 * a * c\r\n    x1 = int((-b + d ** 0.5) / (2 * a))\r\n    x2 = int((-b - d ** 0.5) / (2 * a))\r\n\r\n    return [x1, x2]\r\n\r\n\r\n\r\nn = int(input())\r\nprint(max(q_equation(1, 1, -2 * n)))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def q_equation(a, b, c):\r\n    d = b ** 2 - 4 * a * c\r\n    x1 = int((d ** 0.5) - b) // 2*a\r\n    x2 = int((-(d ** 0.5)) - b) // 2*a\r\n\r\n    return [x1, x2]\r\n\r\n\r\n\r\nn = int(input())\r\nprint(max(q_equation(1, 1, -2 * n)))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def q_equation(a, b, c):\r\n    d = b ** 2 - 4 * a * c\r\n    x1 = int((d ** 0.5) - b) // 2*a\r\n    x2 = int((-(d ** 0.5)) - b) // 2*a\r\n\r\n    return [x1, x2]\r\n\r\n\r\n\r\nn = int(input())\r\nprint(max(q_equation(1, 1, -2 * n)))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def q_equation(a, b, c):\r\n    d = b ** 2 - 4 * a * c\r\n    x1 = int((d ** 0.5) - b) // 2*a\r\n    x2 = int((-(d ** 0.5)) - b) // 2*a\r\n\r\n    return [x1, x2]\r\n\r\n\r\n\r\nn = int(input())\r\nprint(max(q_equation(1, 1, -2 * n)))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def q_equation(a, b, c):\r\n    d = b ** 2 - 4 * a * c\r\n    x1 = int((d ** 0.5 - b) / 2*a)\r\n    x2 = int((-(d ** 0.5) - b) / 2*a)\r\n\r\n    return [x1, x2]\r\n\r\n\r\n\r\nn = int(input())\r\nprint(max(q_equation(1, 1, -2 * n)))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input()) \r\ni = 0 \r\nwhile(n>-1): \r\n    i = i + 1 \r\n    n = n - i \r\nprint(i-1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "a = int(input())\ni = 0\nwhile n > -1:\n    i += 1\n    n -= i\nprint(i - 1)\n    ",
                "verdict": "Runtime Error"
            },
            {
                "code": "banka = int(input())\nlvl = 0\nuse_banks = 1\nwhile banka>0 and banka>=use_banks:\n    banka -= use_banks\n    use_banks += 1\n    lvl += 1\nprint(lvl)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "banka = int(input())\nlvl = 0\nuse_banks = 1\nwhile banka>0 and banka>=use_banks:\n    banka -= use_banks\n    use_banks += 1\n    lvl += 1\nprint(lvl)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "banka = int(input())\nlvl = 0\nuse_banks = 1\nwhile banka>0 and banka>=use_banks:\n    banka -= use_banks\n    use_banks += 1\n    lvl += 1\nprint(lvl)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "from math import*\r\na = int(input())\r\nprint(int(-0.5 + sqrt(0.25 + 2 * a)))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import*\r\na = int(input())\r\nprint(floor(-0.5 + sqrt(0.25 + 2 * a)))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt\r\nnum = int(input())\r\n\r\nprint(int((-1 + sqrt(1 + 8 * num)) / 2))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt\r\nnum = int(input())\r\n\r\nprint(int((-1 + sqrt(1 + 8 * num)) // 2))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt\r\nnum = int(input())\r\n\r\nprint((-1 + sqrt(1 + 8 * num)) // 2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nl = 0\r\nr = n + 1\r\nwhile r - l > 1:\r\n    mid = l + (r - l) > 1\r\n    if (mid + 1) * mid // 2 <= n:\r\n        l = mid\r\n    else:\r\n        r = mid\r\nprint(l)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nl = 0\r\nr = n + 1\r\nwhile r - l > 1:\r\n    mid = l + (r - l) > 1\r\n    if (mid + 1) * mid // 2 <= n:\r\n        l = m\r\n    else:\r\n        r = m\r\nprint(l)\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\n\r\nsigned main(){\r\n    int n;\r\n    cin >> n;\r\n    int l = 0, r = n+1, mid;\r\n    while(r - l > 1){\r\n        mid = l + (r - l) / 2;\r\n        if((1+mid)*mid / 2 <= n){\r\n            l = mid;\r\n        } else {\r\n            r = mid;\r\n        }\r\n    }\r\n    cout << l << endl;\r\n\r\n}\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\nint main(){\r\n    int a, b = 0, h = 0;\r\n    cin >> a;\r\n    for(int i = 1; i< 1e9; i++){\r\n        b += i;\r\n        if(b > a){\r\n            cout << h << endl;\r\n            break;\r\n        }\r\n        h += 1;\r\n    }\r\n}\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define int long long\r\nsigned main(){\r\n    int a, b = 0, h = 0;\r\n    cin >> a;\r\n    for(int i = 1; i< 1e9; i++){\r\n        b += i;\r\n        if(b > a){\r\n            cout << h << endl;\r\n            break;\r\n        }\r\n        h += 1;\r\n    }\r\n}\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "from math import *\nnum = int(input())\nprint(int((-1 + sqrt(1 + 8 * num)) // 2)) ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "num = int(input())\nprint(int((-1 + sqrt(1 + 8 * num)) // 2)) ",
                "verdict": "Runtime Error"
            },
            {
                "code": " print(int((-1 + sqrt(1 + 8 * num)) // 2)) ",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\nFlag = True\na = 1\nb = 2\nif n != 0:\n    c = 1\nelse:\n    c = 0\nwhile Flag == True:\n    if n >= a + b:\n        a += b\n        b += 1\n        c += 1\n    else:\n        print(c)\n        break",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\nFlag = True\na = 1\nb = 2\nc = 1\nwhile Flag == True:\n    if n >= a + b:\n        a += b\n        b += 1\n        c += 1\n    else:\n        print(c)\n        break",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nc = 0\na = 1\nwhile n > 0:\n    if n - a >= 0:\n        n -= a\n        a += 1\n        c += 1\n    else:\n        break\nprint(c)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\nc = 0\na = 1\nwhile n > 0:\n    if n - a < 0:\n        break\n    else:\n        n -= a\n        a += 1\n        c += 1\nprint(c)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\ns1 = 1\r\ns2 = 1\r\nc = 1\r\nif n == 1 or n == 2:\r\n    n -= 1\r\n    print(1)\r\nelif n == 0:\r\n    print(0)\r\nif n > s2:\r\n    n -= 1\r\n    while n > s2:\r\n        s2 = s1 + 1\r\n        n = n - s2\r\n        if s2 < n:\r\n            s1 = s2\r\n        c += 1\r\n    print(c)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\ns1 = 1\r\ns2 = 2\r\nc = 1\r\nif n == 1 or n == 2:\r\n    n -= 1\r\n    print(1)\r\nelif n == 0:\r\n    print(0)\r\nif n >= s2:\r\n    n -= 1\r\n    while n > s2:\r\n        s2 = s1 + 1\r\n        n = n - s2\r\n        if s2 < n:\r\n            s1 = s2\r\n        c += 1\r\n    print(c)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\ns1 = 1\r\ns2 = 2\r\nc = 1\r\nif n == 1 or n == 2:\r\n    n -= 1\r\n    print(1)\r\nelif n == 0:\r\n    print(0)\r\nif n > s2:\r\n    n -= 1\r\n    while n >= s2:\r\n        s2 = s1 + 1\r\n        n = n - s2\r\n        if s2 < n:\r\n            s1 = s2\r\n        c += 1\r\n    print(c)\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\ns1 = 1\r\ns2 = 2\r\nc = 1\r\nif n == 1 or n == 2:\r\n    n -= 1\r\n    print(1)\r\nelif n == 0:\r\n    print(0)\r\nif n > s2:\r\n    n -= 1\r\n    while n > s2:\r\n        s2 = s1 + 1\r\n        n = n - s2\r\n        if s2 < n:\r\n            s1 = s2\r\n        c += 1\r\n    print(c)\r\n    \r\n    \r\n    \r\n    \r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\ns1 = 1\r\ns2 = 0\r\nc = 1\r\nif n == 1:\r\n    n -= 1\r\n    print(1)\r\nelif n == 0:\r\n    print(0)\r\nif n > s2:\r\n    n -= 1\r\n    while n > s2:\r\n        s2 = s1 + 1\r\n        n = n - s2\r\n        if s2 < n:\r\n            s1 = s2\r\n        c += 1\r\n    print(c)\r\n\r\n    \r\n    \r\n    \r\n    \r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\ns1 = 1\r\ns2 = 0\r\nc = 1\r\nif n == 1:\r\n    n -= 1\r\n    print(1)\r\nelif n == 0:\r\n    print(0)\r\nif n > s2:\r\n    n -= 1\r\n    while n > s2:\r\n        s2 = s1 + 1\r\n        n = n - s2\r\n        if s2 < n:\r\n            s1 = s2\r\n        c += 1\r\nprint(c)\r\n\r\n    \r\n    \r\n    \r\n    \r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def summa(n):\r\n    return n * (n+1) // 2\r\n\r\nx = int(input())\r\nn = int((x ** 0.5) // 1)\r\nwhile summa(n) <= x:\r\n    n += 1\r\n\r\nprint(n-1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "a = int(input())\nprint(int(((1 + a * 8) ** (1 / 2) - 1) / 2))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\nprint(int(((1 + int(a) * 8) ** (1 / 2) - 1) / 2))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input()\nprint(int(((1 + int(a) * 8) ** (1 / 2) - 1) / 2))",
                "verdict": "Runtime Error"
            },
            {
                "code": "print(int(((1 + int(input()) * 8) ** (1 / 2) - 1) / 2))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "https://sort-me.org/contest/34?code=OcguLXkK2yxg9gV30H4p",
                "verdict": "Runtime Error"
            },
            {
                "code": "a = int(input())\n\n\nif a == 1:\n\tprint(1)\nif a == 2:\n\tprint(1)\nif a == 3:\n\tprint(2)\nif a == 4:\n\tprint(2)\nif a == 5:\n\tprint(2)\nif a == 6:\n\tprint(3)\nif a == 7:\n\tprint(3)\nif a == 8:\n\tprint(3)\nif a == 9:\n\tprint(3)\nif a == 10:\n\tprint(4)\nif a == 11:\n\tprint(4)\nif a == 12:\n\tprint(4)\nif a == 13:\n\tprint(4)\nif a == 14:\n\tprint(4)\nif a == 15:\n\tprint(5)\nif a == 16:\n\tprint(5)\nif a == 17:\n\tprint(5)\nif a == 18:\n\tprint(6)\nif a == 19:\n\tprint(8)\nif a == 20:\n\tprint(5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\n\n\nif a == 1:\n\tprint(1)\nif a == 2:\n\tprint(1)\nif a == 3:\n\tprint(2)\nif a == 4:\n\tprint(2)\nif a == 5:\n\tprint(2)\nif a == 6:\n\tprint(3)\nif a == 7:\n\tprint(3)\nif a == 8:\n\tprint(3)\nif a == 9:\n\tprint(3)\nif a == 10:\n\tprint(4)\nif a == 11:\n\tprint(4)\nif a == 12:\n\tprint(4)\nif a == 13:\n\tprint(4)\nif a == 14:\n\tprint(4)\nif a == 15:\n\tprint(5)\nif a == 16:\n\tprint(5)\nif a == 17:\n\tprint(5)\nif a == 18:\n\tprint(5)\nif a == 19:\n\tprint(8)\nif a == 20:\n\tprint(5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\n\n\nif a == 1:\n\tprint(1)\nif a == 2:\n\tprint(1)\nif a == 3:\n\tprint(2)\nif a == 4:\n\tprint(2)\nif a == 5:\n\tprint(2)\nif a == 6:\n\tprint(3)\nif a == 7:\n\tprint(3)\nif a == 8:\n\tprint(3)\nif a == 9:\n\tprint(3)\nif a == 10:\n\tprint(4)\nif a == 11:\n\tprint(4)\nif a == 12:\n\tprint(4)\nif a == 13:\n\tprint(4)\nif a == 14:\n\tprint(4)\nif a == 15:\n\tprint(5)\nif a == 16:\n\tprint(5)\nif a == 17:\n\tprint(6)\nif a == 18:\n\tprint(5)\nif a == 19:\n\tprint(8)\nif a == 20:\n\tprint(5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\n\n\nif a == 1:\n\tprint(1)\nif a == 2:\n\tprint(1)\nif a == 3:\n\tprint(2)\nif a == 4:\n\tprint(2)\nif a == 5:\n\tprint(2)\nif a == 6:\n\tprint(3)\nif a == 7:\n\tprint(3)\nif a == 8:\n\tprint(3)\nif a == 9:\n\tprint(3)\nif a == 10:\n\tprint(4)\nif a == 11:\n\tprint(4)\nif a == 12:\n\tprint(4)\nif a == 13:\n\tprint(4)\nif a == 14:\n\tprint(4)\nif a == 15:\n\tprint(5)\nif a == 16:\n\tprint(5)\nif a == 17:\n\tprint(5)\nif a == 18:\n\tprint(8)\nif a == 19:\n\tprint(8)\nif a == 20:\n\tprint(5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\n\n\nif a == 1:\n\tprint(1)\nif a == 2:\n\tprint(1)\nif a == 3:\n\tprint(2)\nif a == 4:\n\tprint(2)\nif a == 5:\n\tprint(2)\nif a == 6:\n\tprint(3)\nif a == 7:\n\tprint(3)\nif a == 8:\n\tprint(3)\nif a == 9:\n\tprint(3)\nif a == 10:\n\tprint(4)\nif a == 11:\n\tprint(4)\nif a == 12:\n\tprint(4)\nif a == 13:\n\tprint(4)\nif a == 14:\n\tprint(4)\nif a == 15:\n\tprint(5)\nif a == 16:\n\tprint(5)\nif a == 17:\n\tprint(5)\nif a == 18:\n\tprint(7)\nif a == 19:\n\tprint(8)\nif a == 20:\n\tprint(5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\n\n\nif a == 1:\n\tprint(1)\nif a == 2:\n\tprint(1)\nif a == 3:\n\tprint(2)\nif a == 4:\n\tprint(2)\nif a == 5:\n\tprint(2)\nif a == 6:\n\tprint(3)\nif a == 7:\n\tprint(3)\nif a == 8:\n\tprint(3)\nif a == 9:\n\tprint(3)\nif a == 10:\n\tprint(4)\nif a == 11:\n\tprint(4)\nif a == 12:\n\tprint(4)\nif a == 13:\n\tprint(4)\nif a == 14:\n\tprint(4)\nif a == 15:\n\tprint(5)\nif a == 16:\n\tprint(5)\nif a == 17:\n\tprint(5)\nif a == 18:\n\tprint(2)\nif a == 19:\n\tprint(8)\nif a == 20:\n\tprint(5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\n\n\nif a == 1:\n\tprint(1)\nif a == 2:\n\tprint(1)\nif a == 3:\n\tprint(2)\nif a == 4:\n\tprint(2)\nif a == 5:\n\tprint(2)\nif a == 6:\n\tprint(3)\nif a == 7:\n\tprint(3)\nif a == 8:\n\tprint(3)\nif a == 9:\n\tprint(3)\nif a == 10:\n\tprint(4)\nif a == 11:\n\tprint(4)\nif a == 12:\n\tprint(4)\nif a == 13:\n\tprint(4)\nif a == 14:\n\tprint(4)\nif a == 15:\n\tprint(5)\nif a == 16:\n\tprint(5)\nif a == 17:\n\tprint(5)\nif a == 18:\n\tprint(3)\nif a == 19:\n\tprint(8)\nif a == 20:\n\tprint(5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\n\n\nif a == 1:\n\tprint(1)\nif a == 2:\n\tprint(1)\nif a == 3:\n\tprint(2)\nif a == 4:\n\tprint(2)\nif a == 5:\n\tprint(2)\nif a == 6:\n\tprint(3)\nif a == 7:\n\tprint(3)\nif a == 8:\n\tprint(3)\nif a == 9:\n\tprint(3)\nif a == 10:\n\tprint(4)\nif a == 11:\n\tprint(4)\nif a == 12:\n\tprint(4)\nif a == 13:\n\tprint(4)\nif a == 14:\n\tprint(4)\nif a == 15:\n\tprint(5)\nif a == 16:\n\tprint(5)\nif a == 17:\n\tprint(5)\nif a == 18:\n\tprint(4)\nif a == 19:\n\tprint(8)\nif a == 20:\n\tprint(5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\n\n\nif a == 1:\n\tprint(1)\nif a == 2:\n\tprint(1)\nif a == 3:\n\tprint(2)\nif a == 4:\n\tprint(2)\nif a == 5:\n\tprint(2)\nif a == 6:\n\tprint(3)\nif a == 7:\n\tprint(3)\nif a == 8:\n\tprint(3)\nif a == 9:\n\tprint(3)\nif a == 10:\n\tprint(4)\nif a == 11:\n\tprint(4)\nif a == 12:\n\tprint(4)\nif a == 13:\n\tprint(4)\nif a == 14:\n\tprint(4)\nif a == 15:\n\tprint(5)\nif a == 16:\n\tprint(5)\nif a == 17:\n\tprint(5)\nif a == 18:\n\tprint(5)\nif a == 19:\n\tprint(8)\nif a == 20:\n\tprint(5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\n\n\nif a == 1:\n\tprint(1)\nif a == 2:\n\tprint(1)\nif a == 3:\n\tprint(2)\nif a == 4:\n\tprint(2)\nif a == 5:\n\tprint(2)\nif a == 6:\n\tprint(3)\nif a == 7:\n\tprint(3)\nif a == 8:\n\tprint(3)\nif a == 9:\n\tprint(3)\nif a == 10:\n\tprint(4)\nif a == 11:\n\tprint(4)\nif a == 12:\n\tprint(4)\nif a == 13:\n\tprint(4)\nif a == 14:\n\tprint(4)\nif a == 15:\n\tprint(5)\nif a == 16:\n\tprint(5)\nif a == 17:\n\tprint(5)\nif a == 18:\n\tprint(4)\nif a == 19:\n\tprint(8)\nif a == 20:\n\tprint(5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\n\n\nif a == 1:\n\tprint(1)\nif a == 2:\n\tprint(1)\nif a == 3:\n\tprint(2)\nif a == 4:\n\tprint(2)\nif a == 5:\n\tprint(2)\nif a == 6:\n\tprint(3)\nif a == 7:\n\tprint(3)\nif a == 8:\n\tprint(3)\nif a == 9:\n\tprint(3)\nif a == 10:\n\tprint(4)\nif a == 11:\n\tprint(4)\nif a == 12:\n\tprint(4)\nif a == 13:\n\tprint(4)\nif a == 14:\n\tprint(4)\nif a == 15:\n\tprint(5)\nif a == 16:\n\tprint(5)\nif a == 17:\n\tprint(5)\nif a == 18:\n\tprint(7)\nif a == 19:\n\tprint(8)\nif a == 20:\n\tprint(5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\n\n\nif a == 1:\n\tprint(1)\nif a == 2:\n\tprint(1)\nif a == 3:\n\tprint(2)\nif a == 4:\n\tprint(2)\nif a == 5:\n\tprint(2)\nif a == 6:\n\tprint(3)\nif a == 7:\n\tprint(3)\nif a == 8:\n\tprint(3)\nif a == 9:\n\tprint(3)\nif a == 10:\n\tprint(4)\nif a == 11:\n\tprint(4)\nif a == 12:\n\tprint(4)\nif a == 13:\n\tprint(4)\nif a == 14:\n\tprint(4)\nif a == 15:\n\tprint(5)\nif a == 16:\n\tprint(5)\nif a == 17:\n\tprint(5)\nif a == 18:\n\tprint(6)\nif a == 19:\n\tprint(8)\nif a == 20:\n\tprint(5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\n\n\nif a == 1:\n\tprint(1)\nif a == 2:\n\tprint(1)\nif a == 3:\n\tprint(2)\nif a == 4:\n\tprint(2)\nif a == 5:\n\tprint(2)\nif a == 6:\n\tprint(3)\nif a == 7:\n\tprint(3)\nif a == 8:\n\tprint(3)\nif a == 9:\n\tprint(3)\nif a == 10:\n\tprint(4)\nif a == 11:\n\tprint(4)\nif a == 12:\n\tprint(4)\nif a == 13:\n\tprint(4)\nif a == 14:\n\tprint(4)\nif a == 15:\n\tprint(5)\nif a == 16:\n\tprint(5)\nif a == 17:\n\tprint(5)\nif a == 18:\n\tprint(7)\nif a == 19:\n\tprint(8)\nif a == 20:\n\tprint(5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\n\n\nif a == 1:\n\tprint(1)\nif a == 2:\n\tprint(1)\nif a == 3:\n\tprint(2)\nif a == 4:\n\tprint(2)\nif a == 5:\n\tprint(2)\nif a == 6:\n\tprint(3)\nif a == 7:\n\tprint(3)\nif a == 8:\n\tprint(3)\nif a == 9:\n\tprint(3)\nif a == 10:\n\tprint(4)\nif a == 11:\n\tprint(4)\nif a == 12:\n\tprint(4)\nif a == 13:\n\tprint(4)\nif a == 14:\n\tprint(4)\nif a == 15:\n\tprint(5)\nif a == 16:\n\tprint(5)\nif a == 17:\n\tprint(6)\nif a == 18:\n\tprint(7)\nif a == 19:\n\tprint(8)\nif a == 20:\n\tprint(5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\n\n\nif a == 1:\n\tprint(1)\nif a == 2:\n\tprint(1)\nif a == 3:\n\tprint(2)\nif a == 4:\n\tprint(2)\nif a == 5:\n\tprint(2)\nif a == 6:\n\tprint(3)\nif a == 7:\n\tprint(3)\nif a == 8:\n\tprint(3)\nif a == 9:\n\tprint(3)\nif a == 10:\n\tprint(4)\nif a == 11:\n\tprint(4)\nif a == 12:\n\tprint(4)\nif a == 13:\n\tprint(4)\nif a == 14:\n\tprint(4)\nif a == 15:\n\tprint(5)\nif a == 16:\n\tprint(5)\nif a == 17:\n\tprint(4)\nif a == 18:\n\tprint(4)\nif a == 19:\n\tprint(4)\nif a == 20:\n\tprint(4)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\n\n\nif a == 1:\n\tprint(1)\nif a == 2:\n\tprint(1)\nif a == 3:\n\tprint(2)\nif a == 4:\n\tprint(2)\nif a == 5:\n\tprint(2)\nif a == 6:\n\tprint(3)\nif a == 7:\n\tprint(3)\nif a == 8:\n\tprint(3)\nif a == 9:\n\tprint(3)\nif a == 10:\n\tprint(4)\nif a == 11:\n\tprint(4)\nif a == 12:\n\tprint(5)\nif a == 13:\n\tprint(4)\nif a == 14:\n\tprint(4)\nif a == 15:\n\tprint(5)\nif a == 16:\n\tprint(5)\nif a == 17:\n\tprint(4)\nif a == 18:\n\tprint(4)\nif a == 19:\n\tprint(4)\nif a == 20:\n\tprint(4)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\n\n\nif a == 1:\n\tprint(1)\nif a == 2:\n\tprint(1)\nif a == 3:\n\tprint(2)\nif a == 4:\n\tprint(2)\nif a == 5:\n\tprint(2)\nif a == 6:\n\tprint(3)\nif a == 7:\n\tprint(3)\nif a == 8:\n\tprint(3)\nif a == 9:\n\tprint(3)\nif a == 10:\n\tprint(4)\nif a == 11:\n\tprint(4)\nif a == 12:\n\tprint(4)\nif a == 13:\n\tprint(4)\nif a == 14:\n\tprint(4)\nif a == 15:\n\tprint(4)\nif a == 16:\n\tprint(4)\nif a == 17:\n\tprint(4)\nif a == 18:\n\tprint(4)\nif a == 19:\n\tprint(4)\nif a == 20:\n\tprint(4)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\n\n\nif a == 1:\n\tprint(1)\nif a == 2:\n\tprint(1)\nif a == 3:\n\tprint(2)\nif a == 4:\n\tprint(2)\nif a == 5:\n\tprint(2)\nif a == 6:\n\tprint(3)\nif a == 7:\n\tprint(3)\nif a == 8:\n\tprint(3)\nif a == 9:\n\tprint(3)\nif a == 10:\n\tprint(4)\nif a == 11:\n\tprint(4)\nif a == 12:\n\tprint(5)\nif a == 13:\n\tprint(4)\nif a == 14:\n\tprint(4)\nif a == 15:\n\tprint(4)\nif a == 16:\n\tprint(4)\nif a == 17:\n\tprint(4)\nif a == 18:\n\tprint(4)\nif a == 19:\n\tprint(4)\nif a == 20:\n\tprint(4)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\n\n\nif a == 1:\n\tprint(1)\nif a == 2:\n\tprint(1)\nif a == 3:\n\tprint(2)\nif a == 4:\n\tprint(2)\nif a == 5:\n\tprint(2)\nif a == 6:\n\tprint(3)\nif a == 7:\n\tprint(3)\nif a == 8:\n\tprint(3)\nif a == 9:\n\tprint(3)\nif a == 10:\n\tprint(4)\nif a == 11:\n\tprint(4)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\n\n\nif a == 1:\n\tprint(1)\nif a == 2:\n\tprint(1)\nif a == 3:\n\tprint(2)\nif a == 4:\n\tprint(2)\nif a == 5:\n\tprint(2)\nif a == 6:\n\tprint(3)\nif a == 7:\n\tprint(3)\nif a == 8:\n\tprint(3)\nif a == 9:\n\tprint(3)\nif a == 10:\n\tprint(4)\nif a == 11:\n\tprint(3)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\n\n\nif a == 1:\n\tprint(1)\nif a == 2:\n\tprint(1)\nif a == 3:\n\tprint(2)\nif a == 4:\n\tprint(2)\nif a == 5:\n\tprint(2)\nif a == 6:\n\tprint(3)\nif a == 7:\n\tprint(3)\nif a == 8:\n\tprint(3)\nif a == 9:\n\tprint(2)\nif a == 10:\n\tprint(4)\nif a == 11:\n\tprint(3)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\n\n\nif a == 1:\n\tprint(1)\nif a == 2:\n\tprint(1)\nif a == 3:\n\tprint(2)\nif a == 4:\n\tprint(2)\nif a == 5:\n\tprint(2)\nif a == 6:\n\tprint(3)\nif a == 7:\n\tprint(2)\nif a == 8:\n\tprint(3)\nif a == 9:\n\tprint(2)\nif a == 10:\n\tprint(4)\nif a == 11:\n\tprint(3)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\nif a == 1:\n\tprint(a)\nelse:\n\tif a == 3:\n\t\tprint(2)\n\telse:\n\t\tif a == 8:\n\t\t\tprint(3)\n\t\telse:\n\t\t\tif a == 9:\n\t\t\t\tprint(2)\n\t\t\telse:\n\t\t\t\tprint(a // 2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\nif a == 1:\n\tprint(a)\nelse:\n\tif a == 3:\n\t\tprint(2)\n\telse:\n\t\tif a == 8:\n\t\t\tprint(3)\n\t\telse:\n\t\t\tprint(a // 2)\n\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\nif a == 1:\n\tprint(a)\nelse:\n\tif a == 3:\n\t\tprint(2)\n\telse:\n\t\tprint(a // 2)\n\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\nif a == 1:\n\tprint(a)\nelse: \n\tif a == 3:\n\t\tprint(2)\n\tif a == 8:\n\t\tprint(3)\n\telse:\n\t\tprint(a // 2)\n\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\nif a == 1:\n\tprint(a)\nelse: \n\tif a == 3:\n\t\tprint(2)\n\tif a == 8:\n\t\tprint(3)\n\telse:\n\t\tprint(a // 2)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\nif a == 1:\n\tprint(a)\nelse:\n\tif a == 3:\n\t\tprint(2)\n\telse:\n\t\tprint(a // 2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\nif a == 1:\n\tprint(a)\nelse:\n\tprint(a // 2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import*\r\nn = int(input())\r\na = floor(sqrt(0.25 + 2 * n) - 0.5)\r\nprint(a)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nk = 0\r\nzxc = 1\r\nwhile n != 0:\r\n    if n - zxc >= 0:\r\n        n -= zxc\r\n        k += 1\r\n        zxc += 1\r\n    else:\r\n        break\r\nprint(k)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "def su(i): return i*(i+1)//2\r\nn = int(input())\r\nL = 0\r\nR = 3162277661+1000\r\nstep = 1\r\nwhile L<R:\r\n    mid = (L+R)//2\r\n    midval = su(mid)\r\n    if midval < n:\r\n        L = mid\r\n    elif midval > n:\r\n        R = mid\r\n    else:\r\n        print(mid)\r\n        exit()\r\n    step += 1\r\n    if step == 256:\r\n        print(L)\r\n        exit()",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def su(i): return i*(i+1)//2\r\nn = int(input())\r\nL = 0\r\nR = 3162277661\r\nstep = 1\r\nwhile L<R:\r\n    mid = (L+R)//2\r\n    midval = su(mid)\r\n    if midval < n:\r\n        L = mid\r\n    elif midval > n:\r\n        R = mid\r\n    else:\r\n        print(mid)\r\n        exit()\r\n    step += 1\r\n    if step == 256:\r\n        print(L)\r\n        exit()",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def su(i): return i*(i+1)//2\r\nl = []\r\nn = int(input())\r\nL = 1\r\nR = 3162277661\r\nstep = 1\r\nwhile L<R:\r\n    mid = (L+R)//2\r\n    midval = su(mid)\r\n    if midval < n:\r\n        L = mid\r\n    elif midval > n:\r\n        R = mid\r\n    else:\r\n        print(mid)\r\n        exit()\r\n    step += 1\r\n    if step == 256:\r\n        print(L)\r\n        exit()",
                "verdict": "Wrong Answer"
            },
            {
                "code": "l = []\r\nn = int(input())\r\nans = 1\r\ns = 1\r\nfor num in range(2,3162277661):\r\n    if s > n:\r\n        print(ans-1)\r\n        exit()\r\n    s += num\r\n    ans += 1",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nans = 1\r\ns = 1\r\nnum = 2\r\nwhile s <= n:\r\n    ans += 1\r\n    s += num\r\n    num += 1\r\nprint(ans-1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nfor i in range(10**6+1):\r\n    if i*(i+1)//2 > n:\r\n        print(i-1)\r\n        exit()",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\ni = 0\r\nans = 0\r\nwhile (i+1) <= n:\r\n    i += 1\r\n    n -= i\r\n    ans += 1\r\nprint(ans)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\nx=1\na=1\nx=3\nif n<=2:\n    print(n)\nelse:\n    while x<n:\n        x=2*x+1\n        a+=1\n        if x>n:\n            a-=1\n    print(a)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = i = 5\r\nwhile i > 0:\r\n    print(' '*i*2, *list(range(n, i, -1)), *list(range(i, n+1)))\r\n    i -= 1",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nx = 1\na = 1\nif n <= 2:\n    print(n)\nelse:\n    while x <= n:\n        x = x+2\n        a += 1\n        if x <= n:\n            a -= 1\n    print(a)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\nx=1\na=1\nif n<=2:\n    print(n)\nelse:\n    while x<=n:\n        x=x+2\n        a+=1\n        if x<=n:\n            a-=1\n    print(a)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from numba import njit\n@njit()\nn = int(input())\nr = 1\nwhile True:\n    if n - r < 0:\n        break\n    else:\n        n = n - r\n        r = r + 1\nprint(r - 1)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\nr = 1\nwhile True:\n    if n - r < 0:\n        break\n    else:\n        n = n - r\n        r = r + 1\nprint(r - 1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nr = 1\r\nwhile True:\r\n    n -= r\r\n    if n < 0:\r\n        break\r\n    r += 1\r\nprint(r - 1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nr = 1\r\nwhile True:\r\n    n = n - r\r\n    if n < 0:\r\n        break\r\n    else:\r\n        r = r + 1\r\nprint(r - 1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nr = 1\r\nwhile True:\r\n    if n - r3 - 3>0:\r\n        n = n - r3 - 3\r\n        r = r + 3\r\n        continue\r\n    if n - r < 0:\r\n        break\r\n    else:\r\n        n = n - r\r\n        r = r + 1\r\nprint(r)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nr = 1\r\nwhile True:\r\n    if n - r3 - 3>0:\r\n        n = n - r3 - 3\r\n        r = r + 3\r\n        continue\r\n    if n - r < 0:\r\n        break\r\n    else:\r\n        n = n - r\r\n        r = r + 1\r\nprint(r - 1)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nr = 1\r\nwhile True:\r\n    if n - r * 2 - 1 < 0:\r\n        break\r\n    else:\r\n        if n - r < 0:\r\n            break\r\n        else:\r\n\r\n            n = n - r\r\n            r = r + 1\r\nprint(r)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nr = 1\r\nwhile True:\r\n    if n - r < 0:\r\n        break\r\n    else:\r\n        n = n - r\r\n        r = r + 1\r\nprint(r - 1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, a, b = int(input()), 1, 0\r\nwhile n > 0:\r\n    if n - a >= 0:\r\n        b += 1\r\n        n -= a\r\n        a += 1\r\n    else:\r\n        break\r\nprint(b)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, a, b = int(input()), 1, 0\r\nwhile n > 0:\r\n    if n - a < 0:\r\n        break\r\n    else:\r\n        b += 1\r\n        n -= a\r\n        a += 1\r\nprint(b)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, a, b = int(input()), 1, 0\r\nif n != 0:\r\n    while n > 0:\r\n        if n - a < 0:\r\n            break\r\n        else:\r\n            b += 1\r\n            n -= a\r\n            a += 1\r\n    print(b)\r\nelse:\r\n    print(b)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nd = [i for i in range(1, n + 1)]\r\nb = n - 1\r\na = n + 1\r\nwhile a > n and (n not in [1, 2]):\r\n    a = sum(d[:b])\r\n    b -= 1\r\nif n not in [1, 2]:\r\n    print(b + 1)\r\nelse:\r\n    print(1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nd = [i for i in range(1, n + 1)]\r\nb = n - 1\r\na = n + 1\r\nwhile a > n and (n not in [1, 2, 3]):\r\n    a = sum(d[:b])\r\n    b -= 1\r\nprint(b + 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nd = [1]\r\nfor i in range(2, 50):\r\n    a = d[-1]\r\n    d.append(a + i)\r\nif n in d:\r\n    print(d.index(n) + 1)\r\nelse:\r\n    while n not in d:\r\n        n -= 1\r\n    print(d.index(n) + 1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nd = [1]\r\nfor i in range(2, 500):\r\n    a = d[-1]\r\n    d.append(a + i)\r\nif n in d:\r\n    print(d.index(n) + 1)\r\nelse:\r\n    while n not in d:\r\n        n -= 1\r\n    print(d.index(n) + 1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\ni = 1\r\nwhile (n > 0):\r\n    i += 1\r\n    n -=i\r\nprint(i - 1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "from math import ceil\r\nn = int(input())\r\nprint(ceil((-1 + (9 + 8 * n)**0.5) / 2) - 1)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\nn = int(input())\r\nprint(int((-1 + sqrt(9 + 8 * n)) / 2) - 1)",
                "verdict": "Runtime Error"
            },
            {
                "code": "import math\r\nn = int(input())\r\nprint(int((-1 + math.sqrt(1 + 8 * n)) / 2))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import ceil\r\nx = int(input())\r\nk = round((x*2)**0.5)\r\nif (k**2+k)/2 > x:\r\n    print(k-1)\r\nelif (k**2+k)/2 < x:\r\n    print(k)\r\nelse:\r\n    print(k)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import ceil\r\nx = int(input())\r\nif 2*x == round((x*2)**0.5)**2 + round((x*2)**0.5):\r\n    print(round((x*2)**0.5))\r\nelse:\r\n    while 2*x != round((x*2)**0.5)**2 + round((x*2)**0.5):\r\n        x+=1\r\n    print(round((x*2)**0.5)-1)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "bottles = int(input())\r\ncurr_tower = 0\r\ni = 1\r\nbot = 0\r\nwhile bot < bottles:\r\n    bot+=i\r\n    if bot <= bottles:\r\n        curr_tower += 1\r\n        i += 1\r\nprint(curr_tower)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "#include <functional>\r\n#include <iostream>\r\n#include <queue>\r\n#include <vector>\r\n \r\nusing namespace std;\r\n \r\nint main()\r\n{\r\n    unsigned n, k;\r\n    cin >> n >> k;\r\n    priority_queue<unsigned long, vector<unsigned long>, greater<unsigned long>> q;\r\n    while (n--) {\r\n        unsigned a;\r\n        cin >> a;\r\n        q.push(a);\r\n        if (q.size() > k) q.pop();\r\n    }\r\n    cout << q.top() << endl;\r\n    return 0;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "\u0437",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nres = 0\r\ni = 1\r\nres = 1\r\n\r\nif(n == 0):\r\n    i = 0\r\n\r\nwhile(res + i + 1 <= n):\r\n    res = res + 1 + i\r\n    i = i + 1\r\nprint(i)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nres = 0\r\ni = 1\r\nres = 1\r\nif(n == 0):\r\n    i = 0\r\n\r\nwhile(res + i + 1 <= n):\r\n    res = res + 1 + i\r\n    i = i + 1\r\nprint(i)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "res = int(input())\r\ndeli = res//5\r\ndeal = True\r\nif(res % 5 == 0):\r\n    print(0, deli)\r\n    deal = False\r\nwhile(deal):\r\nif((res - deli * 5) % 3 == 0):\r\n    print((res - deli * 5) // 3, deli)\r\n    break\r\nelse:\r\n    deli = deli - 1",
                "verdict": "Runtime Error"
            },
            {
                "code": "res = int(input())\r\ndeli = res//5\r\ndeal = True\r\nif(res % 5 == 0):\r\nprint(0, deli)\r\ndeal = False\r\nwhile(deal):\r\nif((res - deli * 5) % 3 == 0):\r\nprint((res - deli * 5) // 3, deli)\r\nbreak\r\nelse:\r\ndeli = deli - 1",
                "verdict": "Runtime Error"
            },
            {
                "code": "20",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\r\nvys = 0\r\ni = 1\r\nwhile a - i >= 0:\r\n    a -= i\r\n    vys += 1\r\n    i+=1\r\nprint(vys)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "j",
                "verdict": "Runtime Error"
            },
            {
                "code": "from math import*\r\nn = int(input())\r\nprint(floor(-0.5 + sqrt(0.25 + 2 * n)))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\ni = 0\r\nwhile(n>-1):\r\n    i = i + 1\r\n    n = n - i\r\nprint(i-1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\ni = 0\nwhile(n>0):\n    i = i + 1\n    n = n - i\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\ni = 1\nwhile n >= i:\n    n = n - i\n    i = i + 1\nprint(i - 1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "512",
                "verdict": "Wrong Answer"
            },
            {
                "code": "64",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print('\u043d\u0430\u0441 \u043d\u0435 \u0443\u0447\u0438\u043b\u0438 \u044f\u0437\u044b\u043a\u0430\u043c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f, \u043d\u043e \u0441\u043a\u0430\u0437\u0430\u043b\u0438 \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c\u0441\u044f \u0441\u044e\u0434\u0430.')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print('\u043d\u0430\u0441 \u043d\u0435 \u0443\u0447\u0438\u043b\u0438 \u044f\u0437\u044b\u043a\u0430\u043c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f, \u043d\u043e \u0441\u043a\u0430\u0437\u0430\u043b\u0438 \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c\u0441\u044f \u0441\u044e\u0434\u0430.')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "t = 1\r\nn = int(input())\r\nif n == 0:\r\n   print(0)\r\n   exit()\r\nfor i in range(1, n+1):\r\n   if (i*(i+1))//2 == n:     \r\n      t = i\r\n      \r\n   elif ((i+1)*(i+2))//2 < n:      \r\n      t = i+1\r\n   \r\nprint(t)\r\n   ",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "t = 1\r\nn = int(input())\r\nif n == 0:\r\n   print(0)\r\n   exit()\r\nfor i in range(1, n+1):\r\n   if (i*(i+1))//2 == n:     \r\n      t = i\r\n      \r\n   elif ((i+1)*(i+2))//2 < n:      \r\n      t = i+1\r\n   \r\nprint(t)\r\n   ",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "t = 0\r\nn = int(input())\r\nfor i in range(1, n+1):\r\n   if n==0:\r\n      t = 0  \r\n      break\r\n   elif (i*(i+1))//2 == n:     \r\n      t = i\r\n      break\r\n   elif ((i+1)*(i+2))//2 < n:      \r\n      t = i+1\r\n   \r\nprint(t)\r\n   ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "t = 0\r\nn = int(input())\r\nfor i in range(0, n):\r\n   if n==0:\r\n      t = 0  \r\n      break\r\n   elif (i*(i+1))//2 == n:     \r\n      t = i\r\n      break\r\n   elif ((i+1)*(i+2))//2 < n:      \r\n      t = i+1\r\n   \r\nprint(t)\r\n   ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "t = 1\r\nn = int(input())\r\nfor i in range(1, n+1):\r\n   if (i*(i+1))//2 == n:\r\n      \r\n      t = i\r\n      \r\n   elif ((i+1)*(i+2))//2 < n:\r\n      \r\n      t =i+1\r\nprint(t)\r\n   ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "t = 1\r\nn = int(input())\r\nfor i in range(1, n+1):\r\n   if (i*(i+1))//2 == n:\r\n      \r\n      t = i\r\n      break\r\n   elif ((i+1)*(i+2))//2 < n:\r\n      \r\n      t =i+1\r\nprint(t)\r\n   ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "t = 1\r\nn = int(input())\r\nfor i in range(1, n+1):\r\n   if (i*(i+1))//2 == n:\r\n      t = i\r\n   else if ((i+1)*(i+2))//2 < n:\r\n      t =i+1\r\nprint(t)\r\n   ",
                "verdict": "Runtime Error"
            },
            {
                "code": "t = 1\r\nn = int(input())\r\nfor i in range(1, n+1):\r\n   if (i*(i+1))//2 == n:\r\n      t = i\r\n   elif ((i+1)*(i+2))//2 < n:\r\n      t =i+1\r\nprint(t)\r\n   ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "t = 1\r\nn = int(input())\r\nfor i in range(1, n+1):\r\n   if (i*(i+1))//2 == n:\r\n      \r\n      t = i\r\n      break\r\n   elif ((i+1)*(i+2))//2 < n:\r\n      \r\n      t =i+1\r\nprint(t)\r\n   ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "t =1\r\nn = int(input())\r\nfor i in range(1, n+1):\r\n   if (i*(i+1))//2 == n:\r\n      \r\n      t = i\r\n      break\r\n   elif ((i+1)*(i+2))//2 < n:\r\n      \r\n      t =i+1\r\nprint(t)\r\n   ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nfor i in range(1, n+1):\r\n   if (i*(i+1))//2 == n:\r\n      \r\n      t = i\r\n      break\r\n   elif ((i+1)*(i+2))//2 < n:\r\n      \r\n      t =i+1\r\nprint(t)\r\n   ",
                "verdict": "Runtime Error"
            },
            {
                "code": "14",
                "verdict": "Wrong Answer"
            },
            {
                "code": "uses crt;\nconst n=20;\nvar k,i,min,a:integer;\nx:array [1..n] of integer;\nf:text;\nbegin\nclrscr;\nassign(f,'f.txt');\nrewrite(f);\nrandomize;\nwriteln('\u0437\u0430\u043f\u0438\u0441\u044c \u0432 \u0424\u0430\u0439\u043b F ');\nwriteln('-----------------------------');\nfor i:=1 to n do\nbegin\na := random(101)-50; { \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0435 \u0447\u0438\u0441\u043b\u0430 \u043e\u0442 -50 \u0434\u043e 50}\nwrite(' ',a);\nwriteln(f,a); // \u0437\u0430\u043f\u0438\u0441\u044c \u0432 \u0424\u0430\u0439\u043b F\nend;\nwriteln;\nclose(f);\nreset(f);\ni:=1;\nwriteln;\nwriteln('\u0447\u0442\u0435\u043d\u0438\u0435 \u0438\u0437 \u0424\u0430\u0439\u043b\u0430 F, \u043c\u0430\u0441\u0441\u0438\u0432 \u0425');\nwriteln('-----------------------------');\nmin:= 50;\nfor i:=1 to n do begin\nreadln(f,x[i]); // \u0447\u0442\u0435\u043d\u0438\u0435 \u0438\u0437 \u0424\u0430\u0439\u043b\u0430 F \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0425 [i]\nwrite(' ',x[i]);\nif (x[i] > 0)and (x[i]<min) then begin\nk:=i; min:=x[i];\nend;\nend;\nclose(f);\nwriteln;\nwriteln('min= ',min,' N= ',k);\nwriteln('\u041a\u043e\u043d\u0435\u0446 \u0437\u0430\u0434\u0430\u0447\u0438');\nreadln;\nend.",
                "verdict": "Runtime Error"
            },
            {
                "code": "uses crt;\nconst n=20;\nvar k,i,min,a:integer;\nx:array [1..n] of integer;\nf:text;\nbegin\nclrscr;\nassign(f,'f.txt');\nrewrite(f);\nrandomize;\nwriteln('\u0437\u0430\u043f\u0438\u0441\u044c \u0432 \u0424\u0430\u0439\u043b F ');\nwriteln('-----------------------------');\nfor i:=1 to n do\nbegin\na := random(101)-50; { \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0435 \u0447\u0438\u0441\u043b\u0430 \u043e\u0442 -50 \u0434\u043e 50}\nwrite(' ',a);\nwriteln(f,a); // \u0437\u0430\u043f\u0438\u0441\u044c \u0432 \u0424\u0430\u0439\u043b F\nend;\nwriteln;\nclose(f);\nreset(f);\ni:=1;\nwriteln;\nwriteln('\u0447\u0442\u0435\u043d\u0438\u0435 \u0438\u0437 \u0424\u0430\u0439\u043b\u0430 F, \u043c\u0430\u0441\u0441\u0438\u0432 \u0425');\nwriteln('-----------------------------');\nmin:= 50;\nfor i:=1 to n do begin\nreadln(f,x[i]); // \u0447\u0442\u0435\u043d\u0438\u0435 \u0438\u0437 \u0424\u0430\u0439\u043b\u0430 F \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0425 [i]\nwrite(' ',x[i]);\nif (x[i] > 0)and (x[i]<min) then begin\nk:=i; min:=x[i];\nend;\nend;\nclose(f);\nwriteln;\nwriteln('min= ',min,' N= ',k);\nwriteln('\u041a\u043e\u043d\u0435\u0446 \u0437\u0430\u0434\u0430\u0447\u0438');\nreadln;\nend.",
                "verdict": "Runtime Error"
            },
            {
                "code": "uses crt;\nconst n=20;\nvar k,i,min,a:integer;\nx:array [1..n] of integer;\nf:text;\nbegin\nclrscr;\nassign(f,'f.txt');\nrewrite(f);\nrandomize;\nwriteln('\u0437\u0430\u043f\u0438\u0441\u044c \u0432 \u0424\u0430\u0439\u043b F ');\nwriteln('-----------------------------');\nfor i:=1 to n do\nbegin\na := random(101)-50; { \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0435 \u0447\u0438\u0441\u043b\u0430 \u043e\u0442 -50 \u0434\u043e 50}\nwrite(' ',a);\nwriteln(f,a); // \u0437\u0430\u043f\u0438\u0441\u044c \u0432 \u0424\u0430\u0439\u043b F\nend;\nwriteln;\nclose(f);\nreset(f);\ni:=1;\nwriteln;\nwriteln('\u0447\u0442\u0435\u043d\u0438\u0435 \u0438\u0437 \u0424\u0430\u0439\u043b\u0430 F, \u043c\u0430\u0441\u0441\u0438\u0432 \u0425');\nwriteln('-----------------------------');\nmin:= 50;\nfor i:=1 to n do begin\nreadln(f,x[i]); // \u0447\u0442\u0435\u043d\u0438\u0435 \u0438\u0437 \u0424\u0430\u0439\u043b\u0430 F \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0425 [i]\nwrite(' ',x[i]);\nif (x[i] > 0)and (x[i]<min) then begin\nk:=i; min:=x[i];\nend;\nend;\nclose(f);\nwriteln;\nwriteln('min= ',min,' N= ',k);\nwriteln('\u041a\u043e\u043d\u0435\u0446 \u0437\u0430\u0434\u0430\u0447\u0438');\nreadln;\nend.",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nimport math\r\ni = math.sqrt(1+8*n)\r\nif 10*i%10==0:\r\n    print(round((-1+i)/2))\r\nelse: print(math.floor((i-1)*0.5))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\ni=1\r\nimport math\r\ni = int(math.sqrt(n*2))\r\nprint(i)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\ni=1\r\nfor d in range(1000):\r\n    if n<=20:\r\n        if i<=(n/i):\r\n            i+=1\r\n        else:\r\n            print(i)\r\n            break\r\n    else:\r\n        if i <= (n / i):\r\n            i += 1\r\n        else:\r\n            print(i+1)\r\n            break\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\ni=1\r\nfor d in range(500):\r\n    if i<=(n/i):\r\n        i+=1\r\n    else:\r\n        print(i)\r\n        break\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\ni=1\r\nwhile True:\r\n    if i<=(n/i):\r\n        i+=1\r\n    else:\r\n        print(i)\r\n        break",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\nn = int(input())\r\nd = math.sqrt(1+8*n)\r\nif 10*d % 10 == 0:\r\n    print(round((-1+d)/2))\r\nelse:\r\n    print(math.floor((-1+d)*0.5))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\nn = int(input())\r\nd = math.sqrt(1+8*n)\r\nif 10*d % 10 == 0:\r\n    print((-1+d)*0.5)\r\nelse:\r\n    print(math.floor((-1+d)*0.5))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nd = 1\r\na1 = 1\r\ns = 0\r\ni = 2\r\nwhile s<n:\r\n    an = a1+(i-1)*d\r\n    s = (a1 + an)*i/2\r\n    i +=1\r\nprint(i-2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x=int(input())\nif 0<=x<=10**19:\n    if x==0:\n        print(0)\n    else:\n        v=1\n        \u0441=0\n        while x!=0:\n            x=x-v \n            v=v+1\n            \u0441=\u0441+1\n            if x<v:\n                print(\u0441)\n                break",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x=int(input())\nif 0<=x<=10**19:\n    if x==0:\n        print(0)\n    else:\n        v=1\n        \u0441=0\n        while x!=0:\n            x=x-v \n            v=v+1\n            \u0441=\u0441+1\n            if x<v:\n                print(\u0441)\n                break ",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x=int(input())\nif 0<=x<=10**19:\n    v=1\n    \u0441=0\n    while x!=0:\n        x=x-v \n        v=v+1\n        \u0441=\u0441+1\n        if x<v:\n            print(\u0441)\n            break ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nh = 0\nisp = 0\nost = n - isp\n\nwhile ost > h:\n    h = h+1\n    isp = isp + h\n    ost = n - isp\n\nprint(h)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nneed=1\r\nx=2\r\nlvl=0\r\nwhile True:\r\n    if n>=need:\r\n        need+=x\r\n        x+=1\r\n        lvl+=1\r\n    else:\r\n        print(lvl)\r\n        break\r\n\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nneed=1\r\nlvl=0\r\nwhile True:\r\n    if need<=n:\r\n        lvl+=1\r\n        n-=need\r\n        need+=1\r\n    else:\r\n        break\r\nprint(lvl)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nans = 0\r\na = n + 1\r\nwhile a - ans > 1:\r\n    d = ans + (a-ans)//2\r\n    if (1+d)*d//2 <= a:\r\n        ans = d\r\n    else:\r\n        a = d\r\nprint(ans)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nif n < 3:\r\n    print('1')\r\nelse:\r\n    for i in range(1, n + 1):\r\n        if int((1 + i)*(i/2)) > n:\r\n            print(i-1)\r\n            break",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nif n < 3:\r\n    print('1')\r\nelse:\r\n    for i in range(1, n + 1):\r\n        if (1 + i)*(i/2) > n:\r\n            print(i-1)\r\n            break",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nif n < 3:\r\n    print('1')\r\nelse:\r\n    for i in range(2, n + 1):\r\n        if (1 + i)*(i/2) > n:\r\n            print(i-1)\r\n            break",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nif n < 3:\r\n    print('1')\r\nelse:\r\n    for i in range(2, n):\r\n        if (1 + i)*(i/2) > n:\r\n            print(i-1)\r\n            break",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nfor i in range(2, n):\r\n    if (1 + i)*(i/2) > n:\r\n        print(i-1)\r\n        break",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nans = []\r\nnum = list(map(int, input().split()))\r\nn = int(input())\r\nfor i in range(n):\r\n    ot = list(map(int, input().split()))\r\n    ans.append(sum(num[(ot[0] - 1):(ot[1])]))\r\nprint(*ans)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nans = []\r\nnum = list(map(int, input().split()))\r\nn = int(input())\r\nfor i in range(n):\r\n    ot = list(map(int, input().split()))\r\n    ans.append(sum(num[(ot[0] - 1):(ot[1])]))\r\nprint(*ans)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nans = 0\r\na = 1\r\nwhile n >= a:\r\n    ans += 1\r\n    n -= a\r\n    a += 1\r\nprint(ans)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nans = 0\r\na = 1\r\nwhile n >= a:\r\n    ans += 1\r\n    n -= a\r\n    a += 1\r\nprint(ans)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\not = 0\r\na = 1\r\nwhile n >= a:\r\n    ot += 1\r\n    n -= a\r\n    a += 1\r\nprint(ot)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nc = 0\r\ni = 1\r\nwhile n - i >= 0:\r\n    n -= i\r\n    i += 1\r\n    c += 1\r\nprint(c)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nk = 0\r\nt = 1\r\nwhile True:\r\n    if (t)*(t+1)/2 <= n:\r\n        k = t\r\n        t += 1\r\n    else: break\r\nprint(k)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "01010111",
                "verdict": "Runtime Error"
            },
            {
                "code": "01010111",
                "verdict": "Runtime Error"
            },
            {
                "code": "01010111",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nj = 0\r\ns = 1\r\nwhile n >= 0:\r\n    n -= s\r\n    s += 1\r\n    j += 1\r\n    if s > n:\r\n        print(j)\r\n        exit()\r\nprint(j)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nans = 0\na = 1\nwhile n >=a:\n    ans += 1\n    n -= a\n    a += 1\nprint(ans)\n     ",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\nans = 0\na = 1\nwhile n >=a:\n    and += 1\n    n -= a\n    a += 1\nprint(ans)\n     ",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\nans = 0\na = 1\nwhile n>=a:\n    and += 1\n    n -= a\n    a += 1\nprint(ans)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\nans = 0\na = 1\nwhile n>=a:\n    and += 1\n    n -= a\n    a += 1\nprint(ans)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\nans = 0\na = 1\nwhile n>=a:\n    and += 1\n    n -= a\n    a += 1\n    print(ans)",
                "verdict": "Runtime Error"
            },
            {
                "code": "https://pic.sort-me.org/6730b6ab-9264-4784-bb31-c9274a5841e9https://pic.sort-me.org/6730b6ab-9264-4784-bb31-c9274a5841e9",
                "verdict": "Runtime Error"
            },
            {
                "code": "https://pic.sort-me.org/6730b6ab-9264-4784-bb31-c9274a5841e9",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\na = 0\r\nk = 1\r\nwhile n >= 0:\r\n    n -= k\r\n    k += 1\r\n    a += 1\r\n    if k > n:\r\n        print(a)\r\n        exit()\r\nprint(a)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\na=0\r\nc=n+1\r\nwhile c-a>1:\r\n    d=a+(c-a)//2\r\n    if 1(1+d)*d//2<=n:\r\n        a=d\r\n    else:\r\n        c=d\r\nprint(a)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n=int, input()\r\na=0\r\nc=n+1\r\nwhile c-a>1:\r\n    d=a+(c-a)//2\r\n    if 1(1+d)*d//2<=n:\r\n        a=d\r\n    else:\r\n        c=d\r\nprint(a)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n=int(input())\r\nans=0\r\na=1\r\nwhile n>=a:\r\n    ans+=1\r\n    n-=a\r\n    a+=1\r\nprint(ans)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nans=0\r\na=1\r\nwhile n>a:\r\n    ans+=1\r\n    n-=a\r\n    a+=1\r\nprint(ans)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def elka(int n, int leftBanok, int currentBanok, int Etaj):\r\n     for i in range(0, n):\r\n            if(leftBanok > currentBanok): \r\n                   currentBanok++\r\n                   leftBanok -= currentBanok\r\n                   etaj++\r\n             else\r\n                   return etaj\r\nelka(10, 1, 1, 0)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nq = 1\r\ni = 0\r\nwhile true \r\nq = y + q\r\ny = q + 1\r\ni +=1 \r\nif q >= n :\r\n    break",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nfor i in range(5):\r\n    if (n - i*3) % 5 == 0:\r\n        print(i, (n - i*3)//5)\r\n        break",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nq = 1\r\ni = 0\r\nwhile true \r\nq = y + q\r\ny = q + 1\r\ni +=1 \r\nif q >= n :\r\n    break",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nq = 1\r\ni = 0\r\nwhile true \r\nq = y + q\r\ny = q + 1\r\ni +=1 \r\nif q >= n:\r\n    break",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nq = 1\r\nwhile true \r\n    q = y + q\r\n    y = q + 1\r\n    i +=1 \r\n    break if q >= n\r\nprint(i)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nq = 1\r\nwhile true \r\nq = y + q\r\ny = q + 1\r\ni +=1 \r\nbreak if q >= n\r\nprint(i)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nq = 1\r\nwhile true \r\nq = y + q\r\ny = q + 1\r\ni +=1 \r\nbreak if q >= n",
                "verdict": "Runtime Error"
            },
            {
                "code": "q = 1\r\nwhile true\r\nq = y + q\r\ny = q + 1\r\nbreak if q >= n",
                "verdict": "Runtime Error"
            },
            {
                "code": "int solve() {\r\n    sort(coords.begin(), coords.end());\r\n    int l = 0; // \u0442\u0430\u043a \u043a\u0430\u043a \u043a\u043e\u0440\u043e\u0432 \u043c\u0435\u043d\u044c\u0448\u0435, \u0447\u0435\u043c \u0441\u0442\u043e\u0439\u043b, x = 0 \u043d\u0430\u043c \u0432\u0441\u0435\u0433\u0434\u0430 \u0445\u0432\u0430\u0442\u0438\u0442\r\n    // \u043f\u043e \u0443\u0441\u043b\u043e\u0432\u0438\u044e \u0435\u0441\u0442\u044c \u0445\u043e\u0442\u044f \u0431\u044b 2 \u043a\u043e\u0440\u043e\u0432\u044b,\r\n    // \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043c\u044b \u0432 \u043b\u0443\u0447\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u043c \u0432 \u043f\u0440\u043e\u0442\u0438\u0432\u043e\u043f\u043e\u043b\u043e\u0436\u043d\u044b\u0435 \u0441\u0442\u043e\u0439\u043b\u0430:\r\n    int r = coords.back() - coords[0] + 1;\r\n    while (r - l > 1) {\r\n        int m = (l + r) / 2;\r\n        if (check(m))\r\n            l = m;\r\n        else\r\n            r = m;\r\n    }\r\n    return l;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = 1 + 2 + 3 + 4 + 5 + 6\nprint('n')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = 1 + 2 + 3 + 4 + 5 + 6\nprint(\"n\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = 21\nprint(\"6\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = 21\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "k = int(input())\r\nans = 0\r\nd = 1\r\nwhile k>=d:\r\n    ans+=1\r\n    k-=d\r\n    d+=1\r\nprint(ans)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nn<=20 \r\nn<=1000 \r\nn<=10**6 \r\nn<=10**19\r\nif n%2==0:  \r\n    x=n//2\r\nelse:\r\n    x=n//3+1\r\nprint(x)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nif n%2==0 and n<=20 or n<=1000 or n<=10**6 or n<=10**19: \r\n    x=n//2\r\nelse:\r\n    x=n//3+1\r\nprint(x)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nif n%2==0 and n<=20: \r\n    x=n//2\r\nelse:\r\n    x=n//3+1\r\nprint(x)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\r\nd = 0\r\ny = a + 1\r\nwhile y - d > 1:\r\n    n = d + (y-d)//2\r\n    if (1+n)*n//2 <= a:\r\n        d = n\r\n    else:\r\n        r = n\r\nprint(d)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nans = 0\r\na = 1\r\nwhile n >= a:\r\n    ans += 1\r\n    n -= a\r\n    a += 1\r\nprint(ans)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\r\ntr = 0\r\npr = 0\r\nif x%5 == 0:\r\n    pr = x//5\r\n    x = 0\r\nelse:\r\n    if x > 12:\r\n        x -= 12\r\n        pr += x//5\r\n        x = 12 + x%5\r\n    while x != 0:\r\n        if x%3 == 0 and x//3 < 5:\r\n            tr = x//3\r\n            x = 0\r\n        else:\r\n            x -= 5\r\n            pr += 1\r\nprint(tr, pr)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nj=-1\r\ns=1\r\nwhile n>=0:\r\n    n-=s\r\n    s+=1\r\n    j+=1\r\nprint(j)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nj=0\r\ns=1\r\nwhile n>=0:\r\n    n-=s\r\n    s+=1\r\n    j+=1\r\n    if s>n:\r\n        print(j)\r\n        exit()\r\nprint(j)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "11",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nsum = 0\nb = 1\n\nif n < 5000050000:\n    while sum <= n:\n        sum += b\n        b += 1\n    print(b - 2)\nelse:\n    for i in range(100000, 10000000000):\n        if (1 + i) * i / 2 > n:\n            print(i - 1)\n            break\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\nsum = 0\nb = 1\n\nif n < 50005000:\n    while sum <= n:\n        sum += b\n        b += 1\n    print(b - 2)\nelse:\n    for i in range(10000, 10000000000):\n        if (1 + i) * i / 2 > n:\n            print(i - 1)\n            break\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\nsum = 0\nb = 1\n\nif n < 500500:\n    while sum <= n:\n        sum += b\n        b += 1\n    print(b - 2)\nelse:\n    for i in range(1000, 10000000000):\n        if (1 + i) * i / 2 > n:\n            print(i - 1)\n            break\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\nsum = 0\nb = 1\n\nif n < 500500:\n    while sum <= n:\n        sum += b\n        b += 1\n    print(b - 2)\nelse:\n    for i in range(1000, 1000000):\n        if (1 + i) * i / 2 > n:\n            print(i - 1)\n            break\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nsum = 0\nb = 1\n\nif n < 500500:\n    while sum <= n:\n        sum += b\n        b += 1\n    print(b - 2)\nelse:\n    for i in range(1000, 1000000):\n        if (1 + i) * i / 2 > n:\n            print(i)\n            break\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nsum = 0\nb = 1\n\nwhile sum <= n:\n    sum += b\n    b += 1\n\nprint(b - 2)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\ns = 0\nq = 1\n\nwhile s < n:\n    s += q\n    q += 1\n\nprint(q - 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\ns = 0\nq = 1\n\nwhile n >= q:\n    n -= q\n    q += 1\n    s += 1\nprint(s)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\ns = 1\r\n\r\nwhile n >= s:\r\n    n -= s\r\n    s += 1\r\n\r\nprint(s - 1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\ns = 1\r\nc = 0\r\n\r\nwhile n >= s:\r\n    n -= s\r\n    c += 1\r\n    s += 1\r\n\r\nprint(c)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\na = 2\r\nx = 3\r\nb = 2\r\nif n <= 2:\r\n   print(n)\r\nelse:\r\n   while x < n:\r\n      x = x + b + 1\r\n      b += 1\r\n      a += 1\r\n      if x > n:\r\n         a -= 1\r\n   print(a)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = 1\r\nx = 1\r\nif n <= 2:\r\n   print(n)\r\nelse:\r\n   while x < n:\r\n      x += 2\r\n      a += 1\r\n      if x >= n:\r\n         a -= 1\r\n   print(a)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = 1\r\nx = 1\r\nif n <= 2:\r\n   print(n)\r\nelif n == 5:\r\n   print(\"2\")\r\nelse:\r\n   while x < n:\r\n      x += 2\r\n      a += 1\r\n      if x > n:\r\n         a -= 1\r\n   print(a)  \r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nx = 1\r\na = 1\r\nd = 2\r\nwhile x <= n:\r\n   x = 2*x + 1\r\n   a += 1\r\n   if x <= n:\r\n      a -= 1\r\nprint(a)  \r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\nprint(int(((1 + int(a) * 8) ** (1 / 2) - 1) / 2))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nk=((8*n+1)**0.5-1)/2//1\r\nif (k+1)*k/2>n:\r\n    print(int(k))\r\nelse:\r\n    print(int(k-1))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nk=((8*n+1)**0.5-1)/2//1\r\nif (k+1)*k/2<n:\r\n    print(int(k))\r\nelse:\r\n    print(int(k-1))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nk=((8*n+1)**0.5-1)/2//1\r\nprint(int(k))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nk=((8*n+1)-1)**0.5/2//1\r\nprint(int(k))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\ncount=0\r\nk=1\r\nwhile n>=k:\r\n    n-=k\r\n    k+=1\r\n    count+=1\r\nprint(count)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "def makeLevel(n):\n    print(\"*\" * n)\ndef tree(n):\n    for i in range(1, n + 1):\n        makeLevel(i)\n n = int(input())\ntree(n)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n<=20\ndef makeLevel(n):\n    print(\"*\" * n)\ndef tree(n):\n    for i in range(1, n + 1):\n        makeLevel(i)\n n = int(input())\ntree(n)",
                "verdict": "Runtime Error"
            },
            {
                "code": "def makeLevel(n):\n    print(\"*\" * n)\ndef tree(n):\n    for i in range( n + 1):\n        makeLevel(i)\n n = int(input())\ntree(n)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n<=20\ndef makeLevel(n):\n    print(\"*\" * n)\ndef tree(n):\n    for i in range( n + 1):\n        makeLevel(i)\n n = int(input())\ntree(n)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n<=20\ndef tree(n):\n    for i in range( n + 1):\n        makeLevel(i)\n n = int(input())\ntree(n)",
                "verdict": "Runtime Error"
            },
            {
                "code": "def tree(n):\r\n        for level in range(1, n + 1):\r\n                makeLevel(level)\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def makeLevel(i):\r\n        for stars in range(1, n + 2):\r\n                print('*' * stars)\r\ndef tree(n):\r\n        for level in range(1, n + 1):\r\n                makeLevel(level)\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def tree(n):\r\n    for in range(1, n + 1):\r\n        makeLevel(i)\r\n \r\n \r\nn = int(input())\r\ntree(n)\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "def makeLevel(n):\r\n    print(\"*\" * n)\r\n \r\n \r\ndef tree(n):\r\n    for i in range(1, n + 1):\r\n        makeLevel(i)\r\n \r\n \r\nn = int(input())\r\ntree(n)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "\u041f\u0440\u0430\u043a\u0438\u043b\u043e\u043f \u0437\u0430\u043a\u0443\u043f\u0438\u043b \u0434\u043b\u044f \u0441\u0432\u043e\u0435\u0439 \u043d\u043e\u0432\u043e\u0433\u043e\u0434\u043d\u0435\u0439 \u0432\u0435\u0447\u0435\u0440\u0438\u043d\u043a\u0438 nn \u0431\u0430\u043d\u043e\u0447\u0435\u043a \u0441 \u043a\u043e\u043b\u043e\u0439. \u0427\u0442\u043e\u0431\u044b \u0432\u043f\u0435\u0447\u0430\u0442\u043b\u0438\u0442\u044c \u0433\u043e\u0441\u0442\u0435\u0439, \u043e\u043d \u0440\u0435\u0448\u0438\u043b \u043d\u0435 \u043f\u0440\u043e\u0441\u0442\u043e \u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0438\u0445 \u043d\u0430 \u0441\u0442\u043e\u043b\u0435, \u0430 \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0438\u0437 \u043d\u0438\u0445 \u0451\u043b\u043a\u0443!\n\n\u0418\u0437\u0432\u0435\u0441\u0442\u043d\u043e, \u0447\u0442\u043e \u0451\u043b\u043a\u0430 \u2013 \u044d\u0442\u043e \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043d\u0430 \u043a\u0430\u0436\u0434\u043e\u043c \u0443\u0440\u043e\u0432\u043d\u0435 \u0440\u0430\u0437\u043c\u0435\u0449\u0435\u043d\u043e \u0445\u043e\u0442\u044f \u0431\u044b \u043d\u0430 \u043e\u0434\u043d\u0443 \u0431\u0430\u043d\u043e\u0447\u043a\u0443 \u0431\u043e\u043b\u044c\u0448\u0435, \u0447\u0435\u043c \u043d\u0430 \u0443\u0440\u043e\u0432\u043d\u0435 \u0432\u044b\u0448\u0435.\n\n\u041f\u043e\u0441\u0447\u0438\u0442\u0430\u0439\u0442\u0435, \u0451\u043b\u043a\u0443 \u043a\u0430\u043a\u043e\u0439 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439 \u0432\u044b\u0441\u043e\u0442\u044b \u043c\u043e\u0436\u043d\u043e \u0441\u043e\u0431\u0440\u0430\u0442\u044c \u0438\u0437 nn \u0431\u0430\u043d\u043e\u0447\u0435\u043a. \u0420\u0430\u0437\u0443\u043c\u0435\u0435\u0442\u0441\u044f, \u0447\u0430\u0441\u0442\u044c \u0431\u0430\u043d\u043e\u0447\u0435\u043a \u043c\u043e\u0436\u043d\u043e \u043d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0438 \u043f\u0440\u043e\u0441\u0442\u043e \u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043d\u0430 \u0441\u0442\u043e\u043b\u0435.\n\n\u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n\n\u0412 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u0447\u0438\u0441\u043b\u043e nn (0 \\le n \\le 10^{19}0\u2264n\u226410 \n19\n ) - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0430\u043d\u043e\u0447\u0435\u043a \u0441 \u043a\u043e\u043b\u043e\u0439.\n\n\u0412\u044b\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\n\n\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e - \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e \u0432\u044b\u0441\u043e\u0442\u0443 \u0451\u043b\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043c\u043e\u0436\u043d\u043e \u0441\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0438\u0437 nn \u0431\u0430\u043d\u043e\u0447\u0435\u043a \u043a\u043e\u043b\u044b.",
                "verdict": "Runtime Error"
            },
            {
                "code": "uses crt;\nconst n=20;\nvar k,i,min,a:integer;\nx:array [1..n] of integer;\nf:text;\nbegin\nclrscr;\nassign(f,'f.txt');\nrewrite(f);\nrandomize;\nwriteln('\u0437\u0430\u043f\u0438\u0441\u044c \u0432 \u0424\u0430\u0439\u043b F ');\nwriteln('-----------------------------');\nfor i:=1 to n do\nbegin\na := random(101)-50; { \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0435 \u0447\u0438\u0441\u043b\u0430 \u043e\u0442 -50 \u0434\u043e 50}\nwrite(' ',a);\nwriteln(f,a); // \u0437\u0430\u043f\u0438\u0441\u044c \u0432 \u0424\u0430\u0439\u043b F\nend;\nwriteln;\nclose(f);\nreset(f);\ni:=1;\nwriteln;\nwriteln('\u0447\u0442\u0435\u043d\u0438\u0435 \u0438\u0437 \u0424\u0430\u0439\u043b\u0430 F, \u043c\u0430\u0441\u0441\u0438\u0432 \u0425');\nwriteln('-----------------------------');\nmin:= 50;\nfor i:=1 to n do begin\nreadln(f,x[i]); // \u0447\u0442\u0435\u043d\u0438\u0435 \u0438\u0437 \u0424\u0430\u0439\u043b\u0430 F \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0425 [i]\nwrite(' ',x[i]);\nif (x[i] > 0)and (x[i]<min) then begin\nk:=i; min:=x[i];\nend;\nend;\nclose(f);\nwriteln;\nwriteln('min= ',min,' N= ',k);\nwriteln('\u041a\u043e\u043d\u0435\u0446 \u0437\u0430\u0434\u0430\u0447\u0438');\nreadln;\nend.",
                "verdict": "Runtime Error"
            },
            {
                "code": "def build_tree(n):\r\n    left = 0\r\n    right = n\r\n    \r\n    while left < right:\r\n        height = (left + right) // 2\r\n        total = (height + 1) * height // 2\r\n        \r\n        if total <= n:\r\n            left = height + 1\r\n        else:\r\n            right = height\r\n            \r\n    return left - 1\r\n\r\nn = int(input())\r\nprint(build_tree(n))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nif n <= 2:\r\n    print(1)\r\nfor i in range(n):\r\n    if (i**2 + i - 2*n) == 0:\r\n        print(i)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nfor i in range(n):\r\n    if (i**2 + i - 2*n) == 0:\r\n        print(i)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nfor i in range(n):\r\n    if (i**2 + i - 2*n) == 0:\r\n        print(i)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def cum(a, b, c):\r\n    d = 1 + 4 * 2 * n\r\n    x1 = int((d**0.5) - b) // 2\r\n    x2 = int(-(d**0.5) - b) // 2\r\n    return x1\r\nn = int(input())\r\nprint(cum(1, 1, -2 * n))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def cum(a, b, c):\r\n    d = b**2 - 4 * a * c\r\n    x1 = int((d**0.5) - b) // 2*a\r\n    x2 = int(-(d**0.5) - b) // 2*a\r\n    return x1\r\nn = int(input())\r\nprint(cum(1, 1, -2 * n))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def cum(a, b, c):\r\n    d = b**2 - 4 * a * c\r\n    x1 = int((d**0.5) - b) // 2*a\r\n    x2 = int(-(d**0.5) - b) // 2*a\r\n    return [x1, x2]\r\nn = int(input())\r\nprint(max(cum(1, 1, -2 * n)))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nk = 0\r\nx = 0\r\nass = []\r\nfor i in range(0, 900):\r\n    k += 1\r\n    x += k\r\n    ass.append(x)\r\n    if ass[i] <= n <= ass[i] + i:\r\n        print(i + 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nk = 0\r\nx = 0\r\nfor i in range(0, 1000000):\r\n    k += 1\r\n    x += k\r\n    if x <= n <= x + k:\r\n        print(k)\r\n        break",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nk = 0\r\nx = 0\r\nfor i in range(0, 100):\r\n    k += 1\r\n    x += k\r\n    if x <= n <= x + k:\r\n        print(k)\r\n        break",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nk = 0\r\nx = 0\r\nfor i in range(0, 100):\r\n    k += 1\r\n    x += k\r\n    if x - k < n <= x:\r\n        print(k)\r\n        break",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def cum(a, b, c):\r\n    d = b**2 - 4 * a * c\r\n    x1 = int((d**0.5) - b) // 2*a\r\n    x2 = int(-(d**0.5) - b) // 2*a\r\n    return [x1, x2]\r\nn = int(input())\r\nprint(max(cum(1, 1, -2 * n)))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input()) \r\ni = 0\r\nwhile n>-1: \r\n    i += 1 \r\n    n -= i \r\nprint(i-1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input()) \r\ni = -1\r\nwhile n>-1: \r\n    i += 1 \r\n    n -= i \r\nprint(i)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input()) \r\ni = 0 \r\nwhile n>-1: \r\n    i += 1 \r\n    n -= i \r\nprint(i-1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input()) \r\ni = 0 \r\nwhile(n>-1): \r\n    i += 1 \r\n    n -= i \r\nprint(i-1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input()) \r\ni = 0 \r\nwhile(n>-1): \r\n    i = i + 1 \r\n    n = n - i \r\nprint(i-1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input()) \r\ni = 0 \r\nwhile(n>-1): \r\n    i = i + 1 \r\n    n = n - i \r\nprint(i-1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\nn = 10000\nwhile x > ((n-1)**2 - (n-1))//2 and x!=1 and x!=2:\n    x -= n\n    n += 1\nprint(n - 9999)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 100\nwhile x > ((n-1)**2 - (n-1))//2 and x!=1 and x!=2:\n    x -= n\n    n += 1\nprint(n - 99)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 4\nwhile x > ((n-1)**2 - (n-1))//2 and x!=1 and x!=2:\n    x -= n\n    n += 1\nprint(n - 3)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 3\nwhile x > ((n-1)**2 - (n-1))//2 and x!=1 and x!=2:\n    x -= n\n    n += 1\nprint(n - 2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 10\nwhile x > ((n-1)**2 - (n-1))//2 and x!=1 and x!=2:\n    x -= n\n    n += 1\nprint(n - 9)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 1\nwhile x > ((n-1)**2 - (n-1))//2 and x!=1 and x!=2:\n    x -= n\n    n += 1\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 2\nwhile x > ((n-1)**2 - (n-1))//2 and x!=1 and x!=2:\n    x -= n\n    n += 1\nprint(n-1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 2\nwhile x > ((n-1)**2 - (n-1))//2 and x!=1 and x!=2:\n    x -= n\n    n += 1\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nk = 0\r\nfor n in range(0, 100):\r\n    if x > (n**2 - n)/2:\r\n        k +=1\r\nif x == 1 or x == 2:\r\n    print(1)\r\nelse:\r\n    print(k-1)\r\n    ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nk = 0\r\nfor n in range(0, 100):\r\n    if x > (n**2 - n)/2:\r\n        k +=1\r\nif x == 1 or x == 2:\r\n    print(1)\r\nelse:\r\n    print(k)\r\n    ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nk = 0\r\nfor n in range(0, 100):\r\n    if x > (n**2 - n)/2:\r\n        k +=1\r\nprint(k-1)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nk = 0\r\nfor n in range(0, 100):\r\n    if x > (n**2 - n)/2:\r\n        k +=1\r\nprint(k)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nk = 1\r\nfor n in range(0, 100):\r\n    if x > (n**2 - n)/2:\r\n        k +=1\r\nprint(k)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nk = 1\r\nfor n in range(0, 100):\r\n    if x > (n**2 - n)/2:\r\n        k +=1\r\nprint(k)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nk = 0\r\nfor n in range(0, 100):\r\n    if x > (n**2 - n)/2:\r\n        k +=1\r\nprint(k)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nn = 1\r\nwhile (n*(n-1))//2 < x and x!=1 and x!=2:\r\n    x -= n\r\n    n += 1\r\nif x == 1 or n == 2:\r\n    print(1)\r\nelse:\r\n    print(n-1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nn = 1\r\nwhile (n*(n-1))//2 < x and x!=1 and x!=2:\r\n    x -= n\r\n    n += 1\r\nif x == 1 or n == 2:\r\n    print(1)\r\nelse:\r\n    print(n-1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nn = 1\r\nwhile (n*(n-1))//2 < x and x!=1 and x!=2:\r\n    x -= n\r\n    n += 1\r\nprint(n-1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nn = 1\r\nwhile (n*(n-1))//2 < x and x!=1 and x!=2:\r\n    x -= n\r\n    n += 1\r\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 1\nwhile (n*(n-1))//2 < x:\n    x -= n\n    n += 1\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 0\nwhile (n*(n-1))//2 < x:\n    x -= n\n    n += 1\nprint(n-1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 0\nwhile (n*(n-1))//2 < x:\n    x -= n\n    n += 1\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 1\nwhile x >= (n**2 - n)//2 and x!=2 and x!=1:\n    x -= n\n    n += 1\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 1\nwhile x >= (n**2 - n)//2 and x!=2:\n    x -= n\n    n += 1\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 1\nwhile x > (n**2 + 2*n)//2 and x!=2:\n    x -= n\n    n += 1\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 1\nwhile x > (n**2 + 2*n)//2 and x!=2:\n    x -= n\n    n += 1\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 1\nwhile x > (n**2 + 2*n)//2:\n    x -= n\n    n += 1\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 1\nwhile x > (n**2 + 2*n)/2:\n    x -= n\n    n += 1\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 1\nwhile x > (n**2 + 2*n)/2:\n    n += 1\n    x -= n\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 1\nwhile x > n and (x > n + 1 or (x != 1 and x != 2)):\n    n += 1\n    x -= n\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 1\nwhile x > n and (x > n+1 or x < 3):\n    n += 1\n    x -= n\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 1\nwhile x > n and (x > n+1 or x <=2):\n    n += 1\n    x -= n\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 1\nwhile (x > (n**2-n)/2) and x < 3:\n    n += 1\n    x -= n\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 1\nwhile x > (n**2-n)/2 and x < 3:\n    n += 1\n    x -= n\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 1\nwhile x > (((n - 1)*n)/2) and x <=2:\n    n += 1\n    x -=n\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 1\nwhile x > ((((n - 1)*n)/2)+1) and x <=2:\n    n += 1\n    x -=n\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 1\nwhile x > ((n - 1)*n)/2 and x <=2:\n    n += 1\n    x -=n\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 1\nif x <= 2:\n    print(1)\nwhile x > ((n - 1)*n)/2:\n    n += 1\n    x -=n\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 1\nif x <= 2:\n    print(1)\nelif x > ((n - 1)*n)/2:\n    n += 1\n    x -=n\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 1\nif x <= 2:\n    print(1)\nelif x > ((n - 1)*n)/2:\n    n += 1\n    x -=n\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 1\nif x > ((n - 1)*n)/2:\n    n += 1\n    x -=n\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 1\nif x > (n + n**2)/2:\n    n += 1\n    x -=n\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nif x == 1:\n    print(1)\nelse:\n    n = (2*x - 0)//3\n    print(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nif x == 1:\n    print(1)\nelse:\n    n = (2*x - 1)//3\n    print(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nif x == 1:\n    print(1)\nelse:\n    n = (2*x - 1)//3\n    print(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nif x == 1:\n    print(1)\nelse:\n    n = (2*x + 1)//3\n    print(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = (2*x - 1)//3\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = (2*x + 1)//3\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = (2x + 1)//3\nprint(n)",
                "verdict": "Runtime Error"
            },
            {
                "code": "x = int(input())\nprint((2x+1)//3)",
                "verdict": "Runtime Error"
            },
            {
                "code": "x = int(input())\nprint((2x+1)//2)",
                "verdict": "Runtime Error"
            },
            {
                "code": "x = int(input())\nprint((2x-1)//3)",
                "verdict": "Runtime Error"
            },
            {
                "code": "x = int(input())\nn = 1\nwhile x - 1 > n:\n    n += 1\n    x -= n\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 1\nwhile x > n - 1:\n    n += 1\n    x -= n\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 1\nwhile x > x + (n -1):\n    n += 1\n    x -= n\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 1\nwhile x > n + 1:\n    n += 1\n    x -= n\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 1\nwhile x > n + 1:\n    x -= n\n    n += 1\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 1\nwhile x > n :\n    x -= n\n    n += 1\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 1\nwhile x - 1  > n + 1:\n    x -= n\n    n += 1\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 0\nwhile x - 1  > n:\n    x -= n\n    n += 1\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 1\nwhile x - 1  > n:\n    x -= n\n    n += 1\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 1\nwhile x > ((x - n) + 1):\n    x -= n\n    n += 1\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 1\nwhile x > n + 1:\n    x -= n\n    n += 1\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 1\nwhile x > n + 1:\n    n += 1\n    x -= n\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 1\nwhile x > n:\n    n += 1\n    x -= n\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\ni = 0\r\nwhile(n>-1):\r\n    i = i + 1\r\n    n = n - i\r\nprint(i-1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "quantity_of_cans = int(input())\r\na = 0\r\nheight = 0\r\nfor i in range(quantity_of_cans+1):\r\n    if i != 0:\r\n        if i % a == 0 and i // a == 1:\r\n            height += 1\r\n            a += height\r\n    else:\r\n        a = 1\r\n        height = 1\r\n\r\n\r\nprint(height-1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "quantity_of_cans = int(input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b-\u0432\u043e \u0431\u0430\u043d\u043e\u043a \"))\r\na = 1\r\nheight = 1\r\nfor i in range(1, quantity_of_cans + 1):\r\n    if i % a == 0 and i // a == 1:\r\n        height += 1\r\n        a += height\r\n\r\nprint(height - 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "quantity_of_cans = int(input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b-\u0432\u043e \u0431\u0430\u043d\u043e\u043a \"))\r\na = 1\r\nheight = 1\r\nfor i in range(1, quantity_of_cans + 1):\r\n    if i % a == 0 and i // a == 1:\r\n        height += 1\r\n        a += height\r\n\r\nprint(height)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "quantity_of_cans = int(input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b-\u0432\u043e \u0431\u0430\u043d\u043e\u043a \"))\r\na = 1\r\nheight = 1\r\nfor i in range(1, quantity_of_cans + 1):\r\n    if i % a == 0 and i // a == 1:\r\n        height += 1\r\n        a += height\r\n\r\nprint(f\"\u0412\u044b\u0441\u043e\u0442\u0430 \u0451\u043b\u043a\u0438 \u0438\u0437 \u0431\u0430\u043d\u043e\u043a - {height}\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\nc = 1\nd = 0\nb = 0\nwhile d <= a:\n    d += c\n    c += 1\n    b += 1\nprint(b-1)\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "a = int(input())\nc = 1\nd =0\nb = 0\nwhile d <= a:\nd += c\nc += 1\nb += 1\nprint(b-1)\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "a = int(input())\nc = 1\nd =0\nb = 0\nwhile d <= a:\nd += c\nc += 1\nb += 1\nprint(b-1)\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "a = int(input())\nc = 1\nd =0\nb = 0\nwhile d <= a:\nd += c\nc += 1\nb += 1\nprint(b-1)\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "a = int(input())\nb = a%5\nc = a//5\nd = 0\nwhile b%3!=0:\n    b+=5\n    c-=1\nprint(b//3, c)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\nb = a%5\nc = a//5\nd = 0\nwhile b%3!=0:\n    b+=5\n    c-=1\nprint(b//3, c)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(15)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(15)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(15)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(15)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(15)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(15)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(15)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(15)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(15)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nb = 0\r\nc = 1\r\nwhile c <= n:\r\n    b += 1\r\n    c += b\r\nif c - n <= 1:\r\n    print(b)\r\nelse:\r\n    print(b-1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nb = 0\r\nc = 1\r\nwhile c < n:\r\n    b += 1\r\n    c += b\r\nprint (b)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nb = 0\r\nc = 1\r\nwhile c < n:\r\n    b += 1\r\n    c += b\r\nprint (b)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\ni=0\nwhile (n>-1):\n    i=i+1\n    n=n-i\nprint(i-1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=6\nprint(n//2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=6\nprint(n//3)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=6\nprint(n\\3)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n=20\r\nprint(4)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=20\r\nprint(5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=20\r\nprint(6)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=20\r\na=3\r\nb=0\r\nh=0\r\nwhile b==n:\r\n    b=a\r\n    a=a+1\r\n    b=a+b\r\n    h=h+1\r\nprint(h)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=20\nm=n:2\no=0\nwhile m=0:\n    m=m-1\n    o=o+1\nprint(o)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n=20\nm=n:2\nwhile m=1 or m=0:\n    m=m-1\nprint(m)",
                "verdict": "Runtime Error"
            },
            {
                "code": "def makeLevel(i):\r\n        for stars in range(1, i + 2):\r\n                print('*' * stars)\r\ndef tree(n):\r\n        for level in range(1, n + 1):\r\n                makeLevel(level)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def makeLevel(n):\r\n  for i in range(1, n + 1):\r\n    print('*'*i)\r\ndef tree(n):\r\n  s=2\r\n  while s!=(n+2):\r\n    makeLevel(s)\r\n    s+=1\r\nn = int(input())\r\ntree(n)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "*\r\n**\r\n*\r\n**\r\n***\r\n*\r\n**\r\n***\r\n****",
                "verdict": "Runtime Error"
            },
            {
                "code": "def makeLevel(n):\r\na=[['*' for j in range(1,i+1)] for i in range(1,n+2)]\r\n\r\nfor x in range (n+1):\r\nprint(*a[x],sep='')\r\nreturn\r\n\r\ndef tree(n):\r\nfor i in range (1,n+1):\r\nmakeLevel(i)\r\nreturn\r\n\r\nn=int(input())\r\ntree(n)",
                "verdict": "Runtime Error"
            },
            {
                "code": "1\r\n2\r\n3\r\n4\r\n5\r\n6\r\ndef makeLevel(i):\r\n        for stars in range(1, i + 2):\r\n                print('*' * stars)\r\ndef tree(n):\r\n        for level in range(1, n + 1):\r\n                makeLevel(level)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\n10\r\n11\r\ndef makeLevel(n):\r\n    print(\"*\" * n)\r\n \r\n \r\ndef tree(n):\r\n    for i in range(1, n + 1):\r\n        makeLevel(i)\r\n \r\n \r\nn = int(input())\r\ntree(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "1\r\n2\r\n3\r\n4\r\n5\r\n6\r\n7\r\n8\r\n9\r\n10\r\n11\r\ndef makeLevel(n):\r\n    print(\"*\" * n)\r\n \r\n \r\ndef tree(n):\r\n    for i in range(1, n + 1):\r\n        makeLevel(i)\r\n \r\n \r\nn = int(input())\r\ntree(n)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=1\nn=2\nn=3\nn=4\nn=5\nn=6\nn=i",
                "verdict": "Runtime Error"
            },
            {
                "code": "for number in range(10):\r\n    print(number)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "s=int(input())\r\ng=1\r\nwhile s>0:\r\n\r\n    g+=1\r\n    s-=g\r\n    \r\nprint(g-1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "import math\r\nk=int(input())\r\nl=0\r\nwhile k>0:\r\n    \r\n    if k==2:\r\n        \r\n        l+=1\r\n        break\r\n    if k-math.ceil(k/2)==k:\r\n        \r\n        k+=1\r\n\r\n\r\n    else:\r\n        \r\n        k-=math.ceil(k/2)\r\n        l+=1\r\n\r\nprint(l)\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\nk=int(input())\r\nl=0\r\nwhile k>0:\r\n    print(k, math.ceil(k / 2))\r\n    if k==2:\r\n        \r\n        l+=1\r\n        break\r\n    if k-math.ceil(k/2)==k:\r\n        \r\n        k+=1\r\n\r\n\r\n    else:\r\n        \r\n        k-=math.ceil(k/2)\r\n        l+=1\r\n\r\nprint(l)\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\ni = 1\r\nwhile n > 0:\r\n    i += 1\r\n    n -= i\r\nprint(i-1)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\ni = 1\r\na = 0\r\nwhile n > 0:\r\n    a += 1\r\n    i += 1\r\n    n -= i\r\nprint(a)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\ni = 1\r\nd = []\r\nwhile n > 0:\r\n    d.append([i * '0'])\r\n    i += 1\r\n    n -= i\r\nprint(len(d))",
                "verdict": "Unknown Verdict (7)"
            },
            {
                "code": "a = int(input())\nc = 1\nd = 0\nb = 0\nwhile d <= a:\n    d += c\n    c += 1\n    b += 1\nprint(b-1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nk = 0\r\nwhile True:\r\n    if n-(k+1)>=0:\r\n        k+=1\r\n        n-=(k+1)\r\n    else:\r\n        break\r\nprint(k)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nprint(n//2)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\na=0\r\nb=0\r\nc=0\r\nwhile b==n:\r\n    a==a+1\r\n    b==a+1\r\n    if a+1==b:\r\n        c==c+1\r\nprint(c)\r\n    \r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nx = 0\r\ny = n + 1\r\nwhile c - x > 1:\r\n    d = x + (y-x)//2\r\n    if (1+d)*d//2 <= n:\r\n        x = d\r\n    else:\r\n        y = d\r\nprint(x)",
                "verdict": "Runtime Error"
            },
            {
                "code": "/",
                "verdict": "Runtime Error"
            },
            {
                "code": "0",
                "verdict": "Wrong Answer"
            },
            {
                "code": "0",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def makeLevel(n):\n    print(\"*\" * n)\n      \ndef tree(n):\n    for i in range(1, n+1):\n        makeLevel(i)\n        \nn=int(input())\ntree(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "put",
                "verdict": "Runtime Error"
            },
            {
                "code": "from math import *\nn = int(input())\npred = floor(-0.5 + sqrt(0.25 + 2 * n))\ns1 = (1 + pred) / 2 * pred\nif s1 > n:\n    pred -= 1\nprint(pred)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\ncur = 1\nans = 0\nwhile n > 0:\n    n -= cur\n    cur += 1\n    if n >= 0:\n        ans = cur - 1\nprint(ans)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\nif n == 0:\n    print(0)\n    exit(0)\ncur = 1\nwhile n > 0:\n    n -= cur\n    cur += 1\nprint(cur - 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nif n == 0:\n    print(0)\n    return\ncur = 1\nwhile n > 0:\n    n -= cur\n    cur += 1\nprint(cur - 1)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\ncur = 1\nwhile n > 0:\n    n -= cur\n    cur += 1\nprint(cur - 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nans = 0\nsum = 0\nfor i in range(1, n):\n    sum += i\n    if sum > n:\n        ans = i - 1\n        break\nprint(ans)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\nn = int(input())\nprint(math.floor(-0.5 + math.sqrt(0.25 + 2 * n)))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "https://pic.sort-me.org/6730b6ab-9264-4784-bb31-c9274a5841e9",
                "verdict": "Runtime Error"
            },
            {
                "code": "def Egor (a,b,c):\r\n    d=b**2 - 4*a*c\r\n    x1 = int((-b+d**0.5)/(2*a))\r\n    x2 = int((-b-d**0.5)/(2*a))\r\n\r\n    return [x1,x2]\r\ni=int(input())\r\nEg=max(Egor(1,1,-2*i))   \r\nprint(Eg)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def Egor (a,b,c):\r\n    d=b**2 - 4*a*c\r\n    x1 = int((-b+d**0.5)/(2*a))\r\n    x2 = int((-b-d**0.5)/(2*a))\r\n\r\n    return [x1,x2]\r\ni=(input())\r\ni=long(i)\r\nEg=max(Egor(1,1,-2*i))   \r\nprint(Eg)",
                "verdict": "Runtime Error"
            },
            {
                "code": "def Egor (a,b,c):\r\n    d=b**2 - 4*a*c\r\n    x1 = int((-b+d**0.5)/(2*a))\r\n    x2 = int((-b-d**0.5)/(2*a))\r\n\r\n    return [x1,x2]\r\ni=long(input())\r\nEg=max(Egor(1,1,-2*i))   \r\nprint(Eg)",
                "verdict": "Runtime Error"
            },
            {
                "code": "def Egor (a,b,c):\r\n    d=b**2 - 4*a*c\r\n    x1 = int((-b+d**0.5)/(2*a))\r\n    x2 = int((-b-d**0.5)/(2*a))\r\n\r\n    return [x1,x2]\r\ni=int(input())\r\nEg=max(Egor(1,1,-2*i))   \r\nprint(Eg)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def Egor (a,b,c):\r\n    d=b**2 - 4*a*c\r\n    x1 = int((-b+d**0.5)/(2*a))\r\n    x2 = int((-b-d**0.5)/(2*a))\r\n\r\n    return [x1,x2]\r\ni=input()\r\nEg=max(Egor(1,1,-2*i))   \r\nprint(Eg)",
                "verdict": "Runtime Error"
            },
            {
                "code": "from decimal import *\r\nn = Decimal(int(input()))\r\nprint(int((( (8 *n + 1) ** 0.5) - 1) /(2.0)))",
                "verdict": "Runtime Error"
            },
            {
                "code": "from decimal import *\r\nn = Decimal(int(input()))\r\nprint(int((( (8 *n + 1) ** 0.5) - 1) /(2.0))",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\n\nif n < 1:\n    print(0)\nelif n > 3:\n    for i in range(int(n / 2), 0, -1):\n        w = int((i * (i + 1)) / 2)\n\n        if w == n:\n            print(i)\n            break\n        elif w < n:\n            print(i)\n            break\nelse:\n    print(2 if n == 3 else 1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\ni, q = 1, 0\n\nwhile True:\n    if n >= i:\n        n -= i\n        q += 1\n    else:\n        break\n    \n    i += 1\n\nprint(q)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\nq = [n]\ni, r = 1, 0\n\nwhile True:\n    v = int(q[i - 1] / 2)\n\n    #print(f'; {v} - {q}')\n\n    if v == 0:\n        break\n    elif v == 1 and r >= 1:\n        if q[i - 1] > 1:\n            r -= 1\n            q.append(v)\n            break\n        else:\n            break\n    elif v < (q[i - 1] - v) < q[i - 2 if i > 1 else i - 1]:\n        q.append(v)\n        q[i - 1] = q[i - 1] - v\n    elif v == (q[i - 1] - v) and v - 1 != 0:\n        r += 1\n        q.append(v - 1)\n        q[i - 1] = q[i - 1] - v\n    \n    if v == 1:\n        break\n    \n    i += 1\n\n#print(f'{len(q)}, {q}')\nprint(len(q))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math \r\nn = int(input())\r\nprint(int((-1 + math.sqrt(1 + 8*n)))//2)\r\n  \r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math \r\nn = int(input())\r\nprint(int((-1 + math.sqrt(1 + 8*n))//2)\r\n  \r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "import math \r\nn = int(input())\r\nprint(int((-1 + math.sqrt(1 + 8*x))//2)\r\n  \r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "import math \r\nn = int(input())\r\nprint(int((1 + math.sqrt(1 + 8*n))//2 - 1))\r\n  \r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math \r\nn = int(input())\r\nprint((1 + math.sqrt(1 + 8*n))//2 - 1)\r\n  \r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nl = 1\r\nr = n\r\nwhile r - l > 1:\r\n    mid = (l+r)//2\r\n    if mid*(mid+1) <= 2*n:\r\n        l=mid\r\n    else:\r\n        r=mid\r\nprint(l)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\nprint(int((1+8*n)**0.5 - 1)//2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\nprint(int((1+8*n)**0.5 - 1)//2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nl = 1\nr = n+1\nwhile (r - l > 1):\n    m = (l+r)//2\n    if (m*(m+1))//2 > n:\n        r = m\n    else:\n        l = m\nprint(l)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nl = 1\nr = n\nwhile (r - l > 1):\n    m = (l+r)//2\n    if ( (m*(m+1))//2 > n):\n        r = m\n    else:\n        l = m\nprint(l)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt\n\nn = int(input())\n\nres = int((-1 + sqrt(1 + 8*n))/2)\n\nif (res+res*res)/2 > n:\n    res -= 1\nelse:\n    att_res = res+1\n    if (att_res+att_res*att_res)/2 < n:\n        res += 1\n\nprint(res)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import sqrt\n\nn = int(input())\n\nprint(int((-1 + sqrt(1 + 8*n))/2))\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nl = 0\r\nr = n\r\nif n == 1:\r\n    print(1)\r\n    exit()\r\n\r\nwhile r - l > 1:\r\n    print(l, r)\r\n    m = (l + r) // 2\r\n    count = (m + 1) * (m // 2) + (m % 2) * ((m + 1) // 2)\r\n    print(count)\r\n    if count <= n:\r\n        l = m\r\n    else:\r\n        r = m\r\n\r\nprint(l)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nl = 0\r\nr = n\r\n\r\nwhile r - l > 1:\r\n    m = (l + r) // 2\r\n    count = (m + 1) * (m // 2) + (m % 2) * ((m + 1) // 2)\r\n    if count <= n:\r\n        l = m\r\n    else:\r\n        r = m\r\n\r\nprint(l)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = 1\r\ncount = 0\r\ns = 0\r\nwhile s <= n:\r\n    s += a\r\n    a += 1\r\n    count += 1\r\n\r\nprint(count - 1)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nif n == 0:\r\n    print(0)\r\n    quit(0)\r\n\r\ni = 1\r\ncnt = 1\r\nwhile n >= i:\r\n    if n-i > i:\r\n        cnt += 1\r\n        n -= i\r\n        i += 1\r\n    else:\r\n        i += 1\r\n# if cnt == 0:\r\n#     cnt += 1\r\nprint(cnt)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\n\r\nprint(n//3+1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def func(k):\n    return ((1+k)*k)//2\n\nn = int(input())\nk = (1 + n)//2\nminim = 1\nmaxim = n\nwhile not (func(k) <= n and func(k+1) > n)\n:\n    if func(k) < n:\n        minim = k\n    else:\n        maxim = k\n    k = (minim+maxim)//2\nprint(k)",
                "verdict": "Runtime Error"
            },
            {
                "code": "def func(k):\n    return ((1+k)*k)//2\n\nn = int(input())\nk = (1 + n)//2\nminim = 1\nmaxim = n\nwhile not func(k) <= n and func(k+1) > n:\n    if func(k) < n:\n        minim = k\n    else:\n        maxim = k\n    k = (minim+maxim)//2\nprint(k)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def func(k):\n    return ((1+k)*k)//2\n\nn = int(input())\nk = (1 + n)//2\nminim = 1\nmaxim = n\nwhile not func(k) <= n and func(k+1) > n:\n    if func(k) < n:\n        minim = k\n    else:\n        maxim = k\n    k = (minim+maxim)//2\nprint(k)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\nn = int(input())\nprint((int(math.sqrt(1 + 8 * n)) - 1)//2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\nn = int(input())\nprint(int(math.sqrt(1 + 8 * n))//2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\nn = int(input())\nprint(int(math.sqrt(1 + 8 * n))/2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nprint(int(math.sqrt(1 + 8 * n))/2)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input()))\nprint(int(math.sqrt(1 + 8 * n))/2)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input))\nprint(int(math.sqrt(1 + 8 * n))/2)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nh = 0\r\nl = 1\r\n\r\nwhile n >= l:\r\n    n -= l\r\n    l += 1\r\n    h += 1\r\n\r\nprint(h)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nq = 0\r\nvisota = 1\r\nwhile n >= visota:\r\n    n -= visota\r\n    visota += 1\r\n    q += 1\r\nprint(q)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "import math\r\n\r\nn = int(input())\r\n# l = n (n + 1) / 2\r\n# n^2 + n - 2l = 0\r\n# D = 1 + 8l\r\n# n = (-1 + sqrt(1 + 8l)) / 2\r\nif n >= 0:\r\n    l = math.floor((-1 + (1 + 8 * n) ** 0.5) / 2)\r\n    print(l)\r\nelse:\r\n    print(0)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\n\r\nn = int(input())\r\n# l = n (n + 1) / 2\r\n# n^2 + n - 2l = 0\r\n# D = 1 + 8l\r\n# n = (-1 + sqrt(1 + 8l)) / 2\r\nl = math.floor((-1 + (1 + 8 * n) ** 0.5) / 2)\r\nprint(l)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\n\r\nn = int(input())\r\n# l = n (n + 1) / 2\r\n# n^2 + n - 2l = 0\r\n# D = 1 + 8l\r\n# n = (-1 + sqrt(1 + 8l)) / 2\r\nprint(math.ceil((-1 + (1 + 8 * n) ** 0.5) / 2))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nlevel = 0\r\ncount = n\r\nwhile count >= level:\r\n    level += 1\r\n    count -= level\r\nprint(level)\r\n    ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "int n{10};\nfor(int {};i<n;++i){\n    n-=i+1;\n    if(n<=0){\n        return i+1;\n    }\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "d = [i for i in range(1, int(input('n= ')) + 1)]\r\ni = 0\r\n \r\nwhile i < len(d) + 1:\r\n    print(' '.join(list(map(str,d[: i + 1]))))\r\n    del(d[: i + 1])\r\n    i += 1",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def Try(x, n):\n    cur = 1\n    sum = 0\n    while(x):\n        x -= 1\n        sum += cur\n        print(sum)\n        if(sum > n):\n            return 0\n        cur+=1\n    return 1\n\n\nn = 0\n\nn = int(input())\n\nl = 1\nr = max(1, n * (n - 1) / 2)\n\nwhile(l != r):\n    m = int((l + r) / 2)\n    \n    if(Try(m, n) == 1):\n        l = m\n    else:\n        r = m - 1\n\nprint(l)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "def Try(x, n):\n    cur = 1\n    sum = 0\n    while(x):\n        x -= 1\n        sum += cur\n        if(sum > n):\n            return 0\n        cur+=1\n    return 1\n\n\nn = 0\n\nn = int(input())\n\nl = 0\nr = n * (n - 1) / 2\n\nwhile(l != r):\n    m = int((l + r) / 2)\n    \n    if(Try(m, n) == 1):\n        l = m\n    else:\n        r = m - 1\n\nprint(l)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\n\r\nn = int(input())\r\nheight = math.ceil(math.log2(n + 1))\r\nprint(height)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\n\r\nn = int(input())\r\nheight = math.ceil(math.log2(n + 1))\r\nprint(height)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\n\r\nn = int(input())\r\nheight = math.ceil(math.log2(n + 1))\r\nprint(height)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\n\r\nn = int(input())\r\nheight = int(math.sqrt(2 * n + 0.25) - 0.5)\r\nprint(height)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nheight = int(((8 * n + 1) ** 0.5 - 1) // 2)\r\nprint(height)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nheight = int(((8 * n + 1) ** 0.5 - 1) // 2)\r\nprint(height)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def findMaxHeight(n):\r\n    maxHeight = 1\r\n    while (maxHeight * (maxHeight + 1)) // 2 <= n:\r\n        maxHeight += 1\r\n    return maxHeight - 1\r\n\r\nn = int(input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0430\u043d\u043e\u0447\u0435\u043a: \"))\r\nheight = findMaxHeight(n)\r\nprint(\"\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0432\u044b\u0441\u043e\u0442\u0430 \u0451\u043b\u043a\u0438:\", height)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\n\r\ndef findMaxHeight(n):\r\n    maxHeight = int((-1 + math.sqrt(1 + 8 * n)) / 2)\r\n    return maxHeight\r\n\r\nn = float(input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0430\u043d\u043e\u0447\u0435\u043a: \"))\r\nheight = findMaxHeight(n)\r\nprint(\"\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0432\u044b\u0441\u043e\u0442\u0430 \u0451\u043b\u043a\u0438: \", height)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nw = 1\nres = 1\nw2 = 0\nwhile True:\n    w += 1\n    if (w2 + w) >= n:\n        break\n    else:\n        w2 += w\n        res += 1\nprint(res)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nw = 1\nres = 1\nw2 = 0\nwhile True:\n    w += 1\n    if (w2 + w) >= n:\n        break\n    else:\n        w2 += w\n        res += 1\nprint(res)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nw = 1\nres = 0\nw2 = 0\nwhile True:\n    if (w2 + w) >= n:\n        break\n    else:\n        w += 1\n        w2 += y\n        res += 1\nprint(res)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\ny = 1\nres = 0\nwhile True:\n    y += 1\n    if res + y >= n:\n        break\n    else:\n        y += 1\nprint(res)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\ny = 1\nres = 0\nwhile True:\n    y += 1\n    if res + y >= n:\n        break\n    else:\n        y += 1\nprint(res)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\ny = 1\nres = 0\nwhile True:\n    y += 1\n    if res + y => n:\n        break\n    else:\n        y += 1\nprint(res)",
                "verdict": "Runtime Error"
            },
            {
                "code": "import math\r\nn = int(input())\r\nh = 0\r\n# while (h + 1) * (h + 2) / 2 <= n:\r\n#     h += 1\r\n# print(h)\r\n\r\nprint(int((-1 + math.sqrt(1 + 8 * n)) // 2))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\nn = int(input())\r\nh = 0\r\n# while (h + 1) * (h + 2) / 2 <= n:\r\n#     h += 1\r\n# print(h)\r\nprint(int((-1 + math.sqrt(1 + 8 * n)) / 2))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\nn = int(input())\r\nh = 0\r\n# while (h + 1) * (h + 2) / 2 <= n:\r\n#     h += 1\r\n# print(h)\r\nprint(int((-1 + math.sqrt((1 + 8) * n)) / 2))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\nn = int(input())\nh = 0\n# while (h + 1) * (h + 2) / 2 <= n:\n#     h += 1\n# print(h)\nprint(int(-1 + sqrt((1 + 8) * n)) / 2))",
                "verdict": "Runtime Error"
            },
            {
                "code": "import math\nn = int(input())\nh = 0\n# while (h + 1) * (h + 2) / 2 <= n:\n#     h += 1\n# print(h)\nprint(int((-1 + sqrt((1 + 8) * n)) / 2))",
                "verdict": "Runtime Error"
            },
            {
                "code": "import math\nn = int(input())\nh = 0\n# while (h + 1) * (h + 2) / 2 <= n:\n#     h += 1\n# print(h)\nprint(sqrt((1 + 8) * n))",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\nh = 0\nwhile (h + 1) * (h + 2) / 2 <= n:\n    h += 1\nprint(h)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "a = int(input())\r\nif a == 1:\r\n    print(1)\r\nelse:\r\n    print(a // 2)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\r\nif a == 1:\r\n    print(1)\r\nelse:\r\n    print(a // 2)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "if int(input()) == 1 print(1) else print(int(input()) // 2)",
                "verdict": "Runtime Error"
            },
            {
                "code": "print(int(input()) // 2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\nif a == 1:\n    print(1)\nelse:\n    print(a // 2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def max_tree_height(n):\r\n    height = 0 \r\n    total = 0 \r\n    while total + (height + 1) <= n:\r\n        height += 1\r\n        total += height\r\n    \r\n    return height\r\n\r\nn = int(input().strip())\r\n\r\nprint(max_tree_height(n))\r\n\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "def max_tree_height(n):\r\n    height = 0 \r\n    total = 0 \r\n    while total + (height + 1) <= n:\r\n        height += 1\r\n        total += height\r\n    \r\n    return height\r\n\r\nn = int(input().strip())\r\n\r\n# \u0412\u044b\u0432\u043e\u0434 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0439 \u0432\u044b\u0441\u043e\u0442\u044b\r\nprint(max_tree_height(n))\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "#include <iostream>\r\n#include <vector>\r\n#include <map>\r\n\r\nusing namespace std;\r\n\r\nusing ll = long long;\r\nusing lll = __int128;\r\n\r\nsigned main() {\r\n\tios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n\r\n\tll n1; cin >> n1;\r\n\tlll l = 0, r = 1e17, n = n1;\r\n\twhile (l + 1 < r) {\r\n\t\tlll mid = (l + r) >> 1;\r\n\t\tif ((mid + 1) * mid / 2 <= n)\r\n\t\t\tl = mid;\r\n\t\telse\r\n\t\t\tr = mid;\r\n\t}\r\n\tcout << ll(l);\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "a = int(input())\nl = 0, r = 1e20\nwhile l+1<r:\n    mid = (l+r)//2\n    if (mid+1)*mid//2 <= n:\n        l = mid\n    else:\n        r = mid\nprint(l)",
                "verdict": "Runtime Error"
            },
            {
                "code": "s = int(input())\nd = 1 + 4 * 2 * s\nx = (-1 + d**0.5) / 2\nprint(int(x))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nc = 0\nfor i in range(1, n + 10):\n    if n < i:\n        print(c)\n        break\n    n -= i\n    c += 1",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\nc = 0\nfor i in range(1, n + 10):\n    n -= i\n    if n <= 0:\n        print(c)\n        break\n    c += 1",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nc = 0\nfor i in range(1, n + 10):\n    if n <= 0:\n        print(c)\n        break\n    n -= i\n    c += 1",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nc = 0\nfor i in range(1, n + 10):\n    if n <= 0:\n        print(c)\n    n -= i\n    c += 1",
                "verdict": "Wrong Answer"
            }
        ]
    },
    {
        "task_id": 41,
        "description": "\u00cb\u0438\u043c\u0438\u044f \u0433\u043e\u0442\u043e\u0432\u0438\u0442 \u0444\u0435\u0439\u0435\u0440\u0432\u0435\u0440\u043a \u0434\u043b\u044f \u0444\u0435\u0441\u0442\u0438\u0432\u0430\u043b\u044f \u0432 \u0418\u043d\u0430\u0434\u0437\u0443\u043c\u0435. \u0412\u043e\u043a\u0440\u0443\u0433 \u043d\u0435\u0451 \u0441\u0442\u043e\u0438\u0442 $n$ \u0441\u0442\u043e\u043b\u043e\u0432 \u0441 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u0430\u043c\u0438 \u0434\u043b\u044f \u0438\u0437\u0433\u043e\u0442\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0444\u0435\u0439\u0435\u0440\u0432\u0435\u0440\u043a\u043e\u0432. \u041d\u0430 \u043a\u0430\u0436\u0434\u043e\u043c \u0441\u0442\u043e\u043b\u0435 \u0441\u0442\u043e\u0438\u0442 \u0440\u043e\u0432\u043d\u043e \u043e\u0434\u0438\u043d \u0438\u043d\u0433\u0440\u0435\u0434\u0438\u0435\u043d\u0442. \n\n\u0421\u0451\u0433\u0443\u043d \u0420\u0430\u0439\u0434\u044d\u043d \u043f\u043e\u043f\u0440\u043e\u0441\u0438\u043b\u0430 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0441\u0430\u043c\u044b\u0439 \u0433\u0440\u0430\u043d\u0434\u0438\u043e\u0437\u043d\u044b\u0439 \u0444\u0435\u0439\u0435\u0440\u0432\u0435\u0440\u043a \u0432 \u0438\u0441\u0442\u043e\u0440\u0438\u0438, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u00cb\u0438\u043c\u0438\u044f \u0440\u0435\u0448\u0438\u043b\u0430 \u0441\u043c\u0435\u0448\u0430\u0442\u044c \u0432\u0441\u0435 \u0438\u043d\u0433\u0440\u0435\u0434\u0438\u0435\u043d\u0442\u044b \u0441\u0440\u0430\u0437\u0443. \u041d\u043e \u0434\u0435\u043b\u0430\u0442\u044c \u044d\u0442\u043e \u043d\u0443\u0436\u043d\u043e \u0430\u043a\u043a\u0443\u0440\u0430\u0442\u043d\u043e, \u0432\u0435\u0434\u044c \u0443 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0438\u043d\u0433\u0440\u0435\u0434\u0438\u0435\u043d\u0442\u0430 \u0435\u0441\u0442\u044c **\u0443\u0440\u043e\u0432\u0435\u043d\u044c \u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438** \u2013 \u0447\u0442\u043e\u0431\u044b \u0432\u0437\u0440\u044b\u0432 \u043d\u0435 \u0441\u043b\u0443\u0447\u0438\u043b\u0441\u044f \u0440\u0430\u043d\u044c\u0448\u0435 \u0432\u0440\u0435\u043c\u0435\u043d\u0438, \u043d\u0430 \u043c\u043e\u043c\u0435\u043d\u0442 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0432 \u0444\u0435\u0439\u0435\u0440\u0432\u0435\u0440\u043a \u043d\u043e\u0432\u043e\u0433\u043e \u0438\u043d\u0433\u0440\u0435\u0434\u0438\u0435\u043d\u0442\u0430 \u0442\u0430\u043c \u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u0438\u043d\u0433\u0440\u0435\u0434\u0438\u0435\u043d\u0442\u043e\u0432 \u0441 **\u0443\u0440\u043e\u0432\u043d\u0435\u043c \u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438** \u0432\u044b\u0448\u0435.\n\n\u0418\u043d\u0433\u0440\u0435\u0434\u0438\u0435\u043d\u0442\u044b \u0434\u043b\u044f \u0444\u0435\u0439\u0435\u0440\u0432\u0435\u0440\u043a\u043e\u0432 - \u043e\u0447\u0435\u043d\u044c \u043e\u043f\u0430\u0441\u043d\u044b\u0435 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u00cb\u0438\u043c\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \u0434\u0435\u043b\u0430\u0442\u044c \u0441 \u043d\u0438\u043c\u0438 \u0432\u0441\u0435\u0433\u043e \u0434\u0432\u0430 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f:\n* \u041f\u0435\u0440\u0435\u043c\u0435\u0441\u0442\u0438\u0442\u044c\u0441\u044f \u043a \u0438\u043d\u0433\u0440\u0435\u0434\u0438\u0435\u043d\u0442\u0443, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0440\u0430\u0441\u043f\u043b\u043e\u0436\u0435\u043d \u0441\u043b\u0435\u0432\u0430 \u0438\u043b\u0438 \u0441\u043f\u0440\u0430\u0432\u0430 \u043e\u0442 \u0442\u043e\u0433\u043e, \u043e\u043a\u043e\u043b\u043e \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0441\u0442\u043e\u0438\u0442 \u00cb\u0438\u043c\u0438\u044f. \u0422\u0430\u043a \u043a\u0430\u043a \u0438\u043d\u0433\u0440\u0435\u0434\u0438\u0435\u043d\u0442\u044b \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u044b \u043f\u043e \u043a\u0440\u0443\u0433\u0443, \u0442\u043e, \u0441\u0442\u043e\u044f \u0440\u044f\u0434\u043e\u043c \u0441\u043e \u0441\u0442\u043e\u043b\u043e\u043c \u043f\u043e\u0434 \u043d\u043e\u043c\u0435\u0440\u043e\u043c $n$, \u043e\u043d\u0430 \u043c\u043e\u0436\u0435\u0442 \u043f\u0435\u0440\u0435\u043c\u0435\u0441\u0442\u0438\u0442\u044c\u0441\u044f \u043a $n - 1$-\u043c\u0443 \u0438\u043b\u0438 \u043f\u0435\u0440\u0432\u043e\u043c\u0443 \u0441\u0442\u043e\u043b\u0443 (\u0430 \u0441\u0442\u043e\u044f \u0443 \u043f\u0435\u0440\u0432\u043e\u0433\u043e - \u043a\u043e \u0432\u0442\u043e\u0440\u043e\u043c\u0443 \u0438\u043b\u0438 \u043a $n$-\u043c\u0443).\n* \u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0438\u043d\u0433\u0440\u0435\u0434\u0438\u0435\u043d\u0442, \u043e\u043a\u043e\u043b\u043e \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0441\u0435\u0439\u0447\u0430\u0441 \u0441\u0442\u043e\u0438\u0442 \u00cb\u0438\u043c\u0438\u044f, \u0432 \u0444\u0435\u0439\u0435\u0440\u0432\u0435\u0440\u043a.\n\n\u0418\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u00cb\u0438\u043c\u0438\u044f \u0441\u0442\u043e\u0438\u0442 \u0443 \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0441\u0442\u043e\u043b\u0430. \u0422\u0430\u043a \u043a\u0430\u043a \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043e\u0447\u0435\u043d\u044c \u043c\u0430\u043b\u043e, \u00cb\u0438\u043c\u0438\u044f \u0434\u043e\u043b\u0436\u043d\u0430 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0444\u0435\u0439\u0435\u0440\u0432\u0435\u0440\u043a \u043a\u0430\u043a \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u0441\u0442\u0440\u0435\u0435. \u041e\u043d\u0430 \u0445\u043e\u0447\u0435\u0442 \u0437\u043d\u0430\u0442\u044c, \u043a\u0430\u043a\u043e\u0435 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0435\u043d\u0438\u0439 \u043c\u0435\u0436\u0434\u0443 \u0441\u0442\u043e\u043b\u0430\u043c\u0438 \u0441 \u0438\u043d\u0433\u0440\u0435\u0434\u0438\u0435\u043d\u0442\u0430\u043c\u0438 \u0435\u0439 \u043d\u0443\u0436\u043d\u043e \u0441\u0434\u0435\u043b\u0430\u0442\u044c, \u0447\u0442\u043e\u0431\u044b \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0444\u0435\u0439\u0435\u0440\u0432\u0435\u0440\u043a.\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u0447\u0438\u0441\u043b\u043e $n$ - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0442\u043e\u043b\u043e\u0432 \u0441 \u0438\u043d\u0433\u0440\u0435\u0434\u0438\u0435\u043d\u0442\u0430\u043c\u0438 ($1 \\le n \\le 5 \\cdot 10^3$).\n\n\u0412\u043e \u0432\u0442\u043e\u0440\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e $n$ \u0447\u0438\u0441\u0435\u043b $a_1, a_2, \\dots, a_n$, \u0433\u0434\u0435 $a_i$ - \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438 \u0438\u043d\u0433\u0440\u0435\u0434\u0438\u0435\u043d\u0442\u0430, \u0441\u0442\u043e\u044f\u0449\u0435\u0433\u043e \u043d\u0430 $i$-\u0442\u043e\u043c \u0441\u0442\u043e\u043b\u0435 ($1 \\le a_i \\le 10^9$).\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e \u2013 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u043f\u0435\u0440\u0435\u043c\u0435\u0449\u0435\u043d\u0438\u0439 \u043c\u0435\u0436\u0434\u0443 \u0441\u0442\u043e\u043b\u0430\u043c\u0438, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u043e\u0436\u0435\u0442 \u0441\u043e\u0432\u0435\u0440\u0448\u0438\u0442\u044c \u00cb\u0438\u043c\u0438\u044f \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0444\u0435\u0439\u0440\u0432\u0435\u0440\u043a\u0430.",
        "solutions": [
            {
                "code": "#include <bits/stdc++.h>\n \n#define forn(i, n) for (int i = 0; i < int(n); i++)\n#define ford(i, n) for (int i = int(n) - 1; i >= 0; i--)\n#define fore(i, l, r) for (int i = int(l); i < int(r); i++)\n#define correct(x, y, n, m) (0 <= (x) && (x) < (n) && 0 <= (y) && (y) < (m))\n#define all(a) (a).begin(), (a).end()\n#define sz(a) int((a).size())\n#define pb(a) push_back(a)\n#define mp(x, y) make_pair((x), (y))\n#define x first\n#define y second\n \nusing namespace std;\n \ntypedef long long li;\ntypedef long double ld;\ntypedef pair<int, int> pt;\n \ntemplate<typename X> inline X abs(const X& a) { return a < 0? -a: a; }\ntemplate<typename X> inline X sqr(const X& a) { return a * a; }\n \nconst int INF = int(1e9);\nconst li INF64 = li(1e18);\nconst ld EPS = 1e-9, PI = 3.1415926535897932384626433832795;\n \nconst int N = 3020;\n \nint n, s;\nint a[N];\n \ninline bool read() {\n    if (!(cin >> n)) return false;\n    s = 0;\n    forn(i, n) assert(scanf(\"%d\", &a[i]) == 1);\n    return true;\n}\n \ninline int dist(int a, int b) {\n    int d = abs(a - b);\n    d = min(d, n - d);\n    return d;\n}\n \ninline int odist(int a, int b) {\n    int d = b - a;\n    (d < 0) && (d += n);\n    return d;\n}\n \nint nt[N];\nint z1[N], z2[N];\n \nint solve1(int);\n \nint solve2(int v) {\n    int& ans = z2[v];\n    if (ans != -1) return ans;\n    if (nt[v] == INT_MAX) return ans = 0;\n \n    ans = INF;\n \n    forn(i, n)\n        if (a[i] == nt[v]) {\n            ans = min(ans, solve1(i) + dist(v, i));\n        }\n \n    return ans;\n}\n \nint solve1(int v) {\n    int& ans = z1[v];\n    if (ans != -1) return ans;\n \n    ans = INF;\n \n    for (int d = -1; d <= +1; d += 2) {\n        int u = -1;\n        fore(i, 1, n) {\n            int vv = (v + i * d + n) % n;\n            if (a[vv] == a[v]) {\n                u = vv;\n                break;\n            }\n        }\n        if (u == -1)\n            ans = min(ans, solve2(v));\n        else {\n            int dt = d == 1 ? odist(u, v) : odist(v, u);\n            ans = min(ans, solve2(u) + dt);\n        }\n    }\n \n    return ans;\n}\n \nvoid restore1(int);\n \nvoid restore2(int v) {\n    int& ans = z2[v];\n    assert(ans != -1);\n    if (nt[v] == INT_MAX) return;\n \n    forn(i, n)\n        if (a[i] == nt[v] && ans == solve1(i) + dist(v, i)) {\n            int d = i - v;\n            (d < 0) && (d += n);\n            if (d <= n - d) printf(\"+%d\\n\", d);\n            else printf(\"-%d\\n\", n - d);\n            return restore1(i);;\n        }\n \n    throw;\n}\n \nvoid restore1(int v) {\n    int& ans = z1[v];\n    assert(ans != -1);\n \n    for (int d = -1; d <= +1; d += 2) {\n        int u = -1;\n        fore(i, 1, n) {\n            int vv = (v + i * d + n) % n;\n            if (a[vv] == a[v]) {\n                u = vv;\n                break;\n            }\n        }\n        if (u == -1) {\n            if (ans == solve2(v)) {\n                return restore2(v);\n            }\n        } else {\n            int dt = d == 1 ? odist(u, v) : odist(v, u);\n            if (ans == solve2(u) + dt) {\n                int cdt = 0;\n                fore(i, 1, n) {\n                    int vv = (v + i * (-d) + n) % n;\n                    cdt++;\n                    if (a[vv] == a[v]) {\n                        printf(\"%c%d\\n\", d == +1 ? '-' : '+', cdt);\n                        cdt = 0;\n                    }\n                }\n                return restore2(u);\n            }\n        }\n    }\n \n    throw;\n}\ninline void solve() {\n    memset(z1, -1, sizeof(z1));\n    memset(z2, -1, sizeof(z2));\n \n    forn(i, n) {\n        nt[i] = INT_MAX;\n        forn(j, n)\n            if (a[j] > a[i])\n                nt[i] = min(nt[i], a[j]);\n    }\n \n    //cerr << solve1(0) << endl;\n    //exit(0);\n \n    int minv = *min_element(a, a + n);\n    int ans = INF;\n    forn(i, n)\n        if (a[i] == minv) {\n            ans = min(ans, solve1(i) + dist(s, i));\n        }\n \n    cout << ans << endl;\n}\n \nint main() {\n#ifdef SU1\n    assert(freopen(\"input.txt\", \"rt\", stdin));\n    //assert(freopen(\"output.txt\", \"wt\", stdout));\n#endif\n    \n    cout << setprecision(10) << fixed;\n    cerr << setprecision(5) << fixed;\n \n    while (read()) {\n        solve();\n        //break;\n    }\n    \n    return 0;\n}",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\ns = 1\n\na = list(map(int, input().split()))\n\npositions = {0: [n]}\n\nfor i in range(n):\n    positions[a[i]] = positions.get(a[i], []) + [i]\n\n\ndef best_distance(x, y):\n    return min(abs(x - y), n - abs(x - y))\n\n\nkeys = [0] + list(sorted(set(a)))\ndp = [10**10] * n + [0]\n\nfor i in range(len(keys) - 1):\n    x_positions, y_positions = positions[keys[i]], positions[keys[i + 1]]\n\n    for j in range(len(y_positions)):\n        y1, y2 = y_positions[j], y_positions[(j + 1) % len(y_positions)]\n        \n        distance = (y1 - y2) % n\n        \n        for x in x_positions:\n            dp[y1] = min(dp[y1], dp[x] + best_distance(x, y2) + distance)\n            dp[y2] = min(dp[y2], dp[x] + best_distance(x, y1) + distance)\n\n\nanswer = 10**10\nfor i in positions[keys[-1]]:\n    answer = min(answer, dp[i])\n\nprint(answer)\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\ns = 1\n\na = list(map(int, input().split()))\n\npositions = {0: [n]}\n\nfor i in range(n):\n    positions[a[i]] = positions.get(a[i], []) + [i]\n\n\ndef best_distance(x, y):\n    return min(abs(x - y), n - abs(x - y))\n \n\nkeys = [0] + list(sorted(set(a)))\ndp = [10**10] * n + [0]\n\nfor i in range(len(keys) - 1):\n    x_positions, y_positions = positions[keys[i]], positions[keys[i + 1]]\n\n    for y in y_positions:\n        for x in x_positions:\n            dp[y] = min(dp[y], dp[x] + best_distance(x, y))\n\n\nanswer = 10**10\nfor i in positions[keys[-1]]:\n    answer = min(answer, dp[i])\n\nprint(answer)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\ns = 1\n\na = list(map(int, input().split()))\n\nd = {0: [0]}\n\ndp = [(10**10, 0, 0)] * n\n\nfor i in range(n):\n    d[a[i]] = d.get(a[i], []) + [i]\n\n\ndef best_distance(x, y):\n    return min(abs(x - y), n - abs(x - y))\n\n\nkeys = [0] + list(sorted(set(a)))\n\nfor i in range(len(keys) - 1):\n    lx, ly = d[keys[i]], d[keys[i + 1]]\n\n    for x in lx:\n        addon = dp[x][0] if keys[i] != 0 else 0\n        if len(ly) > 1:\n            for dr in (-1, 1):\n                for y1, y2 in zip(*[ly, ly[1:] + ly[:1]][::dr]):\n                    dp[y1] = min(dp[y1], (addon + best_distance(x, y2) + ((y1 - y2) * dr) % n, x, dr))\n        else:\n            y = ly[0]\n            dp[y] = min(dp[y], (addon + best_distance(x, y), x, 0))\n\nprint(min(dp[i] for i in range(n) if a[i] == keys[-1])[0])\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\ns = 1\n\na = list(map(int, input().split()))\n\nd = {0: [0]}\n\ndp = [(10**10, 0, 0)] * n\n\nfor i in range(n):\n    d[a[i]] = d.get(a[i], []) + [i]\n\n\ndef best_distance(x, y):\n    return min(abs(x - y), n - abs(x - y))\n\n\nkeys = [0] + list(sorted(set(a)))\n\nfor i in range(len(keys) - 1):\n    lx, ly = d[keys[i]], d[keys[i + 1]]\n\n    for x in lx:\n        addon = dp[x][0] if keys[i] != -10**10 else 0\n        if len(ly) > 1:\n            for dr in (-1, 1):\n                for y1, y2 in zip(*[ly, ly[1:] + ly[:1]][::dr]):\n                    dp[y1] = min(dp[y1], (addon + best_distance(x, y2) + ((y1 - y2) * dr) % n, x, dr))\n        else:\n            y = ly[0]\n            dp[y] = min(dp[y], (addon + best_distance(x, y), x, 0))\n\nprint(min(dp[i] for i in range(n) if a[i] == keys[-1])[0])\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\ns = 1\n\na = list(map(int, input().split()))\n\nd = dict()\n\ndp = [(10**10, 0, 0)] * n\n\nfor i in range(n):\n    d[a[i]] = d.get(a[i], []) + [i]\n\n\ndef dist(x, y):\n    return min(abs(x - y), n - abs(x - y))\n\n\nkeys = [-10**10] + list(sorted(set(a)))\n\nfor i in range(len(keys) - 1):\n    lx = [s - 1] if keys[i] == -10**10 else d[keys[i]]\n    ly = d[keys[i + 1]]\n\n    for x in lx:\n        addon = dp[x][0] if keys[i] != -10**10 else 0\n        if len(ly) > 1:\n            for dr in (-1, 1):\n                for y1, y2 in zip(*[ly, ly[1:] + ly[:1]][::dr]):\n                    dp[y1] = min(dp[y1], (addon + dist(x, y2) + ((y1 - y2) * dr) % n, x, dr))\n        else:\n            y = ly[0]\n            dp[y] = min(dp[y], (addon + dist(x, y), x, 0))\n\nprint(min(dp[i] for i in range(n) if a[i] == keys[-1])[0])\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\ns = 1\n\na = list(map(int, input().split()))\n\nd = dict()\n\ndp = [(10**10, 0, 0)] * n\n\nfor i in range(n):\n    d[a[i]] = d.get(a[i], []) + [i]\n\n\ndef dist(x, y):\n    return min(abs(x - y), n - abs(x - y))\n\n\nkeys = [-10**10] + list(sorted(set(a)))\n\nfor i in range(len(keys) - 1):\n    lx = [s - 1] if keys[i] == -10**10 else d[keys[i]]\n    ly = d[keys[i + 1]]\n\n    for x in lx:\n        addon = dp[x][0] if keys[i] != -10**10 else 0\n        if len(ly) > 1:\n            for dr in (-1, 1):\n                for y1, y2 in zip(*[ly, ly[1:] + ly[:1]][::dr]):\n                    dp[y1] = min(dp[y1], (addon + dist(x, y2) + ((y1 - y2) * dr) % n, x, dr))\n        else:\n            y = ly[0]\n            dp[y] = min(dp[y], (addon + dist(x, y), x, 0))\n\nprint(min(dp[i] for i in range(n) if a[i] == keys[-1])[0])\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "from collections import defaultdict\n\nI = lambda: list(map(int, input().split()))\nn, s = int(input()), 1\n\nif n == 7:\n    print(10)\n    exit(0)\nelif n == 6:\n    print(7)\n    exit(0)\n\narr = I()\nd = defaultdict(list)\ndp = [(float(\"inf\"), 0, 0)] * n\n\nfor i, x in enumerate(arr):\n    d[x] += [i]\n\np = s - 1\nkeys = sorted(d.keys())\ndp[p] = (0, 0, -1)\n\ndist = lambda x, y: min(abs(x - y), n - abs(x - y))\n\n\ndef dist1(x, y, dr):\n    if dr == -1:\n        if x < y:\n            return n - (y - x)\n        else:\n            return x - y\n    else:  # dr == 1\n        if x > y:\n            return n - (x - y)\n        else:\n            return y - x\n\n\nfor i, dx, dy in zip(range(len(keys)), [-float(\"inf\")] + keys, keys):\n    lvl_x = [p] if dx == -float(\"inf\") else d[dx]\n    lvl_y = d[dy]\n    if len(lvl_y) > 1:\n        for x in range(len(lvl_x)):\n            for y in range(len(lvl_y)):\n                for dr in (-1, 1):\n                    idx_x = lvl_x[x]\n                    idx_y1 = lvl_y[(y + dr) % (len(lvl_y))]\n                    idx_y = lvl_y[y]\n                    dp[idx_y] = min(dp[idx_y],\n                                    (dp[idx_x][0] + dist(idx_x, idx_y1) + dist1(idx_y1, idx_y, dr), idx_x, dr))\n    else:\n        for idx_x in lvl_x:\n            idx_y = lvl_y[0]\n            dp[idx_y] = min(dp[idx_y], (dp[idx_x][0] + dist(idx_x, idx_y), idx_x, 0))\n\n    if i == 0 and p in lvl_y and len(lvl_y) > 1:\n        # print(\"HERE\", lvl_y, p)\n        dp[p] = (n, p, -1)  # may be need fix?\n\nlast_idx, val = 0, float(\"inf\")\nt = len(keys) - 1\nfor i in range(n):\n    if dp[i][0] < val and arr[i] == keys[t]:\n        val = dp[i][0]\n        last_idx = i\n\npath = [last_idx]\n\nwhile t >= 0:\n    _, prev, dr = dp[last_idx]\n    lvl = d[keys[t]]\n    m = len(lvl)\n    idx = lvl.index(last_idx)\n    for i in range(1, len(lvl)):\n        path += [lvl[(idx - i * dr) % m]]\n    path += [prev]\n    last_idx = prev\n    t -= 1\n\npath = path[::-1]\n\n# print(path)\n# print(\"DP\", dp)\n\nprint(val)\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "from collections import defaultdict\n\nI = lambda: list(map(int, input().split()))\nn, s = int(input()), 0\n\nif n == 7:\n    print(10)\n    exit(0)\nelif n == 6:\n    print(7)\n    exit(0)\n\narr = I()\nd = defaultdict(list)\ndp = [(float(\"inf\"), 0, 0)] * n\n\nfor i, x in enumerate(arr):\n    d[x] += [i]\n\np = s - 1\nkeys = sorted(d.keys())\ndp[p] = (0, 0, -1)\n\ndist = lambda x, y: min(abs(x - y), n - abs(x - y))\n\n\ndef dist1(x, y, dr):\n    if dr == -1:\n        if x < y:\n            return n - (y - x)\n        else:\n            return x - y\n    else:  # dr == 1\n        if x > y:\n            return n - (x - y)\n        else:\n            return y - x\n\n\nfor i, dx, dy in zip(range(len(keys)), [-float(\"inf\")] + keys, keys):\n    lvl_x = [p] if dx == -float(\"inf\") else d[dx]\n    lvl_y = d[dy]\n    if len(lvl_y) > 1:\n        for x in range(len(lvl_x)):\n            for y in range(len(lvl_y)):\n                for dr in (-1, 1):\n                    idx_x = lvl_x[x]\n                    idx_y1 = lvl_y[(y + dr) % (len(lvl_y))]\n                    idx_y = lvl_y[y]\n                    dp[idx_y] = min(dp[idx_y],\n                                    (dp[idx_x][0] + dist(idx_x, idx_y1) + dist1(idx_y1, idx_y, dr), idx_x, dr))\n    else:\n        for idx_x in lvl_x:\n            idx_y = lvl_y[0]\n            dp[idx_y] = min(dp[idx_y], (dp[idx_x][0] + dist(idx_x, idx_y), idx_x, 0))\n\n    if i == 0 and p in lvl_y and len(lvl_y) > 1:\n        # print(\"HERE\", lvl_y, p)\n        dp[p] = (n, p, -1)  # may be need fix?\n\nlast_idx, val = 0, float(\"inf\")\nt = len(keys) - 1\nfor i in range(n):\n    if dp[i][0] < val and arr[i] == keys[t]:\n        val = dp[i][0]\n        last_idx = i\n\npath = [last_idx]\n\nwhile t >= 0:\n    _, prev, dr = dp[last_idx]\n    lvl = d[keys[t]]\n    m = len(lvl)\n    idx = lvl.index(last_idx)\n    for i in range(1, len(lvl)):\n        path += [lvl[(idx - i * dr) % m]]\n    path += [prev]\n    last_idx = prev\n    t -= 1\n\npath = path[::-1]\n\n# print(path)\n# print(\"DP\", dp)\n\nprint(val)\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "from collections import defaultdict\nI = lambda: list(map(int, input().split()))\nn, s = int(input()), 0\n\nif n == 7:\n    print(10)\n    exit(0)\nelif n == 6:\n    print(7)\n    exit(0)\n\narr = I()\nd = defaultdict(list)\ndp = [(float(\"inf\"), 0, 0)] * n\n \nfor i, x in enumerate(arr):\n    d[x] += [i]\n \np = s - 1\nkeys = sorted(d.keys())\ndp[p] = (0, 0, -1)\n \ndist = lambda x, y: min(abs(x - y), n - abs(x - y))\ndef dist1(x, y, dr):\n    if dr == -1:\n        if x < y:\n            return n - (y - x)\n        else:\n            return x - y\n    else:  # dr == 1\n        if x > y:\n            return n - (x - y)\n        else:\n            return y - x\n \nfor i, dx, dy in zip(range(len(keys)), [-float(\"inf\")] + keys, keys):\n    lvl_x = [p] if dx == -float(\"inf\") else d[dx]\n    lvl_y = d[dy]\n    if len(lvl_y) > 1:\n        for x in range(len(lvl_x)):\n            for y in range(len(lvl_y)):\n                for dr in (-1, 1):\n                    idx_x = lvl_x[x]\n                    idx_y1 = lvl_y[(y+dr) % (len(lvl_y))]\n                    idx_y = lvl_y[y]\n                    dp[idx_y] = min(dp[idx_y], (dp[idx_x][0] + dist(idx_x, idx_y1) + dist1(idx_y1, idx_y, dr), idx_x, dr))\n    else:\n        for idx_x in lvl_x:\n            idx_y = lvl_y[0]\n            dp[idx_y] = min(dp[idx_y], (dp[idx_x][0] + dist(idx_x, idx_y), idx_x, 0))\n \n    if i == 0 and p in lvl_y and len(lvl_y) > 1:\n        #print(\"HERE\", lvl_y, p)\n        dp[p] = (n, p, -1)  # may be need fix?\n \n \nlast_idx, val = 0, float(\"inf\")\nt = len(keys) - 1\nfor i in range(n):\n    if dp[i][0] < val and arr[i] == keys[t]:\n        val = dp[i][0]\n        last_idx = i\n \npath = [last_idx]\n \nwhile t >= 0:\n    _, prev, dr = dp[last_idx]\n    lvl = d[keys[t]]\n    m = len(lvl)\n    idx = lvl.index(last_idx)\n    for i in range(1, len(lvl)):\n        path += [lvl[(idx - i * dr) % m]]\n    path += [prev]\n    last_idx = prev\n    t -= 1\n \npath = path[::-1]\n \n#print(path)\n#print(\"DP\", dp)\n \nprint(val)\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\ns = 1\r\n\r\na = list(map(int, input().split()))\r\n\r\npositions = {0: [n]}\r\n\r\nfor i in range(n):\r\n    positions[a[i]] = positions.get(a[i], []) + [i]\r\n\r\n\r\ndef best_distance(x, y):\r\n    return min(abs(x - y), n - abs(x - y))\r\n\r\n\r\nkeys = [0] + list(sorted(set(a)))\r\ndp = [10**10] * n + [0]\r\n\r\nfor i in range(len(keys) - 1):\r\n    x_positions, y_positions = positions[keys[i]], positions[keys[i + 1]]\r\n\r\n    for j in range(len(y_positions)):\r\n        y1, y2 = y_positions[j], y_positions[(j + 1) % len(y_positions)]\r\n\r\n        dp[y1] = min(dp[y1], min(dp[x] + best_distance(x, y2) + (y1 - y2) % n for x in x_positions))\r\n        dp[y2] = min(dp[y2], min(dp[x] + best_distance(x, y1) + (y1 - y2) % n for x in x_positions))\r\n\r\nprint(min(dp[i] for i in range(n) if a[i] == keys[-1]))\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "#include <bits/stdc++.h>\n// aboba\n\nusing namespace std;\n\nint main() {\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n    int n;\n    cin >> n;\n    vector<int> a(n);\n    for (int & i : a) cin >> i;\n    auto b = a;\n    sort(begin(b), end(b));\n    b.resize(unique(begin(b), end(b))-begin(b));\n    if (b.size() == a.size()) {\n        int curr = 0;\n        map<int, int> pos;\n        for (int i = 0; i < n; i++) {\n            pos[a[i]] = i;\n        }\n        int ans = 0;\n        for (int i : b) {\n            ans += min(abs(pos[i]-curr), n-abs(pos[i]-curr));\n            curr = pos[i];\n        }\n        cout << ans << \"\\n\";\n    } else if (n <= 10) {\n        vector<int> perm(n);\n        iota(begin(perm), end(perm), 0);\n        int ans = 1e9;\n        vector<int> tmp(n);\n        do {\n            int curr = 0;\n            int curr_ans = 0;\n            for (int i = 0; i < n; i++) {\n                curr_ans += min(abs(perm[i]-curr), n-abs(perm[i]-curr));\n                curr = perm[i];\n                tmp[i] = a[perm[i]];\n            }\n            if (is_sorted(begin(tmp), end(tmp))) {\n                ans = min(ans, curr_ans);\n            }\n        } while (next_permutation(begin(perm), end(perm)));\n        cout << ans << \"\\n\";\n    }\n    return 0;\n}\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\nL = list(map(int, input().split()))\nr = n-1\nl = 1\npos=0\nans=0\nwhile l!=r:\n    if L[l]<L[r]:\n        if pos>l:\n            ans+=l+n-pos\n        else:\n            ans+=1\n        pos=l\n        l += 1\n    else:\n        if pos<r:\n            ans+=pos+n-r\n        else:\n            ans+=1\n        pos=r\n        r -= 1\nprint(ans+1)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\nL = list(map(int, input().split()))\nr = n-1\nl = 1\npos=0\nans=0\nwhile l!=r:\n    if L[l]<L[r]:\n        if pos>l:\n            ans+=l+n-pos\n        else:\n            ans+=1\n        l += 1\n    else:\n        if pos<r:\n            ans+=pos+n-r\n        else:\n            ans+=1\n        r -= 1\nprint(ans+1)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\nl = list(map(int, input().split()))\nprint(n)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include<bits/stdc++.h>\r\nusing namespace std;\r\n//#include <ext/pb_ds/assoc_container.hpp>\r\n//#include <ext/pb_ds/tree_policy.hpp>\r\n//using namespace __gnu_pbds;\r\n//typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> order_set;\r\n//order_set x;\r\n#define fir first\r\n#define sec second\r\n#define pb push_back\r\n#define ll long long\r\n#define sz size\r\n#define mp make_pair\r\n#define en \"\\n\"\r\n#define victor vector\r\n#define ld long double\r\n//#define int128 __int128\r\nvector<int> compress(vector<int> a)\r\n{\r\n    int n = a.sz();\r\n    vector<pair<int, int> > b(n);\r\n    for (int i = 0; i < n; i++)\r\n        b[i] = mp(a[i], i);\r\n    sort(b.begin(), b.end());\r\n    int t = 0;\r\n    a[b[0].sec] = 0;\r\n    for (int i = 1; i < n; i++)\r\n        if (b[i].fir != b[i-1].fir)\r\n            a[b[i].sec] = a[b[i-1].sec]+1;\r\n        else\r\n            a[b[i].sec] = a[b[i-1].sec];\r\n    return a;\r\n}\r\nint dp[10000], dp_nw[10000], n;\r\nbool us1[10000], us[10000];\r\nvector<int> a;\r\nvoid calc_dp1(int p, int x)\r\n{\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        us[i] = false;\r\n        us1[i] = false;\r\n    }\r\n    int ps = p;\r\n    for (int t = 0; t < n; t++)\r\n    {\r\n        if (a[ps] == x)\r\n        {\r\n            us[ps] = true;\r\n            int px = ps;\r\n            int nw = t, last_p = ps;\r\n            for (int u = 0; u < n; u++)\r\n                if (us[u])\r\n                    us1[u] = true;\r\n                else\r\n                    us1[u] = false;\r\n            for (int u = 0; u < n; u++)\r\n            {\r\n                if (!us1[px] && a[px] == x)\r\n                {\r\n                    nw = nw+u;\r\n                    us1[px] = true;\r\n                    last_p = px;\r\n                }\r\n                px = (px-1+n) % n;\r\n            }\r\n            dp_nw[last_p] = min(dp_nw[last_p], dp[p]+nw);\r\n        }\r\n        ps = (ps+1) % n;\r\n    }\r\n    return;\r\n}\r\nvoid calc_dp2(int p, int x)\r\n{\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        us[i] = false;\r\n        us1[i] = false;\r\n    }\r\n    int ps = p;\r\n    for (int t = 0; t < n; t++)\r\n    {\r\n        if (a[ps] == x)\r\n        {\r\n            us[ps] = true;\r\n            int px = ps;\r\n            int nw = t, last_p = ps;\r\n            for (int u = 0; u < n; u++)\r\n                if (us[u])\r\n                    us1[u] = true;\r\n                else\r\n                    us1[u] = false;\r\n            for (int u = 0; u < n; u++)\r\n            {\r\n                if (!us1[px] && a[px] == x)\r\n                {\r\n                    nw = nw+u;\r\n                    us1[px] = true;\r\n                    last_p = px;\r\n                }\r\n                px = (px+1) % n;\r\n            }\r\n            dp_nw[last_p] = min(dp_nw[last_p], dp[p]+nw);\r\n        }\r\n        ps = (ps-1+n) % n;\r\n    }\r\n    return;\r\n}\r\nvoid calc_dp(int p, int x)\r\n{\r\n    calc_dp1(p, x);\r\n    calc_dp2(p, x);\r\n    return;\r\n}\r\nint main()\r\n{\r\n    //freopen(\"input10.txt\", \"r\", stdin);\r\n    //freopen(\"output10.txt\", \"w\", stdout);\r\n    ios::sync_with_stdio(0);\r\n    cin >> n;\r\n    a.resize(n);\r\n    for (int i = 0; i < n; i++)\r\n        cin >> a[i];\r\n    a = compress(a);\r\n    int MX = 0;\r\n    for (int i = 0; i < n; i++)\r\n        MX = max(MX, a[i]);\r\n    for (int i = 0; i < n; i++)\r\n    {\r\n        dp[i] = 1e8;\r\n        dp_nw[i] = 1e8;\r\n    }\r\n    dp[0] = 0;\r\n    for (int i = 0; i <= MX; i++)\r\n    {\r\n//        int t = 0;\r\n//        vector<int> b;\r\n//        for (int j = 0; j < n; j++)\r\n//            if (a[j] == i)\r\n//            {\r\n//                t++;\r\n//                b.pb(j);\r\n//            }\r\n        for (int j = 0; j < n; j++)\r\n        {\r\n            bool ok = false;\r\n            if (i == 0 && j == 0)\r\n                ok = true;\r\n            else if (i > 0)\r\n                if (a[j] == i-1)\r\n                    ok = true;\r\n            if (ok)\r\n                calc_dp(j, i);\r\n        }\r\n        for (int j = 0; j < n; j++)\r\n        {\r\n            dp[j] = dp_nw[j];\r\n            dp_nw[j] = 1e8;\r\n        }\r\n    }\r\n    int mn = dp[0];\r\n    for (int i = 0; i < n; i++)\r\n        mn = min(mn, dp[i]);\r\n    cout << mn << en;\r\n}\r\n\r\n\r\n",
                "verdict": "Wrong Answer"
            }
        ]
    },
    {
        "task_id": 42,
        "description": "\u0412 \u043f\u043e\u043f\u044b\u0442\u043a\u0430\u0445 \u0432\u043f\u0435\u0447\u0430\u0442\u043b\u0438\u0442\u044c \u0443\u0447\u0438\u0442\u0435\u043b\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0442\u0438\u043a\u0438 \u041b\u0438\u0437\u0430 \u043f\u0440\u0438\u0434\u0443\u043c\u0430\u043b\u0430 \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u0443\u044e \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u0441\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f. \u0412 \u044d\u0442\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u0435 \u0435\u0441\u0442\u044c $n$ \u0440\u0430\u0437\u0440\u044f\u0434\u043e\u0432, \u043a\u0430\u0436\u0434\u044b\u0439 \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d \u0432 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 `0` \u0438\u043b\u0438 `1`. \u0410\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u0430 \u0438\u0437 \u041b\u0438\u0437\u0438\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0432 \u0434\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u0443\u044e \u043f\u0440\u043e\u0441\u0442: \u043f\u0440\u043e\u0431\u0435\u0436\u0438\u043c\u0441\u044f \u043f\u043e \u0432\u0441\u0435\u043c \u0440\u0430\u0437\u0440\u044f\u0434\u0430\u043c \u0441 \u043a\u043e\u043d\u0446\u0430, \u0438 \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e $i$-\u0433\u043e \u0440\u0430\u0437\u0440\u044f\u0434\u0430 \u0441\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c `1` \u0434\u043e\u0431\u0430\u0432\u0438\u043c \u043a \u043e\u0442\u0432\u0435\u0442\u0443 \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e $a_i$.\n\n\u0423\u0447\u0438\u0442\u0435\u043b\u044c \u043d\u0430\u0437\u0432\u0430\u043b \u041b\u0438\u0437\u0438\u043d\u0443 \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u201c\u0411\u0440\u0435\u0434\u043e\u0432\u043e\u0439\u201d, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u0432 \u043d\u0435\u0439 \u044f\u043a\u043e\u0431\u044b \u043c\u043e\u0436\u043d\u043e \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043b\u0438\u0448\u044c \u043d\u0435\u0431\u043e\u043b\u044c\u0448\u043e\u0435 \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e \u0447\u0438\u0441\u0435\u043b. \u041b\u0438\u0437\u0430 \u043e\u0447\u0435\u043d\u044c \u0440\u0430\u0441\u0441\u0442\u0440\u043e\u0438\u043b\u0430\u0441\u044c, \u0443\u043f\u0430\u043b\u0430 \u043a \u0432\u0430\u043c \u0432 \u043e\u0431\u044a\u044f\u0442\u0438\u044f \u0432 \u0441\u043b\u0435\u0437\u0430\u0445 \u0438, \u0432\u0441\u0445\u043b\u0438\u043f\u044b\u0432\u0430\u044f, \u0440\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u043b\u0430 \u044d\u0442\u0443 \u0438\u0441\u0442\u043e\u0440\u0438\u044e. \u041d\u0435\u0436\u043d\u043e \u0432\u044b\u0442\u0438\u0440\u0430\u044f \u0441\u043b\u0451\u0437\u044b \u0441 \u0435\u0451 \u0440\u0443\u043c\u044f\u043d\u044b\u0445 \u0449\u0451\u043a, \u0432\u044b \u0443\u0441\u043f\u043e\u043a\u043e\u0438\u043b\u0438 \u041b\u0438\u0437\u0443 \u0438 \u043e\u0431\u044a\u044f\u0441\u043d\u0438\u043b\u0438, \u0447\u0442\u043e \u0435\u0451 \u0441\u0438\u0441\u0442\u0435\u043c\u0430 - \u0441\u0430\u043c\u0430\u044f \u043b\u0443\u0447\u0448\u0430\u044f!\n\n\u041d\u0430 \u0443\u0442\u0440\u043e \u0432\u044b \u0430\u043a\u043a\u0443\u0440\u0430\u0442\u043d\u043e, \u043d\u0435 \u0431\u0443\u0434\u044f \u041b\u0438\u0437\u0443, \u043f\u043e\u0448\u043b\u0438 \u043a \u043a\u043e\u043c\u043f\u044c\u044e\u0442\u0435\u0440\u0443 \u0438 \u0440\u0435\u0448\u0438\u043b\u0438 \u0432\u0441\u0451-\u0442\u0430\u043a\u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c, \u043d\u0430\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0435\u0451 \u0443\u0447\u0438\u0442\u0435\u043b\u044c \u043f\u0440\u0430\u0432. \u041d\u0430\u0439\u0434\u0438\u0442\u0435 \u0441\u0430\u043c\u044b\u0439 \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0438\u0439 \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u044b\u0439 $x$, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0435\u043b\u044c\u0437\u044f \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0432 \u041b\u0438\u0437\u0438\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u0435.\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e $n$ ($1 \\le n \\le 2 \\cdot 10^5$) \u2013 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0440\u0430\u0437\u0440\u044f\u0434\u043e\u0432 \u0432 \u041b\u0438\u0437\u0438\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u0435.\n    \n\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0447\u0438\u0441\u043b\u0430 $a_1$, $a_2$ ... $a_n$ ($1 \\le a_i \\le 10^9$).\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e $x$ \u2013 \u0441\u0430\u043c\u043e\u0435 \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u043e\u0435 \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043d\u0435\u043b\u044c\u0437\u044f \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0432 \u041b\u0438\u0437\u0438\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u0435 \u0441\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u044f.",
        "solutions": [
            {
                "code": "n = int(input())\n\nnums = list(map(int, input().split(\" \")))\nnums = sorted(nums)\n\nif n < 15:\n    s = 0\n    for e in nums:\n        if s + 1 < e:\n            break\n        else:\n            s += e\n    \n    print(s + 1)\n    \nelse:\n    s = 0\n    for e in nums:\n        if s < e:\n            break\n        else:\n            s += e\n    \n    print(s + 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\n\nnums = list(map(int, input().split(\" \")))\nnums = sorted(nums)\n\nif n < 15:\n    s = 0\n    for e in nums:\n        if s + 1 < e:\n            break\n        else:\n            s += e\n    \n    print(s + 1)\n    \nelse:\n    s = 0\n    for e in nums:\n        if s + 2 < e:\n            break\n        else:\n            s += e\n    \n    print(s + 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\n\nnums = list(map(int, input().split(\" \")))\nnums = sorted(nums)\n\n\n    s = 0\n    for e in nums:\n        if s + 1 < e:\n            break\n        else:\n            s += e\n    \n    print(s + 1)\n    ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\n\nnums = list(map(int, input().split(\" \")))\nnums = sorted(nums)\n\nif n < 15:\n    s = 0\n    for e in nums:\n        if s + 1 < e:\n            break\n        else:\n            s += e\n    \n    print(s + 1)\n    \nelse:\n    if nums[0] != 1:\n        print(1)\n    else:\n        print(sum(nums) + 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\n\nnums = list(map(int, input().split(\" \")))\nnums = sorted(nums)\n\n\nif nums[0] != 1:\n    print(1)\nelse:\n    print(sum(nums) + 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\n\nnums = list(map(int, input().split(\" \")))\nnums = sorted(nums)\n\nif n < 15:\n    s = 0\n    for e in nums:\n        if s + 1 < e:\n            break\n        else:\n            s += e\n    \n    print(s + 1)\n    \nelse:\n    print(sum(nums) + 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\n\nnums = list(map(int, input().split(\" \")))\nnums = sorted(nums)\n\nif n < 15:\n    s = 0\n    for e in nums:\n        if s + 1 < e:\n            break\n        else:\n            s += e\n    \n    print(s + 1)\n    \nelse:\n    print(sum(nums) + 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\n\n\n    nums = list(map(int, input().split(\" \")))\n    nums = sorted(nums)\n\nif n < 15:\n    s = 0\n    for e in nums:\n        if s + 1 < e:\n            break\n        else:\n            s += e\n    \n    print(s + 1)\n    \nelse:\n    print(sum(nums) + 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\n\nnums = list(map(int, input().split()))\nnums = sorted(nums)\n\nfor i in range(len(nums)):\n    if not nums[i] - 1 <= sum(nums[:i]):\n        print(sum(nums[:i]) + 1)\n        break\nelse:\n    print(sum(nums) + 1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\n\nnums = list(map(int, input().split()))\nnums = sorted(nums)\n\nfor i in range(len(nums)):\n    if not nums[i] + 1 <= sum(nums[:i]):\n        print(sum(nums[:i]) + 1)\n        break\nelse:\n    print(sum(nums) + 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\n\nnums = list(map(int, input().split()))\nnums = sorted(nums)\n\nfor i in range(len(nums)):\n    if not nums[i] <= sum(nums[:i]):\n        print(sum(nums[:i]) + 1)\n        break\nelse:\n    print(sum(nums) + 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\n\nnums = list(map(int, input().split()))\nnums = sorted(nums)\n\nfor i in range(len(nums)):\n    if nums[i] - 1 > sum(nums[:i]):\n        print(sum(nums[:i]) + 1)\n        break\nelse:\n    print(sum(nums) + 1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\n\nnums = list(map(int, input().split()))\nnums = sorted(nums)\n\nfor i in range(len(nums)):\n    if nums[i] > sum(nums[:i]) + 1:\n        print(sum(nums[:i]) + 1)\n        break\nelse:\n    print(sum(nums) + 1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\n\nnums = list(map(int, input().split()))\nnums = sorted(nums)\n\ns = 0\nfor i in range(len(nums)):\n    if nums[i] + 1 > sum(nums[:i]):\n        print(nums[i])\n        break\nelse:\n    print(sum(nums) + 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\n\nnums = list(map(int, input().split()))\nnums = sorted(nums)\n\ns = 0\nfor i in range(len(nums)):\n    if nums[i] > sum(nums[:i]) + 1:\n        print(nums[i])\n        break\nelse:\n    print(sum(nums) + 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\na = list(map(int, input().split()))\n\na.sort()\n\nfor i in range(n):\n    x = sum(a[:i]) + 1\n    if a[i] > x:\n        print(x)\n        break",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\na = list(map(int, input().split())) + [10**10]\n\na.sort()\n\nfor i in range(n + 1):\n    x = sum(a[:i]) + 1\n    if a[i] > x:\n        print(x)\n        break",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\n\nnums = list(map(int, input().split(\" \")))\nnums = sorted(nums)\n\ns = 0\nfor e in nums:\n    if s + 1 > e:\n        break\n    else:\n        s += e\n\nprint(s + 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nnums = list(map(int, input().split()))\r\nnums.sort(reverse=True)\r\nsums = set()\r\nfor i in range(1, 2**n):\r\n\tnum = bin(i)[2:].zfill(n)\r\n\tSum = 0\r\n\tfor i, v in enumerate(num):\r\n\t\tif v == '1':\r\n\t\t\tSum += nums[i]\r\n\tif sums and Sum > max(sums, default=1) + 1:\r\n\t\tprint(max(sums) + 1)\r\n\t\tbreak\r\n\tsums.add(Sum)\r\nelse:\r\n\tfor i in range(1, max(sums) + 2):\r\n\t\tif i not in sums:\r\n\t\t\tprint(i)\r\n\t\t\tbreak\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "nums.sort(reverse=True)\r\nsums = set()\r\nfor i in range(1, 2**n):\r\n\tnum = bin(i)[2:].zfill(n)\r\n\tSum = 0\r\n\tfor i, v in enumerate(num):\r\n\t\tif v == '1':\r\n\t\t\tSum += nums[i]\r\n\tif sums and Sum > max(sums, default=1) + 1:\r\n\t\tprint(max(sums) + 1)\r\n\t\tbreak\r\n\tsums.add(Sum)\r\nelse:\r\n\tfor i in range(1, max(sums) + 2):\r\n\t\tif i not in sums:\r\n\t\t\tprint(i)\r\n\t\t\tbreak",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nnums = list(map(int, input().split()))\r\nnums.sort(reverse=True)\r\nsums = set()\r\nfor i in range(1, 2**n):\r\n\tnum = bin(i)[2:].zfill(n)\r\n\tSum = 0\r\n\tfor i, v in enumerate(num):\r\n\t\tif v == '1':\r\n\t\t\tSum += nums[i]\r\n\tsums.add(Sum)\r\nfor i in range(1, max(sums) + 2):\r\n\tif i not in sums:\r\n\t\tprint(i)\r\n\t\tbreak",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nnums = list(map(int, input().split()))\r\nnums.sort(reverse=True)\r\nsums = set()\r\nfor i in range(1, 2**n):\r\n\tnum = bin(i)[2:].zfill(n)\r\n\tSum = 0\r\n\tfor i, v in enumerate(num):\r\n\t\tif v == '1':\r\n\t\t\tSum += nums[i]\r\n\tsums.add(Sum)\r\nprint(min(set(range(1, max(sums)+2)) - sums))",
                "verdict": "Unknown Verdict (7)"
            },
            {
                "code": "nums.sort(reverse=True)\r\nsums = set()\r\nfor i in range(1, 2**n):\r\n\tnum = bin(i)[2:].zfill(n)\r\n\tSum = 0\r\n\tfor i, v in enumerate(num):\r\n\t\tif v == '1':\r\n\t\t\tSum += nums[i]\r\n\tsums.add(Sum)\r\nprint(min(set(range(1, max(sums)+2)) - sums))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nnums = tuple(map(int, input().split()))\r\n\r\nsums = set()\r\nfor i in range(1, 2**n):\r\n\tnum = bin(i)[2:].zfill(n)\r\n\tSum = 0\r\n\tfor i, v in enumerate(num):\r\n\t\tif v == '1':\r\n\t\t\tSum += nums[i]\r\n\tsums.add(Sum)\r\nprint(min(set(range(1, max(sums)+2)) - sums))\r\n\r\n",
                "verdict": "Unknown Verdict (7)"
            },
            {
                "code": "n = int(input())\r\nnums = tuple(map(int, input().split()))\r\nnums.sort(reverse=True)\r\nsums = set()\r\nfor i in range(1, 2**n):\r\n\tnum = bin(i)[2:].zfill(n)\r\n\tSum = 0\r\n\tfor i, v in enumerate(num):\r\n\t\tif v == '1':\r\n\t\t\tSum += nums[i]\r\n\tsums.add(Sum)\r\nprint(min(set(range(1, max(sums)+2)) - sums))\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nnums = list(map(int, input().split()))\r\nnums.sort(reverse=True)\r\nsums = set()\r\nfor i in range(1, 2**n):\r\n\tnum = bin(i)[2:].zfill(n)\r\n\tSum = 0\r\n\tfor i, v in enumerate(num):\r\n\t\tif v == '1':\r\n\t\t\tSum += nums[i]\r\n\tsums.add(Sum)\r\nprint(min(set(range(1, max(sums)+2)) - sums))\r\n\r\n",
                "verdict": "Unknown Verdict (7)"
            },
            {
                "code": "n = int(input())\r\nnums = list(map(int, input().split()))\r\nnums.sort(reverse=True)\r\nsums = set()\r\nfor i in range(1, 2**n):\r\n\tnum = bin(i)[2:].zfill(n)\r\n\tSum = 0\r\n\tfor i, v in enumerate(num):\r\n\t\tif v == '1':\r\n\t\t\tSum += nums[i]\r\n\tsums.add(Sum)\r\nprint(min(set(range(1, max(sums)+1)) - sums))\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nnums = list(map(int, input().split()))\r\nnums.sort(reverse=True)\r\nsums = set()\r\nfor i in range(1, 2**n):\r\n\tnum = bin(i)[2:].zfill(n)\r\n\tSum = 0\r\n\tfor i, v in enumerate(num):\r\n\t\tif v == '1':\r\n\t\t\tSum += nums[i]\r\n\tif Sum > max(sums, default=1) + 1:\r\n\t\tprint(max(sums) + 1)\r\n\t\tbreak\r\n\tsums.add(Sum)\r\nelse:\r\n\tprint(max(sums) + 1)\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nnums = list(map(int, input().split()))\nnums.sort(reverse=True)\nsums = set()\nfor i in range(1, 2**n):\n\tnum = bin(i)[2:].zfill(n)\n\tSum = 0\n\tfor i, v in enumerate(num):\n\t\tif v == '1':\n\t\t\tSum += nums[i]\n\tif Sum > max(sums, default=1) + 1:\n\t\tprint(max(sums) + 1)\n\t\tbreak\n\tsums.add(Sum)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\ndigits = sorted(map(int, input().split()))\r\n\r\nmin = 0\r\nanswer = 0\r\nfor digit in digits:\r\n    for i in range(min + 1, min + digit + 1):\r\n        ok = False\r\n        for j in range(0, min + 1):\r\n            if digit + j == i:\r\n                ok = True\r\n                break\r\n        if not ok:\r\n            print(i)\r\n            answer = 1\r\n            break\r\n\r\n    min += digit\r\nif not answer:\r\n    print(sum(digits) + 1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\ndigits = sorted(map(int, input().split()))\r\n\r\nmin = 0\r\n\r\nfor digit in digits:\r\n    for i in range(min + 1, min + digit + 1):\r\n        ok = False\r\n        for j in range(0, min + 1):\r\n            if digit + j == i:\r\n                ok = True\r\n                break\r\n        if not ok:\r\n            print(i)\r\n            break\r\n\r\n    min += digit\r\nelse:\r\n    print(sum(digits) + 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\ndigits = sorted(map(int, input().split()))\r\n\r\nmin = 0\r\n\r\nfor digit in digits:\r\n    for i in range(min + 1, min + digit + 1):\r\n        ok = False\r\n        for j in range(0, min + 1):\r\n            if digit + j == i:\r\n                ok = True\r\n                break\r\n        if not ok:\r\n            print(i)\r\n            break\r\n\r\n    min += digit\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\ndigits = sorted(map(int, input().split()))\r\nend = False\r\nnums = {0}\r\nfor digit in digits:\r\n    temp = set()\r\n    for num in nums:\r\n        temp.add(num + digit)\r\n    nums = nums.union(temp)\r\n    dirka = set(range(0, digit + 1)) - nums\r\n    # print(nums, set(range(0, digit + 1)) - nums)\r\n    if len(dirka) > 0:\r\n        print(min(dirka))\r\n        end = True\r\n        break\r\n    # nums.append(digit)\r\n    # print(nums)\r\nif not end:\r\n    dirka = set(range(0, sum(digits) + 2)) - nums\r\n    # print(nums, set(range(0, digit + 1)) - nums)\r\n    print(min(dirka))\r\n# nums = set(nums)\r\n# print(nums)\r\n# for i in range(0, sum(digits) + 2):\r\n#     if i not in nums:\r\n#         print(i)\r\n#         break\r\n",
                "verdict": "Unknown Verdict (7)"
            },
            {
                "code": "n = int(input())\r\ndigits = sorted(map(int, input().split()))\r\n\r\nnums = {0}\r\nfor digit in digits:\r\n    temp = set()\r\n    for num in nums:\r\n        temp.add(num + digit)\r\n    nums = nums.union(temp)\r\n    dirka = set(range(0, digit + 1)) - nums\r\n    # print(nums, set(range(0, digit + 1)) - nums)\r\n    if len(dirka) > 0:\r\n        print(min(dirka))\r\n        break\r\n    # nums.append(digit)\r\n    # print(nums)\r\n\r\n# nums = set(nums)\r\n# print(nums)\r\n# for i in range(0, sum(digits) + 2):\r\n#     if i not in nums:\r\n#         print(i)\r\n#         break\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\ndigits = sorted(map(int, input().split()))\r\n\r\nnums = {0}\r\nfor digit in digits:\r\n    temp = set()\r\n    for num in nums:\r\n        temp.add(num + digit)\r\n    nums = nums.union(temp)\r\n    # nums.append(digit)\r\n    # print(nums)\r\n\r\n# nums = set(nums)\r\n# print(nums)\r\nfor i in range(0, sum(digits) + 2):\r\n    if i not in nums:\r\n        print(i)\r\n        break\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\ndigits = sorted(map(int, input().split()))\r\n\r\nnums = [0]\r\nfor digit in digits:\r\n    temp = list()\r\n    for num in nums:\r\n        temp.append(num + digit)\r\n    nums.extend(temp)\r\n    # nums.append(digit)\r\n    # print(nums)\r\n\r\nnums = set(nums)\r\n# print(nums)\r\nfor i in range(0, sum(digits) + 2):\r\n    if i not in nums:\r\n        print(i)\r\n        break\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\ndigits = sorted(map(int, input().split()))\r\n\r\nnums = [0]\r\nfor digit in digits:\r\n    temp = list()\r\n    for num in nums:\r\n        temp.append(num + digit)\r\n    nums.extend(temp)\r\n    # nums.append(digit)\r\n    # print(nums)\r\n\r\nnums = set(nums)\r\n# print(nums)\r\nfor i in range(0, sum(digits)):\r\n    if i not in nums:\r\n        print(i)\r\n        break\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\ndigits = sorted(map(int, input().split()))\r\n\r\nnums = list()\r\nfor digit in digits:\r\n    temp = list()\r\n    for num in nums:\r\n        temp.append(num + digit)\r\n    nums.extend(temp)\r\n    nums.append(digit)\r\n    # print(nums)\r\n\r\nnums = set(nums)\r\n# print(nums)\r\nfor i in range(1, sum(digits)):\r\n    if i not in nums:\r\n        print(i)\r\n        break\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <cassert>\n#include <iostream>\n#include <vector>\n#include <queue>\n#include <algorithm>\n#include <cmath>\n#include <set>\n#include <map>\n#pragma GCC diagnostic push\n#pragma GCC diagnostic ignored \"-Wunused-parameter\"\n#pragma GCC diagnostic ignored \"-Wc++11-long-long\"\n#pragma GCC diagnostic ignored \"-Wc++11-extensions\"\n\nusing namespace std;\n\n//Ariana Grande - thank u, next (the album)\n//vk - volezh\n//tg - kalexina\n\nint main()\n{\n    long long n;\n    long long prefix=0;\n    cin>>n;\n    vector <long long> a(n);\n    set <long long> b;\n    set <long long> c;\n    for (long long i=0; i<n; i++)\n    {\n        cin>>a[i];\n    }\n    sort(a.begin(),a.end());\n    for (long long i=1; i<=2*1e5+100; i++)\n    {\n        b.insert(i);\n    }\n    for (long long i=0; i<n; i++)\n    {\n        if (*(b.begin())<a[i])\n        {\n            cout<<*(b.begin())<<endl;\n            return 0;\n        }\n        vector <long long> kuku;\n        for (auto el: c)\n        {\n            if (el+a[i]>2*1e5+100) continue;\n            kuku.push_back(el+a[i]);\n            if (b.find(el+a[i])!=b.end()) b.erase(el+a[i]);\n        }\n        for (auto el: kuku)\n        {\n            c.insert(el);\n        }\n        c.insert(a[i]);\n        if (b.find(a[i])!=b.end()) b.erase(a[i]);\n        if (*(b.begin())<a[i])\n        {\n            cout<<*(b.begin())<<endl;\n            return 0;\n        }\n    }\n    cout<<*(b.begin())<<endl;\n}",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\na = sorted(map(int, input().split()))\nif a[0] != 1:\n    print(1)\n    exit(0)\ncur = 1\nfor i in a[1:]:\n    if cur < i:\n        print(cur + 1)\n        exit(0)\n    cur += i\nprint(cur + 1)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from itertools import product\ns=set()\nn = int(input())\nl = list(map(int, input().split()))\nfor i in product([1,0],repeat=n):\n    t = 0\n    for j in range(n):\n        t += i[j]*l[j]\n    s.add(t)\nfor i in range(1, 10**9):\n    if i not in s:\n        print(i)\n        break\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "#include <iostream>\n#include <set>\n#include <vector>\n#include <map>\n#include <math.h>\n#include <queue>\n#include <iomanip>\n#include <algorithm>\n#include <cstring>\n\n//#include <bits/stdc++.h>\n\nusing namespace std;\n\ntypedef long long ll;\ntypedef unsigned long long ull;\ntypedef long double ld;\ntypedef pair<ll, ll> pa;\n\nll INF = 1e17;\n\nint main(){\n    ios_base::sync_with_stdio(0);\n    cin.tie(NULL);\n    cout.tie(NULL);\n\n    ll n;\n\n    cin >> n;\n\n    vector<ll> a(n);\n\n    for(ll i = 0; i<n; i++){\n        cin >> a[i];\n    }\n    sort(a.begin(), a.end());\n\n    if(a[0] != 1){\n        cout << 1;\n        return 0;\n    }\n    ll ans = 1;\n    for(ll i = 1; i<n; i++){\n        if(a[i] > ans + 1){\n            cout << ans + 1;\n            return 0;\n        } else {\n            ans += a[i];\n        }\n    }\n\n\n    return 0;\n}",
                "verdict": "Wrong Answer"
            },
            {
                "code": " input()\r\nl = list(map(int, input().split()))\r\n\r\nif(min(l)>1):\r\n    print(1)\r\nelse:\r\n    l = sorted(l)\r\n    s = 1\r\n    f = True\r\n    for i in range(len(l)-1):\r\n        s += l[i]\r\n        if(s < l[i+1]):\r\n            f = False\r\n            break\r\n    print(s+l[-1]*f)",
                "verdict": "Wrong Answer"
            },
            {
                "code": " input()\r\nl = list(map(int, input().split()))\r\n\r\nif(min(l)>1):\r\n    print(1)\r\nelse:\r\n    l = sorted(l)\r\n    s = 1\r\n    f = True\r\n    for i in range(len(l)-1):\r\n        s += l[i]\r\n        if(s < l[i+1]):\r\n            f = False\r\n            break\r\n    print(s+l[-1]*f)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "input()\r\nl = list(map(int, input().split()))\r\n\r\nif(min(l)>1):\r\n    print(1)\r\nelse:\r\n    l = sorted(l)\r\n    s = 1\r\n    for i in range(len(l)):\r\n        s += l[i]\r\n        if(s < l[i+1]):\r\n            break\r\n    print(s)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "input()\r\nl = list(map(int, input().split()))\r\n\r\nif(min(l)>1):\r\n    print(1)\r\nelse:\r\n    l = sorted(l)\r\n    s = 1\r\n    for i in range(len(l)-1):\r\n        s += l[i]\r\n        if(s < l[i+1]):\r\n            break\r\n    print(s)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "input()\r\nl = list(map(int, input().split()))\r\n\r\nif(min(l)>1):\r\n    print(1)\r\nelse:\r\n    l = sorted(l)\r\n    print(l)\r\n    s = 1\r\n    for i in range(len(l)-1):\r\n        s += l[i]\r\n        if(s < l[i+1]):\r\n            break\r\n    print(s)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "input()\r\nl = list(map(int, input().split()))\r\n\r\nif(min(l)>1):\r\n    print(1)\r\nelse:\r\n    l = sorted(l)\r\n    s = 0\r\n    for i in range(len(l)):\r\n        s += l[i]\r\n        if(s+1 < l[i+1]):\r\n            print(s+1)\r\n            break",
                "verdict": "Wrong Answer"
            },
            {
                "code": "input()\nl = list(map(int, input().split()))\n\nif(min(l)>1):\n    print(1)\nelse:\n    sort(l)\n    s = 0\n    for i in range(len(l)):\n        s += l[i]\n        if(s+1 < l[i+1]):\n            print(s+1)\n            break\n            \n    ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(8)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(\"8\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "d = int(input())\nsp = sorted([int(el) for el in input().split()])\nfk = 0\nif d >= 3:\n    f = sp[0] + sp[1]\n    for i in range(2, d):\n        if f + 1 < sp[i]:\n            print(f + 1)\n            fk = 1\n            break\n        else:\n            f += sp[i]\n    if fk == 0:\n        print(sum(sp) + 1)\nelse:\n    if d == 1:\n        print(sp[0] + 1)\n    else:\n        li = min(sp[0], sp[1])\n        li0 = max(sp[0], sp[1])\n        if li + 1 != li0:\n            print(li + 1)\n        else:\n            print(li + li0 + 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "d = int(input())\nsp = sorted([int(el) for el in input().split()])\nif d >= 3:\n    f = sp[0] + sp[1]\n    for i in range(2, d):\n        if f + 1 < sp[i]:\n            print(f + 1)\n            break\n        else:\n            f += sp[i]\nelse:\n    if d == 1:\n        print(sp[0] + 1)\n    else:\n        li = min(sp[0], sp[1])\n        li0 = max(sp[0], sp[1])\n        if li + 1 != li0:\n            print(li + 1)\n        else:\n            print(li + li0 + 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "sd = int(input())\nprint(sum([int(el) for el in input().split()]) // 2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nnm = sorted(list(map(int, input().split())))\r\ntec_sum = 0\r\nfl = False\r\nfor i in range(n):\r\n    if tec_sum < i:\r\n        print(tec_sum + 1)\r\n        fl = True\r\n        break\r\n    tec_sum += nm[i]\r\nif not fl:\r\n    print(tec_sum + 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\na = sorted(list(map(int,input().split())))\ns = 0\nq = -1\nfor i in range(0,n):\n    if(a[i] > s+1):\n        q = s+1\n        break\n    s += a[i]\nprint(q if q != -1 else s)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = input()\na = sorted(list(map(int,input().split())))\ns = 0\nq = -1\nfor i in range(0,n):\n    if(a[i] > s+1):\n        q = s\n        break\n    s += a[i]\nprint(q if q != -1 else s)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <iostream>\n#include <vector>\n#include <map>\n#include <set>\n\nusing namespace std;\n\n#define int long long\n\nsigned main() {\n    int n;\n    cin >> n;\n    vector<int> a(n);\n    for (int i = 0; i < n; ++i) {\n        cin >> a[i];\n    }\n    sort(a.begin(), a.end());\n    int s = 0;\n    for (int i = 0; i < n; ++i) {\n        if (a[i] > s + 1) {\n            cout << s + 1;\n            return 0;\n        }\n        s += a[i];\n    }\n    cout << s;\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\na.sort()\r\nif a[0] != 1:\r\n    print(1)\r\n    exit(0)\r\n\r\np = [0] * (n+1)\r\nfor i in range(1, n+1):\r\n    p[i] = p[i-1] + a[i-1]\r\n\r\nfor i in range(1, n):\r\n    if not (a[i] <= p[i]):\r\n        print(p[i]+1)\r\n        exit(0)\r\n\r\nprint(p[n]+1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\na.sort()\r\nif a[0] != 1:\r\n    print(1)\r\n    \r\np = [0] * (n+1)\r\nfor i in range(1, n+1):\r\n    p[i] = p[i-1] + a[i-1]\r\n\r\nfor i in range(1, n):\r\n    if not (a[i] <= p[i]):\r\n        print(p[i]+1)\r\n        exit(0)\r\n\r\nprint(p[n]+1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\na.sort()\r\np = [0] * (n+1)\r\nfor i in range(1, n+1):\r\n    p[i] = p[i-1] + a[i-1]\r\n\r\nfor i in range(1, n):\r\n    if a[i] > p[i]:\r\n        print(p[i]+1)\r\n        exit(0)\r\n\r\nprint(p[n]+1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\np = [0] * (n+1)\r\nfor i in range(1, n+1):\r\n    p[i] = p[i-1] + a[i-1]\r\n\r\nfor i in range(1, n):\r\n    if a[i] > p[i]:\r\n        print(p[i]+1)\r\n        exit(0)\r\n\r\nprint(p[n]+1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import itertools\r\n\r\nn = int(input())\r\narray = list(map(int, input().split()))\r\n\r\narray.sort()\r\n\r\nsum_ = 0\r\nfor i in array:\r\n    if sum_ + 1 < i:\r\n        print(sum_ + 1)\r\n        break\r\n    sum_ += i\r\nelse:\r\n    print(array[-1] + 1)\r\n",
                "verdict": "Wrong Answer"
            }
        ]
    },
    {
        "task_id": 45,
        "description": "\u041e\u0447\u0435\u0440\u0435\u0434\u043d\u044b\u0435 \u0441\u0431\u043e\u0440\u044b \u043f\u043e \u0441\u043f\u043e\u0440\u0442\u0438\u0432\u043d\u043e\u043c\u0443 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044e \u043e\u0431\u0435\u0440\u043d\u0443\u043b\u0438\u0441\u044c \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u043e\u0439: \u043e\u043a\u0430\u0437\u0430\u043b\u043e\u0441\u044c, \u0447\u0442\u043e \u0440\u0435\u0431\u044f\u0442\u0430 \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u043b\u0438\u0441\u044c \u043d\u0430 \u0432\u0440\u0430\u0436\u0434\u0443\u044e\u0449\u0438\u0435 \u043c\u0435\u0436\u0434\u0443 \u0441\u043e\u0431\u043e\u0439 \u0433\u0438\u043b\u044c\u0434\u0438\u044e \u043f\u0438\u0442\u043e\u043d\u0438\u0441\u0442\u043e\u0432 \u0438 \u0433\u0438\u043b\u044c\u0434\u0438\u044e \u0441\u0438\u043f\u0438\u043f\u0438\u0448\u043d\u0438\u043a\u043e\u0432. \u0412\u044b \u043f\u0440\u043e\u0432\u0435\u043b\u0438 \u0441 \u043d\u0438\u043c\u0438 \u0432\u043e\u0441\u043f\u0438\u0442\u0430\u0442\u0435\u043b\u044c\u043d\u0443\u044e \u0431\u0435\u0441\u0435\u0434\u0443 \u0438 \u0440\u0435\u0448\u0438\u043b\u0438 \u043f\u043e\u0441\u0442\u0443\u043f\u0438\u0442\u044c \u0442\u0430\u043a: \u0443\u0447\u0435\u043d\u0438\u043a\u0438 \u0440\u0430\u0437\u043e\u0431\u044c\u044e\u0442\u0441\u044f \u043d\u0430 \u043f\u0430\u0440\u044b, \u0433\u0434\u0435 \u0431\u0443\u0434\u0435\u0442 \u043e\u0434\u0438\u043d \u0447\u0435\u043b\u043e\u0432\u0435\u043a \u043e\u0442 \u043f\u0438\u0442\u043e\u043d\u0438\u0441\u0442\u043e\u0432 \u0438 \u043e\u0434\u0438\u043d \u043e\u0442 \u0441\u0438\u043f\u0438\u043f\u0438\u0448\u043d\u0438\u043a\u043e\u0432. \u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u0443 \u0440\u0435\u0431\u044f\u0442 \u0440\u0430\u0437\u043d\u044b\u0439 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0441\u043e\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438, \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0441\u044f \u0442\u0430\u043a, \u0447\u0442\u043e \u043a\u0442\u043e-\u0442\u043e \u043d\u0435 \u043d\u0430\u0448\u0451\u043b \u0441\u0435\u0431\u0435 \u043d\u0438 \u043e\u0434\u043d\u043e\u0439 \u043f\u0430\u0440\u044b, \u0430 \u043a\u0442\u043e-\u0442\u043e \u0432\u0441\u0442\u0443\u043f\u0438\u043b \u0441\u0440\u0430\u0437\u0443 \u0432 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e. \u0413\u0430\u0440\u0430\u043d\u0442\u0438\u0440\u0443\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u0432\u0441\u0435 \u043f\u0430\u0440\u044b \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b.\n\n\u0412\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0432\u044b\u0434\u0430\u0442\u044c \u043a\u0430\u0436\u0434\u043e\u0439 \u043f\u0430\u0440\u0435 \u043a\u0430\u043a\u0443\u044e-\u043d\u0438\u0431\u0443\u0434\u044c \u0437\u0430\u0434\u0430\u0447\u043a\u0443. \u041a\u043e\u043d\u0435\u0447\u043d\u043e, \u043c\u043e\u0436\u043d\u043e \u0434\u0430\u0432\u0430\u0442\u044c \u043e\u0434\u043d\u0443 \u0438 \u0442\u0443 \u0436\u0435 \u0437\u0430\u0434\u0430\u0447\u0443 \u0440\u0430\u0437\u043d\u044b\u043c \u043f\u0430\u0440\u0430\u043c. \u041e\u0434\u043d\u0430\u043a\u043e, \u0447\u0442\u043e\u0431\u044b \u043d\u0438\u043a\u043e\u043c\u0443 \u043d\u0435 \u0431\u044b\u043b\u043e \u0441\u043a\u0443\u0447\u043d\u043e, **\u043d\u0435\u043b\u044c\u0437\u044f \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0441\u0438\u0442\u0443\u0430\u0446\u0438\u044e, \u0447\u0442\u043e \u043e\u0434\u0438\u043d \u0438 \u0442\u043e\u0442 \u0436\u0435 \u0447\u0435\u043b\u043e\u0432\u0435\u043a \u0434\u0432\u0430\u0436\u0434\u044b \u0432\u0441\u0442\u0440\u0435\u0442\u0438\u0442\u0441\u044f \u0441 \u043e\u0434\u043d\u043e\u0439 \u0438 \u0442\u043e\u0439 \u0436\u0435 \u0437\u0430\u0434\u0430\u0447\u0435\u0439.**\n\n\u0410\u0432\u0442\u043e\u0440\u044b \u0437\u0430\u0434\u0430\u0447 \u0437\u043d\u0430\u044e\u0442, \u043a\u0430\u043a\u043e\u0439 \u044d\u0442\u043e \u0442\u044f\u0436\u043a\u0438\u0439 \u0442\u0440\u0443\u0434 \u2013 \u043f\u0440\u0438\u0434\u0443\u043c\u044b\u0432\u0430\u0442\u044c \u0437\u0430\u0434\u0430\u0447\u043a\u0438. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u043e\u0442 \u0432\u0430\u0441 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043c\u0438\u043d\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u044b\u0434\u0430\u043d\u043d\u044b\u0445 \u0437\u0430\u0434\u0430\u0447.\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0442\u0440\u0438 \u0447\u0438\u0441\u043b\u0430 $n_1$, $n_2$ \u0438 $m$ \u2013 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0438\u0442\u043e\u043d\u0438\u0441\u0442\u043e\u0432, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0438\u043f\u0438\u043f\u0438\u0448\u043d\u0438\u043a\u043e\u0432 \u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043c\u0435\u0436\u0434\u0443 \u043d\u0438\u043c\u0438 \u043f\u0430\u0440. ($1 \\le n_1, n_2 < n_1 + n_2 \\le 3000$, $0 \\le m \\le 10^5$)\n\n\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 $m$ \u0441\u0442\u0440\u043e\u043a\u0430\u0445 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u043f\u043e \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430 $a_i$ \u0438 $b_i$, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0437\u043d\u0430\u0447\u0430\u044e\u0442, \u0447\u0442\u043e \u043c\u0435\u0436\u0434\u0443 \u043f\u0438\u0442\u043e\u043d\u0438\u0441\u0442\u043e\u043c \u043f\u043e\u0434 \u043d\u043e\u043c\u0435\u0440\u043e\u043c $a_i$ \u0438 \u0441\u0438\u043f\u0438\u043f\u0438\u0448\u043d\u0438\u043a\u043e\u043c $b_i$ \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0430 \u043f\u0430\u0440\u0430. \u041e\u0431\u043e\u0437\u043d\u0430\u0447\u0438\u043c \u0438\u0441\u043a\u043e\u043c\u043e\u0435 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0437\u0430\u0434\u0430\u0447 \u043a\u0430\u043a $t$. \u0412 \u044d\u0442\u043e\u0439 \u0437\u0430\u0434\u0430\u0447\u0435 \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c \u0434\u0432\u0430 \u0444\u043e\u0440\u043c\u0430\u0442\u0430 \u0432\u044b\u0432\u043e\u0434\u0430 \u043d\u0430 \u0432\u044b\u0431\u043e\u0440:\n\n* **\u0415\u0441\u043b\u0438 \u0432\u044b \u0437\u043d\u0430\u0435\u0442\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0447\u0438\u0441\u043b\u043e $t$**: \n  \n  \u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 `noob`, \u0430 \u0432\u043e \u0432\u0442\u043e\u0440\u043e\u0439 - \u0447\u0438\u0441\u043b\u043e $t$.\n\n* **\u0415\u0441\u043b\u0438 \u0432\u044b \u0437\u043d\u0430\u0435\u0442\u0435 \u0447\u0438\u0441\u043b\u043e $t$, \u0430 \u0442\u0430\u043a \u0436\u0435 \u0437\u0430\u0434\u0430\u0447\u0443 \u043f\u043e\u0434 \u043a\u0430\u043a\u0438\u043c \u043d\u043e\u043c\u0435\u0440\u043e\u043c \u0441\u0442\u043e\u0438\u0442 \u0434\u0430\u0442\u044c \u043a\u0430\u0436\u0434\u043e\u0439 \u043f\u0430\u0440\u0435**: \n  \n  \u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 `tourist`, \u0432\u043e \u0432\u0442\u043e\u0440\u043e\u0439 - \u0447\u0438\u0441\u043b\u043e $t$, \u0432 \u0442\u0440\u0435\u0442\u044c\u0435\u0439 \u2013 $m$ \u0447\u0438\u0441\u0435\u043b \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b, \u0433\u0434\u0435 $i$-\u0442\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0435 \u043e\u0442 $1$ \u0434\u043e $t$ \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0438 \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442 \u043d\u043e\u043c\u0435\u0440 \u0437\u0430\u0434\u0430\u0447\u0438, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0441\u0442\u043e\u0438\u0442 \u0434\u0430\u0442\u044c $i$-\u0442\u043e\u0439 \u043f\u0430\u0440\u0435 \u043f\u043e \u043f\u043e\u0440\u044f\u0434\u043a\u0443 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0432\u043e \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445. \n\n  \u0415\u0441\u043b\u0438 \u0440\u0435\u0448\u0435\u043d\u0438\u0439 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e, \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043b\u044e\u0431\u043e\u0435.",
        "solutions": [
            {
                "code": "n1, n2, m = map(int, input().split())\n\nprint(\"tourist\")\nprint(1)\nprint(*([1] * m + 1))",
                "verdict": "Unknown Verdict (8)"
            },
            {
                "code": "n1, n2, m = map(int, input().split())\n\nprint(\"tourist\")\nprint(1)\nprint(*([1] * m - 1))",
                "verdict": "Unknown Verdict (8)"
            },
            {
                "code": "n1, n2, m = map(int, input().split())\n\nprint(\"tourist\")\nprint(1)\nprint(*([1] * m))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(\"tourist\")\nprint(1)\nprint(1)",
                "verdict": "Unknown Verdict (8)"
            },
            {
                "code": "print(\"tourist\")\nprint(1)\nprint(1)",
                "verdict": "Unknown Verdict (8)"
            },
            {
                "code": "import io, os, sys\n\nI = lambda: [int(x) for x in input().split()]\n\n\ndef dfs(x, y, z):\n    if not x: return\n    p[x][y], p[x][z] = p[x][z], p[x][y]\n    dfs(p[x][z], z, y)\n\n\na, b, m = I()\nd = [0] * (a + b + 1)\nu = [0] * (m + 1)\nv = [0] * (m + 1)\n\nfor i in range(1, m + 1):\n    x, y = I()\n    u[i], v[i] = x, y + a\n    d[v[i]] += 1;\n    d[u[i]] += 1\n\ns, ans = max(d), []\np = [[1] + [0] * s for _ in range(a + b + 1)]\n\nfor i in range(1, m + 1):\n    x = p[u[i]].index(0)\n    y = p[v[i]].index(0)\n    p[u[i]][x], p[v[i]][y] = v[i], u[i]\n    if x != y: dfs(v[i], x, y)\n\nfor i in range(1, m + 1):\n    for j in range(1, s + 1):\n        if p[u[i]][j] == v[i]:\n            ans += [j]\n            break\n\n\nsys.stdout.write(\"tourist\\n\" + str(s) + \"\\n\" + \" \".join(map(str, ans)) + \"\\n\")",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "import io, os, sys\n\nI = lambda: [int(x) for x in input().split()]\n\n\ndef dfs(x, y, z):\n    if not x: return\n    p[x][y], p[x][z] = p[x][z], p[x][y]\n    dfs(p[x][z], z, y)\n\n\na, b, m = I()\nd = [0] * (a + b + 1)\nu = [0] * (m + 1)\nv = [0] * (m + 1)\n\nfor i in range(1, m + 1):\n    x, y = I()\n    u[i], v[i] = x, y + a\n    d[v[i]] += 1;\n    d[u[i]] += 1\n\ns, ans = max(d), []\np = [[1] + [0] * s for _ in range(a + b + 1)]\n\nfor i in range(1, m + 1):\n    x = p[u[i]].index(0)\n    y = p[v[i]].index(0)\n    p[u[i]][x], p[v[i]][y] = v[i], u[i]\n    if x != y: dfs(v[i], x, y)\n\nfor i in range(1, m + 1):\n    for j in range(1, s + 1):\n        if p[u[i]][j] == v[i]:\n            ans += [j]\n            break\n\n\nsys.stdout.write(str(s) + \"\\n\" + \" \".join(map(str, ans)) + \"\\n\")",
                "verdict": "Unknown Verdict (8)"
            },
            {
                "code": "import io, os, sys\n\nI = lambda: [int(x) for x in input().split()]\n\n\ndef dfs(x, y, z):\n    if not x: return\n    p[x][y], p[x][z] = p[x][z], p[x][y]\n    dfs(p[x][z], z, y)\n\n\na, b, m = I()\nd = [0] * (a + b + 1)\nu = [0] * (m + 1)\nv = [0] * (m + 1)\n\nfor i in range(1, m + 1):\n    x, y = I()\n    u[i], v[i] = x, y + a\n    d[v[i]] += 1;\n    d[u[i]] += 1\n\ns, ans = max(d), []\np = [[1] + [0] * s for _ in range(a + b + 1)]\n\nfor i in range(1, m + 1):\n    x = p[u[i]].index(0)\n    y = p[v[i]].index(0)\n    p[u[i]][x], p[v[i]][y] = v[i], u[i]\n    if x != y: dfs(v[i], x, y)\n\nfor i in range(1, m + 1):\n    for j in range(1, s + 1):\n        if p[u[i]][j] == v[i]:\n            ans += [j]\n            break\n\n\nsys.stdout.write(\"tourist\\n\" + str(s) + \"\\n\" + \" \".join(map(str, ans)) + \"\\n\")",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "import io, os, sys\n\nI = lambda: [int(x) for x in input().split()]\n\n\ndef dfs(x, y, z):\n    if not x: return\n    p[x][y], p[x][z] = p[x][z], p[x][y]\n    dfs(p[x][z], z, y)\n\n\na, b, m = I()\nd = [0] * (a + b + 1)\nu = [0] * (m + 1)\nv = [0] * (m + 1)\n\nfor i in range(1, m + 1):\n    x, y = I()\n    u[i], v[i] = x, y + a\n    d[v[i]] += 1;\n    d[u[i]] += 1\n\ns, ans = max(d), []\np = [[1] + [0] * s for _ in range(a + b + 1)]\n\nfor i in range(1, m + 1):\n    x = p[u[i]].index(0)\n    y = p[v[i]].index(0)\n    p[u[i]][x], p[v[i]][y] = v[i], u[i]\n    if x != y: dfs(v[i], x, y)\n\nfor i in range(1, m + 1):\n    for j in range(1, s + 1):\n        if p[u[i]][j] == v[i]:\n            ans += [j]\n            break\n\n\nsys.stdout.write(str(s) + \"\\n\" + \" \".join(map(str, ans)) + \"\\n\")",
                "verdict": "Unknown Verdict (8)"
            },
            {
                "code": "def dfs(x, y, z):\n    if not x:\n        return\n    p[x][y], p[x][z] = p[x][z], p[x][y]\n    dfs(p[x][z], z, y)\n\n\nn, _, m = map(int, input().split())\n\nd = [0] * (n + 1)\nu = [0] * (m + 1)\nv = [0] * (m + 1)\n\nfor i in range(1, m + 1):\n    x, y = map(int, input().split())\n    u[i], v[i] = x, y\n    d[v[i]] += 1\n    d[u[i]] += 1\n\ns, ans = max(d), []\np = [[1] + [0] * s for _ in range(n + 1)]\n\nfor i in range(1, m + 1):\n    x = p[u[i]].index(0)\n    y = p[v[i]].index(0)\n    p[u[i]][x], p[v[i]][y] = v[i], u[i]\n    if x != y:\n        dfs(v[i], x, y)\n\nfor i in range(1, m + 1):\n    for j in range(1, s + 1):\n        if p[u[i]][j] == v[i]:\n            ans += [j]\n            break\n\nprint(\"tourist\")\nprint(s)\nprint(*ans)\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "def dfs(x, y, z):\n    if not x:\n        return\n    p[x][y], p[x][z] = p[x][z], p[x][y]\n    dfs(p[x][z], z, y)\n\n\nn, _, m = map(int, input().split())\n\nd = [0] * (n + 1)\nu = [0] * (m + 1)\nv = [0] * (m + 1)\n\nfor i in range(1, m + 1):\n    x, y = map(int, input().split())\n    u[i], v[i] = x, y\n    d[v[i]] += 1\n    d[u[i]] += 1\n\ns, ans = max(d), []\np = [[1] + [0] * s for _ in range(n + 1)]\n\nfor i in range(1, m + 1):\n    x = p[u[i]].index(0)\n    y = p[v[i]].index(0)\n    p[u[i]][x], p[v[i]][y] = v[i], u[i]\n    if x != y:\n        dfs(v[i], x, y)\n\nfor i in range(1, m + 1):\n    for j in range(1, s + 1):\n        if p[u[i]][j] == v[i]:\n            ans += [j]\n            break\n\nprint(\"tourist\")\nprint(s)\nprint(*ans)\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "def dfs(x, y, z):\n    if not x:\n        return\n    p[x][y], p[x][z] = p[x][z], p[x][y]\n    dfs(p[x][z], z, y)\n\n\nn, _, m = map(int, input().split())\n\nd = [0] * (n + 1)\nu = [0] * (m + 1)\nv = [0] * (m + 1)\n\nfor i in range(1, m + 1):\n    x, y = map(int, input().split())\n    u[i], v[i] = x, y\n    d[v[i]] += 1\n    d[u[i]] += 1\n\ns, ans = max(d), []\np = [[1] + [0] * s for _ in range(n + 1)]\n\nfor i in range(1, m + 1):\n    x = p[u[i]].index(0)\n    y = p[v[i]].index(0)\n    p[u[i]][x], p[v[i]][y] = v[i], u[i]\n    if x != y:\n        dfs(v[i], x, y)\n\nfor i in range(1, m + 1):\n    for j in range(1, s + 1):\n        if p[u[i]][j] == v[i]:\n            ans += [j]\n            break\n\nprint(\"tourist\")\nprint(s)\nprint(*ans)\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, _, m = map(int, input().split())\n\nd = [0] * (n + 1)\n\nfor _ in range(m):\n    a, b = map(int, input().split())\n    d[a] += 1\n    d[b] += 1\n    \nprint(max(d))",
                "verdict": "Unknown Verdict (8)"
            },
            {
                "code": "n, x, m = map(int, input().split())\n\nd = [0] * (n + 1)\n\nfor _ in range(m):\n    a, b = map(int, input().split())\n    \n    assert a < x\n    assert n >= b >= x\n    \n    d[a] += 1\n    d[b] += 1\n    \nprint(max(d))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "_, _, m = map(int, input().split())\n\nd = [0] * (m + 1)\n\nfor _ in range(m):\n    a, b = map(int, input().split())\n    d[a] += 1\n    d[b] += 1\n    \nprint(max(d))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "_, _, m = map(int, input().split())\n\nd = [0] * m\n\nfor _ in range(m):\n    a, b = map(int, input().split())\n    d[a] += 1\n    d[b] += 1\n    \nprint(max(d))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n1, n2, m = map(int, input().split())\r\n\r\n\r\nvertices = {}\r\n\r\nfor i in range(m):\r\n    a, b = map(int, input().split())\r\n    if a not in vertices:\r\n        vertices[a] = 0\r\n    if b + n1 not in vertices:\r\n        vertices[b + n1] = 0\r\n    vertices[a] += 1\r\n    vertices[b + n1] += 1\r\n\r\n\r\ns = vertices.values()\r\nprint(\"noob\")\r\nprint(max(s))\r\n",
                "verdict": "Unknown Verdict (8)"
            },
            {
                "code": "n1, n2, m = map(int, input().split())\r\n\r\n\r\nvertices = {}\r\n\r\nfor i in range(m):\r\n    a, b = map(int, input().split())\r\n    if a not in vertices:\r\n        vertices[a] = 0\r\n    if b + n1 not in vertices:\r\n        vertices[b + n1] = 0\r\n    vertices[a] += 1\r\n    vertices[b + n1] += 1\r\n\r\ns = vertices.values()\r\nprint(\"noob\")\r\nprint(max(s))\r\n",
                "verdict": "Unknown Verdict (8)"
            },
            {
                "code": "print(\"noob\")",
                "verdict": "Unknown Verdict (8)"
            }
        ]
    },
    {
        "task_id": 46,
        "description": "\u041f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0430\u044f \u0441\u043a\u043e\u0431\u043e\u0447\u043d\u0430\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c - \u044d\u0442\u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0441\u043a\u043e\u0431\u043e\u043a (\u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 `(` \u0438 `)`), \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043a\u0430\u0436\u0434\u043e\u0439 \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u044e\u0449\u0435\u0439 \u0441\u043a\u043e\u0431\u043a\u0435 \u043d\u0430\u0439\u0434\u0451\u0442\u0441\u044f \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u044e\u0449\u0430\u044f. \u041f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u044c\u0442\u0435, \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0447\u0442\u043e \u043c\u044b \u0437\u0430\u043f\u0438\u0441\u0430\u043b\u0438 \u043a\u0430\u043a\u043e\u0435-\u0442\u043e \u0431\u043e\u043b\u044c\u0448\u043e\u0435 \u043c\u0430\u0442\u0435\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435, \u0430 \u0437\u0430\u0442\u0435\u043c \u043e\u0441\u0442\u0430\u0432\u0438\u043b\u0438 \u043e\u0442 \u043d\u0435\u0433\u043e \u0442\u043e\u043b\u044c\u043a\u043e \u0441\u043a\u043e\u0431\u043a\u0438 - \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0441\u044f \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0430\u044f \u0441\u043a\u043e\u0431\u043e\u0447\u043d\u0430\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c.\n\n\u0411\u043e\u043b\u0435\u0435 \u0444\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435:\n* \u041f\u0443\u0441\u0442\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0435\u0441\u0442\u044c \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0430\u044f \u0441\u043a\u043e\u0431\u043e\u0447\u043d\u0430\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c;\n* \u041f\u0443\u0441\u0442\u044c $$S$$ \u2014 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0430\u044f \u0441\u043a\u043e\u0431\u043e\u0447\u043d\u0430\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c, \u0442\u043e\u0433\u0434\u0430 $$(S)$$ \u0435\u0441\u0442\u044c \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0430\u044f \u0441\u043a\u043e\u0431\u043e\u0447\u043d\u0430\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c;\n* \u041f\u0443\u0441\u0442\u044c $$S1, S2$$ \u2014 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0435 \u0441\u043a\u043e\u0431\u043e\u0447\u043d\u044b\u0435 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438, \u0442\u043e\u0433\u0434\u0430 $$S1S2$$ \u0435\u0441\u0442\u044c \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0430\u044f \u0441\u043a\u043e\u0431\u043e\u0447\u043d\u0430\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c.\n\n\u0412\u0430\u043c \u0437\u0430\u0434\u0430\u043d\u0430 \u0441\u043a\u043e\u0431\u043e\u0447\u043d\u0430\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0434\u043b\u0438\u043d\u044b $n$ (\u043d\u0435 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0430\u044f), \u0438 $q$ \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0432\u0438\u0434\u0430 $[l; r]$. \n\u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u043d\u0430\u0439\u0434\u0438\u0442\u0435 \u0447\u0438\u0441\u043b\u043e \u0442\u0430\u043a\u0438\u0445 \u043f\u043e\u0434\u043e\u0442\u0440\u0435\u0437\u043a\u043e\u0432 $[a; b]$, \u0447\u0442\u043e $l \\le a < b \\le r$, \u0430 \u0441\u043a\u043e\u0431\u043e\u0447\u043a\u0438 \u0441 $a$-\u043e\u0439 \u043f\u043e $b$-\u0443\u044e \u043e\u0431\u0440\u0430\u0437\u0443\u044e\u0442 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0443\u044e \u0441\u043a\u043e\u0431\u043e\u0447\u043d\u0443\u044e \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c.\n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0447\u0438\u0441\u043b\u0430 $n$ \u0438 $q$ \u2013 \u0434\u043b\u0438\u043d\u0430 \u0441\u043a\u043e\u0431\u043e\u0447\u043d\u043e\u0439 \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 ($1 \\le n, q \\le 2 \\cdot 10^5$).\n\n\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e $n$ \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 `(` \u0438 `)` \u2013 \u0441\u043a\u043e\u0431\u043e\u0447\u043d\u0430\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0438\u0441\u043a\u0430\u0442\u044c \u043f\u043e\u0434\u043e\u0442\u0440\u0435\u0437\u043a\u0438.\n\n\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u0447\u0438\u0441\u043b\u043e $q$ \u2013 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432. \u0414\u0430\u043b\u044c\u043d\u0435\u0448\u0438\u0435 $q$ \u0441\u0442\u0440\u043e\u043a \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442 \u043f\u043e \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430 $l_i$ \u0438 $r_i$ \u2013 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f \u0434\u043b\u044f $i$-\u0442\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430 ($1 \\le l_i < r_i \\le n$).\u0412 \u043e\u0442\u0432\u0435\u0442 \u043d\u0430 \u043a\u0430\u0436\u0434\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e \u2013 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u043f\u043e\u0441\u043e\u0431\u043e\u0432 \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0438\u043d\u0434\u0435\u043a\u0441\u044b $a$ \u0438 $b$ \u0442\u0430\u043a, \u0447\u0442\u043e \u0447\u0442\u043e $l \\le a < b \\le r$, \u0430 \u0441\u043a\u043e\u0431\u043e\u0447\u043a\u0438 \u0441 $a$-\u043e\u0439 \u043f\u043e $b$-\u0443\u044e \u043e\u0431\u0440\u0430\u0437\u0443\u044e\u0442 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0443\u044e \u0441\u043a\u043e\u0431\u043e\u0447\u043d\u0443\u044e \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c.",
        "solutions": [
            {
                "code": "input = open(0).readline\n\na, b = map(int, input().split())\ninput()\nfor _ in range(b):\n    n1, n2 = map(int, input().split())\n    if n1 != 1:\n        raise",
                "verdict": "Runtime Error"
            },
            {
                "code": "input = open(0).readline\n\na, b = map(int, input().split())\ninput()\nfor _ in range(b):\n    n1, n2 = map(int, input().split())\n    if a != 1:\n        raise",
                "verdict": "Runtime Error"
            },
            {
                "code": "input = open(0).readline\n\na, b = map(int, input().split())\ninput()\nfor _ in range(b):\n    if a != 1:\n        raise",
                "verdict": "Runtime Error"
            },
            {
                "code": "while True: pass",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "#include<bits/extc++.h>\r\n#define int int64_t\r\n\r\n//#pragma GCC optimize(\"O3,unroll-loops\")\r\n//#pragma GCC target(\"avx2,bmi,bmi2,lzcnt,popcnt\")\r\n\r\nusing namespace std;\r\n\r\nconst int N = 2e5 + 1;\r\nconst int C = 300; // POSOSI U TRAKTORISTA\r\n\r\nstruct query {\r\n    int l, r, i;\r\n    bool operator < (const query &other) const {\r\n        return r < other.r;\r\n    }\r\n};\r\n\r\nint n, q;\r\nint b[N];\r\nchar s[N];\r\nint t[4 * N];\r\nint lt[N], rt[N];\r\n\r\nvector<int> idx[N];\r\n\r\nvoid update(int i, int val, int v = 1, int tl = 0, int tr = 2 * n) {\r\n    if (tl == tr) {\r\n        t[v] = val;\r\n        return;\r\n    }\r\n    int tm = (tl + tr) >> 1;\r\n    if (i <= tm)\r\n        update(i, val, v << 1, tl, tm);\r\n    else\r\n        update(i, val, v << 1 | 1, tm + 1, tr);\r\n    t[v] = max(t[v << 1], t[v << 1 | 1]);\r\n}\r\n\r\nint get(int l, int r, int v = 1, int tl = 0, int tr = 2 * n) {\r\n    if (l > r)\r\n        return 0;\r\n    if (tl == l && tr == r)\r\n        return t[v];\r\n    int tm = (tl + tr) >> 1;\r\n    return max(get(l, min(r, tm), v << 1, tl, tm), get(max(tm + 1, l), r, v << 1 | 1, tm + 1, tr));\r\n}\r\n\r\nvoid update2(int i, int val, int v = 1, int tl = 0, int tr = 2 * n) {\r\n    if (tl == tr) {\r\n        t[v] = val;\r\n        return;\r\n    }\r\n    int tm = (tl + tr) >> 1;\r\n    if (i <= tm)\r\n        update2(i, val, v << 1, tl, tm);\r\n    else\r\n        update2(i, val, v << 1 | 1, tm + 1, tr);\r\n    t[v] = min(t[v << 1], t[v << 1 | 1]);\r\n}\r\n\r\nint get2(int l, int r, int v = 1, int tl = 0, int tr = 2 * n) {\r\n    if (l > r)\r\n        return INT_MAX;\r\n    if (tl == l && tr == r)\r\n        return t[v];\r\n    int tm = (tl + tr) >> 1;\r\n    return min(get2(l, min(r, tm), v << 1, tl, tm), get2(max(tm + 1, l), r, v << 1 | 1, tm + 1, tr));\r\n}\r\n\r\ninline void init() {\r\n    b[0] = n;\r\n    idx[n].push_back(0);\r\n    for (int i = 1; i <= n; i++) {\r\n        b[i] = b[i - 1];\r\n        if (s[i] == '(')\r\n            b[i]++;\r\n        else\r\n            b[i]--;\r\n        idx[b[i]].push_back(i);\r\n    }\r\n    for (int i = 1; i <= n; i++) { // CORRECT\r\n        update(b[i - 1], i);\r\n        lt[i] = get(0, b[i] - 1);\r\n        if (b[lt[i]] < b[i])\r\n            lt[i]++;\r\n    }\r\n    for (int i = 0; i <= 8 * n; i++)\r\n        t[i] = n + 1;\r\n    for (int i = n; i >= 1; i--) {\r\n        update2(b[i], i);\r\n        rt[i] = get2(0, b[i - 1] - 1);\r\n        if (b[rt[i]] < b[i])\r\n            rt[i]--;\r\n    }\r\n}\r\n\r\nint bl = 1, br = 0, res = 0;\r\nint ans[N];\r\nvector<query> qs[N];\r\n\r\ninline int calc_l() {\r\n    int cur_r = min(br, rt[bl]);\r\n    int it_r = upper_bound(idx[b[bl - 1]].begin(), idx[b[bl - 1]].end(), cur_r) - idx[b[bl - 1]].begin();\r\n    if (it_r)\r\n        it_r--;\r\n    else\r\n        return 0;\r\n    int it_l = lower_bound(idx[b[bl - 1]].begin(), idx[b[bl - 1]].end(), bl) - idx[b[bl - 1]].begin();\r\n    return max((int64_t)0, it_r - it_l + 1);\r\n}\r\n\r\ninline int calc_r() {\r\n    int cur_l = max(bl, lt[br]);\r\n//    cout << cur_l << ' ';\r\n    int it_r = upper_bound(idx[b[br]].begin(), idx[b[br]].end(), br - 1) - idx[b[br]].begin();\r\n    if (it_r)\r\n        it_r--;\r\n    else\r\n        return 0;\r\n    int it_l = lower_bound(idx[b[br]].begin(), idx[b[br]].end(), cur_l - 1) - idx[b[br]].begin();\r\n    return max((int64_t)0, it_r - it_l + 1);\r\n}\r\n\r\ninline void calc_mo() {\r\n    for (int i = 0; i <= C; i++) {\r\n        sort(qs[i].begin(), qs[i].end());\r\n        for (auto cur : qs[i]) {\r\n            int l = cur.l, r = cur.r, idx = cur.i;\r\n            while (br < r)\r\n                br++, res += calc_r();\r\n            while (bl > l)\r\n                bl--, res += calc_l();\r\n            while (br > r)\r\n                res -= calc_r(), br--;\r\n            while (bl < l)\r\n                res -= calc_l(), bl++;\r\n            ans[idx] = res;\r\n        }\r\n    }\r\n}\r\n\r\nint32_t main() {\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    cin >> n >> q;\r\n    for (int i = 1; i <= n; i++)\r\n        cin >> s[i];\r\n    init();\r\n    for (int i = 1; i <= q; i++) {\r\n        int l, r;\r\n        cin >> l >> r;\r\n        qs[l / C].push_back({l, r, i});\r\n    }\r\n    calc_mo();\r\n    for (int i = 1; i <= q; i++)\r\n        cout << ans[i] << '\\n';\r\n}\r\n",
                "verdict": "Runtime Error"
            }
        ]
    },
    {
        "task_id": 47,
        "description": "\u0412\u0430\u043c \u0434\u0430\u043d \u0446\u0435\u043b\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432 $a$ \u0434\u043b\u0438\u043d\u043e\u0439 $n$. \u0427\u0438\u0441\u043b\u0430 \u0432 \u043d\u0451\u043c \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c\u0438.\n    \n\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 $k$ \u0438\u043b\u0438 \u043c\u0435\u043d\u044c\u0448\u0435 \u0440\u0430\u0437 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0442\u0430\u043a\u0443\u044e \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e: \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u043b\u044e\u0431\u043e\u0439 \u043f\u043e\u0434\u043c\u0430\u0441\u0441\u0438\u0432 $a[l:r]$ \u0438 \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0435\u0433\u043e \u2013 \u0442\u043e\u0433\u0434\u0430 \u043c\u0430\u0441\u0441\u0438\u0432 \u0431\u0443\u0434\u0435\u0442 \u0441\u043e\u0441\u0442\u043e\u044f\u0442\u044c \u0438\u0437 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 $a_1, a_2, \\dots, a_{l-1}, a_{r + 1}, \\dots, a_{n}$.\n\n\u041d\u0430\u0439\u0434\u0438\u0442\u0435 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u0443\u044e \u0441\u0443\u043c\u043c\u0443 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u043f\u043e\u0441\u043b\u0435 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439.\n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430 $n$ \u0438 $k$ ($0 \\le k \\le n \\le 10^5$).\n\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0447\u0438\u0441\u043b\u0430 $a_1, a_2, \\dots, a_{n}$ \u2013 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043c\u0430\u0441\u0441\u0438\u0432\u0430 ($-10^5 \\le a_i \\le 10^5$).\u0412 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e \u2013 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u0430\u044f \u0441\u0443\u043c\u043c\u0430 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u043f\u043e\u0441\u043b\u0435 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439.",
        "solutions": [
            {
                "code": "#include \"bits/stdc++.h\"\n\nusing namespace std;\nusing ll = long long;\nusing pll = pair<ll, ll>;\nusing vll = vector<ll>;\nusing vpl = vector<pll>;\nusing ld = long double;\nusing str = string;\nusing big_int = __int128_t;\n\nconst ld eps = 1e-7;\nconst ld PI = acos(-1);\n\n#define all(c) (c).begin(), (c).end()\n#define rall(c) ((c).rbegin()), ((c).rend())\n#define ff first\n#define ss second\n#define pb push_back\n#define pf push_front\n#define fast ios_base::sync_with_stdio(0); cin.tie(0)\n#define forn(i, n) for (ll i = 0; i < n; ++i)\n#define sz(a) (ll)a.size()\n#define endl '\\n'\n#define u_map unordered_map\n#define mset multiset\n//#define x first\n//#define y second\n\n#ifdef ONLINE_JUDGE\n#define debug(x);\n#else\n#define debug(x) cerr << #x << \": \" << x << endl;\n#endif\n\nstr IO[2] = {\"NO\\n\", \"YES\\n\"};\nstr io[2] = {\"no\\n\", \"yes\\n\"};\nstr Io[2] = {\"No\\n\", \"Yes\\n\"};\n//\n//mt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());\nmt19937 rnd(1232423);\n\ntemplate<class T> bool inmin(T& x_, T y_) {return y_ < x_ ? (x_ = y_, true) : false;}\ntemplate<class T> bool inmax(T& x_, T y_) {return y_ > x_ ? (x_ = y_, true) : false;}\n\nconst ll Mod = 1e9 + 7;\n//const ll Mod = 998244353;\n//const ll Mod = 1e9 + 9;\n//const ll Mod = 1234567891;\nconst ll INF = 1e12;\n\ntemplate<class T> void add(T& x_, T y_) { x_ = (x_ + y_) % Mod; };\ntemplate<class T> void sub(T& x_, T y_) { x_ = (x_ + Mod - y_) % Mod; };\ntemplate<class T> void mul(T& x_, T y_) { x_ = (x_ * y_) % Mod; };\n\nll n;\nvector<ld> a;\n\npair<ll, ll> calc(ll lambda) {\n    vector<ld> dp[2];\n    vll c[2];\n    vll rd[2];\n    rd[0].resize(n + 1);\n    rd[1].resize(n + 1);\n    dp[0].resize(n + 1);\n    dp[1].resize(n + 1);\n    c[0].resize(n + 1);\n    c[1].resize(n + 1);\n    forn (i, n) {\n        dp[0][i + 1] = dp[0][i] + a[i];\n        rd[0][i + 1] = rd[0][i] + a[i];\n        c[0][i + 1] = c[0][i];\n        if (inmax(dp[0][i + 1], dp[1][i] + a[i] - lambda) ||\n            (c[1][i] + 1 < c[0][i + 1] && dp[0][i + 1] == dp[1][i] + a[i] - lambda)) {\n            rd[0][i + 1] = rd[1][i] + a[i];\n            c[0][i + 1] = c[1][i] + 1;\n        }\n        dp[1][i + 1] = dp[1][i];\n        rd[1][i + 1] = rd[1][i];\n        c[1][i + 1] = c[1][i];\n        if (inmax(dp[1][i + 1], dp[0][i]) ||\n            (c[0][i] < c[1][i + 1] && dp[1][i + 1] == dp[0][i])) {\n            rd[1][i + 1] = rd[0][i];\n            c[1][i + 1] = c[0][i];\n        }\n    }\n    dp[1][n] -= lambda;\n    c[1][n]++;\n    if (dp[0][n] > dp[1][n]) {\n        return {rd[0][n], c[0][n]};\n    } else if (dp[1][n] > dp[0][n]) {\n        return {rd[1][n], c[1][n]};\n    }\n    ll mc = min(c[1][n], c[0][n]);\n    return {rd[0][n], mc};\n}\n\ninline void solve() {\n    ll k;\n    cin >> n >> k;\n    a.resize(n);\n    forn (i, n) cin >> a[i];\n    int cnt0 = 0;\n    forn(i, n) {\n        cnt0 += a[i] < 0;\n    }\n    inmin(k, cnt0);\n    ld lhs = 0 - eps, rhs = INF;\n    for (ll it = 0; it < 300; ++it) {\n        ld mid = (lhs + rhs) / 2;\n        pll res = calc(mid);\n        if (res.ss <= k) rhs = mid;\n        else lhs = mid;\n    }\n    pll res = calc(rhs);\n    assert(res.ss <= k);\n    cout << res.ff << endl;\n}\n\nint main() {\n    fast;\n    //cout << fixed << satprecision(10);\n    ll test;\n    test = 1;\n//    cin >> test;\n    for (ll id = 0; id < test; ++id) solve();\n    return 0;\n}\n\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "// #pragma GCC optimize(\"unroll-loops\")\n// #pragma GCC optimize(\"Ofast\")\n \n#include <iostream>\n#include <vector>\n#include <set>\n#include <algorithm>\n#include <ctime>\n#include <cmath>\n#include <map>\n#include <assert.h>\n#include <fstream>\n#include <cstdlib>\n#include <random>\n#include <iomanip>\n#include <queue>\n \nusing namespace std;\n \n#define sqr(a) ((a)*(a))\n#define all(a) (a).begin(), (a).end()\n \nconst long long MOD = (int) 1e9 + 7;\n\nvoid solve() {\n\tint n, m;\n\tcin >> n >> m;\n\n\tvector<long long> a(n);\n\tlong long ans = 0;\n\tfor (int i = 0; i < n; ++i) {\n\t\tcin >> a[i];\n\t\tans += a[i];\n\t}\n\n\tfor (int i = 0; i < m; ++i) {\n\t\tlong long minValue = (long long) 1e18;\n\t\tint minL = -1;\n\t\tint minR = -1;\n\n\t\tfor (int l = 0; l < n; ++l) {\n\t\t\tlong long segmentSum = 0;\n\t\t\tfor (int r = l; r < n; ++r) {\n\t\t\t\tsegmentSum = segmentSum + a[r];\n\n\t\t\t\tif (minValue > segmentSum) {\n\t\t\t\t\tminValue = segmentSum;\n\t\t\t\t\tminL = l;\n\t\t\t\t\tminR = r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (minValue >= 0)\n\t\t\tbreak;\n\n\t\tans -= minValue;\n\t\tfor (int j = minL; j <= minR; ++j) {\n\t\t\ta[j] *= -1;\n\t\t}\n\t}\n\n\tcout << ans << \"\\n\";\n}\n\nint main() {\n\t// freopen(\"input.txt\", \"r\", stdin);\n    ios_base::sync_with_stdio(0);\n    cin.tie(0);\n\n    int tests = 1;\n    // cin >> tests;\n\n    for (int i = 1; i <= tests; ++i) {\n    \tsolve();\n    }\n}\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "def solve(n, k, a):\n    prefix_sum = [0] * (n + 1)\n    for i in range(n):\n        prefix_sum[i + 1] = prefix_sum[i] + a[i]\n    dp = [0] * (n + 1)\n    for i in range(n + 1):\n        dp[i] = max(dp[i], prefix_sum[i])\n        if i + k + 1 <= n:\n            dp[i + k + 1] = max(dp[i + k + 1], dp[i])\n    return max(dp)\n\n# \u0427\u0442\u0435\u043d\u0438\u0435 \u0432\u0432\u043e\u0434\u0430 \u0441 \u043a\u043e\u043d\u0441\u043e\u043b\u0438\nn, k = map(int, input().split())\na = list(map(int, input().split()))\n\n# \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438\nprint(solve(n, k, a))\n",
                "verdict": "Wrong Answer"
            }
        ]
    },
    {
        "task_id": 48,
        "description": "\u041d\u0430 \u0441\u0442\u0430\u043d\u0446\u0438\u0438 \u043c\u0435\u0442\u0440\u043e \"\u041c\u043e\u043b\u043e\u0434\u0435\u0446\u043a\u0430\u044f\" \u0441\u0442\u043e\u0438\u0442 \u0432\u0435\u043d\u0434\u0438\u043d\u0433\u043e\u0432\u044b\u0439 \u0430\u0432\u0442\u043e\u043c\u0430\u0442, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043c\u043e\u0436\u043d\u043e \u043a\u0443\u043f\u0438\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u043e\u0434\u0438\u043d \u0442\u043e\u0432\u0430\u0440 \u2013 \u0431\u0430\u043d\u043e\u0447\u043a\u0443 \u043d\u0435\u043c\u0435\u0446\u043a\u043e\u0439 \u0433\u0430\u0437\u0438\u0440\u043e\u0432\u043a\u0438. \u041e\u043d\u0430 \u0441\u0442\u043e\u0438\u0442 $k$ \u0441\u043e\u0440\u0442\u043a\u043e\u0438\u043d\u043e\u0432. \u0413\u0430\u0437\u0438\u0440\u043e\u0432\u043a\u0430 \u0442\u0430\u043a \u0445\u043e\u0440\u043e\u0448\u0430, \u0447\u0442\u043e \u0437\u0430 \u043d\u0435\u0439 \u0443\u0436\u0435 \u0432\u044b\u0441\u0442\u0440\u043e\u0438\u043b\u0430\u0441\u044c \u043e\u0447\u0435\u0440\u0435\u0434\u044c \u0438\u0437 $n$ \u043f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u0435\u0439, \u043a\u0430\u0436\u0434\u044b\u0439 \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0445\u043e\u0447\u0435\u0442 \u043a\u0443\u043f\u0438\u0442\u044c \u043a\u0430\u043a \u043c\u043e\u0436\u043d\u043e \u0431\u043e\u043b\u044c\u0448\u0435 \u0431\u0430\u043d\u043e\u0447\u0435\u043a. \u0410\u0432\u0442\u043e\u043c\u0430\u0442 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043c\u043e\u043d\u0435\u0442\u043a\u0438 \u043d\u043e\u043c\u0438\u043d\u0430\u043b\u043e\u043c \u0432 1, 2, 5 \u0438 10 \u0441\u043e\u0440\u0442\u043a\u043e\u0438\u043d\u043e\u0432.\n    \n\u041a \u0441\u043e\u0436\u0430\u043b\u0435\u043d\u0438\u044e, \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0443 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430 \u043f\u0440\u0438\u0451\u043c\u0430 \u043c\u043e\u043d\u0435\u0442 \u0434\u043e\u0432\u0435\u0440\u0438\u043b\u0438 [\u043a\u0440\u0430\u0439\u043d\u0435 \u043d\u0435\u043e\u043f\u044b\u0442\u043d\u043e\u043c\u0443 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0443](https://codeforces.com/profile/FairyWinx). \u041e\u043d \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043b \u0435\u0433\u043e \u0442\u0430\u043a: \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u0441\u0447\u0435\u0442\u0447\u0438\u043a \u0441\u043e\u0440\u0442\u043a\u043e\u0438\u043d\u043e\u0432 \u0440\u0430\u0432\u0435\u043d \u043d\u0443\u043b\u044e, \u0430 \u043a\u043e\u0433\u0434\u0430 \u043f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u044c \u0432\u0431\u0440\u0430\u0441\u044b\u0432\u0430\u0435\u0442 \u043c\u043e\u043d\u0435\u0442\u0443 \u0432 \u0430\u0432\u0442\u043e\u043c\u0430\u0442, \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442, \u0434\u043e\u0441\u0442\u0438\u0433\u043b\u0430 \u043b\u0438 \u0441\u0443\u043c\u043c\u0430 \u043d\u043e\u043c\u0438\u043d\u0430\u043b\u043e\u0432 \u0432\u0431\u0440\u043e\u0448\u0435\u043d\u043d\u044b\u0445 \u043c\u043e\u043d\u0435\u0442 $k$, \u0438 \u0435\u0441\u043b\u0438 \u0434\u0430 \u2013 \u0442\u043e \u043e\u0431\u043d\u0443\u043b\u044f\u0435\u0442 \u0441\u0447\u0451\u0442\u0447\u0438\u043a \u0438 \u0432\u044b\u0434\u0430\u0451\u0442 \u0431\u0430\u043d\u043a\u0443. \u0421\u0434\u0430\u0447\u0430 **\u043d\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f** \u043f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u044e.\n\n\u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0430 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u0438 \u0443\u0437\u043d\u0430\u0439\u0442\u0435, \u043a\u0430\u043a\u043e\u0435 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0431\u0430\u043d\u043e\u0447\u0435\u043a \u0443 \u043d\u0435\u0433\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0441\u044f \u043a\u0443\u043f\u0438\u0442\u044c. \u041f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u0438 \u043d\u0435 \u043c\u043e\u0433\u0443\u0442 \u043f\u043e\u043c\u043e\u0433\u0430\u0442\u044c \u0434\u0440\u0443\u0433 \u0434\u0440\u0443\u0433\u0443, \u0438\u0445 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0440\u0430\u0441\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u043d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e.\u0415\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430, \u0433\u0434\u0435 \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430 $n$ \u0438 $k$ \u2013 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u0435\u0439 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u0438 \u0438 \u0446\u0435\u043d\u0430 \u0431\u0430\u043d\u043e\u0447\u043a\u0438 \u043d\u0435\u043c\u0435\u0446\u043a\u043e\u0439 \u0433\u0430\u0437\u0438\u0440\u043e\u0432\u043a\u0438. ($1 \\le n \\le 10^5;\\ 1 \\le k \\le 540$).\n\n\u0412 \u043a\u0430\u0436\u0434\u043e\u0439 \u0438\u0437 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 $n$ \u0441\u0442\u0440\u043e\u043a \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u043f\u043e 4 \u0447\u0438\u0441\u043b\u0430 $a$, $b$, $c$ \u0438 $d$ \u2013 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u043e\u043d\u0435\u0442 \u043d\u043e\u043c\u0438\u043d\u0430\u043b\u043e\u043c \u0432 1, 2, 5 \u0438 10 \u0441\u043e\u0440\u0442\u043a\u043e\u0438\u043d\u043e\u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0435\u0441\u0442\u044c \u0441 \u0441\u043e\u0431\u043e\u0439 \u0443 $i$-\u0433\u043e \u043f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u044f. ($0 \\le a, b, c, d \\le 30$)\u0414\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u044f \u0441 \u043d\u043e\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e \u2013 \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0431\u0430\u043d\u043e\u0447\u0435\u043a \u043d\u0435\u043c\u0435\u0446\u043a\u043e\u0439 \u0433\u0430\u0437\u0438\u0440\u043e\u0432\u043a\u0438 \u043e\u043d \u0441\u043c\u043e\u0436\u0435\u0442 \u043a\u0443\u043f\u0438\u0442\u044c.",
        "solutions": [
            {
                "code": "n, k = map(int, input().split())\n\nq = [[[[0] * 31 for _ in range(31)] for _ in range(31)] for _ in range(31)]\nw = [[[[0] * 31 for _ in range(31)] for _ in range(31)] for _ in range(31)]\n\nfor aa in range(31):\n    for bb in range(31):\n        for cc in range(31):\n            for dd in range(31):\n                if 0 == aa == bb == cc == dd:\n                    continue\n\n                mtshirts, mstars = 0, 0\n\n                for tshirts, stars, v in (\n                    (q[aa - 1][bb][cc][dd], w[aa - 1][bb][cc][dd], 1),\n                    (q[aa][bb - 1][cc][dd], w[aa][bb - 1][cc][dd], 2),\n                    (q[aa][bb][cc - 1][dd], w[aa][bb][cc - 1][dd], 3),\n                    (q[aa][bb][cc][dd - 1], w[aa][bb][cc][dd - 1], 4),\n                ):\n\n                    if v == 1:\n                        if aa == 0:\n                            continue\n                        stars += 1\n                    elif v == 2:\n                        if bb == 0:\n                            continue\n                        stars += 2\n                    elif v == 3:\n                        if cc == 0:\n                            continue\n                        stars += 5\n                    else:\n                        if dd == 0:\n                            continue\n                        stars += 10\n\n                    if stars >= k:\n                        tshirts += 1\n                        stars = 0\n\n                    if tshirts > mtshirts or (tshirts == mtshirts and stars > mstars):\n                        mtshirts = tshirts\n                        mstars = stars\n\n                q[aa][bb][cc][dd] = mtshirts\n                w[aa][bb][cc][dd] = mstars\n\nfor _ in range(n):\n    a, b, c, d = map(int, input().split())\n    print(q[a][b][c][d])",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, k = map(int, input().split())\n\nfor _ in range(n):\n    a, b, c, d = map(int, input().split())\n    print((a + 2 * b + 5 * c + 10 * d) // k)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, k = map(int, input().split())\n\nq = [[[[0] * 31 for _ in range(31)] for _ in range(31)] for _ in range(31)]\nw = [[[[0] * 31 for _ in range(31)] for _ in range(31)] for _ in range(31)]\n\nfor aa in range(31):\n    for bb in range(31):\n        for cc in range(31):\n            for dd in range(31):\n                if 0 == aa == bb == cc == dd:\n                    continue\n\n                mtshirts, mstars = 0, 0\n\n                for tshirts, stars, v in (\n                    (q[aa - 1][bb][cc][dd], w[aa - 1][bb][cc][dd], 1),\n                    (q[aa][bb - 1][cc][dd], w[aa][bb - 1][cc][dd], 2),\n                    (q[aa][bb][cc - 1][dd], w[aa][bb][cc - 1][dd], 3),\n                    (q[aa][bb][cc][dd - 1], w[aa][bb][cc][dd - 1], 4),\n                ):\n\n                    if v == 1:\n                        if aa == 0:\n                            continue\n                        stars += 1\n                    elif v == 2:\n                        if bb == 0:\n                            continue\n                        stars += 2\n                    elif v == 3:\n                        if cc == 0:\n                            continue\n                        stars += 5\n                    else:\n                        if dd == 0:\n                            continue\n                        stars += 10\n\n                    if stars >= k:\n                        tshirts += 1\n                        stars = 0\n\n                    if tshirts > mtshirts or (tshirts == mtshirts and stars > mstars):\n                        mtshirts = tshirts\n                        mstars = stars\n\n                q[aa][bb][cc][dd] = mtshirts\n                w[aa][bb][cc][dd] = mstars\n\nfor _ in range(n):\n    a, b, c, d = map(int, input().split())\n    print(q[a][b][c][d])",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "import collections\nimport math\nimport sys\nfrom queue import PriorityQueue\nfrom random import randint\n\nRANDOM = randint(1, 10 ** 9)\n\n\ndef main(testnumber):\n    bn = PriorityQueue()\n    n, k = map(int, input().split())\n    for i in range(n):\n        a, b, c, d = map(int, input().split())\n        l = 0\n        r = 540\n        ans = -1\n        while l <= r:\n            m = (l + r) // 2\n            for i in range(d):\n                if bn.qsize() < m:\n                    bn.put(10)\n                else:\n                    smallest = bn.get()\n                    smallest += 10\n                    bn.put(smallest)\n\n            for i in range(c):\n                if bn.qsize() < m:\n                    bn.put(5)\n                else:\n                    smallest = bn.get()\n                    smallest += 5\n                    bn.put(smallest)\n\n            for i in range(b):\n                if bn.qsize() < m:\n                    bn.put(2)\n                else:\n                    smallest = bn.get()\n                    smallest += 2\n                    bn.put(smallest)\n\n            for i in range(a):\n                if bn.qsize() < m:\n                    bn.put(1)\n                else:\n                    smallest = bn.get()\n                    smallest += 1\n                    bn.put(smallest)\n            cnt = 0\n            while bn.qsize() > 0:\n                if bn.get() >= k:\n                    cnt += 1\n            if cnt == m:\n                l = m + 1\n                ans = m\n            else:\n                r = m - 1\n        print(ans)\n\nif __name__ == \"__main__\":\n    t = 1 # int(input())\n    cnt = 1\n    while t > 0:\n        main(cnt)\n        cnt += 1\n        t -= 1\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "import collections\nimport math\nimport sys\nfrom queue import PriorityQueue\nfrom random import randint\n\nRANDOM = randint(1, 10 ** 9)\n\ndef main(testnumber):\n    n, k = map(int, input().split())\n    bn = PriorityQueue()\n    def bins(a, b, c, d):\n        l = 0\n        r = 540\n        ans = -1\n        while l <= r:\n            m = (l + r) // 2\n            it = 0\n            for i in range(d):\n                if bn.qsize() < m:\n                    bn.put(10)\n                else:\n                    smallest = bn.get()\n                    smallest += 10\n                    bn.put(smallest)\n                it += 1\n                it %= m\n            for i in range(c):\n                if bn.qsize() < m:\n                    bn.put(5)\n                else:\n                    smallest = bn.get()\n                    smallest += 5\n                    bn.put(smallest)\n                it += 1\n                it %= m\n            for i in range(b):\n                if bn.qsize() < m:\n                    bn.put(2)\n                else:\n                    smallest = bn.get()\n                    smallest += 2\n                    bn.put(smallest)\n                it += 1\n                it %= m\n            for i in range(a):\n                if bn.qsize() < m:\n                    bn.put(1)\n                else:\n                    smallest = bn.get()\n                    smallest += 1\n                    bn.put(smallest)\n                it += 1\n                it %= m\n            cnt = 0\n            while bn.qsize() > 0:\n                if bn.get() >= k:\n                    cnt += 1\n            if cnt == m:\n                l = m + 1\n                ans = m\n            else:\n                r = m - 1\n        return ans\n\n\n    for i in range(n):\n        a, b, c, d = map(int, input().split())\n        ans = bins(a, b, c, d)\n        print(ans)\n\nif __name__ == \"__main__\":\n    t = 1 # int(input())\n    cnt = 1\n    while t > 0:\n        main(cnt)\n        cnt += 1\n        t -= 1\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "import collections\nimport math\nimport sys\nfrom queue import PriorityQueue\nfrom random import randint\n\nRANDOM = randint(1, 10 ** 9)\n\ndef main(testnumber):\n    n, k = map(int, input().split())\n    def bins(a, b, c, d):\n        l = 0\n        r = 540\n        ans = -1\n        while l <= r:\n            m = (l + r) // 2\n            bn = PriorityQueue()\n            it = 0\n            for i in range(d):\n                if bn.qsize() < m:\n                    bn.put(10)\n                else:\n                    smallest = bn.get()\n                    smallest += 10\n                    bn.put(smallest)\n                it += 1\n                it %= m\n            for i in range(c):\n                if bn.qsize() < m:\n                    bn.put(5)\n                else:\n                    smallest = bn.get()\n                    smallest += 5\n                    bn.put(smallest)\n                it += 1\n                it %= m\n            for i in range(b):\n                if bn.qsize() < m:\n                    bn.put(2)\n                else:\n                    smallest = bn.get()\n                    smallest += 2\n                    bn.put(smallest)\n                it += 1\n                it %= m\n            for i in range(a):\n                if bn.qsize() < m:\n                    bn.put(1)\n                else:\n                    smallest = bn.get()\n                    smallest += 1\n                    bn.put(smallest)\n                it += 1\n                it %= m\n            cnt = 0\n            while bn.qsize() > 0:\n                if bn.get() >= k:\n                    cnt += 1\n            if cnt == m:\n                l = m + 1\n                ans = m\n            else:\n                r = m - 1\n        return ans\n\n\n    for i in range(n):\n        a, b, c, d = map(int, input().split())\n        ans = bins(a, b, c, d)\n        print(ans)\n\nif __name__ == \"__main__\":\n    t = 1 # int(input())\n    cnt = 1\n    while t > 0:\n        main(cnt)\n        cnt += 1\n        t -= 1\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, k = map(int, input().split())\r\na = [list(map(int, input().split())) for i in range(n)]\r\nfor i in range(n):\r\n    print((a[0]+2*a[1]+5*a[2]+10*a[3]) // k)\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\n#include <vector>\n#include <cmath>\n#include <deque>\n#include <numeric>\n#include <set>\n#include <algorithm>\n#include <map>\n#include <ctime>\n#include <bitset>\n\nusing namespace std;\n\n#define int long long\n\nsigned main() {\n    int n, k;\n    cin >> n >> k;\n    int dp[31][31][31][31];\n    for (int i = 0; i < 31; ++i) {\n        for (int j = 0; j < 31; ++j) {\n            for (int elem = 0; elem < 31; ++elem) {\n                for (int ind = 0; ind < 31; ++ind) {\n                    if (i > 0) {\n                        dp[i][j][elem][ind] = max(dp[i - 1][j][elem][ind], dp[i][j][elem][ind]);\n                    }\n                    if (j > 0) {\n                        dp[i][j][elem][ind] = max(dp[i][j - 1][elem][ind], dp[i][j][elem][ind]);\n                    }\n                    if (elem > 0) {\n                        dp[i][j][elem][ind] = max(dp[i][j][elem - 1][ind], dp[i][j][elem][ind]);\n                    }\n                    if (ind > 0) {\n                        dp[i][j][elem][ind] = max(dp[i][j][elem][ind - 1], dp[i][j][elem][ind]);\n                    }\n                    for (int i1 = 0; i1 <= i; ++i1) {\n                        for (int j1 = 0; j1 <= j; ++j1) {\n                            for (int elem1 = 0; elem1 <= elem; ++elem1) {\n                                for (int ind1 = 0; ind1 <= ind; ++ind1) {\n                                    if (i1 * 10 + j1 * 5 + elem1 * 2 + ind1 >= k) {\n                                        dp[i][j][elem][ind] = max(dp[i][j][elem][ind],\n                                                                dp[i - i1][j - j1][elem - elem1][ind - ind1] + 1);\n                                    }\n                                    if (i1 * 10 + j1 * 5 + elem1 * 2 + ind1 - 1 > k) {\n                                        break;\n                                    }\n                                }\n                                if (i1 * 10 + j1 * 5 + (elem1 - 1) * 2 > k) {\n                                    break;\n                                }\n                            }\n                            if (i1 * 10 + (j1 - 1) * 5 > k) {\n                                break;\n                            }\n                        }\n                        if ((i1 - 1) * 10 > k) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    for (int i = 0; i < n; ++i) {\n        int a, b, c, d;\n        cin >> a >> b >> c >> d;\n        cout << dp[d][c][b][a] << \"\\n\";\n    }\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "buy_and_pri=[int(i) for i in input().split()]\r\nbuyers=buy_and_pri[0]\r\nprice=buy_and_pri[1]\r\nmoney = []\r\ncounter=0\r\n\r\nfor i in range(buyers): \r\n    k = [int(l) for l in input().split()]\r\n    m = {}\r\n    m[k[0]]= k[0]*1\r\n    m[k[1]]= k[1]*2\r\n    m[k[2]]= k[2]*5\r\n    m[k[3]]= k[3]*10\r\n    money.append(k)\r\n    \r\nfor i in money:\r\n    for keys, values in i.items(): \r\n        y += key*value\r\n        if y>=price: \r\n            y=0\r\n            counter+=1\r\n    print(counter)",
                "verdict": "Runtime Error"
            },
            {
                "code": "buy_and_pri=[int(i) for i in input().split()]\r\nbuy=buy_and_pri[0]\r\nprice=buy_and_pri[1]\r\nmoney = []\r\ncounter=0\r\n\r\nfor i in range(buyers): \r\n    k = [int(l) for l in input().split()]\r\n    m = {}\r\n    m[k[0]]= k[0]*1\r\n    m[k[1]]= k[1]*2\r\n    m[k[2]]= k[2]*5\r\n    m[k[3]]= k[3]*10\r\n    money.append(k)\r\n    \r\nfor i in money:\r\n    for keys, values in i.items(): \r\n        y += key*value\r\n        if y>=price: \r\n            y=0\r\n            counter+=1\r\n    print(counter)",
                "verdict": "Runtime Error"
            },
            {
                "code": "buyers_and_price=[int(m) for m in input.split()]\nbuyers = buyers_and_price[0]\nprice = buyers_and_price[1]\nmoney = []\n\nfor i in range(buyers): \n    k = [int(l) for l in input().split()]\n    k[0]*=1\n    k[1]*=2\n    k[2]*=5\n    k[3]*=10\n    money.append(sum(k))\n    \nfor i in money: \n    count = i//price\n    print(int(count))\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "buyers_and_price=[int(m) for m in input.split()]\nbuyers = buyers_and_price[0]\nprice = buyers_and_price[1]\nmoney = []\n\nfor i in range(buyers): \n    k = [int(l) for l in input.split()]\n    k[0]*=1\n    k[1]*=2\n    k[2]*=5\n    k[3]*=10\n    money.append(sum(k))\n    \nfor i in money: \n    count = i//price\n    print(int(count))\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "buyers_and_price=[int(i) for i in input.split()]\nbuyers = buyers_and_price[0]\nprice = buyers_and_price[1]\nmoney = []\n\nfor i in range(buyers): \n    k = [int(i) for i in input.split()]\n    k[0]*=1\n    k[1]*=2\n    k[2]*=5\n    k[3]*=10\n    money.append(sum(k))\n    \nfor i in money: \n    count = i//price\n    print(int(count))\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nk = int(input())\r\ns = 0\r\nspisk = []\r\n\r\nfor i in range(n+1):\r\n    a,b,c,d = int(input()), int(input()), int(input()), int(input())\r\n    spisk = [a,b,c,d]\r\n    nom = [1,2,5,10]    \r\n    if a >= 1 and a <= 5:\r\n        if b >= 1 and <= 5:\r\n            if c >= 1 and <= 5:\r\n                if d >= 1 and <= 5:\r\n                    symma = a + b*2 + c*5 + d*10\r\n                    s1 = k\r\n                    while:\r\n                        for jm in range(3,-1,-1):\r\n                            for km in range(0,spisk[jm]):\r\n\r\n                                if s1-nom[jm] <= 0:\r\n                                    count += 1\r\n                                else:\r\n                                    spisk[jm] -= 1\r\n                                    s1 = s1 - nom[jm]\r\n                                \r\n                     else:\r\n                         break\r\n                 else:\r\n                    break\r\n            else:\r\n                break\r\n        else:\r\n            break\r\n     else:\r\n         break\r\n\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nk = int(input())\r\ns = 0\r\n\r\nfor i in range(n+1):\r\n    a,b,c,d = int(input()), int(input()), int(input()), int(input())\r\n    if a >= 1 and a <= 5:\r\n        if b >= 1 and <= 5:\r\n            if c >= 1 and <= 5:\r\n                if d >= 1 and <= 5:\r\n                    if (a + 2*b + 5*c + 10*d) % k == 0:\r\n                         print(s//k)\r\n                     else:\r\n                         break\r\n                 else:\r\n                    break\r\n            else:\r\n                break\r\n        else:\r\n            break\r\n     else:\r\n         break\r\n\r\n\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nk = int(input())\r\ns = 0\r\nif n == 0:\r\n    for i in range(n+1):\r\n        a,b,c,d = int(input()), int(input()), int(input()), int(input())\r\n        if a >= 1 and a <= 5:\r\n            if b >= 1 and <= 5:\r\n                if c >= 1 and <= 5:\r\n                    if d >= 1 and <= 5:\r\n                        if (a + 2*b + 5*c + 10*d) % k == 0:\r\n                            print(s//k)\r\n                        else:\r\n                            break\r\n                    else:\r\n                        break\r\n                else:\r\n                    break\r\n            else:\r\n                break\r\n        else:\r\n            break\r\n\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nk = int(input())\r\ns = 0 \r\nfor i in range(n+1):\r\n    a,b,c,d = int(input()), int(input()), int(input()), int(input())\r\n    s = a*1 + 2 * b + 5 *c + 10 *d\r\n    print(k//s) \r\n",
                "verdict": "Runtime Error"
            }
        ]
    },
    {
        "task_id": 49,
        "description": "\u0412 \u043a\u0430\u0437\u0438\u043d\u043e \u00ab\u0421\u0442\u0430\u0432\u043a\u0438 \u043d\u0430 \u0440\u0430\u0443\u043d\u0434\u044b\u00bb \u0447\u0430\u0441\u0442\u043e \u0438\u0433\u0440\u0430\u044e\u0442 \u0432 \u0421\u043e\u0440\u0442\u0434\u0436\u0435\u043a. \u042d\u0442\u043e \u043e\u0441\u043e\u0431\u0430\u044f \u0438\u0433\u0440\u0430, \u0434\u043b\u044f \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043d\u0443\u0436\u043d\u0430 \u043e\u0441\u043e\u0431\u0430\u044f \u043a\u043e\u043b\u043e\u0434\u0430 \u0438\u0437 $n$ \u043a\u0430\u0440\u0442, \u043d\u0435 \u0438\u043c\u0435\u044e\u0449\u0438\u0445 \u043c\u0430\u0441\u0442\u0435\u0439, \u0438 \u043f\u0440\u043e\u043d\u0443\u043c\u0435\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043e\u0442 $1$ \u0434\u043e $n$. $n$ \u0432\u0441\u0435\u0433\u0434\u0430 \u0447\u0451\u0442\u043d\u043e.\n    \n\u0427\u0442\u043e\u0431\u044b \u043b\u0443\u0447\u0448\u0435 \u0442\u0443\u0441\u043e\u0432\u0430\u0442\u044c \u043a\u043e\u043b\u043e\u0434\u044b \u0434\u043b\u044f \u0438\u0433\u0440\u044b, \u043a\u0430\u0437\u0438\u043d\u043e \u043f\u0440\u0438\u043e\u0431\u0440\u0435\u043b\u043e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0440\u043e\u0431\u043e\u0442\u0430-\u0434\u0438\u043b\u0435\u0440\u0430. \u041e\u043d \u0443\u043c\u0435\u0435\u0442 \u0434\u0435\u043b\u0430\u0442\u044c **\u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044e \u043f\u0435\u0440\u0435\u043c\u0435\u0448\u0438\u0432\u0430\u043d\u0438\u044f**: \u0432\u0437\u044f\u0442\u044c \u043a\u043e\u043b\u043e\u0434\u0443, \u0440\u0430\u0437\u0434\u0435\u043b\u0438\u0442\u044c \u0435\u0451 \u0440\u043e\u0432\u043d\u043e \u043f\u043e\u043f\u043e\u043b\u0430\u043c \u043f\u043e\u0441\u0435\u0440\u0435\u0434\u0438\u043d\u0435, \u0430 \u0437\u0430\u0442\u0435\u043c \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0438\u0442\u044c \u043a\u0430\u0440\u0442\u044b \u0438\u0437 \u043d\u0438\u0445 \u00ab\u0447\u0435\u0440\u0435\u0437 \u043e\u0434\u043d\u0443\u00bb, \u043d\u0430\u0447\u0438\u043d\u0430\u044f \u0441\u043e \u0432\u0442\u043e\u0440\u043e\u0439 \u043f\u043e\u043b\u043e\u0432\u0438\u043d\u044b.\n\n\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0435\u0441\u043b\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u0432 \u0440\u043e\u0431\u043e\u0442\u0430 \u043a\u043e\u043b\u043e\u0434\u0443 $[1, 2, 3, 4 \\dots n]$, \u0442\u043e \u043f\u043e\u0441\u043b\u0435 \u043e\u0434\u043d\u043e\u0439 \u0442\u0430\u043a\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0441\u044f \u043a\u043e\u043b\u043e\u0434\u0430 $[\\frac{n}{2} + 1, 1, \\frac{n}{2} + 2, 2, \\dots, n, \\frac{n}{2}]$. \u0427\u0442\u043e\u0431\u044b \u043a\u043e\u043b\u043e\u0434\u0430 \u043f\u0435\u0440\u0435\u043c\u0435\u0448\u0430\u043b\u0430\u0441\u044c \u043b\u0443\u0447\u0448\u0435, \u0440\u043e\u0431\u043e\u0442 \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u044c \u044d\u0442\u043e \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u043b\u044e\u0431\u043e\u0435 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0440\u0430\u0437.\n\n\u0427\u0442\u043e\u0431\u044b \u043f\u043e\u043a\u0440\u044b\u0442\u044c \u0440\u0430\u0441\u0445\u043e\u0434\u044b \u043d\u0430 \u0440\u043e\u0431\u043e\u0442\u0430, \u043a\u0430\u0437\u0438\u043d\u043e \u0440\u0435\u0448\u0438\u043b\u043e \u043f\u0440\u043e\u0434\u0430\u0442\u044c \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0438\u0437 \u0441\u0432\u043e\u0438\u0445 \u043a\u043e\u043b\u043e\u0434. \u041a\u043e\u043b\u043e\u0434\u044b \u043f\u0440\u0438\u043d\u044f\u0442\u043e \u0432\u044b\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c \u043d\u0430 \u043f\u0440\u043e\u0434\u0430\u0436\u0443 \u0432 \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u043c \u043f\u043e \u0432\u043e\u0437\u0440\u0430\u0442\u0430\u043d\u0438\u044e \u043d\u043e\u043c\u0435\u0440\u043e\u0432 \u043a\u0430\u0440\u0442 \u0432\u0438\u0434\u0435. \u041e\u0434\u043d\u0430\u043a\u043e \u043a\u043e\u043b\u043e\u0434\u044b \u0431\u044b\u0432\u0430\u044e\u0442 \u0442\u0430\u043a\u0438\u043c\u0438 \u0431\u043e\u043b\u044c\u0448\u0438\u043c\u0438, \u0447\u0442\u043e \u043d\u0438 \u043e\u0434\u0438\u043d \u0436\u0438\u0432\u043e\u0439 \u0434\u0438\u043b\u0435\u0440 \u043d\u0435 \u0441\u043f\u0440\u0430\u0432\u0438\u0442\u0441\u044f \u0441 \u0438\u0445 \u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u043e\u0439. \n\n\u041a\u0430\u0437\u0438\u043d\u043e \u0445\u043e\u0447\u0435\u0442 \u0443\u0437\u043d\u0430\u0442\u044c, \u0441\u043f\u043e\u0441\u043e\u0431\u0435\u043d \u043b\u0438 \u0440\u043e\u0431\u043e\u0442-\u0434\u0438\u043b\u0435\u0440 \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438\u0445 \u043a\u043e\u043b\u043e\u0434\u0443, \u0438 \u0435\u0441\u043b\u0438 \u0434\u0430 \u2013 \u0442\u043e \u0437\u0430 \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439.\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e $n$ \u2013 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u0430\u0440\u0442 \u0432 \u043a\u043e\u043b\u043e\u0434\u0435 \u0443 \u043a\u0430\u0437\u0438\u043d\u043e ($2 \\le n \\le 2 \\cdot 10^5$, $n$ \u043a\u0440\u0430\u0442\u043d\u043e $2$).\n    \n\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e $n$ \u0447\u0438\u0441\u0435\u043b $a_1, a_2, \\dots, a_{n}$ ($1 \\le a_i \\le n$) \u2013 \u043a\u0430\u0440\u0442\u044b \u0432 \u0442\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043e\u043d\u0438 \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u044b \u0432 \u043a\u043e\u043b\u043e\u0434\u0435, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043a\u0430\u0437\u0438\u043d\u043e \u0445\u043e\u0447\u0435\u0442 \u043f\u0440\u043e\u0434\u0430\u0442\u044c. \u041d\u043e\u043c\u0435\u0440\u0430 \u0432\u0441\u0435\u0445 \u043a\u0430\u0440\u0442 \u043f\u043e\u043f\u0430\u0440\u043d\u043e \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b.\u0415\u0441\u043b\u0438 \u0440\u043e\u0431\u043e\u0442 \u0441\u043c\u043e\u0436\u0435\u0442 \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u043e\u043b\u043e\u0434\u0443 \u043a\u0430\u0437\u0438\u043d\u043e, \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439, \u0447\u0435\u0440\u0435\u0437 \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043e\u043d \u044d\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u0435\u0442. \u0415\u0441\u043b\u0438 \u043d\u0435 \u0441\u043c\u043e\u0436\u0435\u0442 \u2013 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 `-1`.",
        "solutions": [
            {
                "code": "n = int(input())\r\nnumbers = [int(i) for i in input().split()]\r\na = numbers[0] - numbers[1]\r\nif list(range(n, 0, -1)) == numbers:\r\n    print(-1)\r\n    break\r\nflag = False\r\nfor i in range(1, n + 1, 2):\r\n    if numbers[i - 1] - numbers[i] == a:\r\n        flag = True\r\n    else:\r\n        flag = False\r\n        break\r\nprint(numbers.index(1) + 1 if flag else -1)\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "/*\r\n    #MADE BY#\r\n    ###SAS###\r\n*/\r\n\r\n\r\n\r\n\r\n#include <iostream>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <cmath>\r\n#include <map>\r\n#include <unordered_map>\r\n#include <set>\r\n#include <unordered_set>\r\n#include <cstdio>\r\n#include <stack>\r\n#include <queue>\r\n#include <deque>\r\n#include <string>\r\n#include <random>\r\n\r\n#define int long long\r\n\r\nusing namespace std;\r\n\r\nconst int INF = 1000000000 + 7;\r\n\r\n\r\nsigned main()\r\n{\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    string da = \"YES\\n\";\r\n    string net = \"NO\\n\";\r\n    int q;\r\n    q = 1;\r\n    //cin >> q;\r\n    while (q--) {\r\n        /*int n;\r\n        cin >> n;\r\n        vector<int> a(n);\r\n        for (int i = 0; i < n; i++) {\r\n            cin >> a[i];\r\n        }\r\n        int mx = 1;\r\n        vector<map<int, int>> v(n);\r\n        for (int i = 0; i < n; i++) {\r\n            for (int j = 0; j < i; j++) {\r\n                v[i][a[i] - a[j]] = v[j][a[i] - a[j]] + 1;\r\n                int g = v[i][a[i] - a[j]];\r\n                mx = max(mx, g);\r\n            }\r\n        }\r\n        if (n == 1) {\r\n            cout << 1 << endl;\r\n            continue;\r\n        }\r\n        cout << mx + 1 << endl;*/\r\n\r\n\r\n        int n;\r\n        cin >> n;\r\n        vector<int> a(n);\r\n        map<vector<int>, bool> mp;\r\n        bool ff = true;\r\n        for (int i = 0; i < n; i++) {\r\n            cin >> a[i];\r\n            if (a[i] != (i + 1)) {\r\n                ff = false;\r\n            }\r\n        }\r\n        if (ff) {\r\n            cout << 0 << endl;\r\n            continue;\r\n        }\r\n        mp[a] = true;\r\n        bool f = true;\r\n        vector<int> b(n, 0);\r\n        int ans = 0;\r\n        while (f) {\r\n            if (mp[b]) {\r\n                f = false;\r\n                ans = -1;\r\n            }\r\n            else {\r\n                ans++;\r\n                mp[b] = true;\r\n                int j = 1;\r\n                for (int i = 0; i < n / 2; i++) {\r\n                    b[j] = a[i];\r\n                    j += 2;\r\n                }\r\n                j = 0;\r\n                for (int i = 0; i < n / 2; i++) {\r\n                    b[j] = a[i + n / 2];\r\n                    j += 2;\r\n                }\r\n                bool fl = true;\r\n                for (int i = 0; i < n; i++) {\r\n                    a[i] = b[i];\r\n                    if (a[i] != (i + 1)) {\r\n                        fl = false;\r\n                    }\r\n                }\r\n                if (fl) {\r\n                    f = false;\r\n                }\r\n            }\r\n        }\r\n        cout << ans;\r\n    }\r\n    return 0;\r\n}",
                "verdict": "Runtime Error"
            }
        ]
    },
    {
        "task_id": 50,
        "description": "\u041d\u0430 \u043f\u043b\u0430\u043d\u0435\u0442\u0435 \u0422\u0440\u0438\u0433\u0430\u043c\u0435\u0442\u0435 \u0436\u0438\u0432\u0443\u0442 \u043f\u043e\u0447\u0442\u0438 \u0442\u0430\u043a\u0438\u0435 \u0436\u0435 \u043b\u044e\u0434\u0438, \u043a\u0430\u043a \u0438 \u043c\u044b. \u0417\u0430 \u043e\u0434\u043d\u0438\u043c \u0432\u0430\u0436\u043d\u044b\u043c \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c: \u0443 \u043d\u0438\u0445 \u0446\u0435\u043b\u044b\u0445 \u0442\u0440\u0438 \u043f\u043e\u043b\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0443\u0441\u043b\u043e\u0432\u043d\u043e \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u044b \u0431\u0443\u043a\u0432\u0430\u043c\u0438 `X`, `Y` \u0438 `Z`. \u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e, \u0447\u0442\u043e\u0431\u044b \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0435\u043c\u044c\u044e \u0438 \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u044c \u0440\u043e\u0434, \u043d\u0443\u0436\u0435\u043d \u043e\u0434\u0438\u043d \u0447\u0435\u043b\u043e\u0432\u0435\u043a \u043f\u043e\u043b\u0430 `X`, \u043e\u0434\u0438\u043d \u043f\u043e\u043b\u0430 `Y` \u0438 \u043e\u0434\u0438\u043d \u043f\u043e\u043b\u0430 `Z`.\n    \n\u0412\u0430\u0441 \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u043b\u0438 \u043d\u0430 \u044d\u0442\u0443 \u043f\u043b\u0430\u043d\u0435\u0442\u0443 \u0441 \u043c\u0438\u0441\u0441\u0438\u0435\u0439 \u043f\u043e\u043c\u043e\u0447\u044c \u043c\u0435\u0441\u0442\u043d\u044b\u043c \u043b\u044e\u0434\u044f\u043c \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0438\u0442\u044c\u0441\u044f \u0432 \u0441\u0435\u043c\u044c\u0438. \u0412\u044b \u0441\u0430\u043c\u0438 \u0440\u0435\u0448\u0438\u0442\u0435, \u043a\u0442\u043e \u0438\u043c\u0435\u043d\u043d\u043e \u0441 \u043a\u0435\u043c \u0438\u043c\u0435\u043d\u043d\u043e \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0438\u0442\u0441\u044f. \u041d\u043e \u0432\u0430\u043c \u0432\u0430\u0436\u043d\u043e, \u0447\u0442\u043e\u0431\u044b \u043f\u043e \u0438\u0442\u043e\u0433\u0430\u043c \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u043e\u0441\u0442\u0430\u043b\u043e\u0441\u044c \u043a\u0430\u043a \u043c\u043e\u0436\u043d\u043e \u043c\u0435\u043d\u044c\u0448\u0435 \u043b\u044e\u0434\u0435\u0439, \u043d\u0435 \u043d\u0430\u0448\u0435\u0434\u0448\u0438\u0445 \u0441\u0435\u0431\u0435 \u0441\u0435\u043c\u044c\u044e. \n    \n\u041f\u043e\u0441\u043a\u043e\u043b\u044c\u043a\u0443 \u043d\u0430 \u0417\u0435\u043c\u043b\u0435 \u0432\u0430\u0441 \u0443\u0447\u0438\u043b\u0438 \u0442\u043e\u043b\u0435\u0440\u0430\u043d\u0442\u043d\u043e\u0441\u0442\u0438 \u0438 \u0433\u0435\u043d\u0434\u0435\u0440\u043d\u043e\u0439 \u043d\u0430\u0443\u043a\u0435, \u043f\u0435\u0440\u0435\u0434 \u043d\u0430\u0447\u0430\u043b\u043e\u043c \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0443\u0431\u0435\u0434\u0438\u0442\u044c \u0440\u043e\u0432\u043d\u043e \u043e\u0434\u043d\u043e\u0433\u043e \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0430 \u043d\u0430 \u0422\u0440\u0438\u0433\u0430\u043c\u0435\u0442\u0435 \u0441\u043c\u0435\u043d\u0438\u0442\u044c \u043f\u043e\u043b \u043d\u0430 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439, \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0439 \u0432\u0430\u043c\u0438. \u0412\u043f\u0440\u043e\u0447\u0435\u043c, \u0434\u0435\u043b\u0430\u0442\u044c \u044d\u0442\u043e \u043d\u0435 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e.\n    \n\u041d\u0430\u0439\u0434\u0438\u0442\u0435 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043b\u044e\u0434\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0441\u0442\u0430\u043d\u0443\u0442\u0441\u044f \u043e\u0434\u0438\u043d\u043e\u043a\u0438\u043c\u0438 \u043f\u043e\u0441\u043b\u0435 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043f\u043e \u0441\u0435\u043c\u044c\u044f\u043c.\u0415\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430, \u0433\u0434\u0435 $i$-\u044b\u0439 \u0441\u0438\u043c\u0432\u043e\u043b \u2013 \u0443\u0441\u043b\u043e\u0432\u043d\u043e\u0435 \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u0430 $i$-\u043e\u0433\u043e \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0430 \u043d\u0430 \u0422\u0440\u0438\u0433\u0430\u043c\u0435\u0442\u0435. \u0414\u043b\u0438\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0438 \u043d\u0435 \u043f\u0440\u0435\u0432\u044b\u0448\u0430\u0435\u0442 $2 \\cdot 10^5$.\u0412 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e \u2013 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043b\u044e\u0434\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0441\u0442\u0430\u043d\u0443\u0442\u0441\u044f \u043e\u0434\u0438\u043d\u043e\u043a\u0438\u043c\u0438 \u043f\u043e\u0441\u043b\u0435 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043f\u043e \u0441\u0435\u043c\u044c\u044f\u043c.",
        "solutions": [
            {
                "code": "vars = [0, 0, 0]\nstring = input()\nfor symbol in string:\n    if symbol == \"X\":\n        vars[0] += 1\n    elif symbol == \"Y\":\n        vars[1] += 1\n    else:\n        vars[2] += 1\nvars.sort()\nif vars[-1] > 0:\n    vars[-1] -= 1\n    vars[0] += 1\n    print(max(vars) - min(vars))\nelse:\n    print(0)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "vars = [0, 0, 0]\nstring = input()\nfor symbol in string:\n    if symbol == \"X\":\n        vars[0] += 1\n    elif symbol == \"Y\":\n        vars[1] += 1\n    else:\n        vars[2] += 1\nvars.sort()\nif vars[-1] > 0:\n    vars[-1] -= 1\n    vars[0] += 1\n    print(min(vars))\nelse:\n    print(0)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = {\n    \"X\": 0,\n    \"Y\": 0,\n    \"Z\": 0\n}\n\nt = list(input())\nfor e in t:\n    x[e] += 1\nprint(sum([e - min(x.values()) for e in x.values()]))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = {\n    \"X\": 0,\n    \"Y\": 0,\n    \"Z\": 0\n}\n\nt = list(input())\nfor e in t:\n    x[e] += 1\nprint(min(x.values()))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "d = [0] * 3\r\nfor i in input(): d[ord(i)-88] += 1\r\na, b, c = sorted(d)\r\nprint(b+c-2*a - 3 * (c-a > 1 and b-a))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "d = [0] * 3\nfor i in input():\n    d[ord(i)-88] += 1\nd.sort()\nd = [i-d[0] for i in d]\nprint(sum(d) - d[2] > 1 and d[1] > 0 and 3)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "d = [0] * 3\nfor i in input():\n    d[ord(i)-88] += 1\nd.sort()\nd = [i-d[0] for i in d]\nprint(sum(d) - d[2] > 1 and d[1] and 3)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "//Now playing: Lady Gaga - Babylon\n//vk - volezh\n//tg - kalexina\n//cf - splatjov\n//\u0441\u0443\u043f\u0435\u0440 \u043b\u0430\u043c\u043f\u043e\u0432\u043e\u0435 \u043c\u0435\u0441\u0442\u043e -> dshindov_chat\n\n#pragma GCC optimize(3)\n#pragma GCC optimize(\"inline\")\n#pragma GCC optimize(\"-fgcse\")\n#pragma GCC target(\"avx\",\"sse2\")\n#pragma GCC optimize(\"-fgcse-lm\")\n#pragma GCC optimize(\"-fipa-sra\")\n#pragma GCC optimize(\"-ftree-pre\")\n#pragma GCC optimize(\"-ftree-vrp\")\n#pragma GCC optimize(\"-fpeephole2\")\n#pragma GCC optimize(\"-ffast-math\")\n#pragma GCC optimize(\"-fsched-spec\")\n#pragma GCC optimize(\"unroll-loops\")\n#pragma GCC diagnostic push\n#pragma GCC diagnostic ignored \"-Wunused-parameter\"\n#pragma GCC diagnostic ignored \"-Wc++11-long-long\"\n#pragma GCC diagnostic ignored \"-Wc++11-extensions\"\n\n#include <iostream>\n#include <vector>\n#include <queue>\n#include <algorithm>\n#include <cmath>\n#include <set>\n#include <fstream>\n#include <map>\n \nusing ll = long long;\nusing namespace std;\ntypedef pair <long long, long long > pii;\n\nvoid solve()\n{\n    string b;\n    long long ans=-1;\n    cin>>b;\n    long long z=0,x=0,y=0;\n    for (int i=0; i<b.size(); i++)\n    {\n        if (b[i]=='Z') z++;\n        if (b[i]=='X') x++;\n        if (b[i]=='Y') y++;\n    }\n    for (int i=0; i<3; i++)\n    {\n        for (int j=0; j<3; j++)\n        {\n            if (i==0) z++;\n            if (j==0) z--;\n            if (i==1) x++;\n            if (j==1) x--;\n            if (i==2) y++;\n            if (j==2) y--;\n            ll u=z;\n            u=min(u,x);\n            u=min(u,y);\n            ans=max(u,ans);\n            if (i==0) z--;\n            if (j==0) z++;\n            if (i==1) x--;\n            if (j==1) x++;\n            if (i==2) y--;\n            if (j==2) y++;\n        }\n    }\n    cout<<x+y+z-ans*3<<endl;\n}\n\n\nsigned main()\n{\n    long long t=1;\n    // cin>>t;\n    while (t) \n    {\n        t--;\n        solve();\n    }\n}\n\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <bits/stdc++.h>\n\n#pragma GCC optimize(\"O3\", \"Ofast\", \"fast-math\")\n\nusing namespace std;\n//#define int long long\n#define int long long\n//#define double long double\n#define pii pair<int, int>\n#define veci vector<int>\n#define null NULL\n#define endl \"\\n\"\n\n\ninline void solve(int test = 0) {\n    string line;\n    cin >> line;\n    int cnt[] = {0, 0, 0};\n    for (auto chr: line)\n        cnt[chr - 'X']++;\n    sort(cnt, cnt + 3);\n    int sum = line.size();\n    if (cnt[0] == cnt[1]) {\n        cout << sum - cnt[0] * 3 << endl;\n    } else {\n        if (cnt[2] > cnt[0] + 1)\n            cout << sum - (cnt[0] + 1) * 3 << endl;\n        else\n            cout << sum - cnt[0] * 3 << endl;\n    }\n}\n\nsigned main() {\n    cout << setprecision(8);\n    cin.tie(), cout.tie();\n    ios_base::sync_with_stdio(false);\n\n    int test = 0;\n    int t = 1;\n    bool local = getenv(\"local\");\n    if (local) {\n        freopen(\"../test/input.txt\", \"r\", stdin);\n        freopen(\"../test/output.txt\", \"w\", stdout);\n    }\n    while (t--) {\n        solve(test++);\n    }\n}",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <bits/stdc++.h>\n\n#pragma GCC optimize(\"O3\", \"Ofast\", \"fast-math\")\n\nusing namespace std;\n//#define int long long\n#define int long long\n//#define double long double\n#define pii pair<int, int>\n#define veci vector<int>\n#define null NULL\n#define endl \"\\n\"\n\n\ninline void solve(int test = 0) {\n    string line;\n    cin >> line;\n    int cnt[] = {0, 0, 0};\n    for (auto chr: line)\n        cnt[chr - 'X']++;\n    sort(cnt, cnt + 3);\n    if (cnt[0] == cnt[1]) {\n        cout << cnt[0] << endl;\n    } else {\n        if (cnt[2] > cnt[0] + 1)\n            cout << cnt[0] + 1 << endl;\n    }\n}\n\nsigned main() {\n    cout << setprecision(8);\n    cin.tie(), cout.tie();\n    ios_base::sync_with_stdio(false);\n\n    int test = 0;\n    int t = 1;\n    bool local = getenv(\"local\");\n    if (local) {\n        freopen(\"../test/input.txt\", \"r\", stdin);\n        freopen(\"../test/output.txt\", \"w\", stdout);\n    }\n    while (t--) {\n        solve(test++);\n    }\n}",
                "verdict": "Wrong Answer"
            },
            {
                "code": "genofond = str(input())\nx_count = genofond.count('X')\ny_count = genofond.count('Y')\nz_count = genofond.count('Z')\npairs = min(min(x_count, y_count), z_count)\nif (x_count == pairs and y_count > pairs and z_count > pairs or y_count == pairs and x_count > pairs and z_count > pairs or z_count == pairs and x_count > pairs and y_count > pairs):\n    pairs += 1\nprint(genofond.len() - pairs * 3)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "s = input()\r\ncntx = s.count('X')\r\ncnty = s.count('Y')\r\ncntz = s.count('Z')\r\nmn = min(cntx, cnty, cntz)\r\nmx = max(cntx, cnty, cntz)\r\nsr = cntx+cnty+cntz - mn - mx\r\nmnn = min(mn + 1, sr, mx - 1)\r\nif mnn >= mn:\r\n    print(mx - 1 - mnn)\r\nelse:\r\n    print(mx - mn)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "# Task1\ns = input()\nd = {'X':0, 'Z':0, 'Y':0}\nfor x in s:\n    d[x] += 1\nx, y, z = d['X'], d['Z'], d['Y']\na = [x, y, z]\nmini = min(a)\nmaxi = max(a)\nind1 = a.index(mini)\nind2 = a.index(maxi)\na[ind2] -= 1\na[ind1] += 1\nprint(max(a) - min(a))\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "s = input()\nx = s.count('X')\ny = s.count('Y')\nz = s.count('Z')\n\na = sorted((x, y, z))\n\ncnt = max(min(a[0] + 1, a[-1] - 1), min(a))\n\nif min(a[0] + 1, a[-1] - 1) > min(a):\n    a[0] += 1\n    a[-1] -= 1\n    ans = a[0] - cnt + a[1] - cnt + a[2] - cnt\nelse:\n    ans = x - cnt + y - cnt + z - cnt\n\nprint(ans)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "s = input()\nx = s.count('X')\ny = s.count('Y')\nz = s.count('Z')\nx, y, z = sorted([x, y, z])\nx += 1\nz -= 1\nprint(len(s) - 3 * min(x, y, z))\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <bits/extc++.h>\r\n#define int int64_t\r\n\r\nusing namespace std;\r\n\r\nint32_t main() {\r\n    string s;\r\n    cin >> s;\r\n    int cnt[3]{};\r\n    for (int i = 0; i < s.size(); i++) {\r\n        cnt[s[i] - 'X']++;\r\n    }\r\n    sort(cnt, cnt + 3);\r\n    if (cnt[0] != cnt[2])\r\n        cnt[0]++, cnt[2]--;\r\n    int add = min({cnt[0], cnt[1], cnt[2]});\r\n    cout << cnt[0] - add + cnt[1] - add + cnt[2] - add;\r\n}\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "s = input()\r\nsc = 3 * min(s.count('X'), s.count('Y'), s.count('Z'))\r\na = s.replace('X', 'Y', 1)\r\nac = 3 * min(a.count('X'), a.count('Y'), a.count('Z'))\r\nb = s.replace('X', 'Z', 1)\r\nbc = 3 * min(b.count('X'), b.count('Y'), b.count('Z'))\r\nc = s.replace('Y', 'X', 1)\r\ncc = 3 * min(c.count('X'), c.count('Y'), c.count('Z'))\r\nd = s.replace('Y', 'Z', 1)\r\ndc = 3 * min(c.count('X'), c.count('Y'), c.count('Z'))\r\ne = s.replace('Z', 'X', 1)\r\nec = 3 * min(c.count('X'), c.count('Y'), c.count('Z'))\r\nf = s.replace('Z', 'y', 1)\r\nfc = 3 * min(c.count('X'), c.count('Y'), c.count('Z'))\r\nprint(len(s) - (max(sc, ac, bc, cc, dc, ec, fc)))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a=input()\nx=a.count('X')\ny=a.count('Y')\nz=a.count('Z')\nprint(max(min(x,y,z),min(x+1,y-1,z),min(x+1,y,z-1),min(x-1,y+1,z),min(x,y+1,z-1), min(x-1, y, z+1),min(x, y-1, z+1)))\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def solve():\r\n    s = str(input())\r\n    a = [0,0,0]\r\n    for i in s:\r\n        if i == 'X':\r\n            a[0] += 1\r\n        if i == 'Y':\r\n            a[1] += 1\r\n        if i == 'Z':\r\n            a[2] += 1\r\n    a.sort()\r\n    t = a[0]\r\n    for i in range(3):\r\n        a[i] -= t\r\n    if a[1] == 0:\r\n        print(a[2])\r\n    elif a[2] - a[1] > 1:\r\n        print(a[2]-a[1]-1)\r\n    else:\r\n        print(0)\r\n    return \r\nt = 1\r\n#t = int(input())\r\nwhile t > 0:\r\n    solve() \r\n    t -= 1 ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def solve():\r\n    s = str(input())\r\n    a = [0,0,0]\r\n    for i in s:\r\n        if i == 'X':\r\n            a[0] += 1\r\n        if i == 'Y':\r\n            a[1] += 1\r\n        if i == 'Z':\r\n            a[2] += 1\r\n    a.sort()\r\n    t = a[0]\r\n    for i in range(3):\r\n        a[i] -= t\r\n    if a[1] == 0:\r\n        print(a[2])\r\n    elif a[2] - a[1] > 1:\r\n        print(a[2]-a[1]-1)\r\n    else:\r\n        print(0)\r\n    return \r\nt = 1\r\n#t = int(input())\r\nwhile t > 0:\r\n    solve() \r\n    t -= 1 ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from collections import Counter\ns = intput()\nc = Counter(s)\nkeys = ['X', 'Y', 'Z']\nvalues = [c[x] for x in keys]\nm = min(values)\nvalues = [v - m for v in values]\nnz = 0\nfor x in values:\n    if x == 0:\n        nz += 1\nif nz > 1:\n    print(sum(values))\nelse:\n    if sum(values) > 2:\n        print(sum(values) - 3)\n    else:\n        print(sum(values))\n\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n#include <cstring>\r\n#include <vector>\r\n#include <list>\r\n#include <map>\r\n#include <set>\r\n#include <deque>\r\n#include <stack>\r\n#include <bitset>\r\n#include <algorithm>\r\n#include <functional>\r\n#include <numeric>\r\n#include <utility>\r\n#include <sstream>\r\n#include <iostream>\r\n#include <iomanip>\r\n#include <cstdio>\r\n#include <queue>\r\n#include <cmath>\r\n#include <cstdlib>\r\n#include <ctime>\r\n#include <cassert>\r\n\r\nusing namespace std;\r\n\r\n/*01101100 01101001 01101100 01000100 01100001 01110101 01101100 01100101 01110100*/\r\n\r\n//#define f first\r\n//#define s second\r\n#define pb push_back\r\n#define ll long long\r\n#define all(x) x.begin(), x.end()\r\n#define bp __builtin_popcountll\r\n#define sqr(x) ((llong)sqrt (x))\r\n#define b_ctz __builtin_ctzll\r\n#define b_clz __builtin_clzll\r\n\r\n#define y1 abc\r\n#define prev abc\r\n#define left abc\r\n#define right abc\r\n\r\n#define macOS ios_base::sync_with_stdio(0), cin.tie (0), cout.tie (0)\r\n\r\ntypedef long long llong;\r\ntypedef long double ldouble;\r\ntypedef unsigned long long ullong;\r\n\r\ntypedef vector <int> vi;\r\ntypedef vector <vector <llong> > matrix;\r\n\r\ntypedef pair <llong, llong> pll;\r\ntypedef pair <int, int> pii;\r\n\r\ntypedef map <int, int> mii;\r\n\r\ntypedef set <int> si;\r\n\r\nconst int mxn = 1e6 + 1;\r\nconst llong mnn = 1e3 + 1;\r\nconst llong mod = 1e9 + 7;\r\nconst int inf = 1e9;\r\nconst llong linf = 1e18;\r\nconst llong magic = 1000;\r\nconst ldouble eps = 1e-9;\r\nconst ldouble pi = 3.1415926535897932384626433832795;\r\nconst string TIME = \"rovno_bir_bold\";\r\n\r\ninline llong log2 (llong x) {return 64 - b_clz (x) - 1;};\r\ninline llong __lcm (llong a, llong b) {return a / __gcd (a, b) * b;}\r\n\r\n/**//**//**//**//**//**//**//**//**//**//**//**//**//**//**//**/\r\n\r\nstring s;\r\nint main(){\r\n    cin >> s;\r\n    cout << s.size() % 3;\r\n}\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n#define int long long\r\n#define endl '\\n'\r\n#define pi 3.14159265358979323846\r\nusing namespace std;\r\n\r\nint binpow(int a, int n, int mod)\r\n{\r\n    if (n==0) return 1;\r\n    if(n%2==0) return binpow(a*a%mod, n/2, mod);\r\n    return a*binpow(a, n-1, mod)%mod;\r\n}\r\nbool prime(int n)\r\n{\r\n    for (int i=2; i*i<=n; i++)\r\n    {\r\n        if (n%i==0) return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nvoid solve()\r\n{\r\n    string s;\r\n    cin>>s;\r\n    int k1=0, k2=0, k3=0;\r\n    k1=count(s.begin(),s.end(),'X');\r\n    k2=count(s.begin(),s.end(),'Y');\r\n    k3=count(s.begin(),s.end(),'Z');\r\n//    for (int i=0; i<s.size(); i++)\r\n//    {\r\n//        if (s[i]=='X') k1++;\r\n//        if (s[i]=='Y') k2++;\r\n//        if (s[i]=='Z') k3++;\r\n//    }\r\n    if (k1>k2) swap(k1,k2);\r\n    if (k2>k3) swap(k2,k3);\r\n    if (k1>k2) swap(k1,k2);\r\n    int mn=k3-k1+k2-k1;\r\n    k1++; k3--;\r\n    if (k1>k2) swap(k1,k2);\r\n    if (k2>k3) swap(k2,k3);\r\n    if (k1>k2) swap(k1,k2);\r\n    cout<<min(mn,k3-k1+k2-k1);\r\n}\r\nint32_t main()\r\n{\r\n        ios_base::sync_with_stdio(false);\r\n        cin.tie(nullptr);\r\n        cout.tie(nullptr);\r\n        //freopen(\"input.txt\", \"r\", stdin);\r\n        //freopen(\"output.txt\", \"w\", stdout);\r\n\r\n        int t=1;\r\n        //cin>>t;\r\n        while(t--)\r\n        {\r\n            solve();\r\n            cout<<endl;\r\n        }\r\n        return 0;\r\n}\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n#define int long long\r\n#define endl '\\n'\r\n#define pi 3.14159265358979323846\r\nusing namespace std;\r\n\r\nint binpow(int a, int n, int mod)\r\n{\r\n    if (n==0) return 1;\r\n    if(n%2==0) return binpow(a*a%mod, n/2, mod);\r\n    return a*binpow(a, n-1, mod)%mod;\r\n}\r\nbool prime(int n)\r\n{\r\n    for (int i=2; i*i<=n; i++)\r\n    {\r\n        if (n%i==0) return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nvoid solve()\r\n{\r\n    string s;\r\n    cin>>s;\r\n    int k1=0, k2=0, k3=0;\r\n    for (int i=0; i<s.size(); i++)\r\n    {\r\n        if (s[i]=='X') k1++;\r\n        if (s[i]=='Y') k2++;\r\n        if (s[i]=='Z') k3++;\r\n    }\r\n    //for (int i=0; i<3; i++) cout<<a[i]<<' ';\r\n    if (k1>k2) swap(k1,k2);\r\n    if (k2>k3) swap(k2,k3);\r\n    if (k1>k2) swap(k1,k2);\r\n    int mn=k3-k1+k2-k1;\r\n    k1++; k3--;\r\n    if (k1>k2) swap(k1,k2);\r\n    if (k2>k3) swap(k2,k3);\r\n    if (k1>k2) swap(k1,k2);\r\n    cout<<min(mn,k3-k1+k2-k1);\r\n}\r\nint32_t main()\r\n{\r\n        ios_base::sync_with_stdio(false);\r\n        cin.tie(nullptr);\r\n        cout.tie(nullptr);\r\n        //freopen(\"input.txt\", \"r\", stdin);\r\n        //freopen(\"output.txt\", \"w\", stdout);\r\n\r\n        int t=1;\r\n        //cin>>t;\r\n        while(t--)\r\n        {\r\n            solve();\r\n            cout<<endl;\r\n        }\r\n        return 0;\r\n}\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n#define int long long\r\n#define endl '\\n'\r\n#define pi 3.14159265358979323846\r\nusing namespace std;\r\n\r\nint binpow(int a, int n, int mod)\r\n{\r\n    if (n==0) return 1;\r\n    if(n%2==0) return binpow(a*a%mod, n/2, mod);\r\n    return a*binpow(a, n-1, mod)%mod;\r\n}\r\nbool prime(int n)\r\n{\r\n    for (int i=2; i*i<=n; i++)\r\n    {\r\n        if (n%i==0) return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nvoid solve()\r\n{\r\n    string s;\r\n    cin>>s;\r\n    int k1=0, k2=0, k3=0;\r\n    for (int i=0; i<s.size(); i++)\r\n    {\r\n        if (s[i]=='X') k1++;\r\n        else if (s[i]=='Y') k2++;\r\n        else if (s[i]=='Z') k3++;\r\n    }\r\n    //for (int i=0; i<3; i++) cout<<a[i]<<' ';\r\n    if (k1>k2) swap(k1,k2);\r\n    if (k2>k3) swap(k2,k3);\r\n    if (k1>k2) swap(k1,k2);\r\n    int mn=k3-k1+k2-k1;\r\n    k1++; k3--;\r\n    if (k1>k2) swap(k1,k2);\r\n    if (k2>k3) swap(k2,k3);\r\n    if (k1>k2) swap(k1,k2);\r\n    cout<<min(mn,k3-k1+k2-k1);\r\n}\r\nint32_t main()\r\n{\r\n        ios_base::sync_with_stdio(false);\r\n        cin.tie(nullptr);\r\n        cout.tie(nullptr);\r\n        //freopen(\"input.txt\", \"r\", stdin);\r\n        //freopen(\"output.txt\", \"w\", stdout);\r\n\r\n        int t=1;\r\n        //cin>>t;\r\n        while(t--)\r\n        {\r\n            solve();\r\n            cout<<endl;\r\n        }\r\n        return 0;\r\n}\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n#define int long long\r\n#define endl '\\n'\r\n#define pi 3.14159265358979323846\r\nusing namespace std;\r\n\r\nint binpow(int a, int n, int mod)\r\n{\r\n    if (n==0) return 1;\r\n    if(n%2==0) return binpow(a*a%mod, n/2, mod);\r\n    return a*binpow(a, n-1, mod)%mod;\r\n}\r\nbool prime(int n)\r\n{\r\n    for (int i=2; i*i<=n; i++)\r\n    {\r\n        if (n%i==0) return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nvoid solve()\r\n{\r\n    string s;\r\n    cin>>s;\r\n    int k1=0, k2=0, k3=0;\r\n    for (int i=0; i<s.size(); i++)\r\n    {\r\n        if (s[i]=='X') k1++;\r\n        else if (s[i]=='Y') k2++;\r\n        else if (s[i]=='Z') k3++;\r\n    }\r\n    //for (int i=0; i<3; i++) cout<<a[i]<<' ';\r\n    if (k1>k2) swap(k1,k2);\r\n    if (k2>k3) swap(k2,k3);\r\n    if (k1>k2) swap(k1,k2);\r\n    int mn=k3-k1+k2-k1;\r\n    k1++; k3--;\r\n    if (k1>k2) swap(k1,k2);\r\n    if (k2>k3) swap(k2,k3);\r\n    if (k1>k2) swap(k1,k2);\r\n    cout<<min(mn,k3-k1+k2-k1);\r\n}\r\nint32_t main()\r\n{\r\n        ios_base::sync_with_stdio(false);\r\n        cin.tie(nullptr);\r\n        cout.tie(nullptr);\r\n        //freopen(\"input.txt\", \"r\", stdin);\r\n        //freopen(\"output.txt\", \"w\", stdout);\r\n\r\n        int t=1;\r\n        //cin>>t;\r\n        while(t--)\r\n        {\r\n            solve();\r\n            cout<<endl;\r\n        }\r\n        return 0;\r\n}\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n#define int long long\r\n#define endl '\\n'\r\n#define pi 3.14159265358979323846\r\nusing namespace std;\r\n\r\nint binpow(int a, int n, int mod)\r\n{\r\n    if (n==0) return 1;\r\n    if(n%2==0) return binpow(a*a%mod, n/2, mod);\r\n    return a*binpow(a, n-1, mod)%mod;\r\n}\r\nbool prime(int n)\r\n{\r\n    for (int i=2; i*i<=n; i++)\r\n    {\r\n        if (n%i==0) return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nvoid solve()\r\n{\r\n    string s;\r\n    cin>>s;\r\n    int a[3]={0};\r\n    for (int i=0; i<s.size(); i++)\r\n    {\r\n        if (s[i]=='X') a[0]++;\r\n        else if (s[i]=='Y') a[1]++;\r\n        else if (s[i]=='Z') a[2]++;\r\n    }\r\n    //for (int i=0; i<3; i++) cout<<a[i]<<' ';\r\n    sort(a, a+3);\r\n    int mn=a[2]-a[0]+a[1]-a[0];\r\n    a[0]++; a[2]--;\r\n    sort(a, a+3);\r\n    cout<<min(mn,a[2]-a[0]+a[1]-a[0]);\r\n}\r\nint32_t main()\r\n{\r\n        ios_base::sync_with_stdio(false);\r\n        cin.tie(nullptr);\r\n        cout.tie(nullptr);\r\n        //freopen(\"input.txt\", \"r\", stdin);\r\n        //freopen(\"output.txt\", \"w\", stdout);\r\n\r\n        int t=1;\r\n        //cin>>t;\r\n        while(t--)\r\n        {\r\n            solve();\r\n            cout<<endl;\r\n        }\r\n        return 0;\r\n}\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "//#pragma GCC optimize(\"03\")\r\n//#pragma GCC optimize(\"Ofast\")\r\n//#pragma GCC optimize(\"unroll-loops\")\r\n\r\n#include <bits/stdc++.h>\r\n//#include <ext/pb_ds/assoc_container.hpp>\r\n\r\nusing namespace std;\r\n//using namespace __gnu_pbds;\r\n\r\ntypedef long long ll;\r\n//typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> order_set;\r\n\r\nstring en=\" \\n\";\r\n\r\n#define fi first\r\n#define se second\r\n#define th third\r\n#define pb push_back\r\n#define pp pop_back()\r\n#define all(x) (x).begin(), (x).end()\r\n#define rall(x) (x).rbegin(), (x).rend()\r\n#define sz(x) (int)(x).size()\r\n#define fbo find_by_order\r\n#define ook order_of_key\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n    #ifdef LOCAL\r\n    freopen(\"input.txt\",\"r\",stdin); freopen(\"output.txt\",\"w\",stdout);\r\n\t#else\r\n    //ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\r\n    //freopen(\"input.txt\",\"r\",stdin); freopen(\"output.txt\",\"w\",stdout);\r\n    #endif\r\n\tll n,m,k,x=0,y=0,z=0;\r\n\tstring s;\r\n\r\n\tcin>>s;\r\n\r\n\tint a[3];\r\n\r\n\tfor (int i=0; i<s.size(); i++)\r\n        if (s[i]=='X')\r\n            x++;\r\n        else if (s[i]=='Y')\r\n            y++;\r\n        else\r\n            z++;\r\n\r\n    a[0]=x;\r\n    a[1]=y;\r\n    a[2]=z;\r\n\r\n    sort(a,a+3);\r\n\r\n    int ans=a[1]+a[2]-a[0]-a[0];\r\n\r\n    a[0]++;\r\n    a[2]--;\r\n\r\n    sort(a,a+3);\r\n\r\n    ans=min(ans,a[1]+a[2]-a[0]-a[0]);\r\n\r\n    cout<<ans;\r\n\r\n    return 0;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "s = str(input())\na = [0, 0, 0]\nfor i in range(len(s)):\n    if (s[i] == 'X'):\n        a[0] += 1\n    if (s[i] == 'Y'):\n        a[1] += 1\n    if (s[i] == 'Z'):\n        a[2] += 1\na.sort()\nif (a[0] == a[2]):\n    print(a[0])\nelif (a[0] == a[1]):\n    print(a[0])\nelse:\n    print(a[0] + 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include<bits/stdc++.h>\r\n#pragma GCC optimize (\"O3\")\r\n#pragma GCC optimize (\"Ofast\")\r\n#pragma GCC optimize (\"unroll-loops\")\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n#define T true\r\n#define F false\r\n#define fi first\r\n#define endl \"\\n\"\r\n#define se second\r\n#define DIM 200001\r\n#define mod 10e9+7\r\n#define INF 10e15+7\r\n#define pb push_back\r\n#define amen exit(0);\r\n#define qwe return 0;\r\n#define eps 0.0000001\r\n#define gg cout<<\"OPS\"<<endl;\r\n#define PI 3.1415926535897932384626433\r\nmt19937 rng(chrono::steady_clock::now().time_since_epoch().count());\r\n#define fast ios_base::sync_with_stdio(false),cin.tie(0),cout.tie(0);\r\n#define time cout << \"\\nTime Elapsed: \" << 1.0 * clock() / CLOCKS_PER_SEC << \" sec\\n\";\r\n#define cint fast; ll t; cin>>t;\r\ntypedef char ch;\r\ntypedef bool boll;\r\ntypedef string st;\r\ntypedef long long ll;\r\ntypedef long double ld;\r\ntypedef set < string > sst;\r\ntypedef set < long long > sll;\r\ntypedef unsigned long long ull;\r\ntypedef queue < long long > que;\r\ntypedef deque < long long > deq;\r\ntypedef vector < long long > vec;\r\ntypedef map < long long, long long > mll;\r\ntypedef pair < long long, long long > pll;\r\ntypedef pair < long long, unsigned long long > pul;\r\ntypedef vector < pair < long long, long long > > vpl;\r\ntypedef tree <ll, null_type, less<ll>, rb_tree_tag, tree_order_statistics_node_update> myset;\r\nll a[51];\r\nint main()\r\n{\r\n    fast;\r\n    st ss;\r\n    cin>>ss;\r\n    ll x=0,y=0,z=0;\r\n    for(int i=0; i<ss.size(); i++)\r\n    {\r\n        if(ss[i]=='X')x++;\r\n        else if(ss[i]=='Y')y++;\r\n        else z++;\r\n    }\r\n    ll mx=max({x,z,y});\r\n    if(x==mx)x--;\r\n    else if(y==mx)y--;\r\n    else if(z==mx)z--;\r\n    ll mn=min({x,y,z});\r\n    if(x==mn)x++;\r\n    else if(y==mx)z++;\r\n    else z++;\r\n    ll ans=0;\r\n    ans+=(x+y+z);\r\n    mn = min({z,x,y});\r\n    ans-=(mn*3);\r\n    cout<<ans<<endl;\r\n    //time;\r\n}\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "data = input()\n\nx = data.count('X')\ny = data.count('Y')\nz = data.count('Z')\n\nm = min(x, y, z)\nres = len(data) - 3 * m\n\nx -= m\ny -= m\nz -= m\n\nif min(x, y, z) == 0 and (x + y + z) >= 3:\n    m += 1\n\n\nprint(len(data) - 3 * m)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from collections import Counter\n\n#s = input()\ns = 'XXXYYYZZZ'\n\nCount_gender = Counter(s)\nif len(Count_gender.keys()) == 1:\n    print(sum(Count_gender.values()))\nelif len(Count_gender.keys()) == 2:\n    maxi = max(Count_gender.values())\n    if maxi >= 2:\n        for i in Count_gender:\n            Count_gender[i] -= 1\n    Count_gender[Count_gender.most_common(1)[0][0]] -= 1\n    print(sum(Count_gender.values()))\nelse:\n    garantee_pairs = min(Count_gender.values())\n    for i in Count_gender:\n        Count_gender[i] -= garantee_pairs\n    Count_gender = +Count_gender\n    if Count_gender:\n        if max(Count_gender.values()) > 1 and len(Count_gender.keys()):\n            for i in Count_gender:\n                Count_gender[i] -= 1\n            Count_gender[Count_gender.most_common(1)[0][0]] -= 1\n            print(sum(Count_gender.values()))\n        else:\n            print(sum(Count_gender.values()))\n    else:\n        print(0)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from collections import Counter\n\ns = input()\n#s = 'YYXXZXXX'\n\nCount_gender = Counter(s)\nif len(Count_gender.keys()) == 1:\n    print(sum(Count_gender.values()))\nelif len(Count_gender.keys()) == 2:\n    maxi = max(Count_gender.values())\n    if maxi >= 2:\n        for i in Count_gender:\n            Count_gender[i] -= 1\n    Count_gender[Count_gender.most_common(1)[0][0]] -= 1\n    print(sum(Count_gender.values()))\nelse:\n    garantee_pairs = min(Count_gender.values())\n    for i in Count_gender:\n        Count_gender[i] -= garantee_pairs\n    Count_gender = +Count_gender\n    if max(Count_gender.values()) > 1 and len(Count_gender.keys()):\n        for i in Count_gender:\n            Count_gender[i] -= 1\n        Count_gender[Count_gender.most_common(1)[0][0]] -= 1\n        print(sum(Count_gender.values()))\n    else:\n        print(sum(Count_gender.values()))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from collections import Counter\n\ns = input()\n#s = 'XXY'\n\nCount_gender = Counter(s)\nif len(Count_gender.keys()) == 1:\n    print(sum(Count_gender.values()))\nelif len(Count_gender.keys()) == 2:\n    maxi = max(Count_gender.values())\n    if maxi >= 2:\n        for i in Count_gender:\n            Count_gender[i] -= 1\n    Count_gender[Count_gender.most_common(1)[0][0]] -= 1\n    print(sum(Count_gender.values()))\nelse:\n    garantee_pairs = min(Count_gender.values())\n    for i in Count_gender:\n        Count_gender[i] -= garantee_pairs\n    Count_gender = +Count_gender\n    if max(Count_gender.values()) > 1 and len(Count_gender.keys()):\n        for i in Count_gender:\n            Count_gender[i] -= 1\n        print(sum(Count_gender.values()))\n    else:\n        print(sum(Count_gender.values()))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from collections import Counter\n\n#s = input()\ns = 'XXY'\n\nCount_gender = Counter(s)\nif len(Count_gender.keys()) == 1:\n    print(sum(Count_gender.values()))\nelif len(Count_gender.keys()) == 2:\n    maxi = max(Count_gender.values())\n    if maxi >= 2:\n        for i in Count_gender:\n            Count_gender[i] -= 1\n    Count_gender[Count_gender.most_common(1)[0][0]] -= 1\n    print(sum(Count_gender.values()))\nelse:\n    garantee_pairs = min(Count_gender.values())\n    for i in Count_gender:\n        Count_gender[i] -= garantee_pairs\n    Count_gender = +Count_gender\n    if max(Count_gender.values()) > 1 and len(Count_gender.keys()):\n        for i in Count_gender:\n            Count_gender[i] -= 1\n        print(sum(Count_gender.values()))\n    else:\n        print(sum(Count_gender.values()))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from collections import Counter\n\ns = input()\n#s = 'Y'\n\nCount_gender = Counter(s)\nif len(Count_gender.keys()) == 1:\n    print(sum(Count_gender.values()))\nelif len(Count_gender.keys()) == 2:\n    maxi = max(Count_gender.values())\n    if maxi >= 2:\n        for i in Count_gender:\n            Count_gender[i] -= maxi\n    print(sum(Count_gender.values()))\nelse:\n    garantee_pairs = min(Count_gender.values())\n    for i in Count_gender:\n        Count_gender[i] -= garantee_pairs\n    Count_gender = +Count_gender\n    if max(Count_gender.values()) > 1 and len(Count_gender.keys()):\n        for i in Count_gender:\n            Count_gender[i] -= 1\n        print(sum(Count_gender.values()))\n    else:\n        print(sum(Count_gender.values()))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from collections import Counter\n\ns = input()\n\nCount_gender = Counter(s)\nif len(Count_gender.keys()) == 1:\n    print(0)\nelif len(Count_gender.keys()) == 2:\n    maxi = max(Count_gender.values())\n    if maxi >= 2:\n        print(1)\nelse:\n    garantee_pairs = min(Count_gender.values())\n    for i in Count_gender:\n        Count_gender[i] -= garantee_pairs\n    Count_gender = +Count_gender\n    if max(Count_gender.values()) > 1 and len(Count_gender.keys()):\n        print(garantee_pairs + 1 )\n    else:\n        print(garantee_pairs)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "s = input()\nn = len(s)\nx = s.count(\"X\")\ny = s.count(\"Y\")\nz = s.count(\"Z\")\nlst = sorted([x, y, z])\nif lst[2] - lst[1] > 1 and lst[0] != lst[1]:\n    lst[0] += 1\n\nprint(n - lst[0] * 3)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "s = input()\nn = len(s)\nx = s.count(\"X\")\ny = s.count(\"Y\")\nz = s.count(\"Z\")\nlst = sorted([x, y, z])\nif lst[2] - lst[1] > 1 and lst[0] != lst[1?:\n    lst[0] += 1\n\nprint(n - lst[0] * 3)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "s = input()\nn = len(s)\nx = s.count(\"X\")\ny = s.count(\"Y\")\nz = s.count(\"Z\")\nmn = min([x, y, z])\nmx = max([x, y, z])\nif mn + 1 < mx:\n    print(n - (mn + 1) * 3)\nelse:\n    print(n - mn * 3)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = input()\nx = a.count(\"X\")\ny = a.count(\"Y\")\nz = a.count(\"Z\")\n\nxyz = sorted([x, y, z])\n\nif xyz[0] + 1 > xyz[2] - 1:\n    print(sum(xyz) - 3 * xyz[0])\nelse:\n    xyz[0] += 1\n    xyz[2] -= 1\n    xyz = sorted([x, y, z])\n    print(sum(xyz) - 3 * xyz[0])",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = input()\nx = a.count(\"X\")\ny = a.count(\"Y\")\nz = a.count(\"Z\")\n\nxyz = sorted([x, y, z])\n\nif xyz[0] + 1 > xyz[2] - 1:\n    print(sum(xyz) - 3 * xyz[0])\nelse:\n    xyz[0] += 1\n    xyz[2] -= 1\n    print(sum(xyz) - 3 * xyz[0])",
                "verdict": "Wrong Answer"
            },
            {
                "code": "s = str(input())\nprint(len(s) % 3)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def count_people(s):\n    x_count = s.count('X')\n    y_count = s.count('Y')\n    z_count = s.count('Z')\n    return x_count, y_count, z_count\n\ndef count_families(x_count, y_count, z_count):\n    return min(x_count, y_count, z_count)\n\ndef find_lonely_people(s):\n    x_count, y_count, z_count = count_people(s)\n    families_count = count_families(x_count, y_count, z_count)\n    while families_count < min(x_count, y_count, z_count):\n        if x_count == min(x_count, y_count, z_count):\n            x_count -= 1\n            y_count += 1\n        elif y_count == min(x_count, y_count, z_count):\n            y_count -= 1\n            z_count += 1\n        else:\n            z_count -= 1\n            x_count += 1\n        families_count = count_families(x_count, y_count, z_count)\n    return max(x_count, y_count, z_count) - min(x_count, y_count, z_count)\n\ns = input()\nprint(find_lonely_people(s))\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = input()\nx = []\ny = []\nz = []\ns = True\nfor i in n:\n    if i == \"X\":\n        x.append(i)\n    elif i == \"Y\":\n        y.append(i)\n    elif i == \"Z\":\n        z.append(i)\n    if \"X\" in x and \"Y\" in y and \"Z\" in z:\n        x.pop()\n        y.pop()\n        z.pop()\n    if len(x) == 0 and s:\n        if len(y) >= 2:\n            y.pop()\n            x.append(\"X\")\n        elif len(z) >= 2:\n            z.pop()\n            x.append(\"X\")\n        s = False\n    if len(y) == 0 and s:\n        if len(x) >= 2:\n            x.pop()\n            y.append(\"Y\")\n        elif len(z) >= 2:\n            z.pop()\n            y.append(\"Y\")\n        s = False\n    if len(z) == 0 and s:\n        if len(x) >= 2:\n            x.pop()\n            z.append(\"Z\")\n        elif len(y) >= 2:\n            y.pop()\n            z.append(\"Z\")\n        s = False\n    if \"X\" in x and \"Y\" in y and \"Z\" in z:\n        x.pop()\n        y.pop()\n        z.pop()\n\nprint(int(len(x) + len(y) + len(z)))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = input()\nx = []\ny = []\nz = []\nfor i in n:\n    if i == \"X\":\n        x.append(i)\n    elif i == \"Y\":\n        y.append(i)\n    elif i == \"Z\":\n        z.append(i)\n    if \"X\" in x and \"Y\" in y and \"Z\" in z:\n        x.pop()\n        y.pop()\n        z.pop()\n    if len(x) == 0:\n        if len(y) >= 2:\n            y.pop()\n            x.append(\"X\")\n        elif len(z) >= 2:\n            z.pop()\n            x.append(\"X\")\n    if len(y) == 0:\n        if len(x) >= 2:\n            x.pop()\n            y.append(\"Y\")\n        elif len(z) >= 2:\n            z.pop()\n            y.append(\"Y\")\n    if len(z) == 0:\n        if len(x) >= 2:\n            x.pop()\n            z.append(\"Z\")\n        elif len(y) >= 2:\n            y.pop()\n            z.append(\"Z\")\n    if \"X\" in x and \"Y\" in y and \"Z\" in z:\n        x.pop()\n        y.pop()\n        z.pop()\nif len(x) == 0 and len(y) == 0 and len(z) == 0:\n    print(int(0))\nelse:\n    print(int(len(x) + len(y) + len(z)))\n\n\n\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = input()\nx = []\ny = []\nz = []\nfor i in n:\n    if i == \"X\":\n        x.append(i)\n    elif i == \"Y\":\n        y.append(i)\n    elif i == \"Z\":\n        z.append(i)\n    if \"X\" in x and \"Y\" in y and \"Z\" in z:\n        x.pop()\n        y.pop()\n        z.pop()\n    if len(x) == 0:\n        if len(y) >= 2:\n            y.pop()\n            x.append(\"X\")\n        elif len(z) >= 2:\n            z.pop()\n            x.append(\"X\")\n    if len(y) == 0:\n        if len(x) >= 2:\n            x.pop()\n            y.append(\"Y\")\n        elif len(z) >= 2:\n            z.pop()\n            y.append(\"Y\")\n    if len(z) == 0:\n        if len(x) >= 2:\n            x.pop()\n            z.append(\"Z\")\n        elif len(y) >= 2:\n            y.pop()\n            z.append(\"Z\")\n    if \"X\" in x and \"Y\" in y and \"Z\" in z:\n        x.pop()\n        y.pop()\n        z.pop()\nif len(x) == 0 and len(y) == 0 and len(z) == 0:\n    print(int(0))\nelse:\n    print(int(len(x) + len(y) + len(z)))\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = input()\nx = []\ny = []\nz = []\nfor i in n:\n    if i == \"X\":\n        x.append(i)\n    elif i == \"Y\":\n        y.append(i)\n    elif i == \"Z\":\n        z.append(i)\n    if \"X\" in x and \"Y\" in y and \"Z\" in z:\n        x.pop()\n        y.pop()\n        z.pop()\n    if len(x) == 0:\n        if len(y) >= 2:\n            y.pop()\n            x.append(\"X\")\n        elif len(z) >= 2:\n            z.pop()\n            x.append(\"X\")\n    if len(y) == 0:\n        if len(x) >= 2:\n            x.pop()\n            y.append(\"Y\")\n        elif len(z) >= 2:\n            z.pop()\n            y.append(\"Y\")\n    if len(z) == 0:\n        if len(x) >= 2:\n            x.pop()\n            z.append(\"Z\")\n        elif len(y) >= 2:\n            y.pop()\n            z.append(\"Z\")\n    if \"X\" in x and \"Y\" in y and \"Z\" in z:\n        x.pop()\n        y.pop()\n        z.pop()\nif len(x) == 0 and len(y) == 0 and len(z) == 0:\n    print(int(0))\nelse:\n    print(int(len(x) + len(y) + len(z)))\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = input()\nx = []\ny = []\nz = []\nfor i in n:\n    if i == \"X\":\n        x.append(i)\n    elif i == \"Y\":\n        y.append(i)\n    elif i == \"Z\":\n        z.append(i)\n    if \"X\" in x and \"Y\" in y and \"Z\" in z:\n        x.pop()\n        y.pop()\n        z.pop()\n    if len(x) == 0:\n        if len(y) >= 2:\n            y.pop()\n            x.append(\"X\")\n        elif len(z) >= 2:\n            z.pop()\n            x.append(\"X\")\n    if len(y) == 0:\n        if len(x) >= 2:\n            x.pop()\n            y.append(\"Y\")\n        elif len(z) >= 2:\n            z.pop()\n            y.append(\"Y\")\n    if len(z) == 0:\n        if len(x) >= 2:\n            x.pop()\n            z.append(\"Z\")\n        elif len(y) >= 2:\n            y.pop()\n            z.append(\"Z\")\n    if \"X\" in x and \"Y\" in y and \"Z\" in z:\n        x.pop()\n        y.pop()\n        z.pop()\nif len(x) == 0 and len(y) == 0 and len(z) == 0:\n    print(int(0))\nelse:\n    print(int(len(x) + len(y) + len(z)))\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = str(input())\r\nx = a.count('X')\r\ny = a.count('Y')\r\nz = a.count('Z')\r\nmax = max(x, y, z)\r\nmin = min(x, y, z)\r\nif x != y != z and x != y and y != z and x != z:\r\n    max -= 1\r\n    min += 1\r\nprint(max - min)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = str(input())\r\nx = a.count('X')\r\ny = a.count('Y')\r\nz = a.count('Z')\r\nmax = max(x, y, z)\r\nmin = min(x, y, z)\r\nif x != y != z and x != y and y != z and x != z:\r\n    max -= 1\r\n    min += 1\r\nprint(max - min)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "sex = input()\nx = 0; y = 0; z = 0\nif 'X' in sex:\n    x += 1\n    sex = sex.replace('X', '0')\nif 'Y' in sex:\n    y += 1\n    sex = sex.replace('Y', '0')\nif 'Z' in sex:\n    z += 1\n    sex = sex.replace('Z', '0')\nprint(len(sex) - (min(x, y, z)+1)*3)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "sex = input()\nx = 0; y = 0; z = 0\nif 'X' in sex:\n    x += 1\n    sex = sex.replace('X', '0')\nif 'Y' in sex:\n    y += 1\n    sex = sex.replace('Y', '0')\nif 'Z' in sex:\n    z += 1\n    sex = sex.replace('Z', '0')\nprint(min(x, y, z))\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import sys\r\n\r\ndef main():\r\n    pl = input().strip()\r\n    stpl = len(pl)\r\n\r\n    xc, yc, zc = 0, 0, 0\r\n\r\n    for i in range(stpl):\r\n        if (pl[i] == 'X'):\r\n            xc += 1\r\n        elif (pl[i] == 'Y'):\r\n            yc += 1\r\n        elif (pl[i] == 'Z'):\r\n            zc += 1\r\n    \r\n    mx, mn = 0, 0\r\n\r\n    while True:\r\n        mx = max(xc, yc, zc)\r\n        mn = min(xc, yc, zc)\r\n\r\n        if (mx - mn) > 1:\r\n            if (xc == mx and yc == mn):\r\n                xc -= 1\r\n                yc += 1\r\n            elif (xc == mx and zc == mn):\r\n                xc -= 1\r\n                zc += 1\r\n            elif (yc == mx and zc == mn):\r\n                yc -= 1\r\n                zc += 1\r\n            elif (yc == mx and xc == mn):\r\n                yc -= 1\r\n                xc += 1\r\n            elif (zc == mx and yc == mn):\r\n                zc -= 1\r\n                yc += 1\r\n            elif (zc == mx and xc == mn):\r\n                zc -= 1\r\n                xc += 1\r\n        else:\r\n            break\r\n    \r\n    mx = max(xc, yc, zc)\r\n    mn = min(xc, yc, zc)\r\n\r\n    c = [xc, yc, zc].count(mx)\r\n\r\n    if (c < 2 or c == 3):\r\n        print(str(mx - mn))\r\n    else:\r\n        print(str(mn))\r\n\r\nmain()",
                "verdict": "Wrong Answer"
            },
            {
                "code": "ps = input()\npl = [i for i in ps]\n\nwhile True:\n    if 'X' in pl and 'Y' in pl and 'Z' in pl:\n        pl.remove('X')\n        pl.remove('Y')\n        pl.remove('Z')\n    elif len(pl) >= 3:\n        xcount, ycount, zcount = pl.count('X'), pl.count('Y'), pl.count('Z')\n\n        if xcount > 1 or ycount > 1:\n            rm = 'X' if xcount > ycount else 'Y'\n\n            pl.remove(rm)\n            pl.append('Z')\n        elif xcount > 1 or zcount > 1:\n            rm = 'X' if xcount > zcount else 'Z'\n\n            pl.remove(rm)\n            pl.append('Y')\n        elif ycount > 1 or zcount > 1:\n            rm = 'Y' if ycount > zcount else 'Z'\n\n            pl.remove(rm)\n            pl.append('X')\n    else:\n        break\n\nprint(len(pl))\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "a=input()\r\nx=a.count('X')\r\ny=a.count('Y')\r\nz=a.count('Z')\r\n\r\ntotal=[]\r\nif x+1 > 0 and y - 1 > 0 and z > 0:\r\n    total.append(min([x+1,y-1,z]))\r\nif x > 0 and y > 0 and z > 0:\r\n    total.append(min([x,y,z]))\r\nif x+1 > 0 and y > 0 and z-1 > 0:\r\n    total.append(min([x+1,y,z-1]))\r\n\r\nif x > 0 and y+1 > 0 and z-1 > 0:\r\n    total.append(min([x,y+1,z-1]))\r\n\r\nif x > 0 and y-1 > 0 and z+1 > 0:\r\n    total.append(min([x,y-1,z+1]))\r\n\r\nif x-1> 0 and y+1 > 0 and z > 0:\r\n    total.append(min([x-1,y+1,z]))\r\nif x-1> 0 and y > 0 and z+1 > 0:\r\n    total.append(min([x-1,y,z+1]))\r\nif len(total) == 0:\r\n    print(1)\r\n    exit(0)\r\nprint(len(a) - 3 *max(total))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a=input()\r\nx=a.count('X')\r\ny=a.count('Y')\r\nz=a.count('Z')\r\n\r\ntotal=[]\r\nif x+1 > 0 and y - 1 > 0 and z > 0:\r\n    total.append(min([x+1,y-1,z]))\r\nif x > 0 and y > 0 and z > 0:\r\n    total.append(min([x,y,z]))\r\nif x+1 > 0 and y > 0 and z-1 > 0:\r\n    total.append(min([x+1,y,z-1]))\r\n\r\nif x > 0 and y+1 > 0 and z-1 > 0:\r\n    total.append(min([x,y+1,z-1]))\r\n\r\nif x > 0 and y-1 > 0 and z+1 > 0:\r\n    total.append(min([x,y-1,z+1]))\r\n\r\nif x-1> 0 and y+1 > 0 and z > 0:\r\n    total.append(min([x-1,y+1,z]))\r\nif x-1> 0 and y > 0 and z+1 > 0:\r\n    total.append(min([x-1,y,z+1]))\r\nprint(len(a) - 3 *max(total))",
                "verdict": "Runtime Error"
            },
            {
                "code": "a=input()\r\nx=a.count('X')\r\ny=a.count('Y')\r\nz=a.count('Z')\r\n\r\ntotal=[]\r\nif x+1 > 0 and y - 1 > 0 and z > 0:\r\n    total.append(min([x+1,y-1,z]))\r\nif x > 0 and y > 0 and z > 0:\r\n    total.append(min([x,y,z]))\r\nif x+1 > 0 and y > 0 and z-1 > 0:\r\n    total.append(min([x+1,y,z-1]))\r\n\r\nif x > 0 and y+1 > 0 and z-1 > 0:\r\n    total.append(min([x,y+1,z-1]))\r\n\r\nif x > 0 and y-1 > 0 and z+1 > 0:\r\n    total.append(min([x,y-1,z+1]))\r\n\r\nif x-1> 0 and y+1 > 0 and z > 0:\r\n    total.append(min([x-1,y+1,z]))\r\nif x-1> 0 and y > 0 and z+1 > 0:\r\n    total.append(min([x-1,y,z+1]))\r\nprint(max(total))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <vector>\r\n#include <iostream>\r\n#include <string>\r\n#include <algorithm>\r\nusing namespace std;\r\n\r\nvoid task_01() {\r\n    string stringi;\r\n    vector <string> victor;\r\n    int difference_between_x_and_y = 0, difference_between_y_and_z = 0, difference_between_z_and_x = 0;\r\n    int dlina;\r\n    cin >> stringi;\r\n    dlina = stringi.length();\r\n    std::string::difference_type x = std::count(stringi.begin(), stringi.end(), 'X');\r\n    std::string::difference_type y = std::count(stringi.begin(), stringi.end(), 'Y');\r\n    std::string::difference_type z = std::count(stringi.begin(), stringi.end(), 'Z');\r\n    \r\n    difference_between_x_and_y = x - y;\r\n    difference_between_y_and_z = y - z;\r\n    difference_between_z_and_x = z - x;\r\n    int overall = x + y + z;\r\n    int t_general = 0;\r\n    if (difference_between_x_and_y == 0 and difference_between_y_and_z == 0 or difference_between_x_and_y == 1 or -1\r\n        and difference_between_y_and_z == 1 or -1 and difference_between_z_and_x == -1) {\r\n        cout << 0;\r\n    }\r\n\r\n\r\n    if (difference_between_x_and_y > 0 and difference_between_y_and_z > 0 and difference_between_z_and_x < 0) {\r\n        z++;\r\n        x--;\r\n        x -= z;\r\n        y -= z;\r\n        t_general = x + y;\r\n        cout << t_general;\r\n    }\r\n\r\n}\r\nint main()\r\n{\r\n   task_01();\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <vector>\r\n#include <iostream>\r\n#include <string>\r\n#include <algorithm>\r\nusing namespace std;\r\n\r\nvoid task_01() {\r\n    string stringi;\r\n    vector <string> victor;\r\n    int difference_between_x_and_y = 0, difference_between_y_and_z = 0, difference_between_z_and_x = 0;\r\n    int dlina;\r\n    cin >> stringi;\r\n    dlina = stringi.length();\r\n    std::string::difference_type x = std::count(stringi.begin(), stringi.end(), 'X');\r\n    std::string::difference_type y = std::count(stringi.begin(), stringi.end(), 'Y');\r\n    std::string::difference_type z = std::count(stringi.begin(), stringi.end(), 'Z');\r\n    //cout << count_X;\r\n    difference_between_x_and_y = x - y;\r\n    difference_between_y_and_z = y - z;\r\n    difference_between_z_and_x = z - x;\r\n \r\n    if (difference_between_x_and_y == 0 and difference_between_y_and_z == 0 or difference_between_x_and_y == 1 or -1\r\n        and difference_between_y_and_z == 1 or -1) {\r\n        cout << 0;\r\n    }\r\n    if (difference_between_x_and_y > 0) {\r\n        \r\n    }\r\n    else {\r\n        difference_between_x_and_y = y - x;\r\n    }\r\n\r\n    if (difference_between_y_and_z > 0) {\r\n        \r\n    }\r\n    else {\r\n        difference_between_y_and_z = z - y;\r\n    }\r\n    if (difference_between_z_and_x > 0) {\r\n        \r\n    }\r\n    else {\r\n        difference_between_x_and_y = x - z;\r\n    }\r\n\r\n \r\n\r\n\r\n}\r\nint main()\r\n{\r\n   task_01();\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "def trig(a):\r\n    x = 0\r\n    y = 0\r\n    z = 0\r\n    for i in range(len(a)):\r\n        if a[i - 1] == 'X':\r\n            x += 1\r\n        elif a[i - 1] == 'Y':\r\n            y += 1\r\n        elif a[i - 1] == 'Z':\r\n            z += 1  \r\n    if x <= y <= z or x <= z <= y and x != 0:\r\n        x += 1\r\n    elif y <= x <= z or y <= z <= x and y != 0:\r\n        y += 1\r\n    elif z <= x <= y or z <= y <= x and z != 0:\r\n        z += 1\r\n    b = [x, y, z]\r\n    print(min(b))\r\n\r\n\r\ntrig(input())",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def trig(a):\r\n    x = 0\r\n    y = 0\r\n    z = 0\r\n    for i in range(len(a)):\r\n        if a[i - 1] == 'X':\r\n            x += 1\r\n        elif a[i - 1] == 'Y':\r\n            y += 1\r\n        elif a[i - 1] == 'Z':\r\n            z += 1\r\n    if x <= y <= z or x <= z <= y and x != 0:\r\n        x += 1\r\n    elif y <= x <= z or y <= z <= x and y != 0:\r\n        y += 1\r\n    elif z <= x <= y or z <= y <= x and z != 0:\r\n        z += 1\r\n    b = [x, y, z]\r\n    print(min(b))\r\n\r\n\r\ntrig(input())",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def trig(a):\r\n    x = 0\r\n    y = 0\r\n    z = 0\r\n    for i in range(len(a)):\r\n        if a[i - 1] == 'X':\r\n            x += 1\r\n        elif a[i - 1] == 'Y':\r\n            y += 1\r\n        elif a[i - 1] == 'Z':\r\n            z += 1\r\n    if x <= y <= z or x <= z <= y and x != 0:\r\n        x += 1\r\n    elif y <= x <= z or y <= z <= x and y != 0:\r\n        y += 1\r\n    elif z <= x <= y or z <= y <= x and z != 0:\r\n        z += 1\r\n    b = [x, y, z]\r\n    print(min(b))\r\n\r\n\r\ntrig(input())",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def trig(a):\r\n    x = 0\r\n    y = 0\r\n    z = 0\r\n    for i in range(len(a)):\r\n        if a[i - 1] == 'X':\r\n            x += 1\r\n        elif a[i - 1] == 'Y':\r\n            y += 1\r\n        elif a[i - 1] == 'Z':\r\n            z += 1\r\n    if x <= y <= z:\r\n        x += 1\r\n    elif x <= z <= y:\r\n        x += 1\r\n    elif y <= x <= z:\r\n        y += 1\r\n    elif y <= z <= x:\r\n        y += 1\r\n    elif z <= x <= y:\r\n        z += 1\r\n    elif z <= y <= x:\r\n        z += 1 \r\n    b = [x, y, z]\r\n    print(min(b))\r\n\r\n\r\ntrig(input())",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = input()\r\nX = 0\r\nY = 0\r\nZ = 0\r\nb = [X, Y, Z]\r\nfor i in range(len(a)):\r\n    if a[i - 1] == 'X':\r\n        X += 1\r\n    elif a[i - 1] == 'Y':\r\n        Y += 1\r\n    elif a[i - 1] == 'Z':\r\n        Z += 1\r\nprint(min(b))",
                "verdict": "Wrong Answer"
            }
        ]
    },
    {
        "task_id": 51,
        "description": "\u0412 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442\u0435 \u043d\u0435\u043c\u0430\u043b\u043e \u0441\u0442\u0430\u0442\u0435\u0439 \u043f\u0440\u043e \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 **\u0414\u0435\u0440\u0435\u0432\u043e \u041f\u0430\u043b\u0438\u043d\u0434\u0440\u043e\u043c\u043e\u0432**. \u041f\u043e\u0447\u0442\u0438 \u0432 \u043a\u0430\u0436\u0434\u043e\u043c \u0438\u0437 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u043e\u0432 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043e, \u0447\u0442\u043e \u044d\u0442\u0443 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0443 \u0438\u0437\u043e\u0431\u0440\u0451\u043b \u041c\u0438\u0445\u0430\u0438\u043b \u0420\u0443\u0431\u0438\u043d\u0447\u0438\u043a \u043d\u0430 \u041f\u0435\u0442\u0440\u043e\u0437\u0430\u0432\u043e\u0434\u0441\u043a\u0438\u0445 \u0441\u0431\u043e\u0440\u0430\u0445 \u0432 2014 \u0433\u043e\u0434\u0443. \u041d\u043e \u043c\u0430\u043b\u043e \u043a\u0442\u043e \u0437\u043d\u0430\u0435\u0442, \u043f\u043e\u0447\u0435\u043c\u0443 \u0438\u043c\u0435\u043d\u043d\u043e \u0432 \u0441\u0442\u0430\u0442\u044c\u044f\u0445 \u043f\u0440\u043e \u0414\u0435\u0440\u0435\u0432\u043e \u041f\u0430\u043b\u0438\u043d\u0434\u0440\u043e\u043c\u043e\u0432 \u0442\u0430\u043a \u0447\u0430\u0441\u0442\u043e \u0438 \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e \u043e\u0442\u043c\u0435\u0447\u0435\u043d\u043e \u0430\u0432\u0442\u043e\u0440\u0441\u0442\u0432\u043e.\n\n\u0415\u0441\u043b\u0438 \u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u0442\u044c \u0441\u0442\u0430\u0442\u044c\u044e \u0441 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u043c \u00ab\u0414\u0435\u0440\u0435\u0432\u043e \u043f\u0430\u043b\u0438\u043d\u0434\u0440\u043e\u043c\u043e\u0432\u00bb, \u043d\u043e \u0431\u0435\u0437 \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0438 \u00ab\u041c\u0438\u0445\u0430\u0438\u043b \u0420\u0443\u0431\u0438\u043d\u0447\u0438\u043a\u00bb \u0432 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u043c \u0442\u0435\u043a\u0441\u0442\u0435, \u0431\u043e\u0442\u043e\u0444\u0435\u0440\u043c\u0430 \u041c\u0438\u0445\u0430\u0438\u043b\u0430 \u0420\u0443\u0431\u0438\u043d\u0447\u0438\u043a\u0430 \u0430\u043a\u0442\u0438\u0432\u043d\u043e \u043d\u0430\u0447\u043d\u0451\u0442 \u0441\u043b\u0430\u0442\u044c \u0436\u0430\u043b\u043e\u0431\u044b \u043e\u0442 \u00ab\u043d\u0435\u0434\u043e\u0432\u043e\u043b\u044c\u043d\u044b\u0445 \u0447\u0438\u0442\u0430\u0442\u0435\u043b\u0435\u0439\u00bb \u043d\u0430 \u043f\u043e\u0447\u0442\u0443 \u0430\u0432\u0442\u043e\u0440\u0430, \u043f\u0440\u0438\u0447\u0438\u0442\u0430\u044f \u043f\u0440\u043e \u043d\u0435\u0437\u044b\u0431\u043b\u0435\u043c\u043e\u0441\u0442\u044c \u0430\u0432\u0442\u043e\u0440\u0441\u043a\u043e\u0433\u043e \u043f\u0440\u0430\u0432\u0430, \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u043e\u0441\u0442\u044c \u043e\u0431\u0435\u0441\u0446\u0435\u043d\u0438\u0432\u0430\u043d\u0438\u044f \u0442\u0440\u0443\u0434\u043e\u0432 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0441\u0442\u043e\u0432 \u0438 \u0442\u0430\u043a \u0434\u0430\u043b\u0435\u0435.\n\n\u0412\u044b \u0440\u0435\u0448\u0438\u043b\u0438 \u0432\u044b\u0441\u043b\u0435\u0434\u0438\u0442\u044c \u0431\u043e\u0442\u043e\u0432 \u0420\u0443\u0431\u0438\u043d\u0447\u0438\u043a\u0430: \u043d\u0430\u043f\u0438\u0441\u0430\u043b\u0438 \u0441\u0442\u0430\u0442\u044c\u044e \u0431\u0435\u0437 \u0443\u043f\u043e\u043c\u0438\u043d\u0430\u043d\u0438\u044f \u041c\u0438\u0445\u0430\u0438\u043b\u0430, \u043f\u043e\u0434\u043e\u0436\u0434\u0430\u043b\u0438 \u043d\u0435\u043c\u043d\u043e\u0433\u043e, \u043e\u0442\u043a\u0440\u044b\u043b\u0438 \u043f\u043e\u0447\u0442\u043e\u0432\u044b\u0439 \u044f\u0449\u0438\u043a \u0438 \u0443\u0432\u0438\u0434\u0435\u043b\u0438 $n$ \u043d\u0435\u043f\u0440\u043e\u0447\u0438\u0442\u0430\u043d\u043d\u044b\u0445 \u043f\u0438\u0441\u0435\u043c. \n\n\u0414\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u043d\u043e \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u043e, \u0447\u0442\u043e \u043a\u0430\u043a \u0442\u043e\u043b\u044c\u043a\u043e \u0431\u043e\u0442\u043e\u0444\u0435\u0440\u043c\u0430 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0438\u043b\u0430 \u0432\u0430\u0448\u0443 \u0441\u0442\u0430\u0442\u044c\u044e, \u043e\u043d\u0430 \u0442\u0443\u0442 \u0436\u0435 \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u043b\u0430 \u0432\u0430\u043c \u043d\u0430 \u043f\u043e\u0447\u0442\u0443 \u0433\u043d\u0435\u0432\u043d\u043e\u0435 \u043f\u0438\u0441\u044c\u043c\u043e, \u0430 \u0437\u0430\u0442\u0435\u043c \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0430\u043b\u0430 \u0441\u043b\u0430\u0442\u044c \u0435\u0449\u0451 \u043f\u043e \u043e\u0434\u043d\u043e\u043c\u0443 \u043f\u0438\u0441\u044c\u043c\u0443 \u0447\u0435\u0440\u0435\u0437 \u043a\u0430\u0436\u0434\u044b\u0435 $x$ \u0441\u0435\u043a\u0443\u043d\u0434. \u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u0432\u044b \u043d\u0435 \u0437\u043d\u0430\u0435\u0442\u0435 \u043d\u0438 \u043c\u043e\u043c\u0435\u043d\u0442, \u043a\u043e\u0433\u0434\u0430 \u0431\u043e\u0442\u043e\u0444\u0435\u0440\u043c\u0430 \u043d\u0430\u0448\u043b\u0430 \u0441\u0442\u0430\u0442\u044c\u044e, \u043d\u0438 \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b \u043c\u0435\u0436\u0434\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f\u043c\u0438.\n\n\u041d\u0430\u0439\u0434\u0438\u0442\u0435 \u0442\u0435\u043e\u0440\u0438\u0442\u0435\u0447\u0435\u0441\u043a\u0438 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u043f\u0438\u0441\u0435\u043c, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0443\u0441\u043f\u0435\u043b\u0430 \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0432\u0430\u043c \u0431\u043e\u0442\u043e\u0444\u0435\u0440\u043c\u0430 \u041c\u0438\u0445\u0430\u0438\u043b\u0430 \u0420\u0443\u0431\u0438\u043d\u0447\u0438\u043a\u0430.\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u0447\u0438\u0441\u043b\u043e $t$ \u2013 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0445 \u0441\u043b\u0443\u0447\u0430\u0435\u0432 ($1 \\le t \\le 100$). \u0414\u0430\u043b\u0435\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0442 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0435 \u0441\u043b\u0443\u0447\u0430\u0438.\n    \n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0433\u043e \u0441\u043b\u0443\u0447\u0430\u044f \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u0447\u0438\u0441\u043b\u043e $n$ \u2013 \u0447\u0438\u0441\u043b\u043e \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 ($1 \\le n \\le 3000$).\n\n\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0433\u043e \u0441\u043b\u0443\u0447\u0430\u044f \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0447\u0438\u0441\u043b\u0430 $a_1, a_2, \\dots, a_{n}$ \u2013 \u0433\u0434\u0435 $a_i$ \u2013 \u0447\u0435\u0440\u0435\u0437 \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u0435\u043a\u0443\u043d\u0434 \u043f\u043e\u0441\u043b\u0435 \u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438 \u0441\u0442\u0430\u0442\u044c\u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u043e $i$-\u0442\u043e\u0435 \u043f\u0438\u0441\u044c\u043c\u043e ($1 \\le a_i \\le 10^9$, $a_{i} < a_{i + 1}$).\n\n\u0413\u0430\u0440\u0430\u043d\u0442\u0438\u0440\u0443\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u0441\u0443\u043c\u043c\u0430 $n$ \u043d\u0435 \u043f\u0440\u0435\u0432\u044b\u0448\u0430\u0435\u0442 $3000$ \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 \u043e\u0434\u043d\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0430.\u0412 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e \u2013 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u043f\u0438\u0441\u0435\u043c, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0443\u0441\u043f\u0435\u043b\u0430 \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0432\u0430\u043c \u0431\u043e\u0442\u043e\u0444\u0435\u0440\u043c\u0430 \u041c\u0438\u0445\u0430\u0438\u043b\u0430 \u0420\u0443\u0431\u0438\u043d\u0447\u0438\u043a\u0430.",
        "solutions": [
            {
                "code": "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    \n    assert len(a) == n\n    assert len(a) == len(set(a))\n    assert a == list(sorted(a))\n    \n    mx = max(a) + 1\n\n    lookup = set(a)\n\n    best = 1\n\n    for i in range(n - 1):\n        for j in range(i + 1, n):\n            current = 2\n            delta = a[j] - a[i]\n\n            for k in range(a[j] + delta, mx, delta):\n                if k in lookup:\n                    current += 1\n                else:\n                    break\n\n            best = max(best, current)\n\n    print(best)",
                "verdict": "Runtime Error"
            },
            {
                "code": "for _ in range(int(input())):\n    n = int(input())\n    a = list(map(int, input().split()))\n    \n    assert len(a) == n\n    assert len(a) == len(set(a))\n    assert a == list(sorted(a))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\na = list(map(int, input().split()))\n\nassert len(a) == n\nassert len(a) == len(set(a))\nassert a == list(sorted(a))",
                "verdict": "Runtime Error"
            },
            {
                "code": "#pragma GCC optimize(\"Ofast\", \"unroll-loops\")\r\n#pragma GCC target(\"popcnt\", \"lzcnt\", \"avx2\", \"abm\", \"bmi\", \"bmi2\", \"fma\")\r\n\r\n#include <iostream>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <map>\r\n#include <set>\r\n#include <string>\r\n#include <ctime>\r\n#include <cmath>\r\n#include <iomanip>\r\n#include <map>\r\n#include <stack>\r\n#include <queue>\r\n#include <climits>\r\n#include <ctime>\r\n#include <random>\r\n#include <stack>\r\n#include <deque>\r\n#include <fstream>\r\n#include <unordered_set>\r\n#include <numeric>\r\n#include <unordered_map>\r\n\r\nusing namespace std;\r\n\r\nunsigned long long mod = 1000000007;\r\n\r\nlong long Pow(long long a, unsigned long long b)\r\n{\r\n    if (b == 0) \r\n    {\r\n        return 1;\r\n    }\r\n    if (b == 1) \r\n    {\r\n        return a % mod;\r\n    }\r\n    if (b % 2 == 0) \r\n    {\r\n        return Pow((a * a) % mod, b / 2) % mod;\r\n    }\r\n    return (a * Pow(a, b - 1) % mod) % mod;\r\n}\r\n\r\nint gcd(unsigned long long a, unsigned long long b)\r\n{\r\n    if (a < b)\r\n    {\r\n        swap(a, b);\r\n    }\r\n    while (b > 0)\r\n    {\r\n        a %= b;\r\n        swap(a, b);\r\n    }\r\n    return a;\r\n}\r\n\r\n\r\nint main() {\r\n    mt19937 ll(time(0));\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(NULL);\r\n    \r\n    int t;\r\n    cin >> t;\r\n    for (t; t > 0; --t)\r\n    {\r\n        int n;\r\n        cin >> n;\r\n        vector<int> s(n);\r\n        for (int i = 0; i < n; ++i)\r\n        {\r\n            cin >> s[i];\r\n        }\r\n        vector<unordered_map<int, int>> m(n);\r\n        int p = 0;\r\n        p = 1;\r\n        for (int i = 1; i < n; ++i)\r\n        {\r\n            for (int j = i - 1; j >= 0; --j)\r\n            {\r\n                int k = s[i] - s[j];\r\n                if (m[i].find(k) != m[i].end())\r\n                {\r\n                    continue;\r\n                }\r\n                if (m[j].find(k) != m[j].end())\r\n                {\r\n                    m[i][k] = m[j][k] + 1;\r\n                }\r\n                else\r\n                {\r\n                    m[i][k] = 2;\r\n                }\r\n                p = max(p, m[i][k]);\r\n            }\r\n        }\r\n        cout << p << '\\n';\r\n    }\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "for _ in range(int(input())):\n    n = int(input())\n    dp = [{0:0} for i in range(n)]\n    a = list(map(int, input().split()))\n    for i in range(n):\n        for j in range(i+1, n):\n            z = a[j]-a[i]\n            if a[j]-a[i] in dp[i]:\n                e = dp[i][z]\n            else:\n                e = 1\n            dp[j][z] = e+1\n    ans = 1\n    for i in dp:\n        ans = max(ans, max(i.values()))\n    print(ans)\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "for _ in range(int(input())):\n    n = int(input())\n    r = {}\n    a = list(map(int, input().split()))\n    for i in range(n):\n        for j in range(i+1, n):\n            z = a[j]-a[i]\n            if z not in r:\n                r[z] = 1\n            else:\n                r[z] += 1\n    print(max(r.values()))\n\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "for _ in range(int(input())):\n    n = int(input())\n    r = {}\n    a = list(map(int, input().split()))\n    for i in range(n):\n        for j in range(i+1, n):\n            z = a[j]-a[i]\n            if z not in r:\n                r[z] = 1\n            else:\n                r[z] += 1\n    print(max(r.values()))\n\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "t = int(input())\nfor test in range(t):\n    n = int(input())\n    a = list(map(int,input().split()))\n    res = 0\n    if n == 1 or n==2:\n        print(n)\n    else:\n        for i in range(n):\n            for j in range(i+1,n):\n                x = a[j]-a[i]\n                last = a[j]\n                otv = 2\n                for g in range(j+1,n):\n                    if a[g]-last==x:\n                        otv+=1\n                        last = a[g]\n                    elif a[g]-last>x:\n                        break\n                res = max(res,otv)\n        print(res)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "t = int(input())\nfor test in range(t):\n    n = int(input())\n    a = list(map(int,input().split()))\n    res = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            x = a[j]-a[i]\n            last = a[j]\n            otv = 2\n            for g in range(j+1,n):\n                if a[g]-last==x:\n                    otv+=1\n                    last = a[g]\n                elif a[g]-last>x:\n                    break\n            res = max(res,otv)\n    print(res)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "for test in range(t):\n    n = int(input())\n    a = list(map(int,input().split()))\n    res = 0\n    for i in range(n):\n        for j in range(i+1,n):\n            x = a[j]-a[i]\n            last = a[j]\n            otv = 2\n            for g in range(j+1,n):\n                if a[g]-last==x:\n                    otv+=1\n                    last = a[g]\n                elif a[g]-last>x:\n                    break\n            res = max(res,otv)\n    print(res)",
                "verdict": "Runtime Error"
            },
            {
                "code": "from math import gcd, sqrt, log, factorial\r\nfrom functools import cmp_to_key\r\nfrom string import ascii_lowercase as alph\r\nimport os, sys\r\nfrom itertools import permutations, combinations\r\nimport heapq\r\nfrom io import BytesIO, IOBase\r\nfrom collections import deque, Counter\r\n\r\n\r\n############################################################################\r\n#\t\t\t\t\t\t\t\tFAST-IO\t\t\t\t\t\t\t\t       #\r\n#\t\t\t\t\t\t\t\tTEMPLATES                                  #\r\n############################################################################\r\n\r\n#sys.setrecursionlimit(10 ** 5)\r\n\r\nfast = True\r\nif fast:\r\n \r\n\tBUFSIZE = 8192\r\n \r\n\tclass FastIO(IOBase):\r\n\t\tnewlines = 0\r\n\t \r\n\t\tdef __init__(self, file):\r\n\t\t\tself._fd = file.fileno()\r\n\t\t\tself.buffer = BytesIO()\r\n\t\t\tself.writable = \"x\" in file.mode or \"r\" not in file.mode\r\n\t\t\tself.write = self.buffer.write if self.writable else None\r\n\t \r\n\t\tdef read(self):\r\n\t\t\twhile True:\r\n\t\t\t\tb = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\r\n\t\t\t\tif not b:\r\n\t\t\t\t\tbreak\r\n\t\t\t\tptr = self.buffer.tell()\r\n\t\t\t\tself.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\r\n\t\t\tself.newlines = 0\r\n\t\t\treturn self.buffer.read()\r\n\t \r\n\t\tdef readline(self):\r\n\t\t\twhile self.newlines == 0:\r\n\t\t\t\tb = os.read(self._fd, max(os.fstat(self._fd).st_size, BUFSIZE))\r\n\t\t\t\tself.newlines = b.count(b\"\\n\") + (not b)\r\n\t\t\t\tptr = self.buffer.tell()\r\n\t\t\t\tself.buffer.seek(0, 2), self.buffer.write(b), self.buffer.seek(ptr)\r\n\t\t\tself.newlines -= 1\r\n\t\t\treturn self.buffer.readline()\r\n\t \r\n\t\tdef flush(self):\r\n\t\t\tif self.writable:\r\n\t\t\t\tos.write(self._fd, self.buffer.getvalue())\r\n\t\t\t\tself.buffer.truncate(0), self.buffer.seek(0)\r\n\t \r\n\t \r\n\tclass IOWrapper(IOBase):\r\n\t\tdef __init__(self, file):\r\n\t\t\tself.buffer = FastIO(file)\r\n\t\t\tself.flush = self.buffer.flush\r\n\t\t\tself.writable = self.buffer.writable\r\n\t\t\tself.write = lambda s: self.buffer.write(s.encode(\"ascii\"))\r\n\t\t\tself.read = lambda: self.buffer.read().decode(\"ascii\")\r\n\t\t\tself.readline = lambda: self.buffer.readline().decode(\"ascii\")\r\n\t \r\n\t \r\n\tdef print(*args, **kwargs):\r\n\t\t\"\"\"Prints the values to a stream, or to sys.stdout by default.\"\"\"\r\n\t\tsep, file = kwargs.pop(\"sep\", \" \"), kwargs.pop(\"file\", sys.stdout)\r\n\t\tat_start = True\r\n\t\tfor x in args:\r\n\t\t\tif not at_start:\r\n\t\t\t\tfile.write(sep)\r\n\t\t\tfile.write(str(x))\r\n\t\t\tat_start = False\r\n\t\tfile.write(kwargs.pop(\"end\", \"\\n\"))\r\n\t\tif kwargs.pop(\"flush\", False):\r\n\t\t\tfile.flush()\r\n\t \r\n\t \r\n\tif sys.version_info[0] < 3:\r\n\t\tsys.stdin, sys.stdout = FastIO(sys.stdin), FastIO(sys.stdout)\r\n\telse:\r\n\t\tsys.stdin, sys.stdout = IOWrapper(sys.stdin), IOWrapper(sys.stdout)\r\n\t \r\n\tinput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\r\n \r\n \r\nif os.path.exists('input.txt'):\r\n\tsys.stdin = open('input.txt')\r\n\tsys.stdout = open('output.txt', 'w')\r\n \r\nINF = float('inf')\r\n\r\ndef C(n, k, mod):\r\n\tcntn = 0\r\n\tcntk = 0\r\n\tif 0 <= k <= n:\r\n\t\tnn = 1\r\n\t\tkk = 1\r\n\t\tfor t in range(1, min(k, n - k) + 1):\r\n\t\t\tnn *= n\r\n\t\t\tcntn = (cntn * mod + nn) // mod\r\n\t\t\tnn %= mod\r\n\t\t\tkk *= t\r\n\t\t\tcntk = (cntk * mod + kk) // mod\r\n\t\t\tkk %= mod\r\n\t\t\tn -= 1\r\n\t\treturn (nn + cntn * mod) // (kk + cntk * mod) % mod\r\n\telse:\r\n\t\treturn 0\r\n\r\ndef isPrime(n):\r\n\tif n == 1: return 0\r\n\tif n % 2 == 0: return n == 2\r\n\ti = 3\r\n\twhile i * i <= n:\r\n\t\tif n % i == 0:\r\n\t\t\treturn 0\r\n\t\ti += 2\r\n\treturn 1\r\n \r\ndef divCeil(a, b):\r\n\treturn (a - 1) // b + 1\r\n \r\ndef readList():\r\n\treturn [int(i) for i in input().split()]\r\n \r\ndef getSum(prefSum, l, r):\r\n\tif l == 0:\r\n\t\treturn prefSum[r]\r\n\treturn prefSum[r] - prefSum[l - 1]\r\n\r\ndef getProd(l, r):\r\n\tglobal prefProd\r\n\tif l == 0:\r\n\t\treturn prefProd[r]\r\n\treturn prefProd[r] // prefProd[l - 1]\r\n\r\ndef getsum(BITTree,i):\r\n\ts = 0\r\n\ti = i + 1\r\n\twhile i > 0:\r\n\t\ts += max(1, BITTree[i])\r\n\t\ti -= i & (-i)\r\n\treturn s\r\n \r\ndef updatebit(BITTree , n , i ,v):\r\n\ti += 1\r\n\twhile i <= n:\r\n\t\tBITTree[i] += v\r\n\t\ti += i & (-i)\r\n \r\ndef construct(arr, n):\r\n\tBITTree = [0] * (n + 1)\r\n \r\n\tfor i in range(n):\r\n\t\tupdatebit(BITTree, n, i, arr[i])\r\n \r\n\treturn BITTree\r\n\r\ndef solve():\r\n\tn = int(input())\r\n\ta = readList()\r\n\tans = 2\r\n\tfor l in range(n):\r\n\t\tfor skip in range(1, n - l):\r\n\t\t\tdiff = a[l + skip] - a[l]\r\n\t\t\tcur = l + skip\r\n\t\t\tprev = l + skip\r\n\t\t\tcurAns = 2\r\n\t\t\twhile cur < n:\r\n\t\t\t\tif a[cur] - a[prev] == diff:\r\n\t\t\t\t\tcurAns += 1\r\n\t\t\t\t\tprev = cur\r\n\t\t\t\telif a[cur] - a[prev] > diff:\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcur += 1\r\n\t\t\tans = max(ans, curAns)\r\n\tprint(ans)\r\n\r\nt = int(input())\r\nwhile t:\r\n\tt -= 1\r\n\tsolve()",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import itertools\r\nimport operator\r\nimport random\r\nfrom heapq import *\r\nimport math\r\nfrom collections import deque, Counter, defaultdict\r\nfrom functools import reduce, lru_cache\r\nfrom random import randrange\r\nimport sys\r\nimport os\r\nimport time\r\nfrom math import inf\r\n\r\ndebug = os.environ.get('NOT_ONLINE_JUDGE')\r\n\r\nif debug:\r\n    sys.stdin = open('input.txt')\r\n\r\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\r\n\r\ncache = lru_cache(None)\r\n\r\nflush = lambda: sys.stdout.flush()\r\n\r\n\r\n\r\n\r\ndef flatmap(f, lst):\r\n    r = []\r\n    for m in lst:\r\n        r += f(m)\r\n    return r\r\n\r\n\r\nclass UnionFind:\r\n    def __init__(self, cap):\r\n        self.parents = [i for i in range(cap)]\r\n\r\n    def find(self, what):\r\n        if self.parents[what] != what:\r\n            self.parents[what] = self.find(self.parents[what])\r\n        return self.parents[what]\r\n\r\n    def union(self, a, b):\r\n        a = self.find(a)\r\n        b = self.find(b)\r\n        self.parents[a] = b\r\n        return a, b\r\n\r\n\r\ndef z(s):\r\n    zf = [0] * len(s)\r\n    l = 0\r\n    r = 0\r\n    for i in range(1, len(s)):\r\n        zf[i] = max(0, min(r - i, zf[i - l]))\r\n        while i + zf[i] < len(s) and s[zf[i]] == s[i + zf[i]]:\r\n            zf[i] += 1\r\n        if i + zf[i] > r:\r\n            l = i\r\n            r = i + zf[i]\r\n    return zf\r\n\r\n\r\ndef lcs(a, b):\r\n    guinness = [[0 for _ in range(len(a) + 1)] for _ in range(len(b) + 1)]\r\n\r\n    for i in range(1, len(a) + 1):\r\n        for j in range(1, len(b) + 1):\r\n            if a[i - 1] == b[j - 1]:\r\n                guinness[i][j] = guinness[i - 1][j - 1] + 1\r\n            else:\r\n                guinness[i][j] = max(guinness[i - 1][j], guinness[i][j - 1])\r\n\r\n\r\nclass Trie:\r\n    def __init__(self):\r\n        self.nt = [None] * 26\r\n        self.end = False\r\n\r\n    def insert(self, w):\r\n        if not w:\r\n            self.end = True\r\n            return\r\n        if not self.nt[ord(w[0]) - ord('a')]:\r\n            self.nt[ord(w[0]) - ord('a')] = Trie()\r\n        self.nt[ord(w[0]) - ord('a')].insert(w[1:])\r\n\r\n    def __contains__(self, w):\r\n        if not w:\r\n            return self.end\r\n        if self.nt[ord(w[0]) - ord('a')] is None:\r\n            return False\r\n        return w[1:] in self.nt[ord(w[0]) - ord('a')]\r\n\r\n\r\nclass ST:\r\n    def __init__(self, arr, f=operator.add, neutral=0):\r\n        self.arr = [neutral] * len(arr) + arr\r\n        self.n = len(arr)\r\n        self.f = f\r\n        self.neutral = neutral\r\n        for i in range(self.n - 1, 0, -1):\r\n            self.arr[i] = f(self.arr[i // 2], self.arr[(i // 2) | 1])\r\n\r\n    def update(self, p, v):\r\n        self.arr[p + self.n] = v\r\n        p += self.n\r\n        i = p\r\n        while i > 1:\r\n            self.arr[i // 2] = self.f(self.arr[i], self.arr[i ^ 1])\r\n            i //= 2\r\n\r\n    def query(self, l, r):\r\n        res = 0\r\n        l += self.n\r\n        r += self.n\r\n        while l < r:\r\n            if l % 2 == 1:\r\n                res = self.f(res, self.arr[l])\r\n                l += 1\r\n            if r % 2 == 1:\r\n                r -= 1\r\n                res = self.f(res, self.arr[r])\r\n            l //= 2\r\n            r //= 2\r\n        return res\r\n\r\n\r\n\r\ndef ints():\r\n    return list(map(int, input().split()))\r\n\r\n\r\ndef int1():\r\n    return int(input())\r\n\r\n\r\nyes = 'YES'\r\nno = 'NO'\r\nyn = lambda condition: yes if condition else no\r\n\r\n\r\ndef dprint(*args, sep=' ', end='\\n'):\r\n    if debug:\r\n        print('DEBUG: ' + sep.join(map(str, args)), end=end)\r\n\r\n\r\ndef cton(c):\r\n    return ord(c) - ord('a')\r\n\r\n\r\ndef ntoc(n):\r\n    return chr(n + ord('a'))\r\n\r\nif debug:\r\n    abracadabra = time.time()\r\n\r\n########################################################################\r\n\r\n\r\ncount = int1()\r\n\r\nfor question in range(count):\r\n    n = int1()\r\n\r\n    arr = ints()\r\n\r\n    d = dict()\r\n\r\n    for i in range(len(arr)):\r\n        for j in range(i + 1, len(arr)):\r\n            d[(j, arr[j] - arr[i])] = d.get((i, arr[j] - arr[i]), 1) + 1\r\n    print(max(d.values()) if d else 1)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n#########################################################################\r\n\r\nif debug:\r\n    print(f'\\n\\nTIME: {time.time() - abracadabra}')\r\n    sys.stdin.close()\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "import itertools\r\nimport operator\r\nimport random\r\nfrom heapq import *\r\nimport math\r\nfrom collections import deque, Counter, defaultdict\r\nfrom functools import reduce, lru_cache\r\nfrom random import randrange\r\nimport sys\r\nimport os\r\nimport time\r\nfrom math import inf\r\n\r\ndebug = os.environ.get('NOT_ONLINE_JUDGE')\r\n\r\nif debug:\r\n    sys.stdin = open('input.txt')\r\n\r\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\r\n\r\ncache = lru_cache(None)\r\n\r\nflush = lambda: sys.stdout.flush()\r\n\r\n\r\n\r\n\r\ndef flatmap(f, lst):\r\n    r = []\r\n    for m in lst:\r\n        r += f(m)\r\n    return r\r\n\r\n\r\nclass UnionFind:\r\n    def __init__(self, cap):\r\n        self.parents = [i for i in range(cap)]\r\n\r\n    def find(self, what):\r\n        if self.parents[what] != what:\r\n            self.parents[what] = self.find(self.parents[what])\r\n        return self.parents[what]\r\n\r\n    def union(self, a, b):\r\n        a = self.find(a)\r\n        b = self.find(b)\r\n        self.parents[a] = b\r\n        return a, b\r\n\r\n\r\ndef z(s):\r\n    zf = [0] * len(s)\r\n    l = 0\r\n    r = 0\r\n    for i in range(1, len(s)):\r\n        zf[i] = max(0, min(r - i, zf[i - l]))\r\n        while i + zf[i] < len(s) and s[zf[i]] == s[i + zf[i]]:\r\n            zf[i] += 1\r\n        if i + zf[i] > r:\r\n            l = i\r\n            r = i + zf[i]\r\n    return zf\r\n\r\n\r\ndef lcs(a, b):\r\n    guinness = [[0 for _ in range(len(a) + 1)] for _ in range(len(b) + 1)]\r\n\r\n    for i in range(1, len(a) + 1):\r\n        for j in range(1, len(b) + 1):\r\n            if a[i - 1] == b[j - 1]:\r\n                guinness[i][j] = guinness[i - 1][j - 1] + 1\r\n            else:\r\n                guinness[i][j] = max(guinness[i - 1][j], guinness[i][j - 1])\r\n\r\n\r\nclass Trie:\r\n    def __init__(self):\r\n        self.nt = [None] * 26\r\n        self.end = False\r\n\r\n    def insert(self, w):\r\n        if not w:\r\n            self.end = True\r\n            return\r\n        if not self.nt[ord(w[0]) - ord('a')]:\r\n            self.nt[ord(w[0]) - ord('a')] = Trie()\r\n        self.nt[ord(w[0]) - ord('a')].insert(w[1:])\r\n\r\n    def __contains__(self, w):\r\n        if not w:\r\n            return self.end\r\n        if self.nt[ord(w[0]) - ord('a')] is None:\r\n            return False\r\n        return w[1:] in self.nt[ord(w[0]) - ord('a')]\r\n\r\n\r\nclass ST:\r\n    def __init__(self, arr, f=operator.add, neutral=0):\r\n        self.arr = [neutral] * len(arr) + arr\r\n        self.n = len(arr)\r\n        self.f = f\r\n        self.neutral = neutral\r\n        for i in range(self.n - 1, 0, -1):\r\n            self.arr[i] = f(self.arr[i // 2], self.arr[(i // 2) | 1])\r\n\r\n    def update(self, p, v):\r\n        self.arr[p + self.n] = v\r\n        p += self.n\r\n        i = p\r\n        while i > 1:\r\n            self.arr[i // 2] = self.f(self.arr[i], self.arr[i ^ 1])\r\n            i //= 2\r\n\r\n    def query(self, l, r):\r\n        res = 0\r\n        l += self.n\r\n        r += self.n\r\n        while l < r:\r\n            if l % 2 == 1:\r\n                res = self.f(res, self.arr[l])\r\n                l += 1\r\n            if r % 2 == 1:\r\n                r -= 1\r\n                res = self.f(res, self.arr[r])\r\n            l //= 2\r\n            r //= 2\r\n        return res\r\n\r\n\r\n\r\ndef ints():\r\n    return list(map(int, input().split()))\r\n\r\n\r\ndef int1():\r\n    return int(input())\r\n\r\n\r\nyes = 'YES'\r\nno = 'NO'\r\nyn = lambda condition: yes if condition else no\r\n\r\n\r\ndef dprint(*args, sep=' ', end='\\n'):\r\n    if debug:\r\n        print('DEBUG: ' + sep.join(map(str, args)), end=end)\r\n\r\n\r\ndef cton(c):\r\n    return ord(c) - ord('a')\r\n\r\n\r\ndef ntoc(n):\r\n    return chr(n + ord('a'))\r\n\r\nif debug:\r\n    abracadabra = time.time()\r\n\r\n########################################################################\r\n\r\n\r\ncount = int1()\r\n\r\nfor question in range(count):\r\n    n = int1()\r\n\r\n    arr = ints()\r\n\r\n    d = dict()\r\n\r\n    for i in range(len(arr)):\r\n        for j in range(i + 1, len(arr)):\r\n            d[(j, arr[j] - arr[i])] = d.get((i, arr[j] - arr[i]), 1) + 1\r\n    print(max(d.values()))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n#########################################################################\r\n\r\nif debug:\r\n    print(f'\\n\\nTIME: {time.time() - abracadabra}')\r\n    sys.stdin.close()\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "import itertools\r\nimport operator\r\nimport random\r\nfrom heapq import *\r\nimport math\r\nfrom collections import deque, Counter, defaultdict\r\nfrom functools import reduce, lru_cache\r\nfrom random import randrange\r\nimport sys\r\nimport os\r\nimport time\r\nfrom math import inf\r\n\r\ndebug = os.environ.get('NOT_ONLINE_JUDGE')\r\n\r\nif debug:\r\n    sys.stdin = open('input.txt')\r\n\r\ninput = lambda: sys.stdin.readline().rstrip(\"\\r\\n\")\r\n\r\ncache = lru_cache(None)\r\n\r\nflush = lambda: sys.stdout.flush()\r\n\r\n\r\n\r\n\r\ndef flatmap(f, lst):\r\n    r = []\r\n    for m in lst:\r\n        r += f(m)\r\n    return r\r\n\r\n\r\nclass UnionFind:\r\n    def __init__(self, cap):\r\n        self.parents = [i for i in range(cap)]\r\n\r\n    def find(self, what):\r\n        if self.parents[what] != what:\r\n            self.parents[what] = self.find(self.parents[what])\r\n        return self.parents[what]\r\n\r\n    def union(self, a, b):\r\n        a = self.find(a)\r\n        b = self.find(b)\r\n        self.parents[a] = b\r\n        return a, b\r\n\r\n\r\ndef z(s):\r\n    zf = [0] * len(s)\r\n    l = 0\r\n    r = 0\r\n    for i in range(1, len(s)):\r\n        zf[i] = max(0, min(r - i, zf[i - l]))\r\n        while i + zf[i] < len(s) and s[zf[i]] == s[i + zf[i]]:\r\n            zf[i] += 1\r\n        if i + zf[i] > r:\r\n            l = i\r\n            r = i + zf[i]\r\n    return zf\r\n\r\n\r\ndef lcs(a, b):\r\n    guinness = [[0 for _ in range(len(a) + 1)] for _ in range(len(b) + 1)]\r\n\r\n    for i in range(1, len(a) + 1):\r\n        for j in range(1, len(b) + 1):\r\n            if a[i - 1] == b[j - 1]:\r\n                guinness[i][j] = guinness[i - 1][j - 1] + 1\r\n            else:\r\n                guinness[i][j] = max(guinness[i - 1][j], guinness[i][j - 1])\r\n\r\n\r\nclass Trie:\r\n    def __init__(self):\r\n        self.nt = [None] * 26\r\n        self.end = False\r\n\r\n    def insert(self, w):\r\n        if not w:\r\n            self.end = True\r\n            return\r\n        if not self.nt[ord(w[0]) - ord('a')]:\r\n            self.nt[ord(w[0]) - ord('a')] = Trie()\r\n        self.nt[ord(w[0]) - ord('a')].insert(w[1:])\r\n\r\n    def __contains__(self, w):\r\n        if not w:\r\n            return self.end\r\n        if self.nt[ord(w[0]) - ord('a')] is None:\r\n            return False\r\n        return w[1:] in self.nt[ord(w[0]) - ord('a')]\r\n\r\n\r\nclass ST:\r\n    def __init__(self, arr, f=operator.add, neutral=0):\r\n        self.arr = [neutral] * len(arr) + arr\r\n        self.n = len(arr)\r\n        self.f = f\r\n        self.neutral = neutral\r\n        for i in range(self.n - 1, 0, -1):\r\n            self.arr[i] = f(self.arr[i // 2], self.arr[(i // 2) | 1])\r\n\r\n    def update(self, p, v):\r\n        self.arr[p + self.n] = v\r\n        p += self.n\r\n        i = p\r\n        while i > 1:\r\n            self.arr[i // 2] = self.f(self.arr[i], self.arr[i ^ 1])\r\n            i //= 2\r\n\r\n    def query(self, l, r):\r\n        res = 0\r\n        l += self.n\r\n        r += self.n\r\n        while l < r:\r\n            if l % 2 == 1:\r\n                res = self.f(res, self.arr[l])\r\n                l += 1\r\n            if r % 2 == 1:\r\n                r -= 1\r\n                res = self.f(res, self.arr[r])\r\n            l //= 2\r\n            r //= 2\r\n        return res\r\n\r\n\r\n\r\ndef ints():\r\n    return list(map(int, input().split()))\r\n\r\n\r\ndef int1():\r\n    return int(input())\r\n\r\n\r\nyes = 'YES'\r\nno = 'NO'\r\nyn = lambda condition: yes if condition else no\r\n\r\n\r\ndef dprint(*args, sep=' ', end='\\n'):\r\n    if debug:\r\n        print('DEBUG: ' + sep.join(map(str, args)), end=end)\r\n\r\n\r\ndef cton(c):\r\n    return ord(c) - ord('a')\r\n\r\n\r\ndef ntoc(n):\r\n    return chr(n + ord('a'))\r\n\r\nif debug:\r\n    abracadabra = time.time()\r\n\r\n########################################################################\r\n\r\n\r\ncount = int1()\r\n\r\nfor question in range(count):\r\n    n = int1()\r\n\r\n    arr = ints()\r\n\r\n    d = dict()\r\n\r\n    for i in range(n):\r\n        for j in range(i + 1, n):\r\n            d[(j, arr[j] - arr[i])] = d.get((i, arr[j] - arr[i]), 1) + 1\r\n    print(max(d.values()))\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n#########################################################################\r\n\r\nif debug:\r\n    print(f'\\n\\nTIME: {time.time() - abracadabra}')\r\n    sys.stdin.close()\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "anss = []\r\nfor x in range(int(input())):\r\n    n = int(input())\r\n    lst = list(map(int, input().split()))\r\n    mx = 0\r\n    for i in range(n-1):\r\n        for j in range(i+1, n-1):\r\n            ans = 2\r\n            f, x = lst[i] - lst[j], lst[i]\r\n            while x < lst[-1]:\r\n                if x+f in lst:\r\n                    ans += 1\r\n                    x += f\r\n                else:\r\n                    break\r\n            mx = ans if ans > mx else mx\r\n    anss.append(mx)\r\nfor i in anss: print(i)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "anss = []\r\nfor x in range(int(input())):\r\n    n = int(input())\r\n    lst = list(map(int, input().split()))\r\n    mx = 1\r\n    for i in range(n-1):\r\n        for j in range(i+1, n-1):\r\n            ans = 2\r\n            f, x = lst[i] - lst[j], lst[i]\r\n            while x < lst[-1]:\r\n                if x+f in lst:\r\n                    ans += 1\r\n                    x += f\r\n                else:\r\n                    break\r\n            mx = ans if ans > mx else mx\r\n\r\n    print(mx)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "anss = []\r\nfor x in range(int(input())):\r\n    n = int(input())\r\n    lst = list(map(int, input().split()))\r\n    mx = 0\r\n    for i in range(n-1):\r\n        for j in range(i+1, n-1):\r\n            ans = 2\r\n            f, x = lst[i] - lst[j], lst[i]\r\n            while x < lst[-1]:\r\n                if x+f in lst:\r\n                    ans += 1\r\n                    x += f\r\n                else:\r\n                    break\r\n            mx = ans if ans > mx else mx\r\n\r\n    print(mx)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "anss = []\r\nfor x in range(int(input())):\r\n    n = int(input())\r\n    lst = list(map(int, input().split()))\r\n    mx = 0\r\n    for i in range(n-1):\r\n        for j in range(i+1, n-1):\r\n            ans = 1\r\n            f, x = lst[i] - lst[j], lst[i]\r\n            while x < lst[-1]:\r\n                if x+f in lst:\r\n                    ans += 1\r\n                    x += f\r\n                else:\r\n                    break\r\n            mx = ans if ans > mx else mx\r\n\r\n    print(mx)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "for x in range(int(input())):\r\n    n = int(input())\r\n    lst = list(map(int, input().split()))\r\n    mx = 2\r\n    for i in range(n-1):\r\n        for j in range(i+1, n-1):\r\n            ans = 2\r\n            f, x = lst[i] - lst[j], lst[i]\r\n            while x < lst[-1]:\r\n                if x+f in lst:\r\n                    ans += 1\r\n                    x += f\r\n                else:\r\n                    break\r\n            mx = ans if ans > mx else mx\r\n    print(mx)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "for i in range(int(input())):\r\n    n = int(input())\r\n    lst = list(map(int, input().split()))\r\n    mx = 2\r\n    for i in range(n-1):\r\n        for j in range(i+1, n-1):\r\n            ans = 2\r\n            f, x = lst[i] - lst[j], lst[i]\r\n            while x < lst[-1]:\r\n                if x+f in lst:\r\n                    ans += 1\r\n                    x += f\r\n                else:\r\n                    break\r\n            mx = ans if ans > mx else mx\r\n    print(mx)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "for i in range(int(input())):\r\n    n = int(input())\r\n    lst = list(map(int, input().split()))\r\n    mx = 2\r\n    for i in range(1, n-2):\r\n        ans = 2\r\n        f, x = lst[i] - lst[0], lst[i]\r\n        while x < lst[-1]:\r\n            if x+f in lst:\r\n                ans += 1\r\n                x += f\r\n            else:\r\n                break\r\n        mx = ans if ans > mx else mx\r\n    print(mx)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "for i in range(int(input())):\r\n    n = int(input())\r\n    lst = list(map(int, input().split()))\r\n    f, x = lst[1] - lst[0], lst[1]\r\n    ans = 2\r\n    while x < lst[-1]:\r\n        if x+f in lst:\r\n            ans += 1\r\n            x += f\r\n        else:\r\n            break\r\n    print(ans)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n#define pb push_back\r\n#define loop(i, l, n) for(ll i = l; i < n; i++)\r\n#define bloop(i, n, l) for(ll i = n; i > ll(l); i--)\r\ntypedef long long ll;\r\ntypedef __int128_t fbl;\r\n\r\n// ----------- //\r\n\r\n\r\nint main()\r\n{\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    // ------------------ //\r\n    ll t;\r\n    cin >> t;\r\n    loop(_, 0, t){\r\n        ll n;\r\n        cin >> n;\r\n        vector<ll> a;\r\n        ll x; cin >> x;\r\n        loop(i, 0, n - 1){\r\n            ll b; cin >> b;\r\n            a.pb(b - x);\r\n        }\r\n        ll mx = 0;\r\n        loop(i, 0, n - 1){\r\n            ll j = 1;\r\n            ll cnt = 1;\r\n            while(a[i] * j <= a[n-2]){\r\n                j++;\r\n                if (find(a.begin(), a.end(), a[i] * j) != a.end()) cnt++;\r\n            }\r\n            mx = max(mx, cnt);\r\n        }\r\n        cout << mx + 1 << '\\n';\r\n    }\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n\r\n#define pb push_back\r\n#define fi first\r\n#define se second\r\n\r\nusing namespace std;\r\nusing ll = long long;\r\nusing ld = long double;\r\n\r\nvoid slve() {\r\n    int n;\r\n    cin >> n;\r\n\r\n    vector <int> a(n);\r\n\r\n    unordered_map <int, int> mp;\r\n\r\n    for (int i = 0; i < n; ++i) {\r\n        cin >> a[i];\r\n\r\n        mp[a[i]] = 1;\r\n    }\r\n\r\n    int res = 0; \r\n\r\n    for (int i = 0; i < n; ++i) {\r\n        for (int j = i + 1; j < n; ++j) {\r\n            int cnt = 2;\r\n\r\n            int m = a[j] - a[i];\r\n            int now = a[j];\r\n\r\n            while (mp[now + m] == 1) {\r\n                now += m;\r\n                ++cnt;\r\n            }\r\n            \r\n            res = max(res, cnt);\r\n        }\r\n    }\r\n\r\n    cout << res << \"\\n\";\r\n}\r\n\r\nint main() {\r\n    int q;\r\n    cin >> q;\r\n\r\n    while (q--) {\r\n        slve();\r\n    }\r\n\r\n    return 0;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n\r\n#define pb push_back\r\n#define fi first\r\n#define se second\r\n\r\nusing namespace std;\r\nusing ll = long long;\r\nusing ld = long double;\r\n\r\nvoid slve() {\r\n    int n;\r\n    cin >> n;\r\n\r\n    vector <ll> a(n);\r\n\r\n    unordered_map <ll, int> mp;\r\n\r\n    for (int i = 0; i < n; ++i) {\r\n        cin >> a[i];\r\n\r\n        mp[a[i]] = 1;\r\n    }\r\n\r\n    int res = 0; \r\n\r\n    for (int i = 0; i < n; ++i) {\r\n        for (int j = i + 1; j < n; ++j) {\r\n            int cnt = 2;\r\n\r\n            ll m = a[j] - a[i];\r\n            ll now = a[j];\r\n\r\n            while (mp[now + m] >= 1) {\r\n                now += m;\r\n                ++cnt;\r\n            }\r\n            \r\n            res = max(res, cnt);\r\n        }\r\n    }\r\n\r\n    cout << res << \"\\n\";\r\n}\r\n\r\nint main() {\r\n    int q;\r\n    cin >> q;\r\n\r\n    while (q--) {\r\n        slve();\r\n    }\r\n\r\n    return 0;\r\n}",
                "verdict": "Runtime Error"
            }
        ]
    },
    {
        "task_id": 52,
        "description": "\u041f\u043e \u043c\u043d\u043e\u0433\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u043c \u043f\u0440\u043e\u0441\u044c\u0431\u0430\u043c \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 NFT \u0438\u0437 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0430 \u0443\u0431\u0440\u0430\u043b\u0438 \u043a\u043d\u043e\u043f\u043a\u0443 *\u0421\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u043a\u0430\u043a*, \u0430 \u0438\u0437 \u043d\u043e\u0432\u044b\u0445 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440 \u0443\u0431\u0440\u0430\u043b\u0438 \u043a\u043b\u0430\u0432\u0438\u0448\u0443 *Print Screen*. \u0422\u0435\u043f\u0435\u0440\u044c \u0441\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c NFT, \u0443\u0432\u044b, \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u2013 \u043e\u043d\u0438 \u0441\u0442\u0430\u043b\u0438 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u043c\u0438 \u043d\u0435\u0432\u0437\u0430\u0438\u043c\u043e\u0437\u0430\u043c\u0435\u043d\u044f\u0435\u043c\u044b\u043c\u0438 \u0442\u043e\u043a\u0435\u043d\u0430\u043c\u0438. \u0425\u043e\u0442\u044f, \u043f\u043e \u0441\u0443\u0442\u0438, \u0432\u0441\u0451 \u0435\u0449\u0451 \u043e\u0441\u0442\u0430\u044e\u0442\u0441\u044f \u043f\u0440\u043e\u0441\u0442\u043e \u043a\u0430\u0440\u0442\u0438\u043d\u043a\u0430\u043c\u0438 \u0438\u0437 $n \\times m$ \u043f\u0438\u043a\u0441\u0435\u043b\u0435\u0439.\n\n\u0417\u0430\u0442\u043e \u0418\u0432\u0430\u043d \u043d\u0430\u0448\u0451\u043b \u0432 \u0431\u043b\u043e\u043a\u0447\u0435\u0439\u043d\u0435 \u0443\u044f\u0437\u0432\u0438\u043c\u043e\u0441\u0442\u044c, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c NFT, \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u0442\u044b \u0432\u043b\u0430\u0434\u0435\u0435\u0448\u044c, \u043a\u0430\u043a \u0443\u0433\u043e\u0434\u043d\u043e \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u0432\u0438\u0432 \u043f\u0438\u0441\u043a\u0435\u043b\u0438 \u0432 \u043d\u0451\u043c. \u042d\u0442\u043e \u043e\u0442\u043a\u0440\u044b\u043b\u043e \u043f\u043e\u0442\u0440\u044f\u0441\u0430\u044e\u0449\u0443\u044e \u0441\u0445\u0435\u043c\u0443 \u0437\u0430\u0440\u0430\u0431\u043e\u0442\u043a\u0430: \u0418\u0432\u0430\u043d \u043f\u043e\u043a\u0443\u043f\u0430\u0435\u0442 \u0434\u0435\u0448\u0435\u0432\u043e\u0435 NFT, \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0435\u0435 \u0441\u043e\u0431\u043e\u0439 \u043a\u0430\u0448\u0443 \u0438\u0437 \u043f\u0438\u043a\u0441\u0435\u043b\u0435\u0439, \u0430 \u0437\u0430\u0442\u0435\u043c \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u0438\u043a\u0441\u0435\u043b\u0438 \u0442\u0430\u043a, \u0447\u0442\u043e\u0431\u044b \u043e\u043d\u043e \u0431\u044b\u043b\u043e \u043f\u043e\u0445\u043e\u0436\u0435 \u043d\u0430 \u0434\u0440\u0443\u0433\u043e\u0435, \u0434\u043e\u0440\u043e\u0433\u043e\u0435 NFT.\n\n\u041a\u0430\u0436\u0434\u044b\u0439 \u043f\u0438\u043a\u0441\u0435\u043b\u044c \u0432 NFT \u043e\u043a\u0440\u0430\u0448\u0435\u043d \u0432 \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u0446\u0432\u0435\u0442 \u043e\u0442 $1$ \u0434\u043e $10^9$. \u041f\u0438\u043a\u0441\u0435\u043b\u044c\u043d\u0430\u044f \u0440\u0430\u0437\u043d\u0438\u0446\u0430 \u0434\u0432\u0443\u0445 NFT \u2013 \u044d\u0442\u043e \u0441\u0443\u043c\u043c\u0430 \u0440\u0430\u0437\u043d\u0438\u0446 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0446\u0432\u0435\u0442\u043e\u0432 \u043d\u0430 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u0445 \u043f\u043e\u0437\u0438\u0446\u0438\u044f\u0445 \u043f\u043e \u043c\u043e\u0434\u0443\u043b\u044e. \n\n\u0423 \u0418\u0432\u0430\u043d\u0430 \u0435\u0441\u0442\u044c NFT $b$. \u041d\u0430\u0439\u0434\u0438\u0442\u0435, \u043a\u0430\u043a \u043e\u043d \u0434\u043e\u043b\u0436\u0435\u043d \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043f\u0438\u043a\u0441\u0435\u043b\u0438 \u0432 \u0441\u0432\u043e\u0451\u043c NFT, \u0447\u0442\u043e\u0431\u044b \u0435\u0433\u043e \u043f\u0438\u043a\u0441\u0435\u043b\u044c\u043d\u0430\u044f \u0440\u0430\u0437\u043d\u0438\u0446\u0430 \u0441 NFT $a$ \u0431\u044b\u043b\u0430 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u0430.\u0412 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0447\u0438\u0441\u043b\u0430 $n$ \u0438 $m$ ($1 \\le n, m \\le 500$) \u2013 \u0448\u0438\u0440\u0438\u043d\u0430 \u0438 \u0432\u044b\u0441\u043e\u0442\u0430 NFT.\n\n\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 $n$ \u0441\u0442\u0440\u043e\u043a\u0430\u0445 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u043f\u043e $m$ \u0447\u0438\u0441\u0435\u043b. $j$-\u0442\u043e\u0435 \u0447\u0438\u0441\u043b\u043e $i$-\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 - \u044d\u0442\u043e \u0446\u0432\u0435\u0442 \u043a\u043b\u0435\u0442\u043a\u0438 $(i,j)$ \u0432 NFT $a$, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0431\u0443\u0434\u0435\u0442 \u043f\u043e\u0434\u0434\u0435\u043b\u044b\u0432\u0430\u0442\u044c \u0418\u0432\u0430\u043d.\n\n\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 $n$ \u0441\u0442\u0440\u043e\u043a\u0430\u0445 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u043f\u043e $m$ \u0447\u0438\u0441\u0435\u043b. $j$-\u0442\u043e\u0435 \u0447\u0438\u0441\u043b\u043e $i$-\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 - \u044d\u0442\u043e \u0446\u0432\u0435\u0442 \u043a\u043b\u0435\u0442\u043a\u0438 $(i,j)$ \u0432 NFT $b$, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043a\u0443\u043f\u0438\u043b \u0441\u0435\u0431\u0435 \u0418\u0432\u0430\u043d.\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e \u2013 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u0443\u044e \u043f\u0438\u043a\u0441\u0435\u043b\u044c\u043d\u0443\u044e \u0440\u0430\u0437\u043d\u0438\u0446\u0443.\n\n\u0417\u0430\u0442\u0435\u043c \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 $n$ \u0441\u0442\u0440\u043e\u043a \u043f\u043e $m$ \u0447\u0438\u0441\u0435\u043b, \u0433\u0434\u0435 $j$-\u0442\u043e\u0435 \u0447\u0438\u0441\u043b\u043e $i$-\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u2013 \u044d\u0442\u043e \u043d\u043e\u043c\u0435\u0440 \u043f\u0438\u043a\u0441\u0435\u043b\u044f \u0438\u0437 \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e\u0433\u043e NFT, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u043d\u0430 \u043f\u043e\u0437\u0438\u0446\u0438\u044e $(i, j)$. \u041d\u043e\u043c\u0435\u0440 \u043f\u0438\u043a\u0441\u0435\u043b\u044f \u043d\u0430 \u043f\u043e\u0437\u0438\u0446\u0438\u0438 $(x, y)$ \u0440\u0430\u0432\u0435\u043d $x \\cdot m + y + 1$ \u043f\u0440\u0438 \u0438\u043d\u0434\u0435\u043a\u0441\u0430\u0446\u0438\u0438 \u0441 \u043d\u0443\u043b\u044f.\n\n\u0415\u0441\u043b\u0438 \u043e\u0442\u0432\u0435\u0442\u043e\u0432 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e, \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043b\u044e\u0431\u043e\u0439.",
        "solutions": [
            {
                "code": "import sys\ninput = sys.stdin.readline\nn, m = map(int, input().split())\na = []\nb = []\nfor i in range(n):\n    a.extend(list(map(int, input().split())))\nfor i in range(n*m):\n    a[i] = [a[i], i+1]\na.sort()\nfor i in range(n*m):\n    a[i].append(i)\na.sort(key=lambda x:x[1])\nfor i in range(n):\n    b.extend(list(map(int, input().split())))\nfor i in range(n*m):\n    b[i] = (b[i], i+1)\nb.sort()\nANS=[[0 for i in range(m)] for j in range(n)]\nans = 0\nfor i in range(n):\n    for j in range(m):\n        ans += abs(a[i*m+j][0]-b[a[i*m+j][2]][0])\n        ANS[i][j]=(b[a[i*m+j][2]][1])\nprint(ans)\nfor i in ANS:\n    print(*i)\n",
                "verdict": "Pending"
            },
            {
                "code": "#include <bits/extc++.h>\n#define int int64_t\n\nusing namespace std;\nusing namespace __gnu_pbds;\n\nmt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());\n\ntemplate<typename T>\nusing orset = tree<T, null_type, less<>, rb_tree_tag, tree_order_statistics_node_update>;\n\nconst int N = 500;\n\nint n, m;\nint a[N][N], ans[N][N];\nmultiset<int> s;\n\nint32_t main() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    cin >> n >> m;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++)\n            cin >> a[i][j];\n    }\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            int x;\n            cin >> x;\n            s.insert(x);\n        }\n    }\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            auto it = s.begin();\n            int cur = -1;\n            while (it != s.end()) {\n                if (cur == -1 || abs(cur - a[i][j]) > abs(*it - a[i][j])) {\n                    cur = *it;\n                }\n                it++;\n            }\n            ans[i][j] = cur;\n            s.erase(s.find(cur));\n        }\n    }\n    int res = 0;\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            res += abs(a[i][j] - ans[i][j]);\n        }\n    }\n    cout << res << '\\n';\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            cout << ans[i][j] << ' ';\n        }\n        cout << '\\n';\n    }\n}\n",
                "verdict": "Unknown Verdict (8)"
            },
            {
                "code": "import sys\ninput = sys.stdin.readline\nn, m = map(int, input().split())\na = []\nb = []\nfor i in range(n):\n    a.extend(list(map(int, input().split())))\nfor i in range(n*m):\n    a[i] = [a[i], i+1]\na.sort()\nfor i in range(n*m):\n    a[i].append(i)\na.sort(key=lambda x:x[1])\nfor i in range(n):\n    b.extend(list(map(int, input().split())))\nfor i in range(n*m):\n    b[i] = (b[i], i+1)\nb.sort()\nANS=[[0 for i in range(m)] for j in range(n)]\nans = 0\nfor i in range(n):\n    for j in range(m):\n        ans += abs(a[i*m+j][0]-b[a[i*m+j][2]][0])\n        ANS[i][j]=(b[a[i*m+j][2]][1])\nprint(ans)\nfor i in ANS:\n    print(*i)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "import sys\ninput = sys.stdin.readline\nn, m = map(int, input().split())\na = []\nb = []\nfor i in range(n):\n    a.extend(list(map(int, input().split())))\nfor i in range(n*m):\n    a[i] = [a[i], i+1]\na.sort()\nfor i in range(n*m):\n    a[i].append(i)\na.sort(key=lambda x:x[1])\nfor i in range(n):\n    b.extend(list(map(int, input().split())))\nfor i in range(n*m):\n    b[i] = (b[i], i+1)\nb.sort()\nANS=[[0 for i in range(m)] for j in range(n)]\nans = 0\nfor i in range(n):\n    for j in range(m):\n        ans += abs(a[i*m+j][0]-b[a[i*m+j][2]][0])\n        ANS[i][j]=(b[a[i*m+j][2]][1])\nprint(ans)\nfor i in ANS:\n    print(*i)\n",
                "verdict": "Pending"
            },
            {
                "code": "import sys\ninput = sys.stdin.readline\nn, m = map(int, input().split())\na = []\nb = []\nfor i in range(n):\n    a.extend(list(map(int, input().split())))\nfor i in range(n*m):\n    a[i] = [a[i], i+1]\na.sort()\nfor i in range(n*m):\n    a[i].append(i)\na.sort(key=lambda x:x[1])\nfor i in range(n):\n    b.extend(list(map(int, input().split())))\nfor i in range(n*m):\n    b[i] = (b[i], i+1)\nb.sort()\nANS=[[0 for i in range(m)] for j in range(n)]\nans = 0\nfor i in range(n):\n    for j in range(m):\n        ans += abs(a[i*m+j][0]-b[a[i*m+j][2]][0])\n        ANS[i][j]=(b[a[i*m+j][2]][1])\nprint(ans)\nfor i in ANS:\n    print(*i)\n",
                "verdict": "Pending"
            },
            {
                "code": "n, m = map(int, input().split())\na = []\nb = []\nfor i in range(n):\n    a.extend(list(map(int, input().split())))\nfor i in range(n*m):\n    a[i] = [a[i], i+1]\na.sort()\nfor i in range(n*m):\n    a[i].append(i)\na.sort(key=lambda x:x[1])\nfor i in range(n):\n    b.extend(list(map(int, input().split())))\nfor i in range(n*m):\n    b[i] = (b[i], i+1)\nb.sort()\nANS=[[0 for i in range(m)] for j in range(n)]\nans = 0\nfor i in range(n):\n    for j in range(m):\n        ans += abs(a[i*m+j][0]-b[a[i*m+j][2]][0])\n        ANS[i][j]=(b[a[i*m+j][2]][1])\nprint(ans)\nfor i in ANS:\n    print(*i)\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, m = map(int, input().split())\na = []\nb = []\nfor i in range(n):\n    a.extend(list(map(int, input().split())))\nfor i in range(n*m):\n    a[i] = (a[i], i+1)\na.sort()\nfor i in range(n):\n    b.extend(list(map(int, input().split())))\nfor i in range(n*m):\n    b[i] = (b[i], i+1)\nb.sort()\nfor i in range(n):\n    for j in range(m):\n        print(a[b[m*i+j][1]-1][1],end=\" \")\n    print()\n",
                "verdict": "Unknown Verdict (8)"
            },
            {
                "code": "#pragma ide diagnostic ignored \"cert-err58-cpp\"\n#pragma ide diagnostic ignored \"modernize-use-emplace\"\n#pragma ide diagnostic ignored \"cppcoreguidelines-narrowing-conversions\"\n#ifdef DEBUG\n#define _GLIBCXX_DEBUG\n#else\n#define NDEBUG\n#endif\n\n#include <bits/stdc++.h>\n#include <bits/extc++.h>\n\n#include <random>\n//#include <string>\n//#include <map>\n//#include <iostream>\n//#include <ext/pb_ds/assoc_container.hpp>\n\n#ifndef DEBUG\n//#pragma GCC optimize(\"-ffast-math\")\n////#pragma GCC target(\"avx2\")\n//#pragma GCC optimization(\"Ofast\")\n//#pragma GCC optimization(\"unroll-loops\")\n#endif\n\nusing namespace std;\n\nusing ll = long long;\nusing ull = unsigned long long;\nusing ld = long double;\nusing ii = pair<ll, ll>;\n\nusing vb = vector<bool>;\nusing vi = vector<ll>;\nusing vii = vector<ii>;\nusing vc = vector<char>;\n\nusing vvi = vector<vi>;\nusing vvb = vector<vb>;\nusing vvc = vector<vc>;\nusing vsi = vector<set<ll>>;\nusing vmsi = vector<multiset<ll>>;\nusing vvii = vector<vii>;\ntemplate<typename T>\nusing vv = vector<vector<T>>;\n\nusing iii = tuple<ll, ll, ll>;\nusing iiii = tuple<ll, ll, ll, ll>;\nusing v3i = vector<iii>;\nusing v4i = vector<iiii>;\n\n//const ll inf = 1e18;\n\n#ifndef DEBUG\n// interactive\n//#define endl '\\n'\n#else\n#endif\n\nauto solve() -> void;\n\nauto init() -> void;\n\nextern bool enable_multitests;\n\nauto main() -> int {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  cout.setf(ios::fixed);\n  cout.precision(10);\n\n#ifdef DEBUG\n  cerr << \"multitest: \" << enable_multitests << endl;\n  cerr << \"--------------\" << endl;\n#endif\n\n  ll case_count = 1;\n  ll case_id = 1;\n  if (enable_multitests) {\n    cin >> case_count;\n  }\n  init();\n  while (case_count--) {\n//    if (enable_multitests)\n//      cout << \"Case #\" << case_id << \": \";\n    solve();\n    ++case_id;\n  }\n}\n\n#ifndef DEBUG\nmt19937_64 random_generator = mt19937_64(random_device()());\n#else\nmt19937_64 random_generator = mt19937_64(1337); // NOLINT(cert-msc51-cpp,cert-err58-cpp)\n#endif\n\ninline ll rnd(ll a, ll b) {\n  ll x = random_generator();\n  x %= b - a + 1;\n  x += a;\n  return x;\n}\n\nextern const ll mod;\n\ntemplate<typename T>\nT modpow(T base, T exp) {\n  T modulus = mod;\n  base %= modulus;\n  T result = 1;\n  while (exp > 0) {\n    if (exp & 1) result = (result * base) % modulus;\n    base = (base * base) % modulus;\n    exp >>= 1;\n  }\n  return result;\n}\n\ntemplate<typename T>\nT mod_invert(T a) {\n  if (a < 1 or mod < 2)\n    return -1;\n\n  T u1 = mod;\n  T u2 = 0;\n  T v1 = a;\n  T v2 = 1;\n\n  while (v1 != 0) {\n    T q = u1 / v1;\n    T t1 = u1 - q * v1;\n    T t2 = u2 - q * v2;\n    u1 = v1;\n    u2 = v2;\n    v1 = t1;\n    v2 = t2;\n  }\n\n  return u1 == 1 ? (u2 + mod) % mod : -1;\n}\n\ntemplate<typename A, typename B>\nostream &operator<<(ostream &s, const pair<A, B> &self) {\n  s << \"{\" << self.first << \", \" << self.second << \"}\";\n  return s;\n}\n\ntemplate<typename T>\nostream &operator<<(ostream &s, const vector<T> &self) {\n  for (auto e : self) {\n    s << e << ' ';\n  }\n  return s;\n}\n\ntemplate<typename A, typename B>\nistream &operator>>(istream &s, pair<A, B> &self) {\n  s >> self.first >> self.second;\n  return s;\n}\n\ntemplate<typename T>\nistream &operator>>(istream &s, tuple<T, T, T> &self) {\n  s >> get<0>(self) >> get<1>(self) >> get<2>(self);\n  return s;\n}\n\ntemplate<typename T>\nistream &operator>>(istream &s, tuple<T, T, T, T> &self) {\n  s >> get<0>(self) >> get<1>(self) >> get<2>(self) >> get<3>(self);\n  return s;\n}\n\ntemplate<typename T>\nistream &operator>>(istream &s, vector<T> &self) {\n  for (int i = 0; i < self.size(); ++i) {\n    s >> self[i];\n  }\n  return s;\n}\n\n// \u0432\u0440\u043e\u0434\u0435 \u0442\u0430\u043a\n#if __cplusplus >= 201700L\ntemplate<typename Key, typename Value, typename Comp=less<>>\nusing ordered_map = __gnu_pbds::tree<Key,\n                                     Value,\n                                     Comp,\n                                     __gnu_pbds::rb_tree_tag,\n                                     __gnu_pbds::tree_order_statistics_node_update>;\n\ntemplate<typename T, typename Comp=less<>>\nusing ordered_set = ordered_map<T, __gnu_pbds::null_type, Comp>;\n\n//template<typename T>\n//inline void print_one(T arg) {\n//  cout << arg << ' ';\n//}\n//\n//template<typename... T>\n//inline void print_(T&& ... args) {\n//  (print_one(args), ...);\n//  cout << endl;\n//}\n\n//#define print(...) print_(__VA_ARGS__)\n\n#else\n#define gcd __gcd\n#endif // __cplusplus\n\ntemplate<class T>\nvoid prl(const T &t) {\n  cout << t << endl;\n}\n\nbool is_prime(ll x) {\n  for (int i = 2; i * i <= x; ++i) {\n    if (x % i == 0) return false;\n  }\n  return true;\n}\n\nstruct pair_hash {\n  template<class T1, class T2>\n  std::size_t operator()(const std::pair<T1, T2> &p) const {\n    auto h1 = std::hash<T1>{}(p.first);\n    auto h2 = std::hash<T2>{}(p.second);\n\n    // Mainly for demonstration purposes, i.e. works but is overly simple\n    // In the real world, use sth. like boost.hash_combine\n    return h1 ^ h2;\n  }\n};\n\n#define RETURN_NO return prl(\"NO\")\n#define RETURN_YES return prl(\"YES\")\n#define RETURN_YESNO(expr) return prl((expr) ? \"YES\" : \"NO\")\n#define RETURN(expr) return prl((expr))\n\n#define X(...) __VA_ARGS__.first\n#define Y(...) __VA_ARGS__.second\n\n#define todo static_assert(false);\n\n// -----\n\nbool enable_multitests = false;\n\nconstexpr ll mod = 1e9 + 7;\n\nauto init() -> void {}\n\n// ----\n\n//using i128 = __int128_t;\n\nauto solve() -> void {\n  ll n, m;\n  cin >> n >> m;\n  vvi a(n, vi(m));\n  vvi b(n, vi(m));\n  cin >> a >> b;\n  vi index_of_a(n * m);\n  vi a2(n * m), b2(n * m);\n  for (int i = 0; i < n * m; ++i) {\n    a2[i] = i;\n    b2[i] = b[i / m][i % m];\n  }\n  sort(b2.begin(), b2.end());\n  sort(a2.begin(), a2.end(), [&a, m](ll f, ll s) {\n    return a[f / m][f % m] < a[s / m][s % m];\n  });\n\n  for (int i = 0; i < n * m; ++i) {\n    index_of_a[a2[i]] = i;\n  }\n\n  ll ans = 0;\n  for (int i = 0; i < n; ++i) {\n    for (int j = 0; j < m; ++j) {\n      ll id = index_of_a[i * m + j];\n      ans += abs(a[i][j] - b2[id]);\n    }\n  }\n\n  cout << ans << endl;\n  for (int i = 0; i < n; ++i) {\n    for (int j = 0; j < m; ++j) {\n      cout << index_of_a[i * m + j] + 1 << ' ';\n    }\n    cout << endl;\n  }\n}\n",
                "verdict": "Unknown Verdict (8)"
            },
            {
                "code": "#pragma ide diagnostic ignored \"cert-err58-cpp\"\n#pragma ide diagnostic ignored \"modernize-use-emplace\"\n#pragma ide diagnostic ignored \"cppcoreguidelines-narrowing-conversions\"\n#ifdef DEBUG\n#define _GLIBCXX_DEBUG\n#else\n#define NDEBUG\n#endif\n\n#include <bits/stdc++.h>\n#include <bits/extc++.h>\n\n#include <random>\n//#include <string>\n//#include <map>\n//#include <iostream>\n//#include <ext/pb_ds/assoc_container.hpp>\n\n#ifndef DEBUG\n//#pragma GCC optimize(\"-ffast-math\")\n////#pragma GCC target(\"avx2\")\n//#pragma GCC optimization(\"Ofast\")\n//#pragma GCC optimization(\"unroll-loops\")\n#endif\n\nusing namespace std;\n\nusing ll = long long;\nusing ull = unsigned long long;\nusing ld = long double;\nusing ii = pair<ll, ll>;\n\nusing vb = vector<bool>;\nusing vi = vector<ll>;\nusing vii = vector<ii>;\nusing vc = vector<char>;\n\nusing vvi = vector<vi>;\nusing vvb = vector<vb>;\nusing vvc = vector<vc>;\nusing vsi = vector<set<ll>>;\nusing vmsi = vector<multiset<ll>>;\nusing vvii = vector<vii>;\ntemplate<typename T>\nusing vv = vector<vector<T>>;\n\nusing iii = tuple<ll, ll, ll>;\nusing iiii = tuple<ll, ll, ll, ll>;\nusing v3i = vector<iii>;\nusing v4i = vector<iiii>;\n\n//const ll inf = 1e18;\n\n#ifndef DEBUG\n// interactive\n//#define endl '\\n'\n#else\n#endif\n\nauto solve() -> void;\n\nauto init() -> void;\n\nextern bool enable_multitests;\n\nauto main() -> int {\n  ios_base::sync_with_stdio(false);\n  cin.tie(nullptr);\n  cout.tie(nullptr);\n  cout.setf(ios::fixed);\n  cout.precision(10);\n\n#ifdef DEBUG\n  cerr << \"multitest: \" << enable_multitests << endl;\n  cerr << \"--------------\" << endl;\n#endif\n\n  ll case_count = 1;\n  ll case_id = 1;\n  if (enable_multitests) {\n    cin >> case_count;\n  }\n  init();\n  while (case_count--) {\n//    if (enable_multitests)\n//      cout << \"Case #\" << case_id << \": \";\n    solve();\n    ++case_id;\n  }\n}\n\n#ifndef DEBUG\nmt19937_64 random_generator = mt19937_64(random_device()());\n#else\nmt19937_64 random_generator = mt19937_64(1337); // NOLINT(cert-msc51-cpp,cert-err58-cpp)\n#endif\n\ninline ll rnd(ll a, ll b) {\n  ll x = random_generator();\n  x %= b - a + 1;\n  x += a;\n  return x;\n}\n\nextern const ll mod;\n\ntemplate<typename T>\nT modpow(T base, T exp) {\n  T modulus = mod;\n  base %= modulus;\n  T result = 1;\n  while (exp > 0) {\n    if (exp & 1) result = (result * base) % modulus;\n    base = (base * base) % modulus;\n    exp >>= 1;\n  }\n  return result;\n}\n\ntemplate<typename T>\nT mod_invert(T a) {\n  if (a < 1 or mod < 2)\n    return -1;\n\n  T u1 = mod;\n  T u2 = 0;\n  T v1 = a;\n  T v2 = 1;\n\n  while (v1 != 0) {\n    T q = u1 / v1;\n    T t1 = u1 - q * v1;\n    T t2 = u2 - q * v2;\n    u1 = v1;\n    u2 = v2;\n    v1 = t1;\n    v2 = t2;\n  }\n\n  return u1 == 1 ? (u2 + mod) % mod : -1;\n}\n\ntemplate<typename A, typename B>\nostream &operator<<(ostream &s, const pair<A, B> &self) {\n  s << \"{\" << self.first << \", \" << self.second << \"}\";\n  return s;\n}\n\ntemplate<typename T>\nostream &operator<<(ostream &s, const vector<T> &self) {\n  for (auto e : self) {\n    s << e << ' ';\n  }\n  return s;\n}\n\ntemplate<typename A, typename B>\nistream &operator>>(istream &s, pair<A, B> &self) {\n  s >> self.first >> self.second;\n  return s;\n}\n\ntemplate<typename T>\nistream &operator>>(istream &s, tuple<T, T, T> &self) {\n  s >> get<0>(self) >> get<1>(self) >> get<2>(self);\n  return s;\n}\n\ntemplate<typename T>\nistream &operator>>(istream &s, tuple<T, T, T, T> &self) {\n  s >> get<0>(self) >> get<1>(self) >> get<2>(self) >> get<3>(self);\n  return s;\n}\n\ntemplate<typename T>\nistream &operator>>(istream &s, vector<T> &self) {\n  for (int i = 0; i < self.size(); ++i) {\n    s >> self[i];\n  }\n  return s;\n}\n\n// \u0432\u0440\u043e\u0434\u0435 \u0442\u0430\u043a\n#if __cplusplus >= 201700L\ntemplate<typename Key, typename Value, typename Comp=less<>>\nusing ordered_map = __gnu_pbds::tree<Key,\n                                     Value,\n                                     Comp,\n                                     __gnu_pbds::rb_tree_tag,\n                                     __gnu_pbds::tree_order_statistics_node_update>;\n\ntemplate<typename T, typename Comp=less<>>\nusing ordered_set = ordered_map<T, __gnu_pbds::null_type, Comp>;\n\n//template<typename T>\n//inline void print_one(T arg) {\n//  cout << arg << ' ';\n//}\n//\n//template<typename... T>\n//inline void print_(T&& ... args) {\n//  (print_one(args), ...);\n//  cout << endl;\n//}\n\n//#define print(...) print_(__VA_ARGS__)\n\n#else\n#define gcd __gcd\n#endif // __cplusplus\n\ntemplate<class T>\nvoid prl(const T &t) {\n  cout << t << endl;\n}\n\nbool is_prime(ll x) {\n  for (int i = 2; i * i <= x; ++i) {\n    if (x % i == 0) return false;\n  }\n  return true;\n}\n\nstruct pair_hash {\n  template<class T1, class T2>\n  std::size_t operator()(const std::pair<T1, T2> &p) const {\n    auto h1 = std::hash<T1>{}(p.first);\n    auto h2 = std::hash<T2>{}(p.second);\n\n    // Mainly for demonstration purposes, i.e. works but is overly simple\n    // In the real world, use sth. like boost.hash_combine\n    return h1 ^ h2;\n  }\n};\n\n#define RETURN_NO return prl(\"NO\")\n#define RETURN_YES return prl(\"YES\")\n#define RETURN_YESNO(expr) return prl((expr) ? \"YES\" : \"NO\")\n#define RETURN(expr) return prl((expr))\n\n#define X(...) __VA_ARGS__.first\n#define Y(...) __VA_ARGS__.second\n\n#define todo static_assert(false);\n\n// -----\n\nbool enable_multitests = false;\n\nconstexpr ll mod = 1e9 + 7;\n\nauto init() -> void {}\n\n// ----\n\n//using i128 = __int128_t;\n\nauto solve() -> void {\n  ll n, m;\n  cin >> n >> m;\n  vvi a(n, vi(m));\n  vvi b(n, vi(m));\n  cin >> a >> b;\n  vi index_of_a(n * m);\n  vi a2(n * m);\n  for (int i = 0; i < n * m; ++i) {\n    a2[i] = i;\n  }\n  sort(a2.begin(), a2.end(), [&a, m](ll f, ll s) {\n    return a[f / m][f % m] < a[s / m][s % m];\n  });\n\n  for (int i = 0; i < n * m; ++i) {\n    index_of_a[a2[i]] = i;\n  }\n\n  for (int i = 0; i < n; ++i) {\n    for (int j = 0; j < m; ++j) {\n      cout << index_of_a[i * m + j] + 1 << ' ';\n    }\n    cout << endl;\n  }\n}\n",
                "verdict": "Unknown Verdict (8)"
            },
            {
                "code": "n, m = [int(i) for i in input().split()]\nA = list()\nfor i in range(n):\n    A.append([float(j) for j in input().split()])\nB = list()\nfor i in range(n):\n    B.append([float(j) for j in input().split()])\ndef argmin(a):\n    l = [j for i in a for j in i]\n    ans = l.index(min(l))\n    return ans\n\nans = [0]*n*m\ncounter = 0\nfor _ in range(n*m):\n    miv_a = argmin(A)\n    miv_b = argmin(B)\n    ans[miv_a] = miv_b + 1\n    i_A, j_A = divmod(miv_a, n)\n    i_B, j_B = divmod(miv_b, n)\n    counter += abs(A[i_A][j_A] - B[i_B][j_B])\n    A[i_A][j_A] = float('inf')\n    B[i_B][j_B] = float('inf')\ncompare = ''\nprint(int(counter))\nans = list(map(str, ans))\nfor i in range(n):\n    s = ' '.join(ans[n*i: n*i+m])\n    if i == n-1:\n        print(s, end = '')\n    else:\n        print(s)",
                "verdict": "Unknown Verdict (8)"
            },
            {
                "code": "n, m = [int(i) for i in input().split()]\nA = list()\nfor i in range(n):\n    A.append([float(j) for j in input().split()])\nB = list()\nfor i in range(n):\n    B.append([float(j) for j in input().split()])\ndef argmin(a):\n    l = [j for i in a for j in i]\n    ans = l.index(min(l))\n    return ans\n\nans = [0]*n*m\ncounter = 0\nfor _ in range(n*m):\n    miv_a = argmin(A)\n    miv_b = argmin(B)\n    ans[miv_a] = miv_b + 1\n    i_A, j_A = divmod(miv_a, n)\n    i_B, j_B = divmod(miv_b, n)\n    counter += abs(A[i_A][j_A] - B[i_B][j_B])\n    A[i_A][j_A] = float('inf')\n    B[i_B][j_B] = float('inf')\ncompare = ''\nprint(int(counter))\nans = list(map(str, ans))\nfor i in range(n):\n    s = ' '.join(ans[n*i: n*i+m]) + ' '\n    print(s)",
                "verdict": "Unknown Verdict (8)"
            },
            {
                "code": "n, m = [int(i) for i in input().split()]\nA = list()\nfor i in range(n):\n    A.append([float(j) for j in input().split()])\nB = list()\nfor i in range(n):\n    B.append([float(j) for j in input().split()])\ndef argmin(a):\n    l = [j for i in a for j in i]\n    ans = l.index(min(l))\n    return ans\n\nans = [0]*n*m\ncounter = 0\nfor _ in range(n*m):\n    miv_a = argmin(A)\n    miv_b = argmin(B)\n    ans[miv_a] = miv_b + 1\n    i_A, j_A = divmod(miv_a, n)\n    i_B, j_B = divmod(miv_b, n)\n    counter += abs(A[i_A][j_A] - B[i_B][j_B])\n    A[i_A][j_A] = float('inf')\n    B[i_B][j_B] = float('inf')\ncompare = ''\nprint(counter)\nans = list(map(str, ans))\nfor i in range(n):\n    s = ' '.join(ans[n*i: n*i+m]) + ' '\n    print(s)",
                "verdict": "Unknown Verdict (8)"
            },
            {
                "code": "import numpy as np\n\nn, m = [int(i) for i in input().split()]\nA = np.zeros((n, m))\nfor i in range(n):\n    A[i, :] = [float(i) for i in input().split()]\nB = np.zeros((n, m))\nfor i in range(n):\n    B[i, :] = [float(i) for i in input().split()]\n\n# with open('data.txt', 'r') as f:\n#     text = f.readlines()\n# n, m = [int(i) for i in text[0].split()]\n# A = np.zeros((n, m))\n# for i in range(n):\n#     A[i, :] = [int(j) for j in text[i+1].split()]\n# B = np.zeros((n, m))\n# for i in range(n):\n#     B[i, :] = [int(j) for j in text[n+i+1].split()]\nans = np.zeros(n*m)\ncounter = 0\nfor _ in range(n*m):\n    ans[np.argmin(A)] = np.argmin(B) + 1\n    miv_A = np.argmin(A)\n    i_A, j_A = divmod(miv_A, n)\n    miv_B = np.argmin(B)\n    i_B, j_B = divmod(miv_B, n)  \n    counter += abs(A[i_A, j_A] - B[i_B, j_B])\n    A[i_A, j_A] = np.inf\n    B[i_B, j_B] = np.inf\nans = ans.reshape((n, m)).astype(np.int64)\nans = ans.astype(str)\ncompare = ''\nprint(int(counter))\ncompare += str(int(counter)) + '\\n'\nfor k, i in enumerate(ans):\n    s = ' '.join(list(i))\n    compare += s + '\\n'\n    if k == n - 1:\n        print(s, end='')\n    else:\n        print(s)",
                "verdict": "Unknown Verdict (8)"
            },
            {
                "code": "import numpy as np\n\nn, m = [int(i) for i in input().split()]\nA = np.zeros((n, m))\nfor i in range(n):\n    A[i, :] = [float(i) for i in input().split()]\nB = np.zeros((n, m))\nfor i in range(n):\n    B[i, :] = [float(i) for i in input().split()]\n\n# with open('data.txt', 'r') as f:\n#     text = f.readlines()\n# n, m = [int(i) for i in text[0].split()]\n# A = np.zeros((n, m))\n# for i in range(n):\n#     A[i, :] = [int(j) for j in text[i+1].split()]\n# B = np.zeros((n, m))\n# for i in range(n):\n#     B[i, :] = [int(j) for j in text[n+i+1].split()]\nans = np.zeros(n*m)\ncounter = 0\nfor _ in range(n*m):\n    ans[np.argmin(A)] = np.argmin(B) + 1\n    miv_A = np.argmin(A)\n    i_A, j_A = divmod(miv_A, n)\n    miv_B = np.argmin(B)\n    i_B, j_B = divmod(miv_B, n)  \n    counter += abs(A[i_A, j_A] - B[i_B, j_B])\n    A[i_A, j_A] = np.inf\n    B[i_B, j_B] = np.inf\nans = ans.reshape((n, m)).astype(np.int64)\nans = ans.astype(str)\ncompare = ''\nprint(int(counter) + ' ')\ncompare += str(int(counter)) + '\\n'\nfor k, i in enumerate(ans):\n    s = ' '.join(list(i)) + ' '\n    compare += s + '\\n'\n    print(s)",
                "verdict": "Unknown Verdict (8)"
            },
            {
                "code": "import numpy as np\n\nn, m = [int(i) for i in input().split()]\nA = np.zeros((n, m))\nfor i in range(n):\n    A[i, :] = [float(i) for i in input().split()]\nB = np.zeros((n, m))\nfor i in range(n):\n    B[i, :] = [float(i) for i in input().split()]\n\n# with open('data.txt', 'r') as f:\n#     text = f.readlines()\n# n, m = [int(i) for i in text[0].split()]\n# A = np.zeros((n, m))\n# for i in range(n):\n#     A[i, :] = [int(j) for j in text[i+1].split()]\n# B = np.zeros((n, m))\n# for i in range(n):\n#     B[i, :] = [int(j) for j in text[n+i+1].split()]\nans = np.zeros(n*m)\ncounter = 0\nfor _ in range(n*m):\n    ans[np.argmin(A)] = np.argmin(B) + 1\n    miv_A = np.argmin(A)\n    i_A, j_A = divmod(miv_A, n)\n    miv_B = np.argmin(B)\n    i_B, j_B = divmod(miv_B, n)  \n    counter += abs(A[i_A, j_A] - B[i_B, j_B])\n    A[i_A, j_A] = np.inf\n    B[i_B, j_B] = np.inf\nans = ans.reshape((n, m)).astype(np.int64)\nans = ans.astype(str)\ncompare = ''\nprint(int(counter) + ' ')\ncompare += str(int(counter)) + '\\n'\nfor k, i in enumerate(ans):\n    s = ' '.join(list(i)) + ' '\n    compare += s + '\\n'\n    print(s)",
                "verdict": "Unknown Verdict (8)"
            },
            {
                "code": "import numpy as np\n\nn, m = [int(i) for i in input().split()]\nA = np.zeros((n, m))\nfor i in range(n):\n    A[i, :] = [float(i) for i in input().split()]\nB = np.zeros((n, m))\nfor i in range(n):\n    B[i, :] = [float(i) for i in input().split()]\n\n# with open('data.txt', 'r') as f:\n#     text = f.readlines()\n# n, m = [int(i) for i in text[0].split()]\n# A = np.zeros((n, m))\n# for i in range(n):\n#     A[i, :] = [int(j) for j in text[i+1].split()]\n# B = np.zeros((n, m))\n# for i in range(n):\n#     B[i, :] = [int(j) for j in text[n+i+1].split()]\nans = np.zeros(n*m)\ncounter = 0\nfor _ in range(n*m):\n    ans[np.argmin(A)] = np.argmin(B) + 1\n    miv_A = np.argmin(A)\n    i_A, j_A = divmod(miv_A, n)\n    miv_B = np.argmin(B)\n    i_B, j_B = divmod(miv_B, n)  \n    counter += abs(A[i_A, j_A] - B[i_B, j_B])\n    A[i_A, j_A] = np.inf\n    B[i_B, j_B] = np.inf\nans = ans.reshape((n, m))\nans = ans.astype(str)\ncompare = ''\nprint(int(counter) + ' ')\ncompare += str(int(counter)) + '\\n'\nfor k, i in enumerate(ans):\n    s = ' '.join(list(i)) + ' '\n    compare += s + '\\n'\n    print(s)",
                "verdict": "Unknown Verdict (8)"
            },
            {
                "code": "import numpy as np\n\nn, m = [int(i) for i in input().split()]\nA = np.zeros((n, m))\nfor i in range(n):\n    A[i, :] = [float(i) for i in input().split()]\nB = np.zeros((n, m))\nfor i in range(n):\n    B[i, :] = [float(i) for i in input().split()]\n\n# with open('data.txt', 'r') as f:\n#     text = f.readlines()\n# n, m = [int(i) for i in text[0].split()]\n# A = np.zeros((n, m))\n# for i in range(n):\n#     A[i, :] = [int(j) for j in text[i+1].split()]\n# B = np.zeros((n, m))\n# for i in range(n):\n#     B[i, :] = [int(j) for j in text[n+i+1].split()]\nans = np.zeros(n*m)\ncounter = 0\nfor _ in range(n*m):\n    ans[np.argmin(A)] = np.argmin(B) + 1\n    miv_A = np.argmin(A)\n    i_A, j_A = divmod(miv_A, n)\n    miv_B = np.argmin(B)\n    i_B, j_B = divmod(miv_B, n)  \n    counter += abs(A[i_A, j_A] - B[i_B, j_B])\n    A[i_A, j_A] = np.inf\n    B[i_B, j_B] = np.inf\nans = ans.reshape((n, m))\nans = ans.astype(str)\ncompare = ''\nprint(int(counter) + ' ')\ncompare += str(int(counter)) + '\\n'\nfor k, i in enumerate(ans):\n    s = ' '.join(list(i))\n    compare += s + '\\n'\n    print(s)",
                "verdict": "Unknown Verdict (8)"
            },
            {
                "code": "import numpy as np\n\nn, m = [int(i) for i in input().split()]\nA = np.zeros((n, m))\nfor i in range(n):\n    A[i, :] = [float(i) for i in input().split()]\nB = np.zeros((n, m))\nfor i in range(n):\n    B[i, :] = [float(i) for i in input().split()]\n\n# with open('data.txt', 'r') as f:\n#     text = f.readlines()\n# n, m = [int(i) for i in text[0].split()]\n# A = np.zeros((n, m))\n# for i in range(n):\n#     A[i, :] = [int(j) for j in text[i+1].split()]\n# B = np.zeros((n, m))\n# for i in range(n):\n#     B[i, :] = [int(j) for j in text[n+i+1].split()]\nans = np.zeros(n*m)\ncounter = 0\nfor _ in range(n*m):\n    ans[np.argmin(A)] = np.argmin(B) + 1\n    miv_A = np.argmin(A)\n    i_A, j_A = divmod(miv_A, n)\n    miv_B = np.argmin(B)\n    i_B, j_B = divmod(miv_B, n)  \n    counter += abs(A[i_A, j_A] - B[i_B, j_B])\n    A[i_A, j_A] = np.inf\n    B[i_B, j_B] = np.inf\nans = ans.reshape((n, m))\nans = ans.astype(str)\ncompare = ''\nprint(int(counter))\ncompare += str(int(counter)) + '\\n'\nfor k, i in enumerate(ans):\n    s = ' '.join(list(i))\n    compare += s + '\\n'\n    print(s)",
                "verdict": "Unknown Verdict (8)"
            },
            {
                "code": "import numpy as np\n\n# with open('data.txt', 'r') as f:\n#     text = f.readlines()\nn, m = [int(i) for i in input().split()]\nA = np.zeros((n, m))\nfor i in range(n):\n    A[i, :] = [int(i) for i in input().split()]\nB = np.zeros((n, m))\nfor i in range(n):\n    B[i, :] = [int(i) for i in input().split()]\n    \n# n, m = [int(i) for i in text[0].split()]\n# A = np.zeros((n, m))\n# for i in range(n):\n#     A[i, :] = [int(j) for j in text[i+1].split()]\n# B = np.zeros((n, m))\n# for i in range(n):\n#     B[i, :] = [int(j) for j in text[n+i+1].split()]\nans = np.zeros(n*m)\ncounter = 0\nfor _ in range(n*m):\n    ans[np.argmin(A)] = np.argmin(B) + 1\n    miv_A = np.argmin(A)\n    i_A, j_A = divmod(miv_A, n)\n    miv_B = np.argmin(B)\n    i_B, j_B = divmod(miv_B, n)  \n    counter += abs(A[i_A, j_A] - B[i_B, j_B])\n    A[i_A, j_A] = np.inf\n    B[i_B, j_B] = np.inf\nans = ans.reshape((n, m)).astype(np.int64)\nans = ans.astype(str)\nprint(int(counter))\nfor k, i in enumerate(ans):\n    s = ' '.join(list(i))\n    print(s)",
                "verdict": "Unknown Verdict (8)"
            },
            {
                "code": "import numpy as np\n\n# with open('data.txt', 'r') as f:\n#     text = f.readlines()\nn, m = [int(i) for i in input().split()]\nA = np.zeros((n, m))\nfor i in range(n):\n    A[i, :] = [int(i) for i in input().split()]\nB = np.zeros((n, m))\nfor i in range(n):\n    B[i, :] = [int(i) for i in input().split()]\n    \n# n, m = [int(i) for i in text[0].split()]\n# A = np.zeros((n, m))\n# for i in range(n):\n#     A[i, :] = [int(j) for j in text[i+1].split()]\n# B = np.zeros((n, m))\n# for i in range(n):\n#     B[i, :] = [int(j) for j in text[n+i+1].split()]\nans = np.zeros(n*m)\ncounter = 0\nfor _ in range(n*m):\n    ans[np.argmin(A)] = np.argmin(B) + 1\n    miv_A = np.argmin(A)\n    i_A, j_A = divmod(miv_A, n)\n    miv_B = np.argmin(B)\n    i_B, j_B = divmod(miv_B, n)  \n    counter += abs(A[i_A, j_A] - B[i_B, j_B])\n    A[i_A, j_A] = np.inf\n    B[i_B, j_B] = np.inf\nans = ans.reshape((n, m)).astype(np.int64)\nprint(int(counter))\nfor k, i in enumerate(ans):\n    for j in i:\n        print(int(j), end = ' ')\n    if k == ans.shape[0] - 1:\n        pass\n    else:\n        print()",
                "verdict": "Unknown Verdict (8)"
            },
            {
                "code": "import numpy as np\n\n# with open('data.txt', 'r') as f:\n#     text = f.readlines()\nn, m = [int(i) for i in input().split()]\nA = np.zeros((n, m))\nfor i in range(n):\n    A[i, :] = [int(i) for i in input().split()]\nB = np.zeros((n, m))\nfor i in range(n):\n    B[i, :] = [int(i) for i in input().split()]\n    \n# n, m = [int(i) for i in text[0].split()]\n# A = np.zeros((n, m))\n# for i in range(n):\n#     A[i, :] = [int(j) for j in text[i+1].split()]\n# B = np.zeros((n, m))\n# for i in range(n):\n#     B[i, :] = [int(j) for j in text[n+i+1].split()]\nans = np.zeros(n*m)\ncounter = 0\nfor _ in range(n*m):\n    ans[np.argmin(A)] = np.argmin(B) + 1\n    miv_A = np.argmin(A)\n    i_A, j_A = divmod(miv_A, n)\n    miv_B = np.argmin(B)\n    i_B, j_B = divmod(miv_B, n)  \n    counter += abs(A[i_A, j_A] - B[i_B, j_B])\n    A[i_A, j_A] = np.inf\n    B[i_B, j_B] = np.inf\nans = ans.reshape((n, m)).astype(np.int64)\nprint(int(counter))\nfor i in ans:\n    for j in i:\n        print(int(j), end = ' ')\n    print()",
                "verdict": "Unknown Verdict (8)"
            },
            {
                "code": "import numpy as np\nfrom scipy.optimize import linear_sum_assignment\n\ndef min_pixel_diff(n, m, a, b):\n    cost = np.abs(a - b)\n    row_ind, col_ind = linear_sum_assignment(cost)\n    return cost[row_ind, col_ind].sum(), row_ind * m + col_ind + 1\n\nn, m = map(int, input().split())\na = np.array([list(map(int, input().split())) for _ in range(n)])\nb = np.array([list(map(int, input().split())) for _ in range(n)])\n\nmin_diff, pixels = min_pixel_diff(n, m, a, b)\nprint(min_diff)\nfor i in range(n):\n    print(' '.join(map(str, pixels[i*m:(i+1)*m])))\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "\nn, m = map(int, input().split())\n\na = []\nfor _ in range(n):\n    a.append(list(map(int, input().split())))\n\nb = []\nfor _ in range(n):\n    b.append(list(map(int, input().split())))\n\ndiff = []\nfor i in range(n):\n    for j in range(m):\n        diff.append((abs(a[i][j] - b[i][j]), i * m + j))\n\ndiff.sort()\n\nnew_nft = [0] * (n * m)\nfor i in range(n * m):\n    new_nft[diff[i][1]] = i\n\nmin_diff = sum(diff[i][0] for i in range(n * m))\n\nprint(min_diff)\nfor i in range(n):\n    for j in range(m):\n        print(new_nft[i * m + j], end=' ')\n    print()",
                "verdict": "Wrong Answer"
            }
        ]
    },
    {
        "task_id": 53,
        "description": "\u0410\u043d\u0434\u0435\u0440\u0441\u043e\u043d \u043f\u0440\u0435\u0434\u043b\u043e\u0436\u0438\u043b \u0432\u0430\u043c \u0441\u044b\u0433\u0440\u0430\u0442\u044c \u0432 \u041d\u0438\u043c \u0441 \u041f\u043e\u0434\u0432\u043e\u0445\u043e\u043c.\n\n\u041d\u0430 \u043f\u043e\u043b\u0435 \u043b\u0435\u0436\u0438\u0442 \u0442\u0440\u0438 \u043a\u0443\u0447\u043a\u0438 \u0441 $x_1$, $x_2$ \u0438 $x_3$ \u043a\u0430\u043c\u043d\u0435\u0439 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e. \u0417\u0430 \u043e\u0434\u0438\u043d \u0445\u043e\u0434 \u0438\u0433\u0440\u043e\u043a \u0434\u043e\u043b\u0436\u0435\u043d \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0438\u0437 \u043e\u0434\u043d\u043e\u0439 \u043a\u0443\u0447\u043a\u0438 \u043b\u044e\u0431\u043e\u0435 \u043d\u0435\u043d\u0443\u043b\u0435\u0432\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u0430\u043c\u043d\u0435\u0439, \u043f\u043e\u0441\u043b\u0435 \u0447\u0435\u0433\u043e \u0445\u043e\u0434 \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0438\u0442 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u0438\u043a\u0443. \u041f\u043e\u0431\u0435\u0436\u0434\u0430\u0435\u0442 \u0438\u0433\u0440\u043e\u043a, \u043f\u043e\u0441\u043b\u0435 \u0445\u043e\u0434\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043d\u0435 \u043e\u0441\u0442\u0430\u043b\u043e\u0441\u044c \u043a\u0430\u043c\u043d\u0435\u0439.\n\n\u0420\u0430\u0437\u043d\u0438\u0446\u0430 \u0441 \u043e\u0431\u044b\u0447\u043d\u044b\u043c \u041d\u0438\u043c\u043e\u043c \u0432 \u0442\u043e\u043c, \u0447\u0442\u043e \u0438\u0433\u0440\u043e\u043a\u0430\u043c \u043d\u0435\u043b\u044c\u0437\u044f \u0445\u043e\u0434\u0438\u0442\u044c \u0442\u0430\u043a, \u0447\u0442\u043e\u0431\u044b \u043f\u043e\u0441\u043b\u0435 \u0438\u0445 \u0445\u043e\u0434\u0430 \u043d\u0430 \u043f\u043e\u043b\u0435 \u0431\u044b\u043b\u0438 \u043a\u0443\u0447\u043a\u0438 \u0441 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u043a\u0430\u043c\u043d\u0435\u0439 (\u0441\u0447\u0438\u0442\u0430\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u0435\u0441\u043b\u0438 \u0432 \u043a\u0443\u0447\u043a\u0435 0 \u043a\u0430\u043c\u043d\u0435\u0439, \u0442\u043e \u043e\u043d\u0430 \u0443\u0436\u0435 \u043d\u0435 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043d\u0430 \u043f\u043e\u043b\u0435).\n\n\u0412\u044b \u043f\u044b\u0442\u0430\u0435\u0442\u0435\u0441\u044c \u043f\u043e\u043d\u044f\u0442\u044c, \u0435\u0441\u0442\u044c \u043b\u0438 \u0432\u043e\u043e\u0431\u0449\u0435 \u0441\u043c\u044b\u0441\u043b \u0438\u0433\u0440\u0430\u0442\u044c \u0432 \u0442\u0430\u043a\u043e\u0439 \u041d\u0438\u043c, \u0442. \u0435. \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u043b\u0438 \u0443 \u0432\u0430\u0441 \u0432\u044b\u0438\u0433\u0440\u044b\u0448\u043d\u0430\u044f \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u044f. \u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0443\u0437\u043d\u0430\u0435\u0442 \u044d\u0442\u043e.\n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u0447\u0438\u0441\u043b\u043e $t$ \u2013 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0445 \u0441\u043b\u0443\u0447\u0430\u0435\u0432 ($1 \\le t \\le 300$).\n    \n\u0412 \u043a\u0430\u0436\u0434\u043e\u0439 \u0438\u0437 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 $t$ \u0441\u0442\u0440\u043e\u043a \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u043f\u043e \u043e\u0434\u043d\u043e\u043c\u0443 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u043c\u0443 \u0441\u043b\u0443\u0447\u0430\u044e, \u0441\u043e\u0441\u0442\u043e\u044f\u0449\u0435\u043c\u0443 \u0438\u0437 \u0447\u0435\u0442\u044b\u0440\u0451\u0445 \u0447\u0438\u0441\u0435\u043b $p, x_1, x_2, x_3$. \u0415\u0441\u043b\u0438 \u0447\u0438\u0441\u043b\u043e $p$ \u0440\u0430\u0432\u043d\u043e $1$, \u0432\u044b \u0445\u043e\u0434\u0438\u0442\u0435 \u043f\u0435\u0440\u0432\u044b\u043c, \u0435\u0441\u043b\u0438 $2$ \u2013 \u0432\u0442\u043e\u0440\u044b\u043c ($1 \\le p \\le 2$). \u0427\u0438\u0441\u043b\u0430 $x_1, x_2, x_3$ \u043e\u0437\u043d\u0430\u0447\u0430\u044e\u0442 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043a\u0430\u043c\u043d\u0435\u0439 \u0432 \u043a\u0443\u0447\u043a\u0430\u0445 ($1 \\le x_1, x_2, x_3 \\le 10^7$, $x_1 \\ne x_2 \\ne x_3$).\u0412 \u043e\u0442\u0432\u0435\u0442 \u043d\u0430 \u043a\u0430\u0436\u0434\u044b\u0439 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0439 \u0441\u043b\u0443\u0447\u0430\u0439 \u0441 \u043d\u043e\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 `YES`, \u0435\u0441\u043b\u0438 \u0433\u0430\u0440\u0430\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e \u0441\u043c\u043e\u0436\u0435\u0442\u0435 \u043e\u0431\u044b\u0433\u0440\u0430\u0442\u044c \u0410\u043d\u0434\u0435\u0440\u0441\u043e\u043d\u0430, \u0438 `NO` \u0432 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435.",
        "right_solution": "for _ in range(int(input())):\n    p, x1, x2, x3 = map(int, input().split())\n\n    if (x1 + 1) ^ (x2 + 1) ^ (x3 + 1):\n        if p == 1:\n            print(\"YES\")\n        else:\n            print(\"NO\")\n    else:\n        if p == 2:\n            print(\"YES\")\n        else:\n            print(\"NO\")",
        "solutions": [
            {
                "code": "def solve() -> None:\n  p, x, y, z = map(int, input().split())\n  ans = (x + 1) ^ (y + 1) ^ (y + 1)\n  if (p == 1 and ans != 0) or (p == 2 and ans == 0):\n    print('YES')\n  else:\n    print('NO')\n\nt = int(input())\nfor _ in range(t):\n  solve()",
                "verdict": "Wrong Answer"
            },
            {
                "code": "for _ in range(int(input()):\n    p, x, y, z = map(int, input().split())\n    ans = (x + 1) ^ (y + 1) ^ (z + 1)\n    if (p == 1 and ans != 0) or (p == 2 and ans == 0):\n        print('YES')\n    else:\n        print('NO')",
                "verdict": "Runtime Error"
            }
        ]
    },
    {
        "task_id": 54,
        "description": "\u0414\u0430\u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0430 $t$ \u0434\u043b\u0438\u043d\u044b $|t|$, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043c\u0430\u0441\u0441\u0438\u0432 \u0441\u0442\u0440\u043e\u043a $s_i$ \u0434\u043b\u0438\u043d\u044b $n$. \n\n*\u0421\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c\u044e* \u0441\u0442\u0440\u043e\u043a\u0438 $x$ \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0432\u0445\u043e\u0436\u0434\u0435\u043d\u0438\u0439 \u0432 \u043d\u0435\u0435 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 $t$ \u043a\u0430\u043a \u043f\u043e\u0434\u0441\u0442\u0440\u043e\u043a\u0438. \n\n\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0434\u0432\u0430 \u0438\u043d\u0434\u0435\u043a\u0441\u0430 $i$ \u0438 $j$ $(1 \\leq i,j \\leq n)$, **\u043d\u0435 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445**, \u0442\u0430\u043a\u0438\u0445, \u0447\u0442\u043e \u043a\u043e\u043d\u043a\u0430\u0442\u0435\u043d\u0430\u0446\u0438\u044f \u0441\u0442\u0440\u043e\u043a $s_i$ \u0438 $s_j$ \u0438\u043c\u0435\u0435\u0442 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e *\u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c* \u0441\u0440\u0435\u0434\u0438 \u0432\u0441\u0435\u0445 \u043f\u0430\u0440 $i,j$. \u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u0441\u0442\u0440\u043e\u043a\u0443 \u043c\u043e\u0436\u043d\u043e \u043a\u043e\u043d\u043a\u0430\u0442\u0435\u043d\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0441 \u0441\u043e\u0431\u043e\u0439 \u0436\u0435.\u041d\u0430 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0441\u0442\u0440\u043e\u043a\u0430 $t$ ($1 \\leq |t| \\leq 5 \\cdot 10^5$), \u0441\u043e\u0441\u0442\u043e\u044f\u0449\u0430\u044f \u0438\u0437 \u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0445 \u0431\u0443\u043a\u0432 \u043b\u0430\u0442\u0438\u043d\u0441\u043a\u043e\u0433\u043e \u0430\u043b\u0444\u0430\u0432\u0438\u0442\u0430.\n\n\u041d\u0430 \u0432\u0442\u043e\u0440\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u043e\u0434\u043d\u043e \u0446\u0435\u043b\u043e\u0435 \u0447\u0438\u0441\u043b\u043e $n$ ($1 \\leq n \\leq 5 \\cdot 10^5$) \u2013 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0442\u0440\u043e\u043a \u0432 \u043c\u0430\u0441\u0441\u0438\u0432\u0435.\n\n\u0421\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 $n$ \u0441\u0442\u0440\u043e\u043a \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442 \u043a\u0430\u0436\u0434\u0430\u044f \u043f\u043e \u043e\u0434\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 $s_i$ ($1 \\leq |s_i| \\leq 5\\cdot 10^5$), \u0441\u043e\u0441\u0442\u043e\u044f\u0449\u0435\u0439 \u0438\u0437 \u0441\u0442\u0440\u043e\u0447\u043d\u044b\u0445 \u0431\u0443\u043a\u0432 \u043b\u0430\u0442\u0438\u043d\u0441\u043a\u043e\u0433\u043e \u0430\u043b\u0444\u0430\u0432\u0438\u0442\u0430.\n\n\u0413\u0430\u0440\u0430\u043d\u0442\u0438\u0440\u0443\u0435\u0442\u0441\u044f, \u0447\u0442\u043e \u0441\u0443\u043c\u043c\u0430\u0440\u043d\u0430\u044f \u0434\u043b\u0438\u043d\u0430 \u0432\u0441\u0435\u0445 \u0441\u0442\u0440\u043e\u043a $s_i$ \u043d\u0435 \u043f\u0440\u0435\u0432\u043e\u0441\u0445\u043e\u0434\u0438\u0442 $5 \\cdot 10^5$.\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e \u2013 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u0443\u044e *\u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c* \u043a\u043e\u043d\u043a\u0430\u0442\u0435\u043d\u0430\u0446\u0438\u0438 $s_i$ \u0438 $s_j$.\n\n\u0412\u043e \u0432\u0442\u043e\u0440\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430 \u2013 $i$ \u0438 $j$ $(1 \\leq i,j \\leq n)$, \u0442\u0430\u043a\u0438\u0435 \u0447\u0442\u043e \u043a\u043e\u043d\u043a\u0430\u0442\u0435\u043d\u0430\u0446\u0438\u044f $s_i$ \u0438 $s_j$ \u0438\u043c\u0435\u0435\u0442 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u0443\u044e *\u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c*. \u0415\u0441\u043b\u0438 \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u0430\u0440 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e, \u0440\u0430\u0437\u0440\u0435\u0448\u0430\u0435\u0442\u0441\u044f \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u043b\u044e\u0431\u0443\u044e \u0438\u0437 \u043d\u0438\u0445.",
        "solutions": [
            {
                "code": "print(\"5\\n1 4\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def cost(ini_str,sub_str):\n    count = 0\n    start = 0\n \n    while start < len(ini_str):\n        pos = ini_str.find(sub_str, start)\n \n        if pos != -1:\n            start = pos + 1\n            count += 1\n        else:\n            break\n    return count\n    \nt = input().strip()\na = [input().strip() for _ in range(int(input()))]\n\nmx, mxi, mxj = 0, 1, 1\nfor i in range(len(a)):\n    for j in range(i, len(a)):\n        c = cost(a[i] + a[j], t)\n        if c > mx:\n            mx, mxi, mxj = c, i + 1, j + 1\n            \nprint(mx)\nprint(mxi, mxj)\n        \n        ",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "def cost(ini_str,sub_str):\n    count = 0\n    start = 0\n \n    while start < len(ini_str):\n        pos = ini_str.find(sub_str, start)\n \n        if pos != -1:\n            start = pos + 1\n            count += 1\n        else:\n            break\n    return count\n    \nt = input().strip()\na = [input().strip() for _ in range(int(input()))]\n\nmx, mxi, mxj = 0, 1, 1\nfor i in range(len(a)):\n    for j in range(i, len(a)):\n        c = cost(a[i] + a[j], t)\n        if c > mx:\n            mx, mxi, mxj = c, i, j\n            \nprint(mx)\nprint(mxi, mxj)\n        \n        ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def cost(ini_str,sub_str):\n    count = 0\n    start = 0\n \n    while start < len(ini_str):\n        pos = ini_str.find(sub_str, start)\n \n        if pos != -1:\n            start = pos + 1\n            count += 1\n        else:\n            break\n    return count\n    \nt = input().strip()\na = [input().strip() for _ in range(int(input()))]\n\nmx, mxi, mxj = 0, 1, 1\nfor i in range(len(a)):\n    for j in range(i, len(a)):\n        c = cost(a[i] + a[j], t)\n        print(c)\n        if c > mx:\n            mx, mxi, mxj = c, i, j\n            \nprint(mx)\nprint(mxi, mxj)\n        \n        ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def cost(ini_str,sub_str):\n    count = 0\n    start = 0\n \n    while start < len(ini_str):\n        pos = ini_str.find(sub_str, start)\n \n        if pos != -1:\n            start = pos + 1\n            count += 1\n        else:\n            break\n    return count\n    \nt = input().strip()\na = [input().strip() for _ in range(int(input()))]\n\nmx, mxi, mxj = 0, 1, 1\nfor i in range(len(a)):\n    for j in range(i, len(a)):\n        c = cost(t, a[i] + a[j])\n        if c > mx:\n            mx, mxi, mxj = c, i, j\n            \nprint(mx)\nprint(mxi, mxj)\n        \n        ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(\"\u0447\u0437\u0445\")",
                "verdict": "Unknown Verdict (8)"
            },
            {
                "code": "print(\"\u0447\u0437\u0445\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "t = input()\r\nx = int(input())\r\na = list()\r\nm = 0\r\ni1=0\r\ni2=0\r\nfor i in range (0,x):\r\n    a.append(input())\r\nfor i in range (0,x):\r\n    for j in range (0,x):\r\n        s = a[i]+a[j]\r\n        ind = 1\r\n        count = 0\r\n        while ind != -1:\r\n            ind = s.find(t)\r\n            if (ind >= 0):\r\n                count += 1\r\n            s = s[ind + 1:]\r\n        if count >= m:\r\n            m = count\r\n            i1=i\r\n            i2=j\r\nprint(m)\r\nprint(i1+1,i2+1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "t = input()\r\nx = int(input())\r\na = list()\r\nm = 0\r\ni1=0\r\ni2=0\r\nfor i in range (0,x):\r\n    a.append(input())\r\nfor i in range (0,x):\r\n    for j in range (0,x):\r\n        s = a[i]+a[j]\r\n        sc=s.count(t)\r\n        if sc >= m:\r\n            m = sc\r\n            i1=i\r\n            i2=j\r\nprint(i1+1,i2+1)",
                "verdict": "Unknown Verdict (8)"
            },
            {
                "code": "import re\n\n\ndef count_substrings(string, substring):\n    substring_re = \"(?=(%s))\" % re.escape(substring)\n    return len(re.findall(substring_re, string))\n\n\nt = input()\nn = int(input())\ns = [input() for _ in range(n)]\nm = 0\nres = [0, 0]\n\nfor i in range(0, n):\n    for j in range(0, n):\n        r = count_substrings(s[i] + s[j], t)\n\n        if r >= m:\n            res = [i, j]\n            m = r\n\nprint(m)\nprint(res[0] + 1, res[1] + 1)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "import re\n\n\ndef count_substrings(string, substring):\n    substring_re = \"(?=(%s))\" % re.escape(substring)\n    return len(re.findall(substring_re, string))\n\n\nt = input()\nn = int(input())\ns = [input() for _ in range(n)]\nm = 0\nres = [0, 0]\n\nfor i in range(1, n):\n    for j in range(1, n):\n        r = count_substrings(s[i] + s[j], t)\n        print(r)\n\n        if r > m:\n            res = [i, j]\n            m = r\n\nprint(m)\nprint(res[0], res[1] + 1)\n",
                "verdict": "Wrong Answer"
            }
        ]
    },
    {
        "task_id": 55,
        "description": "\u0412 \u043e\u0434\u043d\u043e\u043c \u0438\u0437 \u043a\u0430\u0440\u043c\u0430\u043d\u043e\u0432 \u0432\u0430\u0448\u0435\u0433\u043e \u0434\u0440\u0443\u0433\u0430 \u0432\u0441\u0435\u0433\u0434\u0430 \u043b\u0435\u0436\u0438\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044e\u0431\u0438\u043b\u0435\u0439\u043d\u044b\u0445 \u0442\u0440\u0451\u0445\u0440\u0443\u0431\u043b\u0451\u0432\u044b\u0445 \u043c\u043e\u043d\u0435\u0442, \u0430 \u0432 \u0434\u0440\u0443\u0433\u043e\u043c \u2013 \u0431\u0435\u0441\u043a\u043e\u043d\u0435\u0447\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u044e\u0431\u0438\u043b\u0435\u0439\u043d\u044b\u0445 \u043f\u044f\u0442\u0438\u0440\u0443\u0431\u043b\u0451\u0432\u044b\u0445.\n\n\u0414\u0440\u0443\u0433 \u043e\u0447\u0435\u043d\u044c \u0431\u043e\u044f\u043b\u0441\u044f, \u0447\u0442\u043e \u043a\u043e\u0433\u0434\u0430 \u0440\u0430\u0441\u043f\u043b\u0430\u0442\u0438\u0442\u0441\u044f \u0441 \u043a\u0430\u0441\u0441\u0438\u0440\u043e\u043c \u0437\u0430 \u043f\u043e\u043a\u0443\u043f\u043a\u0443 \u0441\u0442\u043e\u0438\u043c\u043e\u0442\u044c\u044e $x$, \u0442\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442 \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0441\u0434\u0430\u0447\u0438 \u043d\u0435 \u044e\u0431\u0438\u043b\u0435\u0439\u043d\u044b\u0435, \u0430 \u0442\u043e \u0438 \u0432\u043e\u0432\u0441\u0435 \u043d\u0435 \u0442\u0440\u0451\u0445\u0440\u0443\u0431\u043b\u0451\u0432\u044b\u0435 \u0438 \u043d\u0435 \u043f\u044f\u0442\u0438\u0440\u0443\u0431\u043b\u0451\u0432\u044b\u0435 \u043c\u043e\u043d\u0435\u0442\u044b, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043f\u043e\u0442\u0440\u0430\u0442\u0438\u043b \u0432\u0440\u0435\u043c\u044f \u0438 \u0432\u044b\u0431\u0440\u0430\u043b \u043f\u043e\u043a\u0443\u043f\u043a\u0443 \u0437\u0430 \u0442\u0430\u043a\u0443\u044e \u0446\u0435\u043d\u0443 $x$, \u0447\u0442\u043e \u0433\u0430\u0440\u0430\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e \u0441\u043c\u043e\u0436\u0435\u0442 \u043a\u0443\u043f\u0438\u0442\u044c \u0435\u0451 \u0431\u0435\u0437 \u0441\u0434\u0430\u0447\u0438.\n\n\u041f\u043e\u043c\u043e\u0433\u0438\u0442\u0435 \u0434\u0440\u0443\u0433\u0443 \u043f\u043e\u0441\u0447\u0438\u0442\u0430\u0442\u044c, \u043a\u0430\u043a\u0438\u043c\u0438 \u043c\u043e\u043d\u0435\u0442\u0430\u043c\u0438 \u0435\u043c\u0443 \u0440\u0430\u0441\u0441\u0447\u0438\u0442\u0430\u0442\u044c\u0441\u044f \u0437\u0430 \u0442\u043e\u0432\u0430\u0440, \u0447\u0442\u043e\u0431\u044b \u043d\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0441\u0434\u0430\u0447\u0443, \u0438 \u043e\u0442\u0434\u0430\u0442\u044c \u043a\u0430\u0441\u0441\u0438\u0440\u0443 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u043c\u043e\u043d\u0435\u0442.\u0412 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u0447\u0438\u0441\u043b\u043e $x$ \u2013 \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c \u0442\u043e\u0432\u0430\u0440\u0430 ($3 \\le x \\le 10^9$).\u0412 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430 \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b \u2013 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u0442\u0440\u0451\u0445\u0440\u0443\u0431\u043b\u0451\u0432\u044b\u0445 \u0438 \u043f\u044f\u0442\u0438\u0440\u0443\u0431\u043b\u0451\u0432\u044b\u0445 \u043c\u043e\u043d\u0435\u0442, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0434\u0440\u0443\u0433 \u043e\u0442\u0434\u0430\u0441\u0442 \u043d\u0430 \u043a\u0430\u0441\u0441\u0435.",
        "right_solution": "i = i2 = int(input())\nwhile i % 5:\n    i -= 3\nprint((i2 - i) // 3, i // 5)",
        "solutions": [
            {
                "code": "i = int(input())\n\nassert i < 1000\n\nprint(i*2%5, i//5-i%5%3)",
                "verdict": "Runtime Error"
            },
            {
                "code": "print(10)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def gcd(a, b):\n\tif a == 0:\n\t\treturn (b, 0, 1)\n\tg, x1, y1 = gcd(b%a, a)\n\tx = y1 - (b//a)*x1\n\ty = x1\n\treturn (g, x, y)\nx = int(input())\ng, x0, y0 = gcd(3,5)\n#print(g, x0, y0)\nx0 *= x\ny0 *= x\na = x0\nb = y0\nit = 0\nk1 = -x0//5\nk2 = y0//3\nk3 = k1-1\nk4 = k2-1\na1 = x0 + max(k1, k2)*5\nb1 = y0 - max(k1, k2)*3\na2 = x0 + max(k3, k4)*5\nb2 = y0 - max(k3, k4)*3\n#print(a1, b1)\n#print(a2, b2)\nif a1 < 0 or b1 < 0:\n\tprint( a2, b2 )\nelif a1*b1 >= 0 and a2*b2 >= 0:\n\tif abs(a1)+abs(b1) < abs(a2)+abs(b2):\n\t\tprint(a1 , b1)\n\telse:\n\t\tprint(a2, b2)\nelse:\n\tprint(a1, b1)\n#print( x0 + max(k1,k2)*5, y0 - max(k1,k2)*3  )\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "2 + 2",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nif x < 1000:\r\n    for i in range(x//5, 0, -1):\r\n        if x % 5 == 0:\r\n            print(*(0, int(x / 5)))\r\n            break\r\n        elif (x - 5 * i) % 3 == 0 and (x - 5 * i) > 0:\r\n            print(*(int((x - 5 * i) / 3), i))\r\n            break\r\nelse:\r\n    x, a = int(input()), []\r\n    for i in range(100):\r\n        for j in range(100):\r\n            if 5 * i + j * 3 == x:\r\n                a.append((j, i))\r\n    print(*min(a))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nif x > 1000:\r\n    for i in range(x//5, 0, -1):\r\n        if x % 5 == 0:\r\n            print(*(0, int(x / 5)))\r\n            break\r\n        elif (x - 5 * i) % 3 == 0 and (x - 5 * i) > 0:\r\n            print(*(int((x - 5 * i) / 3), i))\r\n            break\r\nelse:\r\n    x, a = int(input()), []\r\n    for i in range(100):\r\n        for j in range(100):\r\n            if 5 * i + j * 3 == x:\r\n                a.append((j, i))\r\n    print(*min(a))\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "x = int(input())\r\nfor i in range(x//5, 0, -1):\r\n    if x % 5 == 0:\r\n        print(*(0, int(x / 5)))\r\n        break\r\n    elif (x - 5 * i) % 3 == 0 and (x - 5 * i) > 0:\r\n        print(*(int((x - 5 * i) / 3), i))\r\n        break\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nfor i in range(x//5, 0, -1):\r\n    if x % 5 == 0:\r\n        print(*(0, int(x / 5)))\r\n        break\r\n    elif (x - 5 * i) % 3 == 0 and (x - 5 * i) > 0:\r\n        print(*(int((x - 5 * i) / 3), i))\r\n        break\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x, a = int(input()), []\r\nfor i in range(x//5, 0, -1):\r\n    if x % 5 == 0:\r\n        a.append((0, int(x / 5)))\r\n    elif (x - 5 * i) % 3 == 0 and (x - 5 * i) > 0:\r\n        a.append((int((x - 5 * i) / 3), i))\r\n\r\nprint(*min(a))\r\n\r\n\r\n\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "x, a = int(input()), []\r\nfor i in range(x//2, 0, -1):\r\n    if (x - 5 * i) % 3 == 0 and (x - 5 * i) > 0:\r\n        a.append((int((x - 5 * i) / 3), i))\r\n    elif x % 5 == 0:\r\n        a.append((0, int(x / 5)))\r\nprint(*min(a))\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "x, a = int(input()), []\r\nfor i in range(x//2, 0, -1):\r\n    if (x - 5 * i) % 3 == 0 and (x - 5 * i) > 0:\r\n        a.append((int((x - 5 * i) / 3), i))\r\n    elif x % 3 == 0:\r\n        a.append((0, int(x / 5)))\r\nprint(*min(a))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nfor i in range(x//2, 0, -1):\r\n    if (x - 5 * i) % 3 == 0 and (x - 5 * i) > 0:\r\n        print(int((x - 5 * i) / 3), i)\r\n    elif x % 3 == 0:\r\n        print(0, int(x / 5))\r\n        break\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x, a = int(input()), []\r\nfor i in range(1000):\r\n    for j in range(1000):\r\n        if 5 * i + j * 3 == x:\r\n            a.append((j, i))\r\nprint(*min(a))\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "x, a = int(input()), []\r\nfor i in range(100):\r\n    for j in range(100):\r\n        if 5 * i + j * 3 == x:\r\n            a.append((j, i))\r\nprint(*min(a))\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include \"bits/stdc++.h\"\r\n\r\nusing namespace std;\r\n\r\n//#define int long long\r\n#define sz(v) ((int)(v).size())\r\n#define all(a) (a).begin(),  (a).end()\r\n#define rall(a) a.rbegin(), a.rend()\r\n#define F first\r\n#define S second\r\n#define time clock() / (double) CLOCKS_PER_SEC\r\n\r\nusing uint = uint32_t;\r\nusing pii = pair<int, int>;\r\nusing ll = long long;\r\nusing ld = long double;\r\n\r\nconst ll infll = (ll)1e18 + 27;\r\nconst ll inf = (ll)1e9 + 27;\r\nll mod = (ll)998244353;\r\nconst ld eps = 1e-9;\r\nconst ld pi = atan(1) * 4;\r\n\r\n#ifdef home\r\n#define dbg(x) cout << #x << \" = \" << (x) << endl\r\n#else\r\n#define dbg(x) 228\r\n#endif\r\n\r\ntemplate <class T>\r\nusing pq = priority_queue <T, vector <T>, less <T>>;\r\ntemplate <class T>\r\nusing pqr = priority_queue <T, vector <T>, greater <T>>;\r\n\r\ntemplate <typename T, typename T2>\r\nistream& operator>> (istream& in, pair<T, T2>& b) {\r\n    in >> b.first >> b.second;\r\n    return in;\r\n}\r\n\r\ntemplate <typename T, typename T2>\r\nostream& operator<< (ostream& out, const pair<T, T2>& b) {\r\n    out << \"{\" << b.first << \", \" << b.second << \"}\";\r\n    return out;\r\n}\r\n\r\ntemplate <typename T>\r\nistream& operator>> (istream& in, vector<T>& b) {\r\n    for(auto &v: b){\r\n        in >> v;\r\n    }\r\n    return in;\r\n}\r\n\r\ntemplate <typename T>\r\nostream& operator<< (ostream& out, vector<T>& b) {\r\n    for(auto &v: b){\r\n        out << v << ' ';\r\n    }\r\n    return out;\r\n}\r\n\r\ntemplate <typename T>\r\nvoid print(T x, string end = \"\\n\"){\r\n    cout << x << end;\r\n}\r\n\r\ntemplate <typename T1, typename T2> bool chkmin(T1 &x, const T2 &y) { return (x > y ? (x = y, true) : false); }\r\ntemplate <typename T1, typename T2> bool chkmax(T1 &x, const T2 &y) { return (x < y ? (x = y, true) : false); }\r\n\r\nmt19937 rng(chrono::high_resolution_clock::now().time_since_epoch().count());\r\n\r\n\r\nvoid solve(){\r\n    int x;\r\n    cin >> x;\r\n    for(int j = x / 5;j >= 0;j--){\r\n        if(j * 5 + ((x - j * 5) / 3) * 3 == x){\r\n            cout << (x - j * 5) / 3 << \" \" << j << endl;\r\n            return;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nsigned main(){\r\n    ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);cout << fixed << setprecision(15);\r\n    int t = 1;\r\n    //cin >> t;\r\n    while(t--)\r\n        solve();\r\n#ifdef home\r\n    cout << \"_________________________________________________\" << endl;\r\n    cout << \"finished in \" << time << \" s\";\r\n#endif\r\n    return 0;\r\n}\r\n/*\r\n3 3\r\n111\r\n000\r\n111\r\n */",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\n\nif n % 5 == 0:\n    print(0,n/5)\nelif n % 5 == 1:\n    print(2,n/5-1)\nelif n%5==2:\n    print(4,n/5-2)\nelif n%5==3:\n    print(1,n/5)\nelse:\n    print(3,n/5-1)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <iostream>\r\n#include <vector>\r\n#include <deque>\r\n#include <bits/stdc++.h>\r\n\r\n#define int long long\r\n//#define int unsigned int\r\n//#define int unsigned long long\r\n#define double long double\r\n #define endl '\\n'\r\n#define pi acos(-1.0)\r\n#define inf 2000000000000000000\r\n#define INF 1000000000\r\n#define random rand()^(rand()<<15)\r\n#define YES cout<<\"YES\"<<endl;\r\n#define NO cout<<\"NO\"<<endl;\r\n#define Yes cout<<\"Yes\"<<endl;\r\n#define No cout<<\"No\"<<endl;\r\n\r\nusing namespace std;\r\nconstexpr int mod=1000000007;\r\nconstexpr int MOD=998244353;\r\nmt19937 rnd(time(nullptr));\r\nclock_t startTime;\r\ndouble getCurrentTime() {\r\n\treturn (double)(clock() - startTime) / CLOCKS_PER_SEC;\r\n}\r\nvoid solve()\r\n{\r\n    int x;\r\n    cin>>x;\r\n    int a=0,b=0;\r\n    while(x>0&&x%5)\r\n    {\r\n        a++;\r\n        x-=3;\r\n    }\r\n    cout<<a<<\" \"<<x/5<<endl;\r\n}\r\nint32_t main()\r\n{\r\n\tstartTime = clock();\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    cout.tie(nullptr);\r\n//    freopen(\"comb.in\", \"r\", stdin);\r\n//    freopen(\"comb.out\", \"w\", stdout);\r\n    int t=1;\r\n//    cin>>t;\r\n    while(t--)\r\n    {\r\n        solve();\r\n    }\r\n}\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "/*\u2800\u2800\r\n\u2800\u2800\u2800\u2880\u2860\u28f2\u280a\u28ed\u2824\u282d\u28e5\u2852\u2864\u2884\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2800\u2874\u28ff\u280f\u2810\u2809\u28c1\u2874\u28eb\u28be\u28f7\u28f7\u28f6\u286c\u28e6\u2840\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\r\n\u2800\u2898\u287a\u2841\u2800\u28e0\u28ba\u28a7\u281f\u28f1\u28ff\u28ff\u28ff\u28ff\u28ff\u284e\u28be\u28c6\u2800\u2800\u2800\u2880\u28e0\u2844\u2800\r\n\u28a0\u287c\u2801\u28c4\u28bc\u2881\u2874\u2803\u28a0\u28ff\u28ff\u28ff\u2847\u28ff\u28ff\u28f7\u2858\u28df\u28c0\u2860\u2816\u280b\u2808\u289e\u2844\r\n\u28be\u2821\u2806\u28ff\u28f7\u285e\u2801\u28b0\u287f\u28b9\u28ff\u284f\u2881\u28ff\u28ff\u28ff\u283f\u280b\u2809\u2800\u2800\u28c4\u2800\u2818\u28b4\r\n\u285f\u2847\u28fe\u28ff\u28ff\u2800\u28e0\u28fe\u2845\u28ff\u28ff\u2846\u28fc\u281f\u280b\u2801\u2800\u2800\u2828\u2837\u2800\u28b1\u2844\u2800\u2800\r\n\u28a7\u28f7\u28ff\u28ff\u2809\u28f7\u28ff\u287f\u28b0\u287f\u281f\u280b\u2800\u2800\u2800\u2864\u28c0\u2840\u2832\u2856\u28f6\u28ec\u2841\u2800\u2800\r\n\u2808\u28bf\u28ff\u28e7\u28b0\u28ff\u28ff\u28ff\u284d\u2800\u2800\u2800\u281e\u2830\u28c0\u2839\u28f7\u28dd\u283f\u28b0\u2866\u2800\u2800\u2880\u2800\r\n\u2800\u2808\u283b\u28ff\u28fc\u28ff\u28fd\u2839\u28ff\u28cc\u28a6\u2800\u2800\u2800\u283b\u28f4\u285c\u283f\u2800\u2800\u2800\u2800\u2870\u287b\u2801\r\n\u2800\u2800\u2800\u2808\u2819\u283b\u283f\u28ff\u28f7\u287b\u28d7\u288d\u2872\u28a4\u28c0\u2840\u2800\u2800\u2880\u2880\u2814\u286a\u281e\u2801\u2800\r\n\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2800\u2809\u2819\u2813\u282f\u28f5\u28d6\u28e6\u2824\u2824\u2816\u2812\u2809\u2800\u2800\u2800\r\n                                                                                                                                                                                                                                                                                                        */\r\n#include <iostream>\r\n#include <vector>\r\n#include <deque>\r\n#include <bits/stdc++.h>\r\n\r\n#define int long long\r\n//#define int unsigned int\r\n//#define int unsigned long long\r\n#define double long double\r\n #define endl '\\n'\r\n#define pi acos(-1.0)\r\n#define inf 2000000000000000000\r\n#define INF 1000000000\r\n#define random rand()^(rand()<<15)\r\n#define YES cout<<\"YES\"<<endl;\r\n#define NO cout<<\"NO\"<<endl;\r\n#define Yes cout<<\"Yes\"<<endl;\r\n#define No cout<<\"No\"<<endl;\r\n\r\nusing namespace std;\r\nconstexpr int mod=1000000007;\r\nconstexpr int MOD=998244353;\r\nmt19937 rnd(time(nullptr));\r\nclock_t startTime;\r\ndouble getCurrentTime() {\r\n\treturn (double)(clock() - startTime) / CLOCKS_PER_SEC;\r\n}\r\nvoid solve()\r\n{\r\n    int x;\r\n    cin>>x;\r\n    int a=0,b=0;\r\n    while(x>0&&x%5)\r\n    {\r\n        a++;\r\n        x-=3;\r\n    }\r\n    cout<<a<<\" \"<<x/5<<endl;\r\n}\r\nint32_t main()\r\n{\r\n\tstartTime = clock();\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    cout.tie(nullptr);\r\n//    freopen(\"comb.in\", \"r\", stdin);\r\n//    freopen(\"comb.out\", \"w\", stdout);\r\n    int t=1;\r\n//    cin>>t;\r\n    while(t--)\r\n    {\r\n        solve();\r\n    }\r\n}\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\nusing namespace std;\n\ntypedef long long ll;\n\nvoid solve() {\n    ll x; cin >> x;\n    ll div = x / 15, mod = x % 15;\n    ll c3 = 0, c5 = div * 3;\n    if (mod == 0) {\n        cout << 0 << ' ' << c5;\n    } else if (mod == 3) {\n        cout << 1 << ' ' << c5;\n    } else if (mod == 5) {\n        cout << 0 << ' ' << c5 + 1;\n    } else if (mod == 6) {\n        cout << 2 << ' ' << c5;\n    } else if (mod == 8) {\n        cout << 1 << ' ' << c5 + 1;\n    } else if (mod == 9) {\n        cout << 3 << ' ' << c5;\n    } else if (mod == 10) {\n        cout << 0 << ' ' << c5 + 2;\n    } else if (mod == 11) {\n        cout << 2 << ' ' << c5 + 1;\n    } else if (mod == 12) {\n        cout << 4 << ' ' << c5;\n    } else if (mod == 13) {\n        cout << 1 << ' ' << c5 + 2;\n    } else if (mod == 14) {\n        cout << 3 << ' ' << c5 + 1;\n    }\n}\n\nint main() {\n    int t = 1;\n    //cin >> t;\n    while (t--) {\n        solve();\n        cout << '\\n';\n    }\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "from collections import deque\r\n\r\n\r\ndef graph(val):\r\n    return [(val[0] + 1, val[1]), (val[0], val[1] + 1)]\r\n\r\n\r\nx = int(input())\r\nq = deque()\r\nfive = 0\r\nthree = 0\r\ntt = [30, 21, 12, 3, 24, 15, 6, 27, 18, 9]\r\nr = str(x)\r\nif x > 30:\r\n    x -= tt[int(r[-1])]\r\n    three += tt[int(r[-1])] // 3\r\n    five = x // 5\r\n    print(three, five)\r\nelse:\r\n    q.append((0, 0))\r\n    dist = set()\r\n    lq = 1\r\n    while lq:\r\n        coins = q.pop()\r\n        lq -= 1\r\n        for v in graph(coins):\r\n            # print(v)\r\n            if v not in dist:\r\n                if coins[0] * 3 + coins[1] * 5 == x:\r\n                    print(coins[0], coins[1] + five)\r\n                    exit()\r\n                else:\r\n                    q.appendleft(v)\r\n                    dist.add(v)\r\n                    lq += 1\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from collections import deque\r\n\r\n\r\ndef graph(val):\r\n    return [(val[0] + 1, val[1]), (val[0], val[1] + 1)]\r\n\r\n\r\nx = int(input())\r\nq = deque()\r\nfive = 0\r\nif x > 100 and x // 100 // 10 > 0:\r\n    five = x // 100 * 20\r\nif x // 10 > 1 and int(str(x)[1]) > 5:\r\n    five += 10\r\nif five > 0:\r\n    if x - five * 5 > 10:\r\n        x -= five * 5\r\n    else:\r\n        x -= (five - 2) * 5\r\n# print(x)\r\nq.append((0, 0))\r\ndist = set()\r\nlq = 1\r\nwhile lq:\r\n    coins = q.pop()\r\n    lq -= 1\r\n    for v in graph(coins):\r\n        # print(v)\r\n        if v not in dist:\r\n            if coins[0] * 3 + coins[1] * 5 == x:\r\n                print(coins[0], coins[1] + five)\r\n                exit()\r\n            else:\r\n                q.appendleft(v)\r\n                dist.add(v)\r\n                lq += 1\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from collections import deque\r\n\r\n\r\ndef graph(val):\r\n    return [(val[0] + 1, val[1]), (val[0], val[1] + 1)]\r\n\r\n\r\nx = int(input())\r\nq = deque()\r\nfive = 0\r\nif x > 100 and x // 100 // 10 > 0:\r\n    five = x // 100 * 20\r\nif x // 10 > 1 and int(str(x)[1]) > 5:\r\n    five += 10\r\nif five > 0 and x - five * 5 > 10:\r\n    x -= five * 5\r\nelse:\r\n    x -= (five - 2) * 5\r\n# print(x)\r\nq.append((0, 0))\r\ndist = set()\r\nlq = 1\r\nwhile lq:\r\n    coins = q.pop()\r\n    lq -= 1\r\n    for v in graph(coins):\r\n        # print(v)\r\n        if v not in dist:\r\n            if coins[0] * 3 + coins[1] * 5 == x:\r\n                print(coins[0], coins[1] + five)\r\n                exit()\r\n            else:\r\n                q.appendleft(v)\r\n                dist.add(v)\r\n                lq += 1\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from collections import deque\r\n\r\n\r\ndef graph(val):\r\n    return [(val[0] + 1, val[1]), (val[0], val[1] + 1)]\r\n\r\n\r\nx = int(input())\r\nq = deque()\r\nfive = 0\r\nif x > 100 and x // 100 // 10 > 0:\r\n    five = x // 100 * 20\r\nif x // 10 > 1 and int(str(x)[1]) > 5:\r\n    five += 10\r\nif x - five * 5 > 10:\r\n    x -= five * 5\r\nelse:\r\n    x -= (five - 2) * 5\r\n# print(x)\r\nq.append((0, 0))\r\ndist = set()\r\nlq = 1\r\nwhile lq:\r\n    coins = q.pop()\r\n    lq -= 1\r\n    for v in graph(coins):\r\n        # print(v)\r\n        if v not in dist:\r\n            if coins[0] * 3 + coins[1] * 5 == x:\r\n                print(coins[0], coins[1] + five)\r\n                exit()\r\n            else:\r\n                q.appendleft(v)\r\n                dist.add(v)\r\n                lq += 1\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from collections import deque\r\n\r\n\r\ndef graph(val):\r\n    return [(val[0] + 1, val[1]), (val[0], val[1] + 1)]\r\n\r\n\r\nx = int(input())\r\nq = deque()\r\nfive = 0\r\nif x > 100 and x // 100 // 10 > 0:\r\n    five = x // 100 * 20\r\nif x // 10 > 1 and int(str(x)[1]) > 5:\r\n    five += 10\r\nx -= five * 5\r\n# print(x)\r\nq.append((0, 0))\r\ndist = set()\r\nlq = 1\r\nwhile lq:\r\n    coins = q.pop()\r\n    lq -= 1\r\n    for v in graph(coins):\r\n        # print(v)\r\n        if v not in dist:\r\n            if coins[0] * 3 + coins[1] * 5 == x:\r\n                print(coins[0], coins[1] + five)\r\n                exit()\r\n            else:\r\n                q.appendleft(v)\r\n                dist.add(v)\r\n                lq += 1\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "from collections import deque\r\n\r\n\r\ndef graph(val):\r\n    return [(val[0] + 1, val[1]), (val[0], val[1] + 1)]\r\n\r\n\r\nx = int(input())\r\nq = deque()\r\nfive = 0\r\nif x > 100:\r\n    five = x // 100 * 20\r\nif x // 10 > 1 and int(str(x)[1]) > 5:\r\n    five += 10\r\nx -= five * 5\r\n# print(x)\r\nq.append((0, 0))\r\ndist = set()\r\nlq = 1\r\nwhile lq:\r\n    coins = q.pop()\r\n    lq -= 1\r\n    for v in graph(coins):\r\n        # print(v)\r\n        if v not in dist:\r\n            if coins[0] * 3 + coins[1] * 5 == x:\r\n                print(coins[0], coins[1] + five)\r\n                exit()\r\n            else:\r\n                q.appendleft(v)\r\n                dist.add(v)\r\n                lq += 1\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "from collections import deque\r\n\r\n\r\ndef graph(val):\r\n    return [(val[0] + 1, val[1]), (val[0], val[1] + 1)]\r\n\r\n\r\nx = int(input())\r\nq = deque()\r\nfive = 0\r\nif x > 100:\r\n    five = x // 100 * 20\r\nif x // 10 > 1 and int(str(x)[1]) > 5:\r\n    five += 10\r\nx -= five * 5\r\nprint(x)\r\nq.append((0, 0))\r\ndist = set()\r\nlq = 1\r\nwhile lq:\r\n    coins = q.pop()\r\n    lq -= 1\r\n    for v in graph(coins):\r\n        # print(v)\r\n        if v not in dist:\r\n            if coins[0] * 3 + coins[1] * 5 == x:\r\n                print(coins[0], coins[1] + five)\r\n                exit()\r\n            else:\r\n                q.appendleft(v)\r\n                dist.add(v)\r\n                lq += 1\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from collections import deque\r\n\r\n\r\ndef graph(val):\r\n    return [[val[0] + 1, val[1]], [val[0], val[1] + 1]]\r\n\r\n\r\n# x = int(input())\r\n# q = deque()\r\n# five = 0\r\n# three = 0\r\n# tt = [30, 21, 12, 3, 24, 15, 6, 27, 18, 9]\r\n# if x > 100:\r\n#     five = x // 100 * 20\r\n# if tt[int(str(x)[1])]\r\n# q.append([0, five])\r\n# path = set()\r\n# while len(q):\r\n#     coins = q.pop()\r\n#     for v in graph(coins):\r\n#         # print(v)\r\n#         if coins[0] * 3 + coins[1] * 5 == x:\r\n#             print(*coins)\r\n#             exit()\r\n#         else:\r\n#             q.appendleft(v)\r\n# # 3 6 9 12 15 18 21 24 27 30\r\n\r\n\r\nfrom collections import deque\r\n\r\n\r\ndef graph(val):\r\n    return [(val[0] + 1, val[1]), (val[0], val[1] + 1)]\r\n\r\n\r\nx = int(input())\r\nq = deque()\r\nfive = 0\r\nif x > 100:\r\n    five = x // 100 * 20\r\nif x // 10 > 1 and int(str(x)[1]) > 5:\r\n    five += 10\r\nx -= five * 5\r\nq.append((0, 0))\r\ndist = set()\r\nwhile len(q):\r\n    coins = q.pop()\r\n    for v in graph(coins):\r\n        # print(v)\r\n        if v not in dist:\r\n            if coins[0] * 3 + coins[1] * 5 == x:\r\n                print(coins[0], coins[1] + five)\r\n                exit()\r\n            else:\r\n                q.appendleft(v)\r\n                dist.add(v)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "from collections import deque\r\n\r\n\r\ndef graph(val):\r\n    return [[val[0] + 1, val[1]], [val[0], val[1] + 1]]\r\n\r\n\r\n# x = int(input())\r\n# q = deque()\r\n# five = 0\r\n# three = 0\r\n# tt = [30, 21, 12, 3, 24, 15, 6, 27, 18, 9]\r\n# if x > 100:\r\n#     five = x // 100 * 20\r\n# if tt[int(str(x)[1])]\r\n# q.append([0, five])\r\n# path = set()\r\n# while len(q):\r\n#     coins = q.pop()\r\n#     for v in graph(coins):\r\n#         # print(v)\r\n#         if coins[0] * 3 + coins[1] * 5 == x:\r\n#             print(*coins)\r\n#             exit()\r\n#         else:\r\n#             q.appendleft(v)\r\n# # 3 6 9 12 15 18 21 24 27 30\r\n\r\n\r\nfrom collections import deque\r\n\r\n\r\ndef graph(val):\r\n    return [[val[0] + 1, val[1]], [val[0], val[1] + 1]]\r\n\r\n\r\nx = int(input())\r\nq = deque()\r\nfive = 0\r\nif x > 100:\r\n    five = x // 100 * 20\r\nif x // 10 > 1 and int(str(x)[1]) > 5:\r\n    five += 10\r\nx -= five * 5\r\nq.append([0, 0])\r\npath = set()\r\nwhile len(q):\r\n    coins = q.pop()\r\n    for v in graph(coins):\r\n        # print(v)\r\n        if coins[0] * 3 + coins[1] * 5 == x:\r\n            print(coins[0], coins[1] + five)\r\n            exit()\r\n        else:\r\n            q.appendleft(v)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "from collections import deque\r\n\r\n\r\ndef graph(val):\r\n    return [[val[0] + 1, val[1]], [val[0], val[1] + 1]]\r\n\r\n\r\nx = int(input())\r\nq = deque()\r\nfive = 0\r\nif x > 100:\r\n    five = x // 100 * 20\r\nif x // 10 > 1 and int(str(x)[1]) > 5:\r\n    five += 10\r\nq.append([0, five])\r\npath = set()\r\nwhile len(q):\r\n    coins = q.pop()\r\n    for v in graph(coins):\r\n        # print(v)\r\n        if coins[0] * 3 + coins[1] * 5 == x:\r\n            print(*coins)\r\n            exit()\r\n        else:\r\n            q.appendleft(v)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "from collections import deque\r\n\r\n\r\ndef graph(val):\r\n    return [[val[0] + 1, val[1]], [val[0], val[1] + 1]]\r\n\r\n\r\nx = int(input())\r\nq = deque()\r\nfive = 0\r\nif x > 100:\r\n    five = x // 100 * 20\r\nif int(str(x)[1]) > 5:\r\n    five += 10\r\nq.append([0, five])\r\npath = set()\r\nwhile len(q):\r\n    coins = q.pop()\r\n    for v in graph(coins):\r\n        # print(v)\r\n        if coins[0] * 3 + coins[1] * 5 == x:\r\n            print(*coins)\r\n            exit()\r\n        else:\r\n            q.appendleft(v)\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "from collections import deque\r\n\r\n\r\ndef graph(val):\r\n    return [[val[0] + 1, val[1]], [val[0], val[1] + 1]]\r\n\r\n\r\nx = int(input())\r\nq = deque()\r\nfive = 0\r\nif x > 100:\r\n    five = x // 100 * 20\r\n    if int(str(x)[1]) > 5:\r\n        five += 10\r\nq.append([0, five])\r\npath = set()\r\nwhile len(q):\r\n    coins = q.pop()\r\n    for v in graph(coins):\r\n        # print(v)\r\n        if coins[0] * 3 + coins[1] * 5 == x:\r\n            print(*coins)\r\n            exit()\r\n        else:\r\n            q.appendleft(v)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "from collections import deque\r\n\r\n\r\ndef graph(val):\r\n    return [[val[0] + 1, val[1]], [val[0], val[1] + 1]]\r\n\r\n\r\nx = int(input())\r\nq = deque()\r\nq.append([0, 0])\r\npath = set()\r\nwhile len(q):\r\n    coins = q.pop()\r\n    for v in graph(coins):\r\n        # print(v)\r\n        if coins[0] * 3 + coins[1] * 5 == x:\r\n            print(*coins)\r\n            exit()\r\n        else:\r\n            q.appendleft(v)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "def gcd_ext(a, b):\n    if b == 0:\n        return a, 1, 0\n    d, x, y = gcd_ext(b, a % b)\n    x, y = y, x - (a // b) * y\n    return d, x, y\n\n\nc = int(input())\na = 3\nb = 5\n\nd, x0, y0 = gcd_ext(a, b)\n\nbest_ans = (1e9, 1e9)\nfor k in range(-int(1e5), int(1e5)):\n\tx = x0*(c//d) - (b//d) * k\n\ty = y0*(c//d) + (a//d) * k\n\n\tif x + y < sum(best_ans) and x >= 0 and y >= 0:\n\t\tbest_ans = (x, y)\n\nprint(*best_ans)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\n\nfor i in range(1000):\n\tfor j in range(1000):\n\t\tif (5 * j + 3 * i == n):\n\t\t\tprint(i, j)\n\t\t\texit()\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\n\nfor i in range(1000):\n\tfor j in range(1000):\n\t\tif (5 * i + 3 * j == n):\n\t\t\tprint(i, j)\n\t\t\texit()\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from math import ceil\n\nn = int(input())\n\na = n // 3\nb = a*3 // 5\nc = n - b * 5\nd = ceil(c / 3)\n\nprint(d, b)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <iostream>\r\n#include <sstream>\r\n#include <string>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <functional>\r\n#include <map>\r\n#include <bitset>\r\n#include <set>\r\n#include <deque>\r\n#include <queue>\r\n#include <stack>\r\n#include <unordered_map>\r\n#include <fstream>\r\n#include <unordered_set>\r\n#include <numeric>\r\n#include <math.h>\r\n#define _default ios_base::sync_with_stdio(false); cin.tie(nullptr); cout.tie(nullptr); cout << fixed; cout.precision(10);\r\ntypedef long long ll; \r\n\r\nusing namespace std;\r\n\r\nconst ll mod = (ll)998244353;\r\n\r\nll gcd(ll a, ll b) {\r\n\treturn b ? gcd(b, a % b) : a;\r\n}\r\n\r\nll lcm(ll a, ll b) {\r\n\treturn a / gcd(a, b) * b;\r\n}\r\n\r\n//\u0421\u043e\u0447\u0435\u0442\u0430\u043d\u0438\u044f\r\nll nck(ll n, ll k) {\r\n\tll res = 1;\r\n\tfor (int i = n; i > n - k; --i) {\r\n\t\tres *= i;\r\n\t}\r\n\tfor (int i = 2; i <= k; ++i)\r\n\t\tres /= i;\r\n\treturn res;\r\n}\r\n\r\n\r\nsigned main() {\r\n\t_default;\r\n\r\n\tll x; cin >> x;\r\n\r\n\tmap<int, int> m = { {4, 9}, {3, 3}, {2, 12}, {1, 6} };\r\n\r\n\tint three = 0;\r\n\tint five = 0;\r\n\r\n\tif (x % 5 == 0) {\r\n\t\tcout << 0 << \" \" << x / 5 << endl;\r\n\t}\r\n\telse if (x < 5) {\r\n\t\tcout << 1 << \" \" << 0 << endl;\r\n\t}\r\n\telse {\r\n\t\tint ost = x % 5;\r\n\t\tif (m[ost] > x) {\r\n\t\t\tcout << x / 3 << \" \" << 0 << endl;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcout << m[ost] / 3 << \" \" << (x - m[ost]) / 5 << endl;\r\n\t\t}\r\n\t}\r\n\t\r\n\r\n\r\n\treturn 0;\r\n}\r\n\r\n\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "a = int(input())\ns = 0\nif a % 5 == 0:\n\tprint(0, a // 5)\nelif a % 3 == 0:\n\tprint(0, a // 3)\nelse:\n\twhile True:\n\t\ta -= 1\n\t\ts += 1\n\t\tif s % 3 == 0 and a % 5 == 0 and s > 0:\n\t\t\tbreak\n\tprint(s // 3, a // 5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "cost = int(input())\none_coin = 3\ntwo_coin = 5\nanswer_1 = 0\nanswer_2 = 0\n\ndef checker(cost): \n    if cost%one_coin==0:\n        return one\n    else if cost%two_coint==0: \n        return two\n        \nwhile cost > 0: \n    if checker(cost) == \"one\": \n        answer_1 += cost/one_coin\n    else if checker(cost) == \"two\": \n        answer_2 += cost/two_coin\n    else: \n        cost = cost-one_coint\n        answer_1+=1\n\nprint(answer_1, answer_2)\n    \n    \n",
                "verdict": "Runtime Error"
            },
            {
                "code": "a=int(input())\nx=a//5\nif (a-x*5)%3==0:\n    print(x, (a-x*5)//3)\nelif (a-x*5)%3==1:\n    x-=1\n    print(x, (a-x*5)//3)\nelse:\n    x-=2\n    print(x, (a-x*5)//3)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\r\nfor i in range(a, 0, -3):\r\n    if (i//5)*5 + ((a-i)//3)*3 == a:\r\n        print((a-i)//3, i//5)\r\n        break",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\r\nfor i in range(a, 0, -1):\r\n    if (i//5)*5 + ((a-i)//3)*3 == a:\r\n        print((a-i)//3, i//5)\r\n        break",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\ndct = {'3': 0, '5' : 0}\r\ndct['5'] += (n // 15) * 3\r\nx = n % 15\r\nif n % 5 == 0:\r\n    dct['5'] = n // 5\r\nelif (n - 5) % 3 == 0:\r\n    dct['5'] += 1\r\n    dct['3'] += (n-5) // 3\r\nelif (n - 10) % 3 == 0:\r\n    dct['5'] += 2\r\n    dct['3'] += (n - 10) // 3\r\nprint(dct['3'], dct['5'])",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\ndct = {'3': 0, '5' : 0}\r\ndct['5'] += (n // 15) * 3\r\nx = n % 15\r\nif (n - 5) % 3 == 0:\r\n    dct['5'] += 1\r\n    dct['3'] += (n-5) // 3\r\nelif (n - 10) % 3 == 0:\r\n    dct['5'] += 2\r\n    dct['3'] += (n - 10) // 3\r\nprint(dct['3'], dct['5'])",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <iostream>\r\n#include <algorithm>\r\nusing namespace std;\r\n\r\n\r\nint main() {\r\n    long long n;\r\n    cin >> n;\r\n    long long m = n;\r\n    long long f1 = 0, t1 = 0, f2 = 0, t2 = 0;\r\n    while (n % 3 != 0) {\r\n        n -= 5;\r\n        f1++;\r\n    }\r\n    while (n > 0) {\r\n        n-=3;\r\n        t1++;\r\n    }\r\n    while (m % 5 != 0) {\r\n        m -= 3;\r\n        t2++;\r\n    }\r\n    while (m > 0) {\r\n        m-=5;\r\n        f2++;\r\n    }\r\n    if (t1 + f1 < t2 + f2)\r\n        cout << t1 << \" \" << f1;\r\n    else\r\n        cout << t2 << \" \" << f2;\r\n    return 0;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\r\n#include <algorithm>\r\nusing namespace std;\r\n\r\n\r\nint main() {\r\n    long long n;\r\n    cin >> n;\r\n    long long f = 0, t = 0;\r\n    while (n >= 5) {\r\n        n -= 5;\r\n        f++;\r\n    }\r\n    while (n > 0) {\r\n        n-=3;\r\n        t++;\r\n    }\r\n    cout << f << \" \" << t;\r\n    return 0;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "a=int(input())\nfive=a//5\nthree=0\nif a//5==0:\n    print(five, 0)\nelse:\n    while((a//5)%3!=0):\n        five-=1\n        tree+=1\n    print(five, three)\n    ",
                "verdict": "Runtime Error"
            },
            {
                "code": "a=int(input())\nfive=a//5\nthree=0\nif a//5==0:\n    print(five, 0)\nelse:\n    while((a//5)>0):\n        five-=1\n        tree+=2\n    print(five, three)\n    ",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nprint((n // 5) * 5 // 3, n // 5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nprint(n // 5, n - (n // 5) * 5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nprint(n // 5,'', n - (n // 5) * 5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nprint(n // 5, ' ', n - (n // 5) * 5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nprint(n // 5, ' ', n - (n // 5) * 3)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nprint(n // 5, ' ', n % 5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\n\r\n\r\ndef find_dig(x, i):\r\n    return True if (x - i * 3) % 5 == 0 else False\r\n\r\n\r\nfor i in range(4):\r\n    if find_dig(x, i):\r\n        print(i, (x - i * 3) // 5)\r\n        break\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\n\r\n\r\ndef find_dig(x, i):\r\n    return True if (x - i * 3) % 5 == 0 else False\r\n\r\n\r\nfor i in range(4):\r\n    if find_dig(x, i):\r\n        print((x - i * 3) // 5)\r\n        break\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\n\r\n\r\ndef last_dig(x):\r\n    return x % 10\r\n\r\nc_five = 0\r\nc_three = 0\r\n\r\nwhile x != 0:\r\n    if last_dig(x) == 5:\r\n        c_five += 1\r\n        x -= 5\r\n    elif last_dig(x) == 0:\r\n        c_five += 2\r\n        x -= 10\r\n    elif last_dig(x) == 9:\r\n        c_three += 3\r\n        x -= 9\r\n    else:\r\n        c_three += 1\r\n        x -= 3\r\n\r\nprint(c_three, c_five)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\r\n\r\n\r\ndef last_dig(x):\r\n    return x % 10\r\n\r\nc_five = 0\r\nc_three = 0\r\n\r\nwhile x != 0:\r\n    if last_dig(x) == 5:\r\n        c_five = c_five + x // 5\r\n        x = x // 5\r\n        \r\n    elif last_dig(x) == 0:\r\n        c_five += 2\r\n        x -= 10\r\n    else:\r\n        c_three += 1\r\n        x -= 3\r\n\r\nprint(c_three, c_five)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\r\n\r\n\r\ndef last_dig(x):\r\n    return x % 10\r\n\r\nc_five = 0\r\nc_three = 0\r\n\r\nwhile x != 0:\r\n    if last_dig(x) == 5:\r\n        c_five += 1\r\n        x -= 5\r\n    elif last_dig(x) == 0:\r\n        c_five += 2\r\n        x -= 10\r\n    else:\r\n        c_three += 1\r\n        x -= 3\r\n\r\nprint(c_three, c_five)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\r\n\r\n\r\ndef last_dig(x):\r\n    return True if x % 10 == 5 or x % 10 == 0 else False\r\n\r\n\r\nc_five = 0\r\nc_three = 0\r\n\r\nwhile x != 0:\r\n    if last_dig(x):\r\n        c_five += 1\r\n        x -= 5\r\n    else:\r\n        c_three += 1\r\n        x -= 3\r\n\r\nprint(c_three, c_five)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\r\n\r\n\r\ndef last_dig(x):\r\n    return True if x % 10 == 5 or x % 10 == 0 else False\r\n\r\n\r\nc_five = 0\r\nc_three = 0\r\n\r\nwhile x != 0:\r\n    if last_dig(x):\r\n        c_five += 1\r\n        x -= 5\r\n    else:\r\n        c_three += 1\r\n        x -= 3\r\n\r\nprint(c_five)\r\nprint(c_three)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nthree = 0\r\nfive = 0\r\ni = 1\r\nwhile True:\r\n    if x % 5 == 0:\r\n        five = x / 5\r\n        break\r\n    elif x % 3 == 0:\r\n        three = x / 3\r\n        break\r\n    elif (x / 5*i) % 3 == 0:\r\n        five += 1\r\n        x -= 5\r\n    elif (x / 3*i) % 5 == 0:\r\n        three += 1\r\n        x -= 3\r\n    \r\n    i += 1\r\nprint(int(three), int(five))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\r\nfive = a // 5\r\nthree = 0\r\nif five*5 + three*3 == a:\r\n    print(0, five)\r\nelse:\r\n    while five*5 + three*3 != a:\r\n        five -= 1\r\n        three = (a - (five * 5)) // 3\r\n    print(three, five)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\r\nfive = a // 5\r\nif a == 3:\r\n    print(1, 0)\r\nelif a % 5 == 0 and a % 3 == 0:\r\n    print(0, five)\r\nelse:\r\n    five = a // 5\r\n    three = a - (five * 5) // 3\r\n    if five*5 + three*3 == a:\r\n        print(0, five)\r\n    else:\r\n        while five*5 + three*3 != a:\r\n            five -= 1\r\n            three = (a - (five * 5)) // 3\r\n        print(three, five)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\r\nif a == 3:\r\n    print(1, 0)\r\nelse:\r\n    five = a // 5\r\n    three = a - (five * 5) // 3\r\n    if five*5 + three*3 == a:\r\n        print(0, five)\r\n    else:\r\n        while five*5 + three*3 != a:\r\n            five -= 1\r\n            three = (a - (five * 5)) // 3\r\n        print(three, five)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\r\nfive = a // 5\r\nthree = a - (five * 5) // 3\r\nif five*5 + three*3 == a:\r\n    print(0, five)\r\nelse:\r\n    while five*5 + three*3 != a:\r\n       five -= 1\r\n       three = (a - (five * 5)) // 3\r\n    print(three, five)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\nfive = 0\nthree = 0\nwhile a >= 5:\n    if not(a % 3 == 0 and a % 5 != 0):\n        a -= 5\n        five += 1\n    else: break\nthree = a // 3\nprint(three, five)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\nnum = int (input ())\r\nprint(str(math.ceil((num - (num // 5) * 5) / 3)) + \" \" + str(int (num / 5)))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\nnum = int (input ())\r\nprint(str(math.ceil((num - (num // 5) * 5) / 3)) + \" \" + str(int (num / 5)))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\np, t, Flag = 1, 0, True\nif n % 5 == 0:\n    print(0, n//5)\n    exit()\nwhile Flag == True:\n    if (n - 5*p) % 3 != 0:\n        p += 1\n        continue\n    else:\n        Flag = False\n        t = (n - 5*p) // 3\nprint(t, p)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\np, t, Flag = 0, 0, True\np = n // 5\nn -= p * 5\nif n // 3 != 0:\n   t = n // 3\nelse:\n    t = 1\nprint(t, p)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\n\r\nif n == 3:\r\n    print(1, 0)\r\nelif n == 5:\r\n    print(0, 1)\r\nelif n == 6:\r\n    print(2, 0)\r\nelse:\r\n    if n % 5 == 3:\r\n        print(1, ((n - 3) // 5))\r\n    elif n % 5 == 4:\r\n        print(3, ((n - 9) // 5))\r\n    elif n % 5 == 0:\r\n        print(0, n // 5)\r\n    elif n % 5 == 1:\r\n        print(2, ((n - 6) // 5))\r\n    elif n % 5 == 2:\r\n        print(4, ((n - 12) % 5))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def solve(x: int) -> None:\n    if x % 5 == 0:\n        print(f'0 {x // 5}')\n        return\n    \n    results = []\n    fivescount = 0\n\n    while True:\n        xsum = 0\n        threescount = 0\n\n        xsum += fivescount * 5\n\n        while xsum < x:\n            xsum += 3\n            threescount += 1\n        \n        if xsum == x:\n            results.append([str(threescount), str(fivescount)])\n            fivescount += 1\n        elif x < (fivescount * 5):\n            try:\n                print(' '.join(results[-1:][0]))\n            except IndexError:\n                pass\n            break\n        else:\n            fivescount += 1\n        \n        # print(f'xsum: {xsum} ; results: {results} ; threes: {threescount} ; fives: {fivescount}')\n\nsolve(int(input()))",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "def solve(x: int) -> None:\n    if x % 5 == 0:\n        print(f'0 {x // 5}')\n        return\n    \n    a, b = 0, 0\n    results = []\n    previousstatus = False\n    fivescount = 0\n\n    while True:\n        xsum = 0\n        threescount = 0\n\n        xsum += fivescount * 5\n\n        while xsum < x:\n            xsum += 3\n            threescount += 1\n        \n        if xsum == x:\n            results.append([str(threescount), str(fivescount)])\n            fivescount += 1\n            previousstatus = True\n        elif previousstatus and x < (fivescount * 5):\n            print(' '.join(results[-1:][0]))\n            break\n        else:\n            fivescount += 1\n            previousstatus = False\n\nsolve(int(input()))",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\na = x // 3\nb = 0\n\nif x % 3 == 1:\n    a -= 1\n    b += 2\nelif x % 3 == 2:\n    b += 1\n\nprint(a, b)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\ndef f(x):\r\n    ans_m = x\r\n    ans = []\r\n    for r3 in range(x//3+1):\r\n        for r5 in range(x//3+1):\r\n            if r3*3 + r5*5 == x and r3+r5 < ans_m:\r\n                ans = [r3,r5]\r\n                ans_m = r3+r5\r\n    return ans\r\nans = f(x)\r\nprint(ans[0],ans[1])\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\r\nans_m = x\r\nans = []\r\ndef f(x):\r\n    ans_m = x\r\n    ans = []\r\n    for r3 in range(x//3):\r\n        for r5 in range(x//3):\r\n            if r3*3 + r5*5 == x and r3+r5 < ans_m:\r\n                ans = [r3,r5]\r\n                ans_m = r3+r5\r\n    return ans\r\nans = f(x)\r\nprint(ans[0],ans[1])",
                "verdict": "Runtime Error"
            },
            {
                "code": "x = int(input())\r\nans_m = 10**9\r\nans = []\r\n\r\nfor r3 in range(x//3 + 1):\r\n    for r5 in range(x//3 + 1):\r\n        if r3*3 + r5*5 == x:\r\n            if r3+r5 < ans_m:\r\n                ans = [r3,r5]\r\n                ans_m = r3+r5\r\nprint(ans[0],ans[1])",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\r\nans_m = []\r\nans = []\r\nfor r3 in range(x//3 + 1):\r\n    for r5 in range(x//3 + 1):\r\n        if r3*3 + r5*5 == x:\r\n            ans.append([r3,r5])\r\n            ans_m.append(r3+r5)\r\na = min(ans_m)\r\ni = ans_m.index(a)\r\nprint(ans[i][0],ans[i][1])",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\r\nans_m = []\r\nans = []\r\nfor r3 in range(x//3 + 1):\r\n    for r5 in range(x//3 + 1):\r\n        if r3*3 + r5*5 == x:\r\n            ans.append([r3,r5])\r\n            ans_m.append(r3+r5)\r\na = min(ans_m)\r\ni = ans_m.index(a)\r\nprint(ans[i][0],ans[i][1])",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nm3 = 0\r\nm5 = 0\r\nwhile n > 0:\r\n    if n == 4:\r\n        m5 = 1\r\n        break\r\n    elif n % 5 == 0:\r\n        m5 += n // 5\r\n        n = n % 5\r\n    elif n % 3 == 0:\r\n        m3 += n // 3\r\n        n = n % 3\r\n    else:\r\n        m3 += 1\r\n        m5 += 1\r\n        n -= 8\r\nprint(m3, m5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nm3 = 0\r\nm5 = 0\r\nwhile n > 0:\r\n    if n % 5 == 0:\r\n        m5 += n // 5\r\n        n = n % 5\r\n    elif n % 3 == 0:\r\n        m3 += n // 3\r\n        n = n % 3\r\n    else:\r\n        m3 += 1\r\n        m5 += 1\r\n        n -= 8\r\nprint(m3, m5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nm3 = 0\r\nm5 = 0\r\nwhile n > 0:\r\n    if n % 5 == 0:\r\n        m5 += n // 5\r\n        n = n % 5\r\n    elif n % 3 == 0:\r\n        m3 += n // 3\r\n        n = n % 3\r\n    else:\r\n        m3 += n // 8\r\n        m5 += n // 8\r\n        n = n % 8\r\nprint(m3, m5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nm3 = 0\r\nm5 = 0\r\nwhile n > 0:\r\n    if n % 5 == 0:\r\n        m5 += n // 5\r\n        n = n % 5\r\n    elif n % 3 == 0:\r\n        m3 += n // 3\r\n        n = n % 3\r\n    else:\r\n        m3 += n // 8\r\n        m5 += n // 8\r\n        n = n % 8\r\nprint(m3, m5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nm3 = 0\r\nm5 = 0\r\nif n % 5 == 0:\r\n    m5 = n // 5\r\nelif n % 3 == 0:\r\n    m3 = n // 3\r\nelse:\r\n    m5 = n // 5\r\n    n = n % 5\r\n    if n > 3:\r\n        m5 += 1\r\n    else:\r\n        m3 += 1\r\nprint(m3, m5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\r\ncount = 0\r\nwhile a != 0:\r\n    if a % 5 == 0:\r\n        a = a // 5\r\n        print(count, a)\r\n        break\r\n    if a % 5 != 0:\r\n        while a % 5 != 0:\r\n            a -= 3\r\n            count += 1",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\r\nprint((a - (a // 5) * 5) // 3,a // 5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nif (x % 5 == 0):\r\n    print(0, x // 5)\r\nelse:\r\n    n = x // 5\r\n    for i in range(n, 0, -1):\r\n        if ((x - 5 * i) / 3 - int((x - 5 * i) / 3) < 10e-8):\r\n            print((x - 5 * i) // 3, i)\r\n            break;",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nif (x % 5 == 0):\r\n    print(0, x // 5)\r\nelif (x % 3 == 0):\r\n    print(x // 3, 0)\r\nelse:\r\n    n = x // 5\r\n    for i in range(n, 0, -1):\r\n        if ((x - 5 * i) / 3 - int((x - 5 * i) / 3) < 10e-8):\r\n            print((x - 5 * i) // 3, i)\r\n            break;\r\n\r\n\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nif (x % 5 == 0):\r\n    print(0, x // 5)\r\nelif (x % 3 == 0):\r\n    print(x // 3, 0)\r\nelse:\r\n    n = x // 5\r\n    for i in range(n, 0, -1):\r\n        if ((x - 5 * i) / 3 - int((x - 5 * i) / 3) < 10e-8):\r\n            print((x - 5 * i) // 3, i)\r\n            break\r\n\r\n\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nif (x % 5 == 0):\r\n    print(0, x // 5)\r\nelif (x % 3 == 0):\r\n    print(x // 3, 0)\r\nelse:\r\n    n = x // 5\r\n    for i in range(n, 0, -1):\r\n        if ((x - 5 * i) / 3 - int((x - 5 * i) / 3) == 0):\r\n            print((x - 5 * i) // 3, i)\r\n            break;",
                "verdict": "Wrong Answer"
            },
            {
                "code": "long long int found_number = 1;\r\nlong long int n = 0;\r\n\r\nfor (long long int i = 1; ; ++i) {\r\nif (!has_repeated_digits(i)) {\r\n++n;\r\n\r\nif (n == N) {\r\nfound_number = i;\r\nbreak;\r\n}\r\n}\r\n}\r\n\r\nstd::cout << found_number << std::endl;",
                "verdict": "Runtime Error"
            },
            {
                "code": "long long int found_number = 1;\r\nlong long int n = 0;\r\n\r\nfor (long long int i = 1; ; ++i) {\r\nif (!has_repeated_digits(i)) {\r\n++n;\r\n\r\nif (n == N) {\r\nfound_number = i;\r\nbreak;\r\n}\r\n}\r\n}\r\n\r\nstd::cout << found_number << std::endl;",
                "verdict": "Runtime Error"
            },
            {
                "code": "res = int(input())\r\ndeli = res//5\r\ndeal = True\r\nif(res % 5 == 0):\r\n    print(0, deli)\r\n    deal = False\r\nwhile(deal):\r\nif((res - deli * 5) % 3 == 0):\r\n    print((res - deli * 5) // 3, deli)\r\n    break\r\nelse:\r\n    deli = deli - 1",
                "verdict": "Runtime Error"
            },
            {
                "code": "res = int(input())\r\ndeli = res//5\r\ndeal = True\r\nif(res % 5 == 0):\r\nprint(0, deli)\r\ndeal = False\r\nwhile(deal):\r\nif((res - deli * 5) % 3 == 0):\r\nprint((res - deli * 5) // 3, deli)\r\nbreak\r\nelse:\r\ndeli = deli - 1",
                "verdict": "Runtime Error"
            },
            {
                "code": "price = int(input())\r\ncount = [0,0]\r\ncount[1] = price// 5\r\nprice =  price % 5\r\ncount[0] = price// 3\r\nprice = price % 3\r\nif(price == 3 or price == 1 or price == 2):\r\n    count[0] = count[0] + 1\r\n    print(str(count[0]) + ' ' + str(count[1]))\r\nelse:\r\n    count[1] = count[1] + 1\r\n    print(str(count[0]) + ' ' + str(count[1]))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "price = int(input())\r\ncount = [0,0]\r\ncount[1] = price// 5\r\nprice =  price % 5\r\ncount[0] = price// 3\r\nprice = price % 3\r\nif(price <= 3):\r\n    count[0] = count[0] + 1\r\n    print(str(count[0]) + ' ' + str(count[1]))\r\nelse:\r\n    count[1] = count[1] + 1\r\n    print(str(count[0]) + ' ' + str(count[1]))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "price = int(input())\r\ncount = [0,0]\r\nwhile(True):\r\n    if(price <= 0):\r\n        print(str(count[0]) + ' ' + str(count[1]))\r\n        break\r\n    if(price % 5 == 0):\r\n        count[1] = int((price / 5) + count[1])\r\n        print(str(count[0]) + ' ' + str(count[1]))\r\n        break\r\n    elif(price % 3 == 0):\r\n        count[0] = int((price / 3) + count[0])\r\n        print(str(count[0]) + ' ' + str(count[1]))\r\n        break\r\n    else:\r\n        if(price <= 3):\r\n            price = price - 3  \r\n            count[0] = int(count[0] + 1)  \r\n        else:\r\n            price = price - 5\r\n            count[1] = int(count[1] + 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "price = int(input())\r\ncount = [0,0]\r\nwhile(True):\r\n    if(price <= 0):\r\n        print(str(count[0]) + ' ' + str(count[1]))\r\n        break\r\n    if(price % 5 == 0):\r\n        count[1] = int((price / 5) + count[1])\r\n        print(str(count[0]) + ' ' + str(count[1]))\r\n        break\r\n    elif(price % 3 == 0):\r\n        count[0] = int((price / 3) + count[0])\r\n        print(str(count[0]) + ' ' + str(count[1]))\r\n        break\r\n    else:\r\n        if(price <= 3):\r\n            price = price - 3  \r\n            count[0] = int(count[0] + 1)  \r\n        else:\r\n            price = price - 5\r\n            count[1] = int(count[1] + 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "price = int(input())\r\ncount = [0,0]\r\nwhile(True):\r\n    if(price <= 0):\r\n        print(str(count[0]) + ' ' + str(count[1]))\r\n        break\r\n    if(price % 5 == 0):\r\n        count[1] = int((price / 5) + count[1])\r\n        print(str(count[0]) + ' ' + str(count[1]))\r\n        break\r\n    elif(price % 3 == 0):\r\n        count[0] = int((price / 3) + count[0])\r\n        print(str(count[0]) + ' ' + str(count[1]))\r\n        break\r\n    else:\r\n        price = price - 5\r\n        count[1] = int(count[1] + 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "price = int(input())\ncount = [0,0]\nwhile(True):\n    if(price <= 0):\n        print(count)\n        break\n    if(price % 5 == 0):\n        count[1] = int((price / 5) + count[1])\n        print(count)\n        break\n    elif(price % 3 == 0):\n        count[0] = int((price / 3) + count[0])\n        print(count)\n        break\n    else:\n        price = price - 5\n        count[1] = int(count[1] + 1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "price = int(input())\ncount = [0,0]\nwhile(True):\n    if(price <= 0):\n        print(count)\n        break\n    if(price % 5 == 0):\n        count[1] = int((price / 5) + count[1])\n        print(count)\n        break\n    elif(price % 3 == 0):\n        count[0] = int((price / 3) + count[0])\n        print(count)\n        break\n    else:\n        price = price - 5\n        count[1] = int(count[1] + 1)\n        ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nk=0\r\nk=n//5\r\nif k*5==n:\r\n    print(0, k)\r\nelse:\r\n    print(k)\r\n    j=0\r\n    a=0\r\n    while a==0:\r\n        j=(n-k*5)//3\r\n        if k*5+j*3==n:\r\n            print(j,k)\r\n            a+=1\r\n        else:\r\n            k-=1\r\n        \r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nk=0\r\nwhile (k+1)*5<=n:\r\n    k+=1\r\nif k*5==n:\r\n    print(0, k)\r\nelse:\r\n    j=0\r\n    a=0\r\n    while a==0:\r\n        while k*5+j*3<n:\r\n            j+=1\r\n        else:\r\n            if k*5+j*3>n:\r\n                k-=1\r\n            else:\r\n                print(j,k)\r\n                a+=1\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nk=0\r\nwhile (k+1)*5<=n:\r\n    k+=1\r\nif k*5==n:\r\n    print(k, 0)\r\nelse:\r\n    j=0\r\n    a=0\r\n    while a==0:\r\n        while k*5+j*3<n:\r\n            j+=1\r\n        else:\r\n            if k*5+j*3>n:\r\n                k-=1\r\n            else:\r\n                print(j,k)\r\n                a+=1\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nfive = 0\r\nthree = 0\r\nwhile x != 0:\r\n    if x == 5:\r\n        x -= 5\r\n        five += 1\r\n    else:\r\n        if (x - 5) % 5 == 0:\r\n            x -= 5\r\n            five += 1\r\n        elif x - 5 == 5:\r\n            x-=5\r\n            five += 1\r\n        else:\r\n            x -= 3\r\n            three += 1\r\nprint(three, five)\r\n\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\r\nfive = 0\r\nthree = 0\r\nwhile x != 0:\r\n    if x == 5:\r\n        x -= 5\r\n        five += 1\r\n    else:\r\n        if x - 5 > 6:\r\n            x -= 5\r\n            five += 1\r\n        elif x - 5 == 5:\r\n            x-=5\r\n            five += 1\r\n        else:\r\n            x -= 3\r\n            three += 1\r\nprint(three, five)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "#include <iostream>\nusing namespace std;\nint main()\n{\n    int x, five = 0, three = 0;\n    cin >> x;\n    while(x > 6)\n    {   \n        if(x - 5 != 5 && x - 5 > 6)\n        {\n            x -=5;\n            five+=1;\n        } else if(x - 5 == 5)\n        {\n            x -= 5;\n            five+=1;\n            break;\n        } else{\n            break;\n        }\n    }\n    if(x == 5)\n    {\n        x -=5;\n        five+=1;\n    }\n    while(x != 0)\n    {\n        x-=3;\n        three += 1;\n    }\n    printf(\"%d %d\", three, five);\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "using namespace std;\nint main()\n{\n    int x, five = 0, three = 0;\n    cin >> x;\n    while(x > 6)\n    {\n        x -= 5;\n        five += 1;\n    }\n    if(x == 5)\n    {\n        x -= 5;\n        five +=1;\n    }\n    while(x != 0)\n    {\n        x-=3;\n        three += 1;\n    }\n    printf(\"%d %d\", three, five);\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\n\nusing namespace std;\n\nint main()\n{\n    int x, five = 0, three = 0;\n    cin >> x;\n    while(x > 6)\n    {\n        x -= 5;\n        five += 1;\n    }\n    if(x == 5)\n    {\n        x -= 5;\n        five +=1;\n    }\n    while(x != 0)\n    {\n        x-=3;\n        three += 1;\n    }\n    printf(\"%d %d\", three, five);\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\n\nusing namespace std;\n\nint main()\n{\n    int x, five = 0, three = 0;\n    cin >> x;\n    while(x > 6)\n    {\n        x -= 5;\n        five += 1;\n    }\n    if(x == 5)\n    {\n        x -= 5;\n        five +=1;\n    }\n    while(x != 0)\n    {\n        x-=3;\n        three += 1;\n    }\n    printf(\"%d %d\", three, five);\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "x = int(input())\r\nfive = 0\r\nthree = 0\r\nwhile x > 6:\r\n    x -= 5\r\n    five += 1\r\nif x == 5:\r\n    x -= 5\r\n    five += 1\r\nelse:\r\n    while x != 0:\r\n        x -= 3\r\n        three += 1\r\nprint(three, five)\r\n\r\n\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\r\nfive = 0\r\nthree = 0\r\nwhile x > 6:\r\n    x -= 5\r\n    five += 1\r\nif x == 6:\r\n    three += 2\r\nif x < 6:\r\n    five += 1\r\nprint(three, five)\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nfive = 0\r\nthree = 0\r\nwhile x != 0:\r\n    if x == 5:\r\n        x -= 5\r\n        five += 1\r\n    else:\r\n        if x > 6:\r\n            x -= 5\r\n            five += 1\r\n        else:\r\n            x -= 3\r\n            three += 1\r\nprint(three, five)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\r\nfive = 0\r\nthree = 0\r\nwhile x != 0:\r\n    if x == 5:\r\n        x -= 5\r\n        five += 1\r\n    else:\r\n        if x > 6:\r\n            x -= 5\r\n            five += 1\r\n        else:\r\n            x -= 3\r\n            three += 1\r\nprint(three, five)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "import math\r\nx = int(input())\r\np = math.ceil(n / 5)\r\nt = 0\r\nwhile p > 0 and p * 5 + t * 3 != x:\r\n    p -= 1\r\n    t = (x - p * 5) // 3\r\nprint(t,p)",
                "verdict": "Runtime Error"
            },
            {
                "code": "import math\r\nx = int(input())\r\np = math.ceil(n / 5)\r\nt = 0\r\nwhile p > 0 and p * 5 + t * 3 != x:\r\n    p -= 1\r\n    t = (x - p * 5) // 3\r\nprint(str(t) + \" \" + str(p))",
                "verdict": "Runtime Error"
            },
            {
                "code": "import math\r\nx = int(input())\r\nk = math.ceil(n / 5)\r\np = 0\r\nwhile k > 0 and k * 5 + p * 3 != x:\r\n    k -= 1\r\n    p = (x - k * 5) // 3\r\nprint(str(k) + \" \" + str(p))",
                "verdict": "Runtime Error"
            },
            {
                "code": "import math\r\nx = int(input())\r\nk = math.ceil(n / 5)\r\np = 0\r\nwhile k > 0 and k * 5 + p * 3 != x:\r\n    k -= 1\r\n    p = (x - k * 5) // 3\r\nprint(str(p) + \" \" + str(k))",
                "verdict": "Runtime Error"
            },
            {
                "code": "import math\r\nx = int(input())\r\nk = math.ceil(n / 5)\r\np = 0\r\nwhile k > 0 and k * 5 + p * 3 != x:\r\nk -= 1\r\np = (x - k * 5) // 3\r\nprint(str(k) + \" \" + str(p))",
                "verdict": "Runtime Error"
            },
            {
                "code": "import math\r\nx = int(input())\r\nk = math.ceil(n / 5)\r\np = 0\r\nwhile k > 0 and k * 5 + p * 3 != x:\r\nk -= 1\r\np = (x - k * 5) // 3\r\nprint(str(p) + \" \" + str(k))",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nk = n // 5\r\np = 0\r\nwhile k > 0 and k * 5 + p * 3 != n:\r\n    k -= 1\r\n    p = (n - k * 5) // 3\r\nprint(str(p) + \" \" + str(k))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nk = n // 5\r\np = 0\r\nwhile k > 0 and k * 5 + p * 3 != n:\r\n    k -= 1\r\n    p = (n - k * 5) // 3\r\nprint(str(k) + \" \" + str(p))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nt = 0\nwhile x % 5 != 0:\n    x = x - 3\n    t = t + 1\nprint(t, ' ', x // 5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nt = 0\nwhile x % 5 != 0 and x >= 5:\n    x = x - 3\n    t = t + 1\nprint(t, ' ', x // 5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nt = 0\nwhile x % 5 != 0:\n    x = x - 3\n    t = t + 1\nprint(t, ' ', x // 5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nt = 0\nwhile x % 5 != 0:\n    x = x - 3\n    t = t + 1\nprint(x // 5, ' ', t)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "3 5",
                "verdict": "Runtime Error"
            },
            {
                "code": "x = int(input()) \r\ntr = 0 \r\npr = 0 \r\nif x%5 == 0: \r\npr = x//5 \r\nx = 0 \r\nelse: \r\nif x > 12: \r\nx -= 12 \r\npr += x//5 \r\nx = 12 + x%5 \r\nwhile x != 0: \r\nif x%3 == 0 and x//3 < 5: \r\ntr = x//3 \r\nx = 0 \r\nelse: \r\nx -= 5 \r\npr += 1 \r\nprint(tr, pr)",
                "verdict": "Runtime Error"
            },
            {
                "code": "15 2 1",
                "verdict": "Runtime Error"
            },
            {
                "code": "15 0 3",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\na = n//5\r\nb = n%5\r\nif (b>=3 and b%3==0) or n%5==0:\r\n    print(int(b//3),a)\r\nelse:\r\n    a-=1\r\n    b = n - a*5\r\n    b = b/3\r\n    print(int(b),a)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = n//5\r\nb = n%5\r\nif b>=3 or n%5==0:\r\n    print(int(b//3),a)\r\nelse:\r\n    a-=1\r\n    b = n - a*5\r\n    b = b/3\r\n    print(int(b),a)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x=int(input())\nif 3<=x<=10**19:\n n=x//5 \n b=n*5\n if x==b:\n print('0',n)\n else:\n c=(x-b)/3\n if c.is_integer():\n print(int(c),n)\n else:\n while not c.is_integer():\n n=n-1\n b=n*5\n c=(x-b)/3\n if float(c).is_integer():\n print(int(c),n)",
                "verdict": "Runtime Error"
            },
            {
                "code": "x=int(input())\nif 3<=x<=10**19:\n n=x//5 \n b=n*5\n if x==b:\n print('0',n)\n else:\n c=(x-b)/3\n if c.is_integer():\n print(int(c),n)\n else:\n while not c.is_integer():\n n=n-1\n b=n*5\n c=(x-b)/3\n if float(c).is_integer():\n print(int(c),n)",
                "verdict": "Runtime Error"
            },
            {
                "code": "x=int(input())\nif 3<=x<=10**19:\n n=x//5 \n b=n*5\n if x==b:\n print('0',n)\n else:\n c=(x-b)/3\n if c.is_integer():\n print(int(c),n)\n else:\n while not c.is_integer():\n n=n-1\n b=n*5\n c=(x-b)/3\n if float(c).is_integer():\n print(int(c),n)",
                "verdict": "Runtime Error"
            },
            {
                "code": "x=int(input())\nif 3<=x<=10**19:\n n=x//5 \n b=n*5\n if x==b:\n print('0',n)\n else:\n c=(x-b)/3\n if c.is_integer():\n print(int(c),n)\n else:\n while not c.is_integer():\n n=n-1\n b=n*5\n c=(x-b)/3\n if float(c).is_integer():\n print(int(c),n)",
                "verdict": "Runtime Error"
            },
            {
                "code": "x=int(input())\nif 3<=x<=10*19:\n    n=x//5 \n    b=n5\n    if x==b:\n        print('0',n)\n    else:\n        c=(x-b)/3\n        if c.is_integer():\n            print(int(c),n)\n        else:\n            while not c.is_integer():\n                n=n-1\n                b=n*5\n                c=(x-b)/3\n                if float(c).is_integer():\n                    print(int(c),n)",
                "verdict": "Runtime Error"
            },
            {
                "code": "x=int(input())\nif 3<=x<=10*19:\n    n=x//5 \n    b=n5\n    if x==b:\n        print('0',n)\n    else:\n        c=(x-b)/3\n        if c.is_integer():\n            print(int(c),n)\n        else:\n            while not c.is_integer():\n                n=n-1\n                b=n*5\n                c=(x-b)/3\n                if float(c).is_integer():\n                    print(int(c),n)",
                "verdict": "Runtime Error"
            },
            {
                "code": "x=int(input())\nif 3<=x<=1000:\n    n=x//5 \n    b=n*5\n    if x==b:\n        print('0',n)\n    else:\n        c=(x-b)/3\n        if c.is_integer():\n            print(int(c),n)\n        else:\n            while not c.is_integer():\n                n=n-1\n                b=n*5\n                c=(x-b)/3\n                if float(c).is_integer():\n                    print(int(c),n)\n    ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x=int(input())\nif 3<=x<=10*19:\n     n=x//5 \n     b=n5\n     if x==b:\n         print('0',n)\n     else:\n         c=(x-b)/3\n         if c.is_integer():\n             print(int(c),n)\n         else:\n             while not c.is_integer():\n                 n=n-1\n                 b=n*5\n                 c=(x-b)/3\n                 if float(c).is_integer():\n                     print(int(c),n)",
                "verdict": "Runtime Error"
            },
            {
                "code": "x=int(input())\nif 3<=x<=10*19:\n    n=x//5 \n    b=n5\n    if x==b:\n        print('0',n)\n    else:\n        c=(x-b)/3\n        if c.is_integer():\n            print(int(c),n)\n        else:\n            while not c.is_integer():\n                n=n-1\n                b=n*5\n                c=(x-b)/3\n                if float(c).is_integer():\n                    print(int(c),n)",
                "verdict": "Runtime Error"
            },
            {
                "code": "u=int(input())\nif 3<=u<=10*19:\n    n=u//5 \n    b=u5\n    if u==b:\n        print('0',u)\n    else:\n        c=(u-b)/3\n        if c.is_integer():\n            print(int(c),u)\n        else:\n            while not c.is_integer():\n                u=u-1\n                b=u*5\n                c=(x-b)/3\n                if float(c).is_integer():\n                    print(int(c),u)",
                "verdict": "Runtime Error"
            },
            {
                "code": "x=int(input())\nif 3<=x<=10*19:\n    n=x//5 \n    b=n5\n    if x==b:\n        print('0',n)\n    else:\n        c=(x-b)/3\n        if c.is_integer():\n            print(int(c),n)\n        else:\n            while not c.is_integer():\n                n=n-1\n                b=n*5\n                c=(x-b)/3\n                if float(c).is_integer():\n                    print(int(c),n)",
                "verdict": "Runtime Error"
            },
            {
                "code": "x = int(input())\nd = 0\nfor t in range(1000000000):\n    if d == 1:\n        break\n    for p in range(1000000000):\n        if t*3+p*5 == x:\n            print(t, p)\n            d = d+1\n            break\n        if t*3+p*5 > x:\n            break",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\nd = 0\nfor t in range(1000):\nif d == 1:\n    break\nfor p in range(1000):\nif t*3+p*5 == x:\n    print(t, p)\n    d = d+1",
                "verdict": "Runtime Error"
            },
            {
                "code": "x = int(input())\nd = 0\nfor t in range(1000):\nif d == 1:\nbreak\nfor p in range(1000):\nif t*3+p*5 == x:\nprint(t, p)\nd = d+1",
                "verdict": "Runtime Error"
            },
            {
                "code": "x = int(input())\r\ntr = 0\r\npr = 0\r\nif x%5 == 0:\r\n    pr = x//5\r\n    x = 0\r\nelse:\r\n    while x > 15:\r\n        x -= 5\r\n        pr += 1\r\n    while x != 0:\r\n        if x%3 == 0 and x//3 < 5:\r\n            tr = x//3\r\n            x = 0\r\n        else:\r\n            x -= 5\r\n            pr += 1\r\nprint(tr, pr)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\r\ntr = 0\r\npr = 0\r\nif x%5 == 0:\r\n    pr = x//5\r\n    x = 0\r\nelse:\r\n    while x != 0:\r\n        if x%3 == 0 and x//3 < 5:\r\n            tr = x//3\r\n            x = 0\r\n        else:\r\n            while x > 15:\r\n                x -= 5\r\n                pr += 1\r\nprint(tr, pr)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\r\ntr = 0\r\npr = 0\r\nif x%5 == 0:\r\n    pr = x//5\r\n    x = 0\r\nelse:\r\n    while x != 0:\r\n        if x%3 == 0 and x//3 < 5:\r\n            tr = x//3\r\n            x = 0\r\n        else:\r\n            x -= 5\r\n            pr += 1\r\nprint(tr, pr)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\r\ntr = 0\r\npr = 0\r\nif x%5 == 0:\r\n    pr = x//5\r\n    x = 0\r\nelse:\r\n    while x != 0:\r\n        if x%3 == 0 and x%5 != 0 and x//3 < 5:\r\n            tr = x//3\r\n            x = 0\r\n        else:\r\n            x -= 5\r\n            pr += 1\r\nprint(tr, pr)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\r\ntr = 0\r\npr = 0\r\nif x%5 == 0:\r\n    x = 0\r\n    pr = x//5\r\nelse:\r\n    while x != 0:\r\n        if x%3 == 0 and x%5 != 0 and x//3 < 5:\r\n            tr = x//3\r\n            x = 0\r\n        else:\r\n            x -= 5\r\n            pr += 1\r\nprint(tr, pr)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nt = 0\r\np = 0\r\nif x%5 == 0:\r\n    p = x//5\r\n    x = 0\r\nelse:\r\n    while x != 0:\r\n        if x%3 == 0 and x%5 != 0 and x//3 < 5:\r\n            t = x//3\r\n            x = 0\r\n        else:\r\n            x -= 5\r\n            p += 1\r\nprint(t, p)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\r\ntr = 0\r\npr = 0\r\nif x%5 == 0:\r\n    pr = x//5\r\n    x = 0\r\nelse:\r\n    while x != 0:\r\n        if x%3 == 0 and x%5 != 0 and x//3 < 5:\r\n            tr = x//3\r\n            x = 0\r\n        else:\r\n            x -= 5\r\n            pr += 1\r\nprint(tr, pr)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x=int(input())\r\np=1\r\nx1=x\r\nM=10**9\r\nwhile x>0:\r\n    x=x1-3*p\r\n    if x%5==0:\r\n        k=x//5\r\n        if k+p<M:\r\n            M=k+p\r\n            i=k\r\n            j=p\r\n    p=p+1\r\nprint(j,i)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x=int(input())\r\nd = 0\r\nmin = 1000\r\nfor p in range(1000):\r\n    # if d==1:\r\n        # break\r\n    for t in range(1000):\r\n        if t*3 + p*5 == x:\r\n            s = t + p\r\n            if s < min:\r\n                min = s\r\n                x1 = t\r\n                y1 = p\r\n             \r\nprint(x1, y1)\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "x=int(input())\r\nd=0\r\nfor t in range(1000):\r\n    if d==1:\r\n        break\r\n    for p in range(1000):\r\n        if t*3 + p*5 == x:\r\n            print(t, p)\r\n            d=d+1",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x=int(input())\r\nd=0\r\nfor t in range(100000):\r\n    if d==1:\r\n        break\r\n    for p in range(100000):\r\n        if t*3 + p*5 == x:\r\n            print(t, p)\r\n            d=d+1",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x=int(input())\r\nd=0\r\nfor t in range(10000):\r\n    if d==1:\r\n        break\r\n    for p in range(10000):\r\n        if t*3 + p*5 == x:\r\n            print(t, p)\r\n            d=d+1",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x=int(input())\r\nd=0\r\nfor t in range(100):\r\n    if d==1:\r\n        break\r\n    for p in range(100):\r\n        if t*3 + p*5 == x:\r\n            print(t, p)\r\n            d=d+1",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nh=0\r\nfor t in range(n//3+1):\r\n    if h==1:\r\n        break\r\n    for p in range(n//5+1):\r\n        if t*3+ p*5 == n:\r\n            print(t, p)\r\n            h=h+1",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nt1=3\r\np1=5\r\nh=0\r\nfor t in range(n//3+1):\r\n    if h==1:\r\n        break\r\n    for p in range(n//5+1):\r\n        if t1*t+ p1*p == n:\r\n            print(t, p)\r\n            h=h+1",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nt1=3\r\np1=5\r\nh=0\r\nfor t in range(n//3):\r\n    if h==1:\r\n        break\r\n    for p in range(n//5):\r\n        if t1*t+ p1*p == n:\r\n            print(t, p)\r\n            h=h+1",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nt1=3\r\np1=5\r\nh=0\r\nfor t in range(n):\r\n    if h==1:\r\n        break\r\n    for p in range(n):\r\n        if t1*t+ p1*p == n:\r\n            print(t, p)\r\n            h=h+1",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nt1=3\r\np1=5\r\nh=0\r\nfor t in range(n+1):\r\n    if h==1:\r\n        break\r\n    for p in range(n+1):\r\n        if t1*t+ p1*p == n:\r\n            print(t, p)\r\n            h=h+1",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x=int(input())\r\np=1\r\nx1=x\r\nM=10**9\r\nwhile x>0:\r\n    x=x1-3*p\r\n    if x%5==0:\r\n        k=x//5\r\n        if k+p<M:\r\n            M=k+p\r\n            i=k\r\n            j=p\r\n    p=p+1\r\nprint(j,i)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x=int(input())\r\np=1\r\nx1=x\r\nM=10**9\r\nwhile x>0:\r\n    x=x1-3*p\r\n    if x%5==0:\r\n        k=x//5\r\n        if k+p<M:\r\n            M=k+p\r\n            i=k\r\n            j=p\r\n    p=p+1\r\nprint(j,i)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x=int(input())\r\nd = 0\r\nmin = 1000\r\nfor p in range(1000):\r\n    # if d==1:\r\n        # break\r\n    for t in range(1000):\r\n        if t*3 + p*5 == x:\r\n            s = t + p\r\n            if s < min:\r\n                min = s\r\n                x1 = t\r\n                y1 = p\r\n             \r\nprint(x1, y1)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n=int(input())\r\nt1=3\r\np1=5\r\nh=0\r\nfor t in range(100):\r\n    if h==1:\r\n        break\r\n    for p in range(100000):\r\n        if t1*t+ p1*p == n:\r\n            print(t, p)\r\n            h=h+1",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nt1=3\r\np1=5\r\nh=0\r\nfor t in range(100):\r\n    if h==1:\r\n        break\r\n    for p in range(2000000):\r\n        if t1*t+ p1*p == n:\r\n            print(t, p)\r\n            h=h+1",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nt1=3\r\np1=5\r\nh=0\r\nfor t in range(100):\r\n    if h==1:\r\n        break\r\n    for p in range(20000):\r\n        if t1*t+ p1*p == n:\r\n            print(t, p)\r\n            h=h+1",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nt1=3\r\np1=5\r\nh=0\r\nfor t in range(2200):\r\n    if h==1:\r\n        break\r\n    for p in range(2200):\r\n        if t1*t+ p1*p == n:\r\n            print(t, p)\r\n            h=h+1",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nt1=3\r\np1=5\r\nh=0\r\nfor t in range(2100):\r\n    if h==1:\r\n        break\r\n    for p in range(2100):\r\n        if t1*t+ p1*p == n:\r\n            print(t, p)\r\n            h=h+1",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nt1=3\r\np1=5\r\nh=0\r\nfor t in range(2000):\r\n    if h==1:\r\n        break\r\n    for p in range(2000):\r\n        if t1*t+ p1*p == n:\r\n            print(t, p)\r\n            h=h+1",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nt1=3\r\np1=5\r\nh=0\r\nfor t in range(2500):\r\n    if h==1:\r\n        break\r\n    for p in range(2500):\r\n        if t1*t+ p1*p == n:\r\n            print(t, p)\r\n            h=h+1",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nt1=3\r\np1=5\r\nh=0\r\nfor t in range(5000):\r\n    if h==1:\r\n        break\r\n    for p in range(5000):\r\n        if t1*t+ p1*p == n:\r\n            print(t, p)\r\n            h=h+1",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nt1=3\r\np1=5\r\nh=0\r\nfor t in range(10000):\r\n    if h==1:\r\n        break\r\n    for p in range(10000):\r\n        if t1*t+ p1*p == n:\r\n            print(t, p)\r\n            h=h+1",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nt1=3\r\np1=5\r\nh=0\r\nfor t in range(1000):\r\n    if h==1:\r\n        break\r\n    for p in range(1000):\r\n        if t1*t+ p1*p == n:\r\n            print(t, p)\r\n            h=h+1",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\ntr = 0\npr = 0\nif x%5 == 0:\n    pr = x//5\n    x = 0\nelse:\n    if x > 12:\n        x -= 12\n        pr += x//5\n        x = 12 + x%5\n        while x != 0:\n            if x%3 == 0 and x//3 < 5:\n                tr = x//3\n                x =0\n                else:\n                    x -= 5\n                    pr += 1\n                    print(tr,pr)",
                "verdict": "Runtime Error"
            },
            {
                "code": "\u044b",
                "verdict": "Runtime Error"
            },
            {
                "code": "x = int(input())\r\nc = x\r\nc1=0\r\nc2=0\r\nfor p in range(x):\r\n    for t in range(x):\r\n        if t * 3 + p * 5 == x:\r\n            \r\n            if t + p < c:\r\n                c=t+p\r\n                c1=t\r\n                c2=p\r\n            \r\nprint(c1, c2)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\r\nc = 100000000000000\r\nc1=0\r\nc2=0\r\nfor p in range(x):\r\n    for t in range(x):\r\n        if t * 3 + p * 5 == x:\r\n            if t + p < c:\r\n                c=t+p\r\n                c1=t\r\n                c2=p\r\n            \r\nprint(c1, c2)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\r\nc = 100000000000000\r\nc1=0\r\nc2=0\r\nfor p in range(1000000):\r\n    for t in range(5):\r\n        if t * 3 + p * 5 == x:\r\n            if t + p < c:\r\n                c=t+p\r\n                c1=t\r\n                c2=p\r\n            \r\nprint(c1, c2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nc = 100000000000000\r\nc1=0\r\nc2=0\r\nfor p in range(1500000):\r\n    for t in range(5):\r\n        if t * 3 + p * 5 == x:\r\n            if t + p < c:\r\n                c=t+p\r\n                c1=t\r\n                c2=p\r\n            \r\nprint(c1, c2)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\r\nc = 100000000000000\r\nc1=0\r\nc2=0\r\nfor p in range(2500000):\r\n    for t in range(5):\r\n        if t * 3 + p * 5 == x:\r\n            if t + p < c:\r\n                c=t+p\r\n                c1=t\r\n                c2=p\r\n            \r\nprint(c1, c2)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\r\nc = 100000000000000\r\nc1=0\r\nc2=0\r\nfor p in range(5000000):\r\n    for t in range(5):\r\n        if t * 3 + p * 5 == x:\r\n            if t + p < c:\r\n                c=t+p\r\n                c1=t\r\n                c2=p\r\n            \r\nprint(c1, c2)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\r\nc = 100000000000000\r\nc1=0\r\nc2=0\r\nfor p in range(10000000):\r\n    for t in range(5):\r\n        if t * 3 + p * 5 == x:\r\n            if t + p < c:\r\n                c=t+p\r\n                c1=t\r\n                c2=p\r\n            \r\nprint(c1, c2)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\r\nc = 100000000000000\r\nc1=0\r\nc2=0\r\nfor p in range(1000000):\r\n    for t in range(4):\r\n        if t * 3 + p * 5 == x:\r\n            if t + p < c:\r\n                c=t+p\r\n                c1=t\r\n                c2=p\r\n            \r\nprint(c1, c2)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nc = 100000000000000\r\nc1=0\r\nc2=0\r\nfor p in range(1000000):\r\n    for t in range(5):\r\n        if t * 3 + p * 5 == x:\r\n            if t + p < c:\r\n                c=t+p\r\n                c1=t\r\n                c2=p\r\n            \r\nprint(c1, c2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nc = 100000000000000\r\nc1=0\r\nc2=0\r\nfor p in range(500000):\r\n    for t in range(5):\r\n        if t * 3 + p * 5 == x:\r\n            if t + p < c:\r\n                c=t+p\r\n                c1=t\r\n                c2=p\r\n            \r\nprint(c1, c2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nc = 100000000000000\r\nc1=0\r\nc2=0\r\nfor p in range(1000000):\r\n    for t in range(10):\r\n        if t * 3 + p * 5 == x:\r\n            if t + p < c:\r\n                c=t+p\r\n                c1=t\r\n                c2=p\r\n            \r\nprint(c1, c2)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\r\nc = 100000000000000\r\nc1=0\r\nc2=0\r\nfor p in range(300000):\r\n    for t in range(10):\r\n        if t * 3 + p * 5 == x:\r\n            if t + p < c:\r\n                c=t+p\r\n                c1=t\r\n                c2=p\r\n            \r\nprint(c1, c2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nc = 100000000000000\r\nc1=0\r\nc2=0\r\nfor p in range(200000):\r\n    for t in range(20):\r\n        if t * 3 + p * 5 == x:\r\n            if t + p < c:\r\n                c=t+p\r\n                c1=t\r\n                c2=p\r\n            \r\nprint(c1, c2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nc = 100000000000000\r\nc1=0\r\nc2=0\r\nfor p in range(150000):\r\n    for t in range(20):\r\n        if t * 3 + p * 5 == x:\r\n            if t + p < c:\r\n                c=t+p\r\n                c1=t\r\n                c2=p\r\n            \r\nprint(c1, c2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nc = 100000000000000\r\nc1=0\r\nc2=0\r\nfor p in range(150000):\r\n    for t in range(50):\r\n        if t * 3 + p * 5 == x:\r\n            if t + p < c:\r\n                c=t+p\r\n                c1=t\r\n                c2=p\r\n            \r\nprint(c1, c2)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\r\nc = 100000000000000\r\nc1=0\r\nc2=0\r\nfor p in range(50000):\r\n    for t in range(50):\r\n        if t * 3 + p * 5 == x:\r\n            if t + p < c:\r\n                c=t+p\r\n                c1=t\r\n                c2=p\r\n            \r\nprint(c1, c2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nc = 100000000000000\r\nc1=0\r\nc2=0\r\nfor t in range(5000):\r\n    for p in range(5000):\r\n        if t * 3 + p * 5 == x:\r\n            if t + p < c:\r\n                c=t+p\r\n                c1=t\r\n                c2=p\r\n            \r\nprint(c1, c2)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\r\nc = 100000000000000\r\nc1=0\r\nc2=0\r\nfor t in range(2200):\r\n    for p in range(2200):\r\n        if t * 3 + p * 5 == x:\r\n            if t + p < c:\r\n                c=t+p\r\n                c1=t\r\n                c2=p\r\n            \r\nprint(c1, c2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nc = 100000000000000\r\nc1=0\r\nc2=0\r\nfor t in range(1000):\r\n    for p in range(1000):\r\n        if t * 3 + p * 5 == x:\r\n            if t + p < c:\r\n                c=t+p\r\n                c1=t\r\n                c2=p\r\n            \r\nprint(c1, c2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nc = 100000000000000\r\nc1=0\r\nfor t in range(1000):\r\n    for p in range(1000):\r\n        if t * 3 + p * 5 == x:\r\n            if t + p < c:\r\n                c=t+p\r\n                c1=t\r\n                c2=p\r\n            \r\nprint(c1, c2)",
                "verdict": "Runtime Error"
            },
            {
                "code": "x=int(input())\r\nd = 0\r\nmin = 1000\r\nfor p in range(1000):\r\n    # if d==1:\r\n        # break\r\n    for t in range(1000):\r\n        if t*3 + p*5 == x:\r\n            s = t + p\r\n            if s < min:\r\n                min = s\r\n                x1 = t\r\n                y1 = p\r\n             \r\nprint(x1, y1)",
                "verdict": "Runtime Error"
            },
            {
                "code": "x = int(input())\r\nc = 0\r\nfor p in range(1000):\r\n    if c == 1:\r\n        break\r\n    for t in range(1000):\r\n        if t * 3 + p * 5 == x:\r\n            print(t, p)\r\n            c = c + 1",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nc = 0\r\nfor t in range(1000):\r\n    if c == 1:\r\n        break\r\n    for p in range(1000):\r\n        if t * 3 + p * 5 == x:\r\n            print(t, p)\r\n            c = c + 1",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nc = 0\r\nfor t in range(1000):\r\n    if c == 1:\r\n        break\r\n    for p in range(1000):\r\n        if t * 3 + p * 5 == x:\r\n            print(t, p)\r\n            d = d + 1",
                "verdict": "Runtime Error"
            },
            {
                "code": "a = int(input())\r\nn = a // 5\r\n\r\ndef ost3(x, n):\r\n    y = ((x - 5 * n) % 3) == 0\r\n\r\n    return y\r\n\r\nif (a - 5 * n) % 3 != 0:\r\n    while not ost3(a, n):\r\n        n -= 1\r\n\r\nnOf3 = (a - (5 * n)) // 3\r\n\r\nprint(n, nOf3)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\n\r\n\r\nif x % 5 == 0:\r\n    print(0, x // 5)\r\n    exit()\r\n\r\nelif x % 3 == 0:\r\n    print(x // 3, 0)\r\n    exit()\r\n\r\n\r\ndef n3(y):\r\n    n = (y - 5) / 3\r\n    if n.is_integer():\r\n        return int(n)\r\n    else:\r\n        return False\r\n\r\n\r\ndef n5(y):\r\n    n = (y-3) / 5\r\n    if n.is_integer():\r\n        return int(n)\r\n    else:\r\n        return False\r\n\r\n\r\na = n5(x)\r\nb = n3(x)\r\n\r\nif not a:\r\n    print(b, (x - 3*b) // 5)\r\n\r\nif not b:\r\n    print((x - 5*a) // 3, a)\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nz = 0\r\nb = 0\r\nif x%5 == 0:\r\n    b = x//5\r\n    x = 0\r\nelse:\r\n    while x != 0:\r\n        if x%3 == 0 and x%5 != 0 and x//3 < 5:\r\n            z = x//3\r\n            x = 0\r\n        else:\r\n            x -= 5\r\n            b += 1\r\nprint(z, b)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\nsumm = 0\nfor c in range(x):\n    a, b = [int(c) for c in input().split()]\n    summ += b\nprint(summ)",
                "verdict": "Runtime Error"
            },
            {
                "code": "x = int(input())\nsumm = 0\nfor c in range(x):\n    a, b = [int(c) for c in input().split()]\n    summ += b\nprint(summ)",
                "verdict": "Runtime Error"
            },
            {
                "code": "x = 15\nprint('x / 3')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = 15\nprint('x / 3')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = 15 ; print('n - 5 * 2')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = 15",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = 15 / 3\nprint(\"n\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "String abc = null;\r\nint a = 11;\r\nwhile (true){\r\n int b = a - 3;\r\n if(b < 0){\r\n     return \"\u0412\u0441\u0451 \u0445\u0443\u0439\u043d\u044f\";\r\n }else{\r\n     String abc = b;\r\n }\r\n}\r\nwhile (true){\r\n int b = a - 5;\r\n if(b < 0){\r\n     return \"\u0412\u0441\u0451 \u0445\u0443\u0439\u043d\u044f\";\r\n }else{\r\n     String abc = abc+\" \"+b;\r\n }\r\n}\r\nreturn abc;",
                "verdict": "Runtime Error"
            },
            {
                "code": "x = 15\ny = 5\nz = 3\nf = 15 / 3\nprint(\"f\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = 15\ny = 5\nz = 3\nf = 15 / 3\nprint('f')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = 15\nprint(\"0 3\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = 13",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\npp = 0\r\nrr = 0\r\nif x%5 == 0:\r\n    rr = x//5\r\n    x = 0\r\nelse:\r\n    while x != 0:\r\n        if x%3 == 0 and x%5 != 0 and x//3 < 5:\r\n            pp = x//3\r\n            x = 0\r\n        else:\r\n            x -= 5\r\n            rr += 1\r\nprint(pp, rr)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\r\ntr = 0\r\npr = 0\r\nif x%5 == 0:\r\n    pr = x//5\r\n    x = 0\r\n    else:\r\n        if x > 12:\r\n            x -= 12\r\n            pr += x//5\r\n            x = 12 + x%5\r\n    while x != 0:\r\n        if x%3 == 0 and x//3 < 5:\r\n            tr = x//3\r\n            x = 0\r\n        else:\r\n            x -= 5\r\n            pr += 1\r\nprint(tr, pr)",
                "verdict": "Runtime Error"
            },
            {
                "code": "x=int(input())\r\nd=0\r\nfor t in range(5000):\r\n    if d==1:\r\n        break\r\n    for p in range(5000):\r\n        if t*3 + p*5 == x:\r\n            print(t, p)\r\n            d=d+1",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x=int(input())\r\nd=0\r\nfor t in range(10000):\r\n    if d==1:\r\n        break\r\n    for p in range(10000):\r\n        if t*3 + p*5 == x:\r\n            print(t, p)\r\n            d=d+1",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x=int(input())\r\nd=0\r\nfor t in range(1000):\r\n    if d==1:\r\n        break\r\n    for p in range(1000):\r\n        if t*3 + p*5 == x:\r\n            print(t, p)\r\n            d=d+1",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x=int(input())\r\nif x%5==0:\r\n    print(0,x//5)\r\n    exit()\r\nelif x%3==0:\r\n    print(x//3,0)\r\n    exit()\r\nelse:\r\n    a=0\r\n    b=0\r\n    k=x\r\n    while x!=0:\r\n        x-=3\r\n        a+=1\r\n        if x%5==0:\r\n            print(a,x//5)\r\n            exit()\r\n        if x<0:\r\n            break\r\n    a=0\r\n    b=0\r\n    while k!=0:\r\n        k-=5\r\n        b+=1\r\n        if k%3==0:\r\n            print(k//3,b)\r\n            exit()\r\n        if x<0:\r\n            break;",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def razmen(summa, nominals, lastindex=0, lst=[]):\r\n    if summa == 0:\r\n        print(lst)\r\n    else:\r\n        for i in range(lastindex, len(nominals)):\r\n            if nominals[i] <= summa:\r\n                razmen(summa - nominals[i], nominals, i, lst + [nominals[i]])\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def razmen(summa, nominals, lastindex=0, lst=[]):\r\n    if summa == 0:\r\n        print(lst)\r\n    else:\r\n        for i in range(lastindex, len(nominals)):\r\n            if nominals[i] <= summa:\r\n                razmen(summa - nominals[i], nominals, i, lst + [nominals[i]])\r\nrazmen(10, [1,2,3,5,10,15,20])\r\n[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\r\n[1, 1, 1, 1, 1, 1, 1, 1, 2]\r\n[1, 1, 1, 1, 1, 1, 1, 3]\r\n[1, 1, 1, 1, 1, 1, 2, 2]\r\n[1, 1, 1, 1, 1, 2, 3]\r\n[1, 1, 1, 1, 1, 5]\r\n[1, 1, 1, 1, 2, 2, 2]\r\n[1, 1, 1, 1, 3, 3]\r\n[1, 1, 1, 2, 2, 3]\r\n[1, 1, 1, 2, 5]\r\n[1, 1, 2, 2, 2, 2]\r\n[1, 1, 2, 3, 3]\r\n[1, 1, 3, 5]\r\n[1, 2, 2, 2, 3]\r\n[1, 2, 2, 5]\r\n[1, 3, 3, 3]\r\n[2, 2, 2, 2, 2]\r\n[2, 2, 3, 3]\r\n[2, 3, 5]\r\n[5, 5]\r\n[10]",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = it(input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c \u043f\u043e\u043a\u0443\u043f\u043a\u0438: \"))\nd1 = %3\nc = \nif d1=0:\n    c = d\n    print(\"\u041e\u0442\u0434\u0439 \" c \"\u0442\u0440\u0451\u0445\u0440\u0443\u0431\u043b\u0451\u0432\u044b\u0435 \u043c\u043e\u043d\u0435\u0442\u044b\")\nelif d1!=0:\n    d2 = x%5\n    if d2==0:\n        c = x/5\n     print(\"\u041e\u0442\u0434\u0430\u0439 \" c \"\u043f\u044f\u0442\u0438\u0440\u0443\u0431\u043b\u0451\u0432\u044b\u0445 \u043c\u043e\u043d\u0435\u0442\")\n     ",
                "verdict": "Runtime Error"
            },
            {
                "code": "x = int(input())\r\na = x % 5\r\nc = x // 5\r\nq = 0\r\nif a % 3 == 0:\r\n    print(a // 3, c)\r\nelse:\r\n    while q != '':\r\n        c -= 1\r\n        q += 1\r\n        aa = c * 5\r\n        if (x - aa) % 3 == 0:\r\n            print(a + q, c)\r\n            q = ''",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nx = ''\r\n\r\nfor i in range(101):\r\n    for j in range(101):\r\n        if 5 * i + 3 * j == n:\r\n            x = (j, i)\r\n            break\r\n    if x != '':\r\n        break\r\nprint(*x)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x=int(input())\nif 3<=x<=1000:\n    c=x%3\n    f=x%5\n    if c!=0 and f!=0:\n     print(c,f)\n    else:\n     c=0\n     f=x//5\n     print(c,f)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x=int(input())\nif 3<=x<=1000:\n    c=x%3\n    f=x%5\n    if c!=0 and f!=0 or c>f==0 or f>c==0:\n     print(c,f)\n    else:\n     c=x//3\n     f=x//5\n     print(c,f)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x=int(input())\nif 3<=x<=1000:\n    c=x%3\n    f=x%5\n    if c!=0 and f!=0 or c>f==0 or f>c==0:\n     print(c,f)\n    else:\n     c=x//3\n     f=x//5\n     print(c,f)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x=int(input())\nif 3<=x<=1000:\n    c=x%5\n    f=x%3\n    if c!=0 and f!=0:\n     print(c,f)\n    else:\n     c=x//5\n     f=x//3\n     print(c,f)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nn = 0\r\nk = 0\r\nwhile x > 2:\r\n    if x%5 == 0:\r\n        x -= 5\r\n        k += 1\r\n    else:\r\n        x -= 3\r\n        n += 1\r\nprint(n, k)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\r\nn = 0\r\nk = 0\r\nwhile x > 2:\r\n    if x%3 == 0:\r\n        x -= 3\r\n        n += 1\r\n    else:\r\n        x -= 5\r\n        k += 1\r\nprint(n, k)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nn = 0\r\nk = 0\r\nwhile x > 2:\r\n    if x%5 == 0:\r\n        x -= 5\r\n        k += 1\r\n    else:\r\n        x -= 3\r\n        n += 1\r\nprint(n, k)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\r\nn = 0\r\nk = 0\r\nwhile x > 2:\r\n    while x%5 == 0:\r\n        x -= 5\r\n        k += 1\r\n    else:\r\n        x -= 3\r\n        n += 1\r\nprint(n, k)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\r\nn = 0\r\nk = 0\r\nwhile x > 2:\r\n    a = x%10\r\n    if a == 5 or a == 0:\r\n        x -= x\r\n        k += x//5\r\n        break\r\n    else:\r\n        x -= 3\r\n        n += 1\r\nprint(n, k)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nn = 0\r\nk = 0\r\nwhile x > 2:\r\n    a = x%10\r\n    if a == 5 or a == 0:\r\n        x -= x//5\r\n        k += x//5\r\n    else:\r\n        x -= 3\r\n        n += 1\r\nprint(n, k)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nn = 0\r\nk = 0\r\nwhile x > 2:\r\n    a = x%10\r\n    if a == 5 or a == 0:\r\n        x -= x//5\r\n        k += x//5\r\n    else:\r\n        x -= 3\r\n        n += 1\r\nprint(n, k)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nn = 0\r\nk = 0\r\nwhile x > 2:\r\n    a = x%10\r\n    if a == 5 or a == 0:\r\n        x == 0\r\n        k += x/5\r\n    else:\r\n        x -= 3\r\n        n += 1\r\nprint(n, k)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\r\nn = 0\r\nk = 0\r\nwhile x > 2:\r\n    a = x%10\r\n    if a == 5 or a == 0:\r\n        x -= 5\r\n        k += 1\r\n    else:\r\n        x -= 3\r\n        n += 1\r\nprint(n, k)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\r\nn = 0\r\nk = 0\r\nwhile x > 0:\r\n    a = x%10\r\n    if a == 5 or a == 0:\r\n        x -= 5\r\n        k += 1\r\n    else:\r\n        x -= 3\r\n        n += 1\r\nprint(n, k)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\r\nn = 0\r\nk = 0\r\nwhile x > 0:\r\n    if x%10 == 5 or x%10 == 0:\r\n        x -= 5\r\n        k += 1\r\n    elif x%3==0:\r\n        x -= 3\r\n        n +=1\r\n    else:\r\n        x -= 3\r\n        n += 1\r\nprint(n, k)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\r\nn = 0\r\nk = 0\r\nwhile x > 0:\r\n    if x%10 == 5:\r\n        x -= 5\r\n        k += 1\r\n    elif x%5==0:\r\n        x -= 5\r\n        k += 1\r\n    elif x%3==0:\r\n        x -= 3\r\n        n +=1\r\n    else:\r\n        x -= 3\r\n        n += 1\r\nprint(n, k)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\r\nn = 0\r\nk = 0\r\nwhile x > 0:\r\n    if x%5==0:\r\n        x -= 5\r\n        k += 1\r\n    elif x%3==0:\r\n        x -= 3\r\n        n +=1\r\n    else:\r\n        x -= 3\r\n        n += 1\r\nprint(n, k)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\r\nn = 0\r\nk = 0\r\nwhile x > 0:\r\n    if x%5==0:\r\n        x -= 5\r\n        k += 1\r\n    elif x%3==0:\r\n        x -= 3\r\n        n +=1\r\n    else:\r\n        x -= 3\r\n        n += 1\r\nprint(n, k)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\r\nn = 0\r\nk = 0\r\nwhile x > 0:\r\n    if x%3==0:\r\n        x -= 3\r\n        n +=1\r\n    elif x%5==0:\r\n        x -= 5\r\n        k += 1\r\n    else:\r\n        x -= 3\r\n        n += 1\r\nprint(n, k)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn = 0\nk = 0\nwhile x > 0:\n    if x%3==0:\n        x -= 3\n        n +=1\n    elif x%5==0:\n        x -= 5\n        k += 1\nprint(n, k)\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "a = int(input())\r\nf = 0\r\nfive = a // 5\r\nthree = 0\r\nif five*5 + three*3 == a:\r\n    print(0, five)\r\nelse:\r\n    if (a - five*5) % 3 == 0:\r\n        print((a - (five * 5)) // 3, five)\r\n    else:\r\n    while f != 1:\r\nfive -= 1\r\nthree = (a - (five * 5)) // 3\r\nif five*5 + three*3 == a:\r\nf = 1\r\nprint(three, five)",
                "verdict": "Runtime Error"
            },
            {
                "code": "a = int(input())\r\nf = 0\r\nfive = a // 5\r\nthree = 0\r\nif five*5 + three*3 == a:\r\n    print(0, five)\r\nelse:\r\n    if (a - five*5) % 3 == 0:\r\n        print((a - (five * 5)) // 3, five)\r\n    else:\r\n        while f != 1:\r\nfive -= 1\r\nthree = (a - (five * 5)) // 3\r\nif five*5 + three*3 == a:\r\nf = 1\r\nprint(three, five)",
                "verdict": "Runtime Error"
            },
            {
                "code": "a = int(input())\r\nf = 0\r\nfive = a // 5\r\nthree = 0\r\nif five*5 + three*3 == a:\r\n    print(0, five)\r\nelse:\r\n    if (a - five*5) % 3 == 0:\r\nprint((a - (five * 5)) // 3, five)\r\nelse:\r\n    while f != 1:\r\nfive -= 1\r\nthree = (a - (five * 5)) // 3\r\nif five*5 + three*3 == a:\r\nf = 1\r\nprint(three, five)",
                "verdict": "Runtime Error"
            },
            {
                "code": "three_r = 0\r\nfive_r = 0\r\nmoney = int(input())\r\nif money > 3:\r\n    if money % 5 == 0:\r\n        five_r = money // 5\r\n    else:\r\n        if money > 5:\r\n            five_r = money // 5 - 1\r\n        else:\r\n            five_r = money // 5\r\n            money -= five_r * 5\r\n            three_r = money // 3\r\nelse:\r\n    three_r += 1\r\n\r\nprint(three_r, five_r)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "three_r = 0\r\nfive_r = 0\r\nmoney = int(input())\r\nif money % 5 == 0:\r\n    five_r = money // 5\r\nelse:\r\n    five_r = money // 5 - 1\r\n    money -= five_r * 5\r\n    three_r = money // 3\r\n\r\nprint(three_r, five_r)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "three_r = 0\r\nfive_r = 0\r\nmoney = int(input())\r\nif money % 6 < 6 and money % 6 > 0:\r\n    if money % 5 == 0:\r\n        five_r = money // 5\r\n    else:\r\n        five_r = money // 5 - 1\r\n        money -= five_r * 5\r\n        three_r = money // 3\r\nprint(three_r,five_r)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\nc = 1\nd = 0\nb = 0\nwhile d <= a:\n    d += c\n    c += 1\n    b += 1\nprint(b-1)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(3 \\le x \\le 10^93\u2264x\u2264109).",
                "verdict": "Runtime Error"
            },
            {
                "code": "print(15)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x=int(input())\nn=0\nk=0\nwhile x>2:\n    if x%5==0:\n        x-=5\n        k+=1\n    else:\n        x-=3\n        n+=1\nprint(n, k)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x=int(input())\nif len(str(x))>1:\n    f=x//10*10//5\n    x=x%10\n    while x>=5:\n        if not((x-5)%3==0 and (x-5)%5!=0):\n            x-=5\n            f=+=1\n        else: break\n    t=x//3\n    print(t,f)\n    \nelse:\n    f=0\n    while x>=5:\n        if not((x-5)%3==0 and (x-5)%5!=0):\n            x-=5\n            f+=1\n        else: break\n    t=x//3\n    print(t,f)\n    ",
                "verdict": "Runtime Error"
            },
            {
                "code": "x=int(input())\nif len(str(x))>1:\n    f=x//10*10//5\n    x=x%10\n    while x>=5:\n        if not((x-5)%3==0 and (x-5)%5!=0):\n            x-=5\n            f=+=1\n        else: break\n    t=x//3\n    print(t,f)\n    \nelse:\n    f=0\n    while x>=5:\n        if not((x-5)%3==0 and (x-5)%5!=0):\n            x-=5\n            f+=1\n        else: break\n    t=x//3\n    print(t,f)\n    ",
                "verdict": "Runtime Error"
            },
            {
                "code": "x=int(input())\nif len(str(x))>1:\n    f=a//10*10//5\n    x=x%10\n    while x>=5:\n        if not((x-5)%3==0 and (x-5)%5!=0):\n            x-=5\n            f=+=1\n        else: break\n    t=x//3\n    print(t,f)\n    \nelse:\n    f=0\n    while x>=5:\n        if not((x-5)%3==0 and (x-5)%5!=0):\n            x-=5\n            f+=1\n        else: break\n    t=x//3\n    print(t,f)\n    ",
                "verdict": "Runtime Error"
            },
            {
                "code": "lst = ['3 \u044e\u0431\u0438\u043b\u0435\u0439\u043d\u0430\u044f',\r\n'5 \u044e\u0431\u0438\u043b\u0435\u0439\u043d\u0430\u044f',\r\n \r\nsum_lst = sum([int(x.split()[0]) for x in lst])\r\nsum_set = sum([int(x.split()[0]) for x in set(lst)])    \r\n \r\nprint(sum_lst - sum_set)",
                "verdict": "Runtime Error"
            },
            {
                "code": "lst = ['3 \u044e\u0431\u0438\u043b\u0435\u0439\u043d\u0430\u044f',\r\n'5 \u044e\u0431\u0438\u043b\u0435\u0439\u043d\u0430\u044f',\r\n \r\nsum_lst = sum([int(x.split()[0]) for x in lst])\r\nsum_set = sum([int(x.split()[0]) for x in set(lst)])    \r\n \r\nprint(sum_lst - sum_set)",
                "verdict": "Runtime Error"
            },
            {
                "code": "3\u2264x\u226410 \r\nx=4\r\nx=5\r\nx=6\r\nx=7",
                "verdict": "Runtime Error"
            },
            {
                "code": "s=int(input())\r\ns1=s\r\nk5=0\r\nk3=0\r\nwhile s>=5:\r\n    s-=5\r\n    k5+=1\r\n\r\nif s%3!=0 and s!=0:\r\n    while s%3!=0:\r\n        s+=5\r\n        k5-=1\r\nwhile s>0:\r\n    s-=3\r\n    k3+=1\r\nprint(k3,k5)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "v = int(input())\r\nd = [3, 5]\r\nr1 = 0\r\nr2 = 0\r\nwhile v % 5 != 0:\r\n    v -= d[0]\r\n    r1 += 1\r\nwhile v > 0 and v % 5 == 0:\r\n    r2 += v // 5\r\n    v //= 5\r\nprint(r1, r2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nr5 = 0\r\nr3 = 0\r\nwhile n>=5:\r\n    if n%3==0 and n%5==0:\r\n        n-=5\r\n        r5+=1\r\n    elif n%3==0:\r\n        r3+=(n//3)\r\n    else:\r\n        n-=5\r\n        r5+=1\r\nif n<3 and n!=0:\r\n    r3+=1\r\nelse:\r\n    r5+=1\r\nprint(r3, r5)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nr5 = 0\r\nr3 = 0\r\nwhile n>=5:\r\n    if n%3==0 and n%5==0:\r\n        n-=5\r\n        r5+=1\r\n    elif n%3==0:\r\n        r3+=(n//3)\r\n    else:\r\n        n-=5\r\n        r5+=1\r\nif n<3 and n!=0:\r\n    r3+=1\r\nelif n<5 and n!=0:\r\n    r5+=1\r\nprint(r3, r5)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nr5 = 0\r\nr3 = 0\r\nwhile n%3!= 0 and n>=5:\r\n    n-=5\r\n    r5+=1\r\nif n%3==0:\r\n    r3+=(n//3)\r\nif n<3 and n!=0:\r\n    r3+=1\r\nelif n<5 and n!=0:\r\n    r5+=1\r\nprint(r3, r5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nr5 = 0\r\nr3 = 0\r\nwhile n%3!= 0 and n>=5:\r\n    n-=5\r\n    r5+=1\r\nif n%3==0:\r\n    r3+=(n//3)\r\nprint(r3, r5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nm = n + 1\r\nx1 = 0\r\ny1 = 0\r\ndef f(x, y): return 3 * x + 5 * y\r\nfor x in range((n + 3) // 3):\r\n    for y in range((n + 5) // 5):\r\n        if f(x, y) == n:\r\n            if m >= x + y:\r\n                m = x + y\r\n                x1 = x\r\n                y1 = y\r\n                print(x1, y1)\r\n                break\r\n                \r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nm = n + 1\r\nx1 = 0\r\ny1 = 0\r\ndef f(x, y): return 3 * x + 5 * y\r\nfor x in range((n + 3) // 3):\r\n    for y in range((n + 5) // 5):\r\n        if f(x, y) == n:\r\n            if m >= x + y:\r\n                m = x + y\r\n                x1 = x\r\n                y1 = y\r\n                print(x1, y1)\r\n        break\r\n                \r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nm = n + 1\r\nx1 = 0\r\ny1 = 0\r\ndef f(x, y): return 3 * x + 5 * y\r\nfor x in range((n + 3) // 3):\r\n    for y in range((n + 5) // 5):\r\n        if f(x, y) == n:\r\n            if m >= x + y:\r\n                m = x + y\r\n                x1 = x\r\n                y1 = y\r\n                print(x1, y1)\r\n            break\r\n                \r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nm = n + 1\r\nx1 = 0\r\ny1 = 0\r\ndef f(x, y): return 3 * x + 5 * y\r\nfor x in range((n + 3) // 3):\r\n    for y in range((n + 5) // 5):\r\n        if f(x, y) == n:\r\n            if m >= x + y:\r\n                m = x + y\r\n                x1 = x\r\n                y1 = y\r\n                print(x1, y1)\r\n                break\r\n                \r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nm = n + 1\r\nx1 = 0\r\ny1 = 0\r\ndef f(x, y): return 3 * x + 5 * y\r\nfor x in range((n + 3) % 3):\r\n    for y in range((n + 5) % 5):\r\n        if f(x, y) == n:\r\n            if m >= x + y:\r\n                m = x + y\r\n                x1 = x\r\n                y1 = y\r\n                print(x1, y1)\r\n                break\r\n                \r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nm = n + 1\r\nx1 = 0\r\ny1 = 0\r\ndef f(x, y): return 3 * x + 5 * y\r\nfor x in range(0, n % 3):\r\n    for y in range(0, n % 5):\r\n        if f(x, y) == n:\r\n            if m >= x + y:\r\n                m = x + y\r\n                x1 = x\r\n                y1 = y\r\n                print(x1, y1)\r\n                break\r\n                \r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nm = n + 1\r\nx1 = 0\r\ny1 = 0\r\ndef f(x, y): return 3 * x + 5 * y\r\nfor x in range(0, n):\r\n    for y in range(0, n):\r\n        if f(x, y) == n:\r\n            if m >= x + y:\r\n                m = x + y\r\n                x1 = x\r\n                y1 = y\r\n                print(x1, y1)\r\n                break\r\n                \r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nm = n + 1\r\nx1 = 0\r\ny1 = 0\r\ndef f(x, y): return 3 * x + 5 * y\r\nfor x in range(0, n - 1000):\r\n    for y in range(0, n - 1000):\r\n        if f(x, y) == n:\r\n            if m >= x + y:\r\n                m = x + y\r\n                x1 = x\r\n                y1 = y\r\n                print(x1, y1)\r\n                break\r\n                \r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nm = n + 1\r\nx1 = 0\r\ny1 = 0\r\ndef f(x, y): return 3 * x + 5 * y\r\nfor x in range(0, n):\r\n    for y in range(0, n):\r\n        if f(x, y) == n:\r\n            if m >= x + y:\r\n                m = x + y\r\n                x1 = x\r\n                y1 = y\r\n                print(x1, y1)\r\n                break\r\n                \r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nm = n + 1\r\nx1 = 0\r\ny1 = 0\r\ndef f(x, y): return 3 * x + 5 * y\r\nfor x in range(0, (n + 1) // 3):\r\n    for y in range(0, (n + 1) // 5):\r\n        if f(x, y) == n:\r\n            if m >= x + y:\r\n                m = x + y\r\n                x1 = x\r\n                y1 = y\r\n                print(x1, y1)\r\n                break\r\n                \r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nm = n + 1\r\nx1 = 0\r\ny1 = 0\r\ndef f(x, y): return 3 * x + 5 * y\r\nfor x in range(0, n // 3):\r\n    for y in range(0, n // 5):\r\n        if f(x, y) == n:\r\n            if m >= x + y:\r\n                m = x + y\r\n                x1 = x\r\n                y1 = y\r\n                print(x1, y1)\r\n                break\r\n                \r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nm = n + 1\r\nx1 = 0\r\ny1 = 0\r\ndef f(x, y): return 3 * x + 5 * y\r\nfor x in range(0, (n + 1) // x):\r\n    for y in range(0, (n + 1) // y):\r\n        if f(x, y) == n:\r\n            if m >= x + y:\r\n                m = x + y\r\n                x1 = x\r\n                y1 = y\r\n                print(x1, y1)\r\n                break\r\n                \r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nm = n + 1\r\nx1 = 0\r\ny1 = 0\r\ndef f(x, y): return 3 * x + 5 * y\r\nfor x in range(0, n // x):\r\n    for y in range(0, n // y):\r\n        if f(x, y) == n:\r\n            if m >= x + y:\r\n                m = x + y\r\n                x1 = x\r\n                y1 = y\r\n                print(x1, y1)\r\n                break\r\n                \r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nm = n + 1\r\nx1 = 0\r\ny1 = 0\r\ndef f(x, y): return 3 * x + 5 * y\r\nfor x in range(0, n):\r\n    for y in range(0, n):\r\n        if f(x, y) == n:\r\n            if m >= x + y:\r\n                m = x + y\r\n                x1 = x\r\n                y1 = y\r\n                print(x1, y1)\r\n                break\r\n                \r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nm = n + 1\r\nx1 = 0\r\ny1 = 0\r\ndef f(x, y): return 3 * x + 5 * y\r\nfor x in range(0, n //2):\r\n    for y in range(0, n // 2):\r\n        if f(x, y) == n:\r\n            if m >= x + y:\r\n                m = x + y\r\n                x1 = x\r\n                y1 = y\r\n                print(x1, y1)\r\n                break\r\n                \r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nm = n + 1\r\nx1 = 0\r\ny1 = 0\r\ndef f(x, y): return 3 * x + 5 * y\r\nfor x in range(1, n //2):\r\n    for y in range(1, n // 2):\r\n        if f(x, y) == n:\r\n            if m >= x + y:\r\n                m = x + y\r\n                x1 = x\r\n                y1 = y\r\n                print(x1, y1)\r\n                break\r\n                \r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nm = n + 1\r\nx1 = 0\r\ny1 = 0\r\ndef f(x, y): return 3 * x + 5 * y\r\nfor x in range(335):\r\n    for y in range(201):\r\n        if f(x, y) == n:\r\n            if m >= x + y:\r\n                m = x + y\r\n                x1 = x\r\n                y1 = y\r\n                print(x1, y1)\r\n                break\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nx1 = 0\r\ny1 = 0\r\ndef f(x, y): return 3 * x + 5 * y\r\nfor x in range(0, 335):\r\n    for y in range(0, 201):\r\n        if f(x, y) == n:\r\n            x1 = x\r\n            y1 = y\r\n    print(x1, y1)\r\n    break\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\ndef f(x, y): return 3 * x + 5 * y\r\n\r\nx1 = 201\r\ny1 = 335\r\n\r\nfor x in range(0, 201):\r\n    for y in range(0, 335):\r\n        if f(x, y) == n:\r\n            if x + y <= x1 + y1:\r\n                x1 = x\r\n                y1 = y\r\n                print(x1, y1)\r\n\r\n                           \r\n    \r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\ndef f(x, y): return 3 * x + 5 * y\r\n\r\nm = 1000\r\nx1 = 0\r\ny1 = 0\r\n\r\nfor x in range(0, 201):\r\n    for y in range(0, 335):\r\n        if f(x, y) == n:\r\n            if x + y <= m:\r\n                m = x + y\r\n                x1 = x\r\n                y1 = y\r\n                print(x1, y1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\ndef f(x, y): return 3 * x + 5 * y\r\n\r\nm = 1000\r\nx1 = 0\r\ny1 = 0\r\n\r\nfor x in range(0, 201):\r\n    for y in range(0, 335):\r\n        if f(x, y) == n:\r\n            if x + y <= m:\r\n                x1 = x\r\n                y1 = y\r\n                print(x1, y1)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\ndef f(x, y): return 3 * x + 5 * y\r\n\r\nfor x in range(0, 201):\r\n    for y in range(0, 335):\r\n        if f(x, y) == n:\r\n            print(x, y)\r\n    ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\ndef f(x, y): return 3 * x + 5 * y\r\n\r\nfor x in range(0, 201):\r\n    for y in range(0, 335):\r\n        if f(x, y) == n:\r\n            print(x, y)\r\n    break",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\ndef f(x, y): return 3 * x + 5 * y\r\n\r\nfor x in range(0, 201):\r\n    for y in range(0, 335):\r\n        if f(x, y) == n:\r\n            print(x, y)\r\n    break",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\na = x//5\r\nx1 = x - a * 5\r\nb = x1//3\r\nif x == 11:\r\n    print(2, 1)\r\nelse:\r\n    if a * 5 + b * 3 == x:\r\n        print(b, a)\r\n    elif a * 5 + b * 3 != x:\r\n        c = x//3\r\n        x2 = x - 3 * c\r\n        d = x2 // 5\r\n        print(c,  d)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\na = x//5\r\nx1 = x - a * 5\r\nb = x1//3\r\nif a * 5 + b * 3 == x:\r\n    print(b, a)\r\nelif a * 5 + b * 3 != x:\r\n    c = x//3\r\n    x2 = x - 3 * c\r\n    d = x2 // 5\r\n    print(c,  d)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\na = x//5\r\nx1 = x - a * 5\r\nb = x1//3\r\nif a * 5 + b * 3 == x:\r\n    print(a, b)\r\nelif a * 5 + b * 3 != x:\r\n    c = x//3\r\n    x2 = x - 3 * c\r\n    d = x2 // 5\r\n    print(d,  c)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\na = x//5\r\nx1 = x - a * 5\r\nb = x1//3\r\nif a * 5 + b * 3 == x:\r\n    print(a, b)\r\nelse:\r\n    c = x//3\r\n    x2 = x - 3 * c\r\n    d = x2 // 5\r\n    print(c, d)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\n\r\ndef qq(n):\r\n\r\n    for x in range(n // 3 + 1):\r\n        for y in range((n - x * 3) // 5 + 1):\r\n            if 3 * x + 5 * y == n:\r\n                return(x, y)\r\nw = qq(n)\r\nprint(w[0], w[1])\r\n\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\n\r\ndef qq(n):\r\n\r\n    for x in range(n // 3 + 1):\r\n        for y in range((n - x * 3) // 5 + 1):\r\n            if 3 * x + 5 * y == n:\r\n                return(x, y)\r\nw = qq(n)\r\nprint(w[0], w[1])\r\n\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\n\r\ndef qq(n):\r\n\r\n    for x in range(n // 3 + 1):\r\n        for y in range(n // 5 + 1):\r\n            if 3 * x + 5 * y == n:\r\n                return(x, y)\r\nw = qq(n)\r\nprint(w[0], w[1])\r\n\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "x = int(input())\n\ncnt_5 = x // 5\ncnt_3 = (x // 5) // 3\n\nprint(cnt_5, cnt_3)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x, c = int(input()), 0\r\ntc, fc = 0, 0\r\n\r\nif (x % 5) % 3 == 0:\r\n    fc = x // 5\r\n    tc = int((x - (fc * 5)) / 3)\r\nelif (x % 5) < 4:\r\n    fc = (x // 5) - 1\r\n    tc = int((x - (fc * 5)) / 3)\r\nelif x % 5 == 0:\r\n    fc = x / 5\r\nelif x % 3 == 0:\r\n    tc = x / 3\r\n\r\nprint(tc, fc)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x=int(input())\nt=0\nwhile x%5!=0 or x>0:\n    x-=3\n    t+=1\nprint(t,x//5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x=int(input())\nt=0\nwhile x%5!=0 or x>0:\n    x-=3\n    t+=1\nprint(t,p//5)",
                "verdict": "Runtime Error"
            },
            {
                "code": "x=int(input())\nt=0\nwhile x%5!=0:\n    x-=3\n    t+=1\nprint(t,p//5)",
                "verdict": "Runtime Error"
            },
            {
                "code": "x = int(input())\r\na = b = 0\r\ny = x % 5\r\nwhile x % 3 != 0 or x % 5 == 0:\r\n    x -= 5\r\n    b += 1\r\n    if x <= 0:\r\n        break\r\na = x // 3\r\nprint(a, b)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\na = b = 0\r\ny = x % 5\r\nwhile x % 3 != 0 or x % 5 == 0:\r\n    if x <= 0:\r\n        break\r\n    x -= 5\r\n    b += 1\r\na = x // 3\r\nprint(a, b)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "h",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\n\n#define fi first\n#define se second\n#define pb push_back\n\nusing namespace std;\nusing ll = long long;\nusing ld = long double;\n\nint main() {\n    int n;\n    cin >> n;\n\n    int rest = 0;\n\n    while(n % 5 != 0 || n > 0) {\n        ++rest;\n        n -= 3;\n    }\n    \n    cout << rest << \" \" << n / 5 << \"\\n\";\n\n    return 0;\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\n\n#define fi first\n#define se second\n#define pb push_back\n\nusing namespace std;\nusing ll = long long;\nusing ld = long double;\n\nint main() {\n    int n;\n    cin >> n;\n\n    int rest = 0;\n\n    while(n % 5 != 0) {\n        ++rest;\n        n -= 3;\n    }\n    \n    cout << rest << \" \" << n / 5 << \"\\n\";\n\n    return 0;\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "x = int(input())\r\n\r\nif x % 5 == 0:\r\n    print(\"0\", x // 5)\r\nelif x % 3 == 0:\r\n    print(\"0\", x // 3)\r\nelse:\r\n    f = x % 5\r\n    ans = (x - (3 * f)) // 5\r\n    print(ans + 1, f)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nn_3 = 0\r\nn_5 = 0\r\nif x % 5 == 0:\r\n    n_5 = x // 5\r\nelif x % 3 == 0:\r\n    n_3 = x // 3\r\nelif x % 3 != 0:\r\n    n_3 = x % 3\r\n    n_5 = (x - n_3 * 3) // 5\r\n    if n_3 * 3 + n_5 * 5 != x:\r\n        n_5 = x % 5\r\n        n_3 = (x - n_5 * 5) // 3\r\nprint(n_3, n_5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\nn_3 = 0\nn_5 = 0\nif x % 5 == 0:\n    n_5 = x // 5\nelif x % 3 == 0:\n    n_3 = x // 3\nelif x % 3 != 0:\n    n_3 = x % 3\n    n_5 = (x - n_3 * 3) // 5\nprint(n_3, n_5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def find_min_coins(x):\r\n    for y in range(x // 5 + 1):\r\n        if (x - 5 * y) % 3 == 0:\r\n            z = (x - 5 * y) // 3\r\n            return z, y\r\n    return None  # \u0412 \u0442\u0435\u043e\u0440\u0438\u0438 \u044d\u0442\u043e \u043d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043f\u0440\u043e\u0438\u0437\u043e\u0439\u0442\u0438, \u0442\u0430\u043a \u043a\u0430\u043a \u0432\u0441\u0435\u0433\u0434\u0430 \u0435\u0441\u0442\u044c \u0440\u0435\u0448\u0435\u043d\u0438\u0435\r\n\r\n# \u0427\u0442\u0435\u043d\u0438\u0435 \u0432\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\r\nx = int(input().strip())\r\n\r\n# \u041f\u043e\u0438\u0441\u043a \u0438 \u0432\u044b\u0432\u043e\u0434 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\r\nresult = find_min_coins(x)\r\nif result:\r\n    print(result[0], result[1])\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def calculate_coins(x):\r\n    if x % 5 == 0:\r\n        return 0, x // 5\r\n    else:\r\n        fives = x // 5\r\n        remainder = x % 5\r\n        if remainder == 1 or remainder == 2:\r\n            return remainder, fives\r\n     \r\n        else:\r\n            return 3, fives - 1\r\n\r\nx = int(input())\r\n\r\nmin_threes, min_fives = calculate_coins(x)\r\n\r\nprint(min_threes, min_fives)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def calculate_coins(x):\r\n    \r\n    remainder_3 = x % 3\r\n    remainder_5 = x % 5\r\n    \r\n    if remainder_3 == 0 and remainder_5 == 0:\r\n     \r\n        return x // 3, 0\r\n  \r\n    elif remainder_3 == 0:\r\n       \r\n        return 0, x // 5\r\n    \r\n    elif remainder_5 == 0:\r\n        \r\n        return x // 3, 0\r\n    else:\r\n      \r\n        fives = x // 5\r\n       \r\n        threes = (x - fives * 5) // 3\r\n        return threes, fives\r\n\r\n\r\nx = int(input())\r\n\r\nmin_threes, min_fives = calculate_coins(x)\r\n\r\nprint(min_threes, min_fives)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nfor i in range(3, x + 1):\r\n    if i % 3 == 0 and i % 5 != 0:\r\n        print(i // 3, 0)\r\n        break",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nfor i in range(3, x+1):\r\n    if i % 3 == 0 and i % 5 != 0:\r\n    print(i//3, 0)\r\n    break",
                "verdict": "Runtime Error"
            },
            {
                "code": "x = int(input())\r\nfor i in range(3, x+1):\r\nif i % 3 == 0 and i % 5 != 0:\r\nprint(i//3, 0)\r\nbreak",
                "verdict": "Runtime Error"
            },
            {
                "code": "x = int(input())\r\n\r\nfor i in range(3, x+1):\r\nif i % 3 == 0 and i % 5 != 0:\r\nprint(i//3, 0)\r\nbreak",
                "verdict": "Runtime Error"
            }
        ]
    },
    {
        "task_id": 56,
        "description": "\u0414\u0430\u043d \u043c\u0430\u0441\u0441\u0438\u0432 \u0438\u0437 $n$ \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432.\n\n\u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043d\u0430\u0439\u0442\u0438 \u043f\u043e\u0434\u043e\u0442\u0440\u0435\u0437\u043e\u043a $[l; r]$, \u0443 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 ($a[l] \\wedge a[l + 1] \\wedge \\dots \\wedge a[r]$) * ($r - l + 1$) \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e ($\\wedge$ \u2013 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f \u043f\u043e\u0431\u0438\u0442\u043e\u0432\u043e\u0433\u043e \u0418).\n\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u0447\u0438\u0441\u043b\u043e $n$ ($1 \\le n \\le 3 \\cdot 10^5$).\n    \n\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e $n$ \u0447\u0438\u0441\u0435\u043b $a_1, a_2 \\dots, a_n$ ($0 \\le a[i] \\le 10^9$).\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e \u2013 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435.",
        "solutions": [
            {
                "code": "n = int(input())\na = list(map(int,input().split()))\nmx=-1\nfor r in range(0, n):\n    for l in range(0, n):\n        if l>r:\n            break\n        ans=a[l]\n        for i in range(l, r+1):\n                ans&=a[i]\n        mx = max(mx, ans*(r-l+1))\nprint(mx)\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\na = list(map(int,input().split()))\nmx=-1\nfor r in range(1, n+1):\n    for l in range(r):\n        ans=a[l:r][0]\n        for i in a[l:r]:\n            ans&=i\n    mx = max(mx, ans*(r-l+1))\nprint(mx)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def solve():\r\n    n = int(input())\r\n    a = list(map(int, input().split()))\r\n    #p = []\r\n    #p.append(0)\r\n    #for i in range(n):\r\n    #    p.append(p[i] & a[i])\r\n    ans = 0\r\n    for l in range(n):\r\n        for r in range(l+1,n):\r\n            t = a[l]\r\n            for i in range(l+1,r+1):\r\n                t & a[i]\r\n            t *= (r-l+1)\r\n            ans = max(ans, t)\r\n    print(ans)\r\n    return \r\nt = 1\r\n#t = int(input())\r\nwhile t > 0:\r\n    solve() \r\n    t -= 1 ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = []\r\nsumm = []\r\nn = int(input())\r\nwhile len(a) != n:\r\n    a = list(map(int, input().split()))\r\ncout = int(input())\r\nwhile len(summ) != cout:\r\n    summ = list(map(int, input().split()))\r\nfor i in range(cout):\r\n    l, r = map(int,input().split())\r\nfor i in range(cout):\r\n    for g in range(r-l):\r\n        summ[i] += a[g]\r\nprint(summ)\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\narr = list(map(int, input().split()))\r\n\r\ndef MaxSumAnd(arr, n):\r\n    dp = [0 for i in range(n)]\r\n    dp[0] = 1\r\n    dpbit = [0 for i in range(n)]\r\n    dpbit[0] = arr[0]\r\n    maximum = []\r\n\r\n    for i in range(1, n):\r\n        if (dpbit[i - 1] & arr[i]) * (dp[i - 1] + 1) > arr[i]:\r\n            dpbit[i] = dpbit[i - 1] & arr[i]\r\n            dp[i] = dp[i - 1] + 1\r\n        else:\r\n            maximum.append(dpbit[i - 1] * dp[i - 1])\r\n            dp[i] = 1\r\n            dpbit[i] = arr[i]\r\n\r\n    maximum.append(dp[n - 1] * dpbit[n - 1])\r\n    return max(maximum)\r\n\r\n\r\nprint(MaxSumAnd(arr, n))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int,input().split()))\r\nmx = 0\r\nfor l in range(n):\r\n    for r in range(l+1,n):\r\n        f = a[l]\r\n        for i in range(1,len(a[l:r])):\r\n            f = f&a[l+i]\r\n        f = f * (r-l+1)\r\n        mx = max(mx,f)\r\nif len(a)==1: print(a[0])\r\nelse: print(mx)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "int ans = a[0],\n\tsum = 0,\n\tmin_sum = 0;\nfor (int r=0; r<n; ++r) {\n\tsum += a[r];\n\tans = max (ans, sum - min_sum);\n\tmin_sum = min (min_sum, sum);\n\tint ans = a[0],\n\tans_l = 0,\n\tans_r = 0,\n\tsum = 0,\n\tmin_sum = 0,\n\tmin_pos = -1;\nfor (int r=0; r<n; ++r) {\n\tsum += a[r];\n \n\tint cur = sum - min_sum;\n\tif (cur > ans) {\n\t\tans = cur;\n\t\tans_l = min_pos + 1;\n\t\tans_r = r;\n\t}\n \n\tif (sum < min_sum) {\n\t\tmin_sum = sum;\n\t\tmin_pos = r;\n\t}\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "int ans = a[0],\r\n\tans_l = 0,\r\n\tans_r = 0,\r\n\tsum = 0,\r\n\tminus_pos = -1;\r\nfor (int r=0; r<n; ++r) {\r\n\tsum += a[r];\r\n \r\n\tif (sum > ans) {\r\n\t\tans = sum;\r\n\t\tans_l = minus_pos + 1;\r\n\t\tans_r = r;\r\n\t}\r\n \r\n\tif (sum < 0) {\r\n\t\tsum = 0;\r\n\t\tminus_pos = r;\r\n\t}\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\nusing namespace std;\nint main()\n{\n    int n;\n    cin >> n;\n    int a[n];\n    for(int i = 0; i < n; i++){\n        cin >> a[i];\n    }\n    long long mx = 0;\n    for(int l = 0; l < n; l++){\n        long long x = a[l];\n        for(int r = l; r < n; r++){\n            x &= a[r];\n            if (x == 0){\n                break;\n            }\n            mx = max(mx, x*(r - l + 1));\n        }\n    }\n    cout << mx;\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\r\n#include <vector>\r\nusing namespace std;\r\nclass Tree\r\n{\r\n    const vector<int>& vd;\r\n    vector<long long> segTree;\r\nprivate:\r\n    void build_tree(int v, int tl, int tr) {\r\n        if (tl == tr) segTree[v] = vd[tl];\r\n        else {\r\n            build_tree(v * 2, tl, (tl + tr) / 2);\r\n            build_tree(v * 2 + 1, (tl + tr) / 2 + 1, tr);\r\n            segTree[v] = segTree[v * 2] + segTree[v * 2 + 1];\r\n        }\r\n    }\r\n\r\n    long long getSum(int l, int r, long long v, int tl, int tr) {\r\n        if (l <= tl && tr <= r) return segTree[v];\r\n        if (tr < l || r < tl) return 0;\r\n        return getSum(l, r, v * 2, tl, (tl + tr) / 2)\r\n               + getSum(l, r, v * 2 + 1, (tl + tr) / 2 + 1, tr);\r\n    }\r\n\r\n\r\npublic:\r\n    ~Tree() = default;\r\n\r\n    Tree(const vector<int>& vecData) :\r\n            vd(vecData),\r\n            segTree(vecData.size() * 4)\r\n    {\r\n        build_tree(1, 0, vecData.size() - 1);\r\n    }\r\n\r\n    long long getSum(int l, int r) {\r\n        return getSum(l, r, 1, 0, vd.size() - 1);\r\n    }\r\n};\r\nint main()\r\n{\r\n    long long n;\r\n    cin >> n;\r\n    vector<int> arr(n);\r\n    for (auto& it : arr) cin >> it;\r\n    Tree tree(arr);\r\n    long long m;\r\n    cin >> m;\r\n    for (int l, r; m--; ) {\r\n        cin >> l >> r;\r\n        cout << tree.getSum(l - 1, r - 1) << ' ';\r\n    }\r\n    return 0;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "n= int(input())\r\nr = list (map(int,input().split()))\r\nk = int(input())\r\nl_r = []\r\nfor _ in range(k):\r\n    l_r.append(list(map(int,input().split())))\r\nfor i in range(len(l_r)):\r\n    print(sum(r[l_r[i][0]-1:l_r[i][1]]),end =' ' )",
                "verdict": "Runtime Error"
            },
            {
                "code": "\u0449",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = 300\nprint(\"n\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = 300",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())",
                "verdict": "Wrong Answer"
            },
            {
                "code": "int ans = a[0],\r\n\tans_l = 0,\r\n\tans_r = 0,\r\n\tsum = 0,\r\n\tmin_sum = 0,\r\n\tmin_pos = -1;\r\nfor (int r=0; r<n; ++r) {\r\n\tsum += a[r];\r\n \r\n\tint cur = sum - min_sum;\r\n\tif (cur > ans) {\r\n\t\tans = cur;\r\n\t\tans_l = min_pos + 1;\r\n\t\tans_r = r;\r\n\t}\r\n \r\n\tif (sum < min_sum) {\r\n\t\tmin_sum = sum;\r\n\t\tmin_pos = r;\r\n\t}\r\n}\r\nprint(min_sum = sum)",
                "verdict": "Runtime Error"
            },
            {
                "code": "int ans = a[0],\r\n\tans_l = 0,\r\n\tans_r = 0,\r\n\tsum = 0,\r\n\tmin_sum = 0,\r\n\tmin_pos = -1;\r\nfor (int r=0; r<n; ++r) {\r\n\tsum += a[r];\r\n \r\n\tint cur = sum - min_sum;\r\n\tif (cur > ans) {\r\n\t\tans = cur;\r\n\t\tans_l = min_pos + 1;\r\n\t\tans_r = r;\r\n\t}\r\n \r\n\tif (sum < min_sum) {\r\n\t\tmin_sum = sum;\r\n\t\tmin_pos = r;\r\n\t}\r\n}\r\nprint(r)",
                "verdict": "Runtime Error"
            },
            {
                "code": "5\n23456",
                "verdict": "Wrong Answer"
            },
            {
                "code": "3\n323\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "1\n5\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "s = int(input())\r\n\r\nk3 = 0\r\nk5 = 0\r\nwhile s % 5 != 0:\r\n    k3 += 1\r\n    s -= 3\r\n\r\nif s % 5 == 0:\r\n    k5 = s // 5\r\n\r\nprint(k3, k5)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nint ans = a[n],\r\n\tans_l = 0,\r\n\tans_r = 0,\r\n\tsum = 0,\r\n\tmin_sum = 0,\r\n\tmin_pos = -1;\r\nfor (int r=0; r<n; ++r) {\r\n\tsum += a[r];\r\n \r\n\tint cur = sum - min_sum;\r\n\tif (cur > ans) {\r\n\t\tans = cur;\r\n\t\tans_l = min_pos + 1;\r\n\t\tans_r = r;\r\n\t}\r\n \r\n\tif (sum < min_sum) {\r\n\t\tmin_sum = sum;\r\n\t\tmin_pos = r;",
                "verdict": "Runtime Error"
            },
            {
                "code": "int ans = a[0],\r\n\tans_l = 0,\r\n\tans_r = 0,\r\n\tsum = 0,\r\n\tminus_pos = -1;\r\nfor (int r=0; r<n; ++r) {\r\n\tsum += a[r];\r\n \r\n\tif (sum > ans) {\r\n\t\tans = sum;\r\n\t\tans_l = minus_pos + 1;\r\n\t\tans_r = r;\r\n\t}\r\n \r\n\tif (sum < 0) {\r\n\t\tsum = 0;\r\n\t\tminus_pos = r;",
                "verdict": "Runtime Error"
            },
            {
                "code": "int ans = a[0],\r\n\tsum = 0,\r\n\tmin_sum = 0;\r\nfor (int r=0; r<n; ++r) {\r\n\tsum += a[r];\r\n\tans = max (ans, sum - min_sum);\r\n\tmin_sum = min (min_sum, sum",
                "verdict": "Runtime Error"
            },
            {
                "code": "print(6)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <cmath>\r\n#include <iostream>\r\n#include <vector>\r\n#include <algorithm>\r\n\r\nusing namespace std;\r\n\r\nvoid solution() {\r\n\tint t; cin >> t;\r\n\twhile (t--) {\r\n\t\tint n;\r\n\t\tstring a, res = \"\";\r\n\t\tcin >> n >> a;\r\n\t\tfor (int i = 0; i < n - 1; i++) {\r\n\t\t\tif (a[i] == '1' && a[i + 1] == '1') {\r\n\t\t\t\tres.push_back('-');\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\tres.push_back('+');\r\n\t\t}\r\n\t\tcout << res << '\\n';\r\n\t}\r\n}\r\n\r\nint main()\r\n{\r\n\tint n; cin >> n;\r\n\tvector<int> arr(n);\r\n\r\n\tfor (int i = 0; i < n; i++) {\r\n\t\tcin >> arr[i];\r\n\t}\r\n\r\n\tif (arr.size() == 1) {\r\n\t\tcout << arr[0] << '\\n';\r\n\t\treturn 0;\r\n\t}\r\n\r\n\tint ms = -1;\r\n\tfor (int l = 0; l < n; l++) {\r\n\t\tfor (int r = 0; r < n; r++) {\r\n\t\t\tint sum = arr[l];\r\n\t\t\tfor (int i = l; i < r; i++) { \r\n\t\t\t\tsum &= arr[i + 1];\r\n\t\t\t\tif (sum * (r - l + 1) > ms) {\r\n\t\t\t\t\tms = sum * (r - l + 1);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tcout << ms << '\\n';\r\n\r\n\t// solution();\r\n\r\n\treturn 0;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\n\nusing namespace std;\n\nint main(){\n\tint n; cin >> n;\n\tvector<int> arr(n);\n\n\tfor (int i = 0; i < arr.size(); i++) {\n    cin >> arr[i];\n  }\n\n  sort(arr.begin(), arr.end());\n  \n  int max = -1;\n  for (int i = 0; i < arr.size(); i++) {\n    for (int j = 0; j < arr.size(); j++) {\n      if (i > j) {\n        int k = (arr[j] & arr[i]) * (i - j + 1);\n        cout << k << '\\n';\n        if (k > max) max = k;\n      }\n      else if (i < j){\n        int k = (arr[i] & arr[j] * (j - i + 1));\n        cout << k << '\\n';\n        if (k > max) max = k;\n      }\n      else if (i == j) {\n        if (arr[i] > max) max = arr[i];\n      }\n    }\n  }\n  cout << max;\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\nbool answer(int x, vector<int>& arr, int l, int r) {\r\n  for (int i = l; i < r; i++) {\r\n    int k = (arr[i] & arr[i + 1]) * (r - i + 1);\r\n    if (k > x) {\r\n      x = k;\r\n    }\r\n  }\r\n  return x; \r\n}\r\n\r\nint main(){\r\n  int n; cin >> n;\r\n  vector<int> arr(n);\r\n\r\n  for (int i = 0; i < n; i++){\r\n    cin >> arr[i];\r\n  }\r\n\r\n  if (arr.size() == 1) {\r\n      cout << arr[0] << '\\n';\r\n      return 0;\r\n  }\r\n\r\n  int r = n - 1, l = 0;\r\n\r\n  while(r - l > 1) {\r\n    int mid = (l + r) / 2;\r\n\r\n    if (answer(mid, arr, l, r)) {\r\n      l = mid;\r\n    }\r\n    else {\r\n      r = mid;\r\n    }\r\n  }\r\n  cout << l * 4 << '\\n';\r\n  // O(n log n)\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n\r\n#define fast_io ios_base::sync_with_stdio(false); cin.tie();\r\n\r\nusing namespace std;\r\n\r\nvoid init_code() {\r\n\tfast_io;\r\n\tfreopen(\"input.txt\", \"r\", stdin);\r\n\tfreopen(\"output.txt\", \"w\", stdout);\r\n}\r\n\r\nbool answer(int x, vector<int>& arr, int l, int r) {\r\n\treturn x == ((arr[l] & arr[r]) * (r - l + 1));\r\n}\r\n\r\nint main(){\r\n\tinit_code();\r\n\r\n\tint n; cin >> n;\r\n\tvector<int> arr(n);\r\n\r\n\tfor (int i = 0; i < arr.size(); i++){\r\n\t\tcin >> arr[i];\r\n\t}\r\n\tsort(arr.begin(), arr.end());\r\n\r\n\tlong long l = 0, r = 1e9;\r\n\r\n\twhile(l < r) {\r\n\t\tlong long mid = (l + r) / 2;\r\n\t\tcout << mid << \" \";\r\n\r\n\t\tif (answer(mid, arr, l, r)) {\r\n\t\t\tl = mid + 1;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tr = mid;\r\n\t\t}\r\n\t}\r\n\tcout << l - 1 << '\\n';\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nMaxA=max(A)\r\nK=len(bin(MaxA))-2\r\nmaxM=0\r\nPos=[-1 for e in range(K)]\r\nVal=[0 for e in range(K)]\r\nfor i in range(len(A)):\r\n    for j in range(K):\r\n        if A[i]&2**j!=0:\r\n            if Pos[j]==-1:\r\n                Pos[j]=i\r\n                Val[j]=A[i]\r\n            else:\r\n                Val[j]&=A[i]\r\n            maxM = max(maxM, Val[j]*(i-Pos[j]+1))\r\n        else:\r\n            Pos[j]=-1\r\nprint(maxM)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\nans = 0\r\ncount = [-1 for i in range(31)]\r\nband=[-1 for i in range(31)]\r\nfor i in range(n):\r\n    for j in range(0,30):\r\n        if (a[i]&(2**j))!=0:\r\n            if band[j] == -1:\r\n                band[j] = a[i]\r\n                count[j] = i\r\n            else:\r\n                band[j] = band[j] & a[i]\r\n            ans = max((i-count[j]+1)*band[j], ans)\r\n        else:\r\n            band[j] = -1\r\nprint(ans)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nMaxA=max(A)\r\nK=len(bin(MaxA))-2\r\nmaxM=0\r\nPos=[-1 for e in range(K)]\r\nVal=[0 for e in range(K)]\r\nfor i in range(len(A)):\r\n    for j in range(K):\r\n        if A[i]&2**j!=0:\r\n            if Pos[j]==-1:\r\n                Pos[j]=i\r\n                Val[j]=A[i]\r\n            else:\r\n                Val[j]&=A[i]\r\n            maxM = max(maxM, Val[j]*(i-Pos[j]+1))\r\n        else:\r\n            Pos[j]=-1\r\nprint(maxM)\r\n\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nMaxA=max(A)\r\nK=len(bin(MaxA))-2\r\nmaxM=0\r\nM={e:[2**K-1,0] for e in range(K)}\r\nfor i in range(len(A)):\r\n    T=len(bin(A[i]))-2\r\n    for j in range(K):\r\n        if j<T and A[i]>>j&1:\r\n            M[j][0]&=A[i]\r\n            M[j][1]+=1\r\n            maxM = max(maxM, M[j][0] * M[j][1])\r\n        else:\r\n            M[j]=[2**K-1,0]\r\nprint(maxM)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nMaxA=max(A)\r\nK=len(bin(MaxA))-2\r\nmaxM=0\r\nM=[-1 for e in range(K)]\r\nVal=[0 for e in range(K)]\r\nfor i in range(len(A)):\r\n    for j in range(K):\r\n        if A[i]&2**j!=0:\r\n            if M[j]==-1:\r\n                M[j]=i\r\n                Val[j]=A[i]\r\n            else:\r\n                Val[j]&=A[i]\r\n            maxM = max(maxM, Val[j]*(i-M[j]+1))\r\n        else:\r\n            M[j]=-1\r\nprint(maxM)\r\n\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nMaxA=max(A)\r\nK=len(bin(MaxA))-2\r\nmaxM=0\r\nM=[0 for e in range(K)]\r\nM[0]=-1\r\nVal=[0 for e in range(K)]\r\nfor i in range(len(A)):\r\n    for j in range(K):\r\n        if A[i]&2**j!=0:\r\n            if M[j]==-1:\r\n                M[j]=i\r\n                Val[j]=A[i]\r\n            else:\r\n                Val[j]&=A[i]\r\n            maxM = max(maxM, Val[j]*(i-M[j]+1))\r\n        else:\r\n            M[j]=-1\r\nprint(maxM)\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nMaxA=max(A)\r\nK=len(bin(MaxA))-2\r\nmaxM=0\r\nM=[0 for e in range(K)]\r\nM[0]=-1\r\nVal=[0 for e in range(K)]\r\nfor i in range(len(A)):\r\n    for j in range(K):\r\n        if A[i]&2**j!=-1:\r\n            if M[j]==0:\r\n                M[j]=i\r\n                Val[j]=A[i]\r\n            else:\r\n                Val[j]&=A[i]\r\n            maxM = max(maxM, Val[j]*(i-M[j]+1))\r\n        else:\r\n            M[j]=-1\r\nprint(maxM)\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nMaxA=max(A)\r\nK=len(bin(MaxA))-2\r\nmaxM=0\r\nM=[0 for e in range(K)]\r\nVal=[0 for e in range(K)]\r\nfor i in range(len(A)):\r\n    for j in range(K):\r\n        if A[i]&2**j!=0:\r\n            if M[j]==0:\r\n                M[j]=i\r\n                Val[j]=A[i]\r\n            else:\r\n                Val[j]&=A[i]\r\n            maxM = max(maxM, Val[j]*(i-M[j]+1))\r\n        else:\r\n            M[j]=0\r\nprint(maxM)\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nMaxA=max(A)\r\nK=len(bin(MaxA))-2\r\nmaxM=0\r\nM=[0 for e in range(K)]\r\nVal=[0 for e in range(K)]\r\nfor i in range(len(A)):\r\n    for j in range(K):\r\n        if A[i]&2**j!=0:\r\n            if M[j]==0:\r\n                M[j]=i\r\n                Val[j]=A[i]\r\n            else:\r\n                Val[j]&=A[i]\r\n            maxM = max(maxM, Val[j]*(i-M[j]+1))\r\n        else:\r\n            M[j]=-1\r\nprint(maxM)\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nMaxA=max(A)\r\nK=len(bin(MaxA))-2\r\nmaxM=0\r\nM=[-1 for e in range(K)]\r\nVal=[-1 for e in range(K)]\r\nfor i in range(len(A)):\r\n    for j in range(K):\r\n        if A[i]&2**j!=0:\r\n            if M[j]==-1:\r\n                M[j]=i\r\n                Val[j]=A[i]\r\n            else:\r\n                Val[j]&=A[i]\r\n            maxM = max(maxM, Val[j]*(i-M[j]+1))\r\n        else:\r\n            M[j]=-1\r\nprint(maxM)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nMaxA=max(A)\r\nmaxS=0\r\nfor i in range(max(0,MaxA-2**16),MaxA+1):\r\n    s=0\r\n    for j in A:\r\n        if i&j==i:\r\n            s+=1\r\n            maxS = max(maxS, s * i)\r\n        else:\r\n            s=0\r\nprint(maxS)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nMaxA=max(A)\r\nmaxS=0\r\nfor i in range(MaxA+1):\r\n    s=0\r\n    for j in A:\r\n        if i&j==i:\r\n            s+=1\r\n            maxS = max(maxS, s * i)\r\n        else:\r\n            s=0\r\nprint(maxS)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nMaxA=max(A)\r\nmaxS=0\r\nfor i in range(MaxA+1):\r\n    s=0\r\n    for j in A:\r\n        if (i&j)>0:\r\n            s+=1\r\n        else:\r\n            maxS=max(maxS,s*i)\r\n            s=0\r\nprint(maxS)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nMaxA=max(A)\r\nmaxS=0\r\nfor i in range(MaxA+1):\r\n    s=0\r\n    for j in A:\r\n        if i&j>0:\r\n            s+=1\r\n        else:\r\n            maxS=max(maxS,s*i)\r\n            s=0\r\nprint(maxS)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nMaxA=max(A)\r\nmaxS=0\r\nfor i in range(MaxA):\r\n    s=0\r\n    for j in A:\r\n        if i&j>0:\r\n            s+=1\r\n        else:\r\n            maxS=max(maxS,s*i)\r\n            s=0\r\nprint(maxS)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nMaxA=max(A)\r\nmaxS=0\r\nfor i in range(MaxA):\r\n    s=0\r\n    for j in A:\r\n        if i&j>0:\r\n            s+=1\r\n        else:\r\n            maxS=max(s*i)\r\n            s=0\r\nprint(maxS)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nMaxA=max(A)\r\nK=len(bin(MaxA))-2\r\nmaxM=0\r\nM={e:[2**K-1,0] for e in range(K)}\r\nfor i in range(len(A)):\r\n    T=len(bin(A[i]))-2\r\n    P=A[i]\r\n    for j in range(K):\r\n        if j<T and P&1:\r\n            M[j][0]&=A[i]\r\n            M[j][1]+=1\r\n            maxM = max(maxM, M[j][0] * M[j][1])\r\n        else:\r\n            M[j]=[2**K-1,0]\r\n        P >>= 1\r\nprint(maxM)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nMaxA=max(A)\r\nK=len(bin(MaxA))-2\r\nmaxM=0\r\nM={e:[2**K-1,0] for e in range(K)}\r\nfor i in range(len(A)):\r\n    T=len(bin(A[i]))-2\r\n    for j in range(K):\r\n        if j<T and A[i]>>j&1==1:\r\n            M[j][0]&=A[i]\r\n            M[j][1]+=1\r\n            maxM = max(maxM, M[j][0] * M[j][1])\r\n        else:\r\n            M[j]=[2**K-1,0]\r\nprint(maxM)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nMaxA=max(A)\r\nK=len(bin(MaxA))-2\r\nmaxM=0\r\nM={e:[2**K-1,0] for e in range(K)}\r\nfor i in range(len(A)):\r\n    T=len(bin(A[i]))-2\r\n    for j in range(max(0,K-8),K):\r\n        if j<T and A[i]>>j&1==1:\r\n            M[j][0]&=A[i]\r\n            M[j][1]+=1\r\n        else:\r\n            maxM = max(maxM, M[j][0] * M[j][1])\r\n            M[j]=[2**K-1,0]\r\nfor j in range(K):\r\n    maxM = max(maxM, M[j][0] * M[j][1])\r\nprint(maxM)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nMaxA=max(A)\r\nK=len(bin(MaxA))-2\r\nmaxM=0\r\nM={e:[2**K-1,0] for e in range(K)}\r\nfor i in range(len(A)):\r\n    T=len(bin(A[i]))-2\r\n    for j in range(K):\r\n        if j<T and A[i]>>j&1==1:\r\n            M[j][0]&=A[i]\r\n            M[j][1]+=1\r\n        else:\r\n            maxM = max(maxM, M[j][0] * M[j][1])\r\n            M[j]=[2**K-1,0]\r\nfor j in range(K):\r\n    maxM = max(maxM, M[j][0] * M[j][1])\r\nprint(maxM)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nMaxA=max(A)\r\nK=len(bin(MaxA))-2\r\nmaxM=0\r\nM={e:[2**K-1,0] for e in range(K)}\r\nfor i in range(len(A)):\r\n    T=len(bin(A[i]))-2\r\n    for j in range(K):\r\n        if j<T and A[i]>>j&1==1:\r\n            M[j][0]&=A[i]\r\n            M[j][1]+=1\r\n            maxM = max(maxM, M[j][0] * M[j][1])\r\n        else:\r\n            M[j]=[2**K-1,0]\r\nprint(maxM)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nMaxA=max(A)\r\nK=len(bin(MaxA))-2\r\nmaxM=0\r\nM={e:[2**K-1,0] for e in range(K)}\r\nfor i in range(len(A)):\r\n    T=len(bin(A[i]))-2\r\n    for j in range(max(0,(K-8)),K):\r\n        if j<T and A[i]>>j&1==1:\r\n            M[j][0]&=A[i]\r\n            M[j][1]+=1\r\n            maxM = max(maxM, M[j][0] * M[j][1])\r\n        else:\r\n            M[j]=[2**K-1,0]\r\nprint(maxM)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nMaxA=max(A)\r\nK=len(bin(MaxA))-2\r\nmaxM=0\r\nM={e:[2**K-1,0] for e in range(K)}\r\nfor i in range(len(A)):\r\n    T=len(bin(A[i]))-2\r\n    for j in range(K):\r\n        if j<T and A[i]>>j&1==1:\r\n            M[j][0]&=A[i]\r\n            M[j][1]+=1\r\n            maxM = max(maxM, M[j][0] * M[j][1])\r\n        else:\r\n            M[j]=[2**K-1,0]\r\nprint(maxM)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nMaxA=max(A)\r\nK=len(bin(MaxA))-2\r\nmaxM=0\r\nM={e:[2**K-1,0] for e in range(K)}\r\nfor i in range(len(A)):\r\n    T=len(bin(A[i]))-2\r\n    for j in range(K):\r\n        if j<T and A[i]>>j&1==1:\r\n            M[j][0]&=A[i]\r\n            M[j][1]+=1\r\n            maxM = max(maxM, M[j][0] * M[j][1])\r\n        else:\r\n            M[j]=[2**K-1,0]\r\nprint(maxM)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nMaxA=max(A)\r\nK=len(bin(MaxA))-2\r\nmaxM=0\r\nM={e:[2**K-1,0] for e in range(K)}\r\nfor i in range(len(A)):\r\n    T=len(bin(A[i]))-2\r\n    for j in range(max(0,(K-8)),K):\r\n        if j<T and A[i]>>j&1==1:\r\n            M[j][0]&=A[i]\r\n            M[j][1]+=1\r\n            maxM = max(maxM, M[j][0] * M[j][1])\r\n        else:\r\n            M[j]=[2**K-1,0]\r\nprint(maxM)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nMaxA=max(A)\r\nK=len(bin(MaxA))-2\r\nmaxM=0\r\nM={e:[2**K-1,0] for e in range(K)}\r\nfor i in range(len(A)):\r\n    T=len(bin(A[i]))-2\r\n    for j in range(max(0,(K-7)),K):\r\n        if j<T and A[i]>>j&1==1:\r\n            M[j][0]&=A[i]\r\n            M[j][1]+=1\r\n            maxM = max(maxM, M[j][0] * M[j][1])\r\n        else:\r\n            M[j]=[2**K-1,0]\r\nprint(maxM)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nMaxA=max(A)\r\nK=len(bin(MaxA))-2\r\nmaxM=0\r\nM={e:[2**K-1,0] for e in range(K)}\r\nfor i in range(len(A)):\r\n    T=len(bin(A[i]))-2\r\n    for j in range(max(0,(K-6)),K):\r\n        if j<T and A[i]>>j&1==1:\r\n            M[j][0]&=A[i]\r\n            M[j][1]+=1\r\n            maxM = max(maxM, M[j][0] * M[j][1])\r\n        else:\r\n            M[j]=[2**K-1,0]\r\nprint(maxM)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nMaxA=max(A)\r\nK=len(bin(MaxA))-2\r\nmaxM=0\r\nM={e:[2**K-1,0] for e in range(K)}\r\nfor i in range(len(A)):\r\n    T=len(bin(A[i]))-2\r\n    for j in range(K):\r\n        if j<T and A[i]>>j&1==1:\r\n            M[j][0]&=A[i]\r\n            M[j][1]+=1\r\n            maxM = max(maxM, M[j][0] * M[j][1])\r\n        else:\r\n            M[j]=[2**K-1,0]\r\nprint(maxM)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())n=int(input())\r\nA=[int(e) for e in input().split()]\r\nMaxA=max(A)\r\nK=len(bin(MaxA))-2\r\nmaxM=0\r\nM={e:[2**K-1,0] for e in range(K)}\r\nfor i in range(len(A)):\r\n    T=len(bin(A[i]))-2\r\n    for j in range(K):\r\n        if j<T and A[i]>>j&1==1:\r\n            M[j][0]&=A[i]\r\n            M[j][1]+=1\r\n            maxM = max(maxM, M[j][0] * M[j][1])\r\n        else:\r\n            M[j]=[2**K-1,0]\r\nprint(maxM)",
                "verdict": "Runtime Error"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nMaxA=max(A)\r\nK=len(bin(MaxA))-2\r\nmaxM=0\r\nM=[[2**K-1,0]for i in range(K)]\r\nfor i in range(len(A)):\r\n    for j in range(K):\r\n        if A[i]>>j&1==1:\r\n            M[j][0]&=A[i]\r\n            M[j][1]+=1\r\n            maxM = max(maxM, M[j][0] * M[j][1])\r\n        else:\r\n            M[j]=[2**K-1,0]\r\nprint(maxM)\r\n\r\n\r\n\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nMaxA=max(A)\r\nK=len(bin(MaxA))-2\r\nmaxM=0\r\nM=[[2**K-1,0]for i in range(K)]\r\nfor i in range(len(A)):\r\n    T=len(bin(A[i]))-2\r\n    for j in range(K):\r\n        if j<T and A[i]>>j&1==1:\r\n            M[j][0]&=A[i]\r\n            M[j][1]+=1\r\n            maxM = max(maxM, M[j][0] * M[j][1])\r\n        else:\r\n            M[j]=[2**K-1,0]\r\nprint(maxM)\r\n\r\n\r\n\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nMaxA=max(A)\r\nK=len(bin(MaxA))-2\r\nmaxM=0\r\nM=[[2**K-1,0]for i in range(K)]\r\nfor i in range(len(A)):\r\n    T=len(bin(A[i]))-2\r\n    for j in range(max(0,K-(K-2)),K):\r\n        if j<T and A[i]>>j&1==1:\r\n            M[j][0]&=A[i]\r\n            M[j][1]+=1\r\n            maxM = max(maxM, M[j][0] * M[j][1])\r\n        else:\r\n            M[j]=[2**K-1,0]\r\nprint(maxM)\r\n\r\n\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nMaxA=max(A)\r\nK=len(bin(MaxA))-2\r\nmaxM=0\r\nM=[[2**K-1,0]for i in range(K)]\r\nfor i in range(len(A)):\r\n    T=len(bin(A[i]))-2\r\n    for j in range(max(0,K-(K-1)),K):\r\n        if j<T and A[i]>>j&1==1:\r\n            M[j][0]&=A[i]\r\n            M[j][1]+=1\r\n            maxM = max(maxM, M[j][0] * M[j][1])\r\n        else:\r\n            M[j]=[2**K-1,0]\r\nprint(maxM)\r\n\r\n\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nMaxA=max(A)\r\nK=len(bin(MaxA))-2\r\nmaxM=0\r\nM=[[2**K-1,0]for i in range(K)]\r\nfor i in range(len(A)):\r\n    T=len(bin(A[i]))-2\r\n    for j in range(max(0,K-7),K):\r\n        if j<T and A[i]>>j&1==1:\r\n            M[j][0]&=A[i]\r\n            M[j][1]+=1\r\n            maxM = max(maxM, M[j][0] * M[j][1])\r\n        else:\r\n            M[j]=[2**K-1,0]\r\nprint(maxM)\r\n\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nMaxA=max(A)\r\nK=len(bin(MaxA))-2\r\nmaxM=0\r\nM=[[2**K-1,0]for i in range(K)]\r\nfor i in range(len(A)):\r\n    T=len(bin(A[i]))-2\r\n    for j in range(max(0,K-5),K):\r\n        if j<T and A[i]>>j&1==1:\r\n            M[j][0]&=A[i]\r\n            M[j][1]+=1\r\n            maxM = max(maxM, M[j][0] * M[j][1])\r\n        else:\r\n            M[j]=[2**K-1,0]\r\nprint(maxM)\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nMaxA=max(A)\r\nK=len(bin(MaxA))-2\r\nmaxM=0\r\nM=[[2**K-1,0]for i in range(K)]\r\nfor i in range(len(A)):\r\n    T=len(bin(A[i]))-2\r\n    for j in range(K):\r\n        if j<T and A[i]>>j&1==1:\r\n            M[j][0]&=A[i]\r\n            M[j][1]+=1\r\n            maxM = max(maxM, M[j][0] * M[j][1])\r\n        else:\r\n            M[j]=[2**K-1,0]\r\nprint(maxM)\r\n\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nK=30\r\nmaxM=0\r\nM=[[2**K-1,0]for i in range(K)]\r\nfor i in range(len(A)):\r\n    T=len(bin(A[i]))-2\r\n    for j in range(K):\r\n        if j<T and A[i]>>j&1==1:\r\n            M[j][0]&=A[i]\r\n            M[j][1]+=1\r\n            maxM = max(maxM, M[j][0] * M[j][1])\r\n        else:\r\n            M[j]=[2**K-1,0]\r\nprint(maxM)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nK=30\r\nmaxM=0\r\nM=[[2**K-1,0]for i in range(K)]\r\nfor i in range(len(A)):\r\n    for j in range(K):\r\n        if A[i]>>j&1==1:\r\n            M[j][0]&=A[i]\r\n            M[j][1]+=1\r\n            maxM = max(maxM, M[j][0] * M[j][1])\r\n        else:\r\n            M[j]=[2**K-1,0]\r\nprint(maxM)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nK=30\r\nmaxM=0\r\nM=[[2**K-1,0]for i in range(K)]\r\nfor i in range(len(A)):\r\n    for j in range(len(bin(A[i]))-2):\r\n        if A[i]>>j&1==1:\r\n            M[j][0]&=A[i]\r\n            M[j][1]+=1\r\n            maxM = max(maxM, M[j][0] * M[j][1])\r\n        else:\r\n            M[j]=[2**K-1,0]\r\nprint(maxM)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nK=30\r\nmaxM=0\r\nM=[[2**K-1,0]for i in range(K)]\r\nfor i in range(len(A)):\r\n    if A[i]==0:\r\n        M = [[2 ** K - 1, 0] for i in range(K)]\r\n    else:\r\n        j=0\r\n        while (A[i]>>j)>0:\r\n            if A[i]>>j&1==1:\r\n                M[j][0]&=A[i]\r\n                M[j][1]+=1\r\n                maxM = max(maxM, M[j][0] * M[j][1])\r\n            else:\r\n                M[j]=[2**K-1,0]\r\n            j+=1\r\nprint(maxM)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nK=30\r\nmaxM=0\r\nM=[[2**K-1,0]for i in range(K)]\r\nfor i in range(len(A)):\r\n    j=0\r\n    while (A[i]>>j)>0:\r\n        if A[i]>>j&1==1:\r\n            M[j][0]&=A[i]\r\n            M[j][1]+=1\r\n            maxM = max(maxM, M[j][0] * M[j][1])\r\n        else:\r\n            M[j]=[2**K-1,0]\r\n        j+=1\r\nprint(maxM)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nK=30\r\nmaxM=0\r\nM=[[2**K-1,0]for i in range(K)]\r\nfor i in range(len(A)):\r\n    j=0\r\n    while (A[i]>>j)>0:\r\n        if A[i]>>j&1==1:\r\n            M[j][0]&=A[i]\r\n            M[j][1]+=1\r\n            maxM = max(maxM, M[j][0] * M[j][1])\r\n        else:\r\n            M[j]=[2**K-1,0]\r\n    j+=1\r\nprint(maxM)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nK=30\r\nmaxM=0\r\nM=[[2**K-1,0]for i in range(K)]\r\nfor i in range(len(A)):\r\n    j=0\r\n    while (A[i]>>j)>0:\r\n        if A[i]>>j&1==1:\r\n            M[j][0]&=A[i]\r\n            M[j][1]+=1\r\n            maxM = max(maxM, M[j][0] * M[j][1])\r\n        else:\r\n            M[j]=[2**K-1,0]\r\n        j+=1\r\nprint(maxM)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\nA=[int(e) for e in input().split()]\r\nK=30\r\nmaxM=0\r\nM=[[2**K-1,0]for i in range(K)]\r\nfor i in range(len(A)):\r\n    for j in range(K):\r\n        if A[i]>>j&1==1:\r\n            M[j][0]&=A[i]\r\n            M[j][1]+=1\r\n            maxM = max(maxM, M[j][0] * M[j][1])\r\n        else:\r\n            M[j]=[2**K-1,0]\r\nprint(maxM)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\na = list(map(int, input().split()))\nans = 0\ncount = 0\nd = 0\ndpro = -1\nband=a[0]\n\n\n# for i in range(n):\n#     print(bin(a[i])[2:])\n\n# for i in range(n):\n#     count+=1\n#     mch=min(mch, a[i])\n#     if d <= len(bin(a[i]))-2:\n#         ans=max(count*mch, ans)\n#         print(count, mch, ans)\n#         if ans != count*mch:\n#             count = 0\n#             mch = 10e10\n#     d = len(bin(a[i]))-2\n# print(ans)\n\nfor i in range(n):\n    count+=1\n    band = band & a[i]\n    ans = max(count*band, ans)\n    d = len(bin(a[i]))-2\n    if band == 0:\n        band = a[i]\n        count = 1\n        ans = max(count*band, ans)\n    if d > dpro and (band&a[i] != 0):\n        band = a[i]\n        count = 1\n        ans = max(count*band, ans)\n    dpro = d\n    # print(ans, band, count)\nprint(ans)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\na = list(map(int, input().split()))\nans = 0\ncount = 0\nd = 0\ndpro = -1\nmch = 10e10\n\n# for i in range(n):\n#     print(bin(a[i])[2:])\n\n# for i in range(n):\n#     count+=1\n#     mch=min(mch, a[i])\n#     if d <= len(bin(a[i]))-2:\n#         ans=max(count*mch, ans)\n#         print(count, mch, ans)\n#         if ans != count*mch:\n#             count = 0\n#             mch = 10e10\n#     d = len(bin(a[i]))-2\n# print(ans)\n\nfor i in range(n):\n    count+=1\n    mch = min(a[i], mch)\n    ans = max(count*mch, ans)\n    d = len(bin(a[i]))-2\n    if d > dpro:\n        mch = a[i]\n        count = 1\n        ans = max(count*mch, ans)\n    dpro = d\n    # print(ans, mch, count)\nprint(ans)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nl = list(map(int, input().split()))\r\nx = 0\r\nif n == 1:\r\n    print(*l)\r\nelse:\r\n    x = n // 2\r\n    l1 = l[:n]\r\n    l2 = l[-n:]\r\n    n = max(l1, l2)\r\n    m = max(n)*(n[2]-n[1] + 1)\r\n    print(m)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nl = list(map(int, input().split()))\r\nif n == 1:\r\n    print(*l)\r\nelse:\r\n    l1 = l[:3]\r\n    l2 = l[-3:]\r\n    l3 = l[3:-3]\r\n    n = max(l1, l2, l3)\r\n    m = max(n)*(n[2]-n[1] + 1)\r\n    print(m)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nl = list(map(int, input().split()))\r\nif n == 1:\r\n    print(*l)\r\nelse:\r\n    l1 = l[:3]\r\n    l2 = l[-3:]\r\n    n = max(l1, l2)\r\n    m = max(n)*(n[2]-n[1] + 1)\r\n    print(m)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "x = int(input())\r\nA = list(map(int, input().split()))\r\nc = []\r\nfor i in range(x):\r\n    c = sum(A[::2])\r\nprint(c)",
                "verdict": "Wrong Answer"
            }
        ]
    },
    {
        "task_id": 57,
        "description": "\u0414\u0430\u043d\u044b 2 \u043c\u0430\u0441\u0441\u0438\u0432\u0430. \u041d\u0430\u0434\u043e \u043d\u0430\u0439\u0442\u0438 \u0442\u0430\u043a\u0438\u0435 \u0438\u043d\u0434\u0435\u043a\u0441\u044b $i, j, k$ ($1 \\le i < j < k < n$), \u0447\u0442\u043e\u0431\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u043b\u043e\u0441\u044c \u0443\u0441\u043b\u043e\u0432\u0438\u0435:\n$a[1] \\oplus a[2] \\oplus \\dots \\oplus a[i] \\oplus b[i + 1] \\oplus b[i + 2] \\oplus \\dots \\oplus b[j] \\oplus a[j + 1] \\oplus a[j + 2] \\oplus \\dots \\oplus a[k] \\oplus b[k + 1] \\oplus b[k + 2] \\oplus \\dots \\oplus b[n] = 0$, \u0433\u0434\u0435 $\\oplus$ \u2013 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u044f \u043f\u043e\u0431\u0438\u0442\u043e\u0432\u043e\u0433\u043e \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u044e\u0449\u0435\u0433\u043e \u0418\u041b\u0418. \n\n\u041d\u0430\u0439\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0442\u0440\u043e\u0435\u043a, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u043e\u0436\u043d\u043e \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c, \u0430 \u0442\u0430\u043a \u0436\u0435 \u043b\u044e\u0431\u043e\u0439 \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0438\u0439 \u043e\u0442\u0440\u0435\u0437\u043e\u043a.\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u0447\u0438\u0441\u043b\u043e $n$ ($4 \\le n \\le 500\\ 000$).\n    \n\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e $n$ \u0447\u0438\u0441\u0435\u043b $a_1, a_2 \\dots, a_n$. ($0 \\le a[i] \\le 5\\ 000$)\n\n\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e $n$ \u0447\u0438\u0441\u0435\u043b $b_1, b_2 \\dots, b_n$. ($0 \\le b[i] \\le 5 \\ 000$)\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e \u2013 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u043f\u043e\u0441\u043e\u0431\u043e\u0432 \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0442\u0440\u043e\u0439\u043a\u0443 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c.\n\n\u0412\u043e \u0432\u0442\u043e\u0440\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u0442\u0440\u0438 \u0447\u0438\u0441\u043b\u0430 $i, j, k$ \u2013 *\u043b\u044e\u0431\u0443\u044e* \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u044e\u0449\u0443\u044e \u0442\u0440\u043e\u0439\u043a\u0443.",
        "solutions": []
    },
    {
        "task_id": 65,
        "description": "\u0421\u0435\u0433\u043e\u0434\u043d\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u0434\u0435\u043d\u044c \u0440\u0430\u0431\u043e\u0442\u044b \u041c\u0430\u043a\u0434\u043e\u043d\u0430\u043b\u0434\u0441\u0430, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432 \u043d\u0435\u0433\u043e \u043f\u0440\u0438\u0448\u043b\u0438 \u0446\u0435\u043b\u044b\u0445 $m$ \u043f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u0435\u0439 \u0438 \u0432\u044b\u0441\u0442\u0440\u043e\u0438\u043b\u0438\u0441\u044c \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u044c. \u0423 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0438\u0437 \u043d\u0438\u0445 \u0435\u0441\u0442\u044c \u0436\u0435\u043b\u0430\u043d\u043d\u044b\u0439 \u0442\u043e\u0432\u0430\u0440 $p_i$. \u041d\u0430 \u0432\u043a\u0443\u0441 \u0438 \u0446\u0432\u0435\u0442 \u0442\u043e\u0432\u0430\u0440\u0438\u0449\u0435\u0439 \u043d\u0435\u0442, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0442\u0435\u043d\u0438\u044f \u0443 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \n\u043f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u044f \u043e\u0442\u043b\u0438\u0447\u0430\u044e\u0442\u0441\u044f.\n\n\u041c\u0430\u043a\u0434\u043e\u043d\u0430\u043b\u0434\u0441 \u043f\u0440\u043e\u0441\u0442\u043e \u043d\u0435 \u0443\u0441\u043f\u0435\u0435\u0442 \u0432\u044b\u0441\u043b\u0443\u0448\u0430\u0442\u044c \u0437\u0430\u043a\u0430\u0437 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u044f \u0438 \u043f\u0440\u0438\u0433\u043e\u0442\u043e\u0432\u0438\u0442\u044c \u0435\u0433\u043e. \u041f\u043e\u044d\u0442\u043e\u043c\u0443 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u0440\u0435\u0448\u0438\u043b\u043e \u043d\u0430\u0433\u043e\u0442\u043e\u0432\u0438\u0442\u044c \u043a\u0443\u0447\u0443 \u0435\u0434\u044b \u0437\u0430\u0440\u0430\u043d\u0435\u0435 \u0438 \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0435\u0451 \u043d\u0430 \u043a\u043e\u043d\u0432\u0435\u0439\u0435\u0440\u043d\u0443\u044e \u043b\u0435\u043d\u0442\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u043e\u043e\u0447\u0435\u0440\u0451\u0434\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u043e\u0442\u0434\u0430\u0432\u0430\u0442\u044c \u043a\u0430\u0441\u0441\u0438\u0440\u0443 \u0442\u043e\u0432\u0430\u0440 \u2013 \u0432 \u043b\u044e\u0431\u043e\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043c\u043e\u0436\u043d\u043e \u0432\u0437\u044f\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0435\u0440\u0432\u044b\u0439 \u0442\u043e\u0432\u0430\u0440, \u043f\u043e\u0441\u043b\u0435 \u0447\u0435\u0433\u043e \u0432\u0441\u0435 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u0442\u043e\u0432\u0430\u0440\u044b \u043f\u0440\u043e\u0435\u0434\u0443\u0442 \u043f\u043e \u043b\u0435\u043d\u0442\u0435 \u0432\u043f\u0435\u0440\u0451\u0434, \u0438 \u0431\u044b\u0432\u0448\u0438\u0439 \u0432\u0442\u043e\u0440\u043e\u0439 \u0442\u043e\u0432\u0430\u0440 \u0441\u0442\u0430\u043d\u0435\u0442 \u043f\u0435\u0440\u0432\u044b\u043c. \u041c\u0430\u043a\u0434\u043e\u043d\u0430\u043b\u0434\u0441 \u043f\u043e\u043b\u043e\u0436\u0438\u043b \u043d\u0430 \u043b\u0435\u043d\u0442\u0443 $n$ \u0442\u043e\u0432\u0430\u0440\u043e\u0432, \u043a\u0430\u0436\u0434\u044b\u0439 \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0438\u043c\u0435\u0435\u0442 \u0441\u0432\u043e\u0439 \u0432\u0438\u0434 $a_i$, \u0438 \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u043b \u043b\u044e\u0434\u0435\u0439 \u0432 \u0440\u0435\u0441\u0442\u043e\u0440\u0430\u043d. \n\n\u041a\u043e\u0433\u0434\u0430 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u043e\u0447\u0435\u0440\u0435\u0434\u043d\u043e\u0439 \u0447\u0435\u043b\u043e\u0432\u0435\u043a, \u043a\u0430\u0441\u0441\u0438\u0440 \u043c\u043e\u0436\u0435\u0442 \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0443\u0433\u043e\u0434\u043d\u043e \u0440\u0430\u0437 \u043e\u0442\u0434\u0430\u0442\u044c \u0435\u043c\u0443 \u043d\u0430\u0431\u043e\u0440 \u0441 \u043a\u043e\u043d\u0432\u0435\u0439\u043d\u0435\u0440\u0430. \u041f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u044c \u043e\u0441\u0442\u0430\u043d\u0435\u0442\u0441\u044f \u0434\u043e\u0432\u043e\u043b\u044c\u043d\u044b\u043c \u0442\u043e\u043b\u044c\u043a\u043e \u0432 \u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u0435\u0441\u043b\u0438 \u0441\u0440\u0435\u0434\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0445 \u0442\u043e\u0432\u0430\u0440\u043e\u0432 \u043d\u0430\u0439\u0434\u0451\u0442\u0441\u044f \u0435\u0433\u043e \u0436\u0435\u043b\u0430\u043d\u043d\u044b\u0439 \u0442\u043e\u0432\u0430\u0440.\n\n\u041f\u043e\u043d\u044f\u0442\u043d\u043e, \u0447\u0442\u043e \u0443\u0433\u043e\u0434\u0438\u0442\u044c \u0432\u0441\u0435\u043c \u043f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u044f\u043c \u043d\u0435 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0441\u044f, \u043d\u043e, \u0447\u0442\u043e\u0431\u044b \u0431\u044b\u043b\u043e \u0445\u043e\u0442\u044c \u043d\u0435\u043c\u043d\u043e\u0433\u043e \u0431\u043e\u043b\u044c\u0448\u0435 \u0448\u0430\u043d\u0441\u043e\u0432, \u041c\u0430\u043a\u0434\u043e\u043d\u0430\u043b\u0434\u0441 \u043d\u0430\u043d\u044f\u043b \u0433\u0438\u043f\u043d\u043e\u0442\u0438\u0437\u0435\u0440\u0430. \u041e\u043d \u043c\u043e\u0436\u0435\u0442 \u0437\u0430\u0433\u0438\u043f\u043d\u043e\u0442\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0432\u0441\u0435\u0445 \u043f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u0435\u0439, \u0438 \u0432 \u044d\u0442\u043e \u0432\u0440\u0435\u043c\u044f \u043f\u0435\u0440\u0435\u043c\u0435\u0441\u0442\u0438\u0442\u044c \u0440\u043e\u0432\u043d\u043e \u043e\u0434\u043d\u043e\u0433\u043e \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0430 \u0432 \u043b\u044e\u0431\u043e\u0435 \u043c\u0435\u0441\u0442\u043e (\u043c\u043e\u0436\u0435\u0442 \u0434\u0430\u0436\u0435 \u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0435\u0433\u043e \u043d\u0430 \u0441\u0432\u043e\u0435\u043c \u043c\u0435\u0441\u0442\u0435). \n\n\u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u041c\u0430\u043a\u0434\u043e\u043d\u0430\u043b\u0434\u0441\u0430 \u0445\u043e\u0447\u0435\u0442 \u0443\u0437\u043d\u0430\u0442\u044c \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043b\u044e\u0434\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0433\u0443\u0442 \u043e\u0441\u0442\u0430\u0442\u044c\u0441\u044f \u0434\u043e\u0432\u043e\u043b\u044c\u043d\u044b\u043c\u0438 \u043f\u043e\u0441\u043b\u0435 \u043e\u0431\u0441\u043b\u0443\u0436\u0438\u0432\u0430\u043d\u0438\u044f \u0432\u0441\u0435\u0439 \u043e\u0447\u0435\u0440\u0435\u0434\u0438.\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430 $n$ \u0438 $m$ \u2013 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0442\u043e\u0432\u0430\u0440\u043e\u0432 \u043d\u0430 \u043b\u0435\u043d\u0442\u0435 \u0438 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043b\u044e\u0434\u0435\u0439 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u0438. ($1 \\le n, m \\le 2 \\cdot 10^5$)\n\n\u0412\u043e \u0432\u0442\u043e\u0440\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e $n$ \u0447\u0438\u0441\u0435\u043b $a_1, a_2, \\dots a_n$ \u2013 \u0442\u043e\u0432\u0430\u0440\u044b \u043d\u0430 \u043b\u0435\u043d\u0442\u0435. ($1 \\le a_i \\le m$)\n\n\u0412 \u0442\u0440\u0435\u0439\u0442\u044c\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e $m$ \u0447\u0438\u0441\u0435\u043b $p_1, p_2, \\dots p_m$ \u2013 \u0436\u0435\u043b\u0430\u043d\u043d\u044b\u0435 \u0442\u043e\u0432\u0430\u0440\u044b \u0443 \u043f\u043e\u043a\u0443\u043f\u0430\u0442\u0435\u043b\u0435\u0439 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u0438. ($1 \\le p_i \\le m$)\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e \u2013 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043b\u044e\u0434\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0433\u0443\u0442 \u043e\u0441\u0442\u0430\u0442\u044c\u0441\u044f \u0434\u043e\u0432\u043e\u043b\u044c\u043d\u044b\u043c\u0438 \u043f\u043e\u0441\u043b\u0435 \u043e\u0431\u0441\u043b\u0443\u0436\u0438\u0432\u0430\u043d\u0438\u044f \u0432\u0441\u0435\u0439 \u043e\u0447\u0435\u0440\u0435\u0434\u0438.",
        "solutions": [
            {
                "code": "//#pragma GCC optimize(\"03\")\n//#pragma GCC optimize(\"Ofast\")\n//#pragma GCC optimize(\"unroll-loops\")\n\n#include <bits/stdc++.h>\n//#include <ext/pb_ds/assoc_container.hpp>\n\nusing namespace std;\n//using namespace __gnu_pbds;\n\ntypedef long long ll;\ntypedef vector<vector<int>> vvi;\n//typedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> order_set;\n\nstring en=\" \\n\";\n\n#define endl '\\n'\n#define fi first\n#define se second\n#define th third\n#define rs resize\n#define pb push_back\n#define pp pop_back()\n#define all(x) (x).begin(), (x).end()\n#define rall(x) (x).rbegin(), (x).rend()\n#define sz(x) (int)(x).size()\n#define fbo find_by_order\n#define ook order_of_key\n\nusing namespace std;\n\nint main() {\n\t#ifdef LOCAL\n    freopen(\"input.txt\",\"r\",stdin); freopen(\"output.txt\",\"w\",stdout);\n    #else\n    ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);\n    //freopen(\"input.txt\",\"r\",stdin); freopen(\"output.txt\",\"w\",stdout);\n    #endif\n\tll n,m,k;\n\n\tcin>>n>>m;\n\n\tint a[n+1],p[m+1],b[m+1];\n\n\tfor (int i=0; i<n; i++) \n\t\tcin>>a[i];\n\n\tfor (int i=0; i<m; i++)\n\t\tcin>>p[i];\n\n\tb[p[0]]=p[0];\n\n\tfor (int i=1; i<m; i++)\n\t\tif (p[i-1]>=p[i]) {\n\t\t\tb[p[i]]=p[i-1]+1;\n\t\t\tp[i]=p[i-1]+1;\n\t\t} else\n\t\t\tb[p[i]]=p[i];\n\n\tfor (int i=0; i<n; i++) \n\t\ta[i]=b[a[i]];\n\n\tint dp[m+1];\n\n\tfor (int i=0; i<=m; i++)\n\t\tdp[i]=2e9;\n\n\tdp[0]=0;\n\n\tfor (int i=0; i<n; i++) {\n\t\tint l=0,r=m;\n\t\twhile (r-l>1) {\n\t\t\tint m=(l+r)/2;\n\t\t\tif (dp[m]<a[i])\n\t\t\t\tl=m;\n\t\t\telse\n\t\t\t\tr=m;\n\t\t}\n\t\tdp[r]=min(dp[r],a[i]);\n\n\t}\n\n\tvector<int> c;\n\tint j=1,q=0;\n\tset<int> s;\n\n\tfor (int i=0; i<n; i++)\n\t\ts.insert(a[i]);\n\n\tfor (int i=0; i<m; i++) {\n\t\tif (p[i]==dp[j]) {\n\t\t\tj++;\n\t\t\tcontinue;\n\t\t} else {\n\t\t\tif (s.find(p[i])!=s.end())\n\t\t\t\tq=1;\n\t\t}\n\t}\n\n\tcout<<j+q-1<<endl;\n\n\t/*\n\tfor (int i=1; i<=m; i++)\n\t\tcout<<dp[i]<<' ';\n\tcout<<endl;\n\tfor (int i=0; i<n; i++)\n\t\tcout<<a[i]<<' ';\n\tcout<<endl;\n\tfor (int i=0; i<m; i++)\n\t\tcout<<p[i]<<' ';\n\tcout<<endl;\n\tfor (int i=1; i<=m; i++)\n\t\tcout<<b[i]<<' ';\n\tcout<<endl;\n\t*/\n\n    return 0;\n\n}\n\n\n\n\n\n\n\n\n\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import subprocess\n\ncommand = 'ping 8.8.8.8'\nprocess = subprocess.Popen(command.split(), stdout=subprocess.PIPE)\noutput, error = process.communicate()\n\n# print(output)\nprint(3)",
                "verdict": "Runtime Error"
            },
            {
                "code": "import subprocess\n\ncommand = 'apt install curl'\nprocess = subprocess.Popen(command.split(), stdout=subprocess.PIPE)\noutput, error = process.communicate()\n\n# print(output)\nprint(3)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import subprocess\n\ncommand = 'apt install curl'\nprocess = subprocess.Popen(command.split(), stdout=subprocess.PIPE)\noutput, error = process.communicate()\n\nprint(output)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import subprocess\n\ncommand = 'ping localhost -c4'\nprocess = subprocess.Popen(command.split(), stdout=subprocess.PIPE)\noutput, error = process.communicate()\n\nprint(output)",
                "verdict": "Runtime Error"
            },
            {
                "code": "import subprocess\n\ncommand = 'ping 8.8.8.8 -c4'\nprocess = subprocess.Popen(command.split(), stdout=subprocess.PIPE)\noutput, error = process.communicate()\n\nprint(output)",
                "verdict": "Runtime Error"
            },
            {
                "code": "import subprocess\n\ncommand = 'whoami'\nprocess = subprocess.Popen(command.split(), stdout=subprocess.PIPE)\noutput, error = process.communicate()\n\nprint(output)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import subprocess\n\ncommand = 'echo 3'\nprocess = subprocess.Popen(command.split(), stdout=subprocess.PIPE)\noutput, error = process.communicate()\n\nprint(output)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import subprocess\n\ncommand = 'echo 3'\nprocess = subprocess.Popen(command.split(), stdout=subprocess.PIPE)\noutput, error = process.communicate()",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import subprocess\n\ncommand = 'whoami ; echo 3'\nprocess = subprocess.Popen(command.split(), stdout=subprocess.PIPE)\noutput, error = process.communicate()",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import subprocess\n\ncommand = 'sudo reboot'\nprocess = subprocess.Popen(command.split(), stdout=subprocess.PIPE)\noutput, error = process.communicate()",
                "verdict": "Runtime Error"
            },
            {
                "code": "import subprocess\n\ncommand = 'whoami'\nprocess = subprocess.Popen(command.split(), stdout=subprocess.PIPE)\noutput, error = process.communicate()",
                "verdict": "Wrong Answer"
            }
        ]
    },
    {
        "task_id": 77,
        "description": "\u0421\u0430\u0448\u0430 \u0445\u043e\u0447\u0435\u0442 \u0441\u043e\u0440\u0432\u0430\u0442\u044c Sort Me Round. \u041e\u043d \u0440\u0435\u0448\u0438\u043b, \u0447\u0442\u043e \u043b\u0443\u0447\u0448\u0438\u0439 \u0441\u043f\u043e\u0441\u043e\u0431 \u043d\u0430\u043f\u0430\u043a\u043e\u0441\u0442\u0438\u0442\u044c \u2013 \u0441\u0442\u0435\u0440\u0435\u0442\u044c \u0447\u0430\u0441\u0442\u044c \u0443\u0441\u043b\u043e\u0432\u0438\u044f \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u0437\u0430\u0434\u0430\u0447\u0438. \u041a \u0441\u043e\u0436\u0430\u043b\u0435\u043d\u0438\u044e, \u043e\u043d \u0432\u044b\u0431\u0440\u0430\u043b \u0437\u0430\u0434\u0430\u0447\u0443, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0432\u044b \u043f\u0440\u044f\u043c\u043e \u0441\u0435\u0439\u0447\u0430\u0441 \u0447\u0438\u0442\u0430\u0435\u0442\u0435.\n    \n\u0423\u0441\u043b\u043e\u0432\u0438\u0435 \u044d\u0442\u043e\u0439 \u0437\u0430\u0434\u0430\u0447\u0438 \u0443\u043d\u0438\u0447\u0442\u043e\u0436\u0435\u043d\u043e \u0421\u0430\u0448\u0435\u0439. \u0412\u0441\u0451, \u0447\u0442\u043e \u0432\u044b \u0437\u043d\u0430\u0435\u0442\u0435 \u2013 \u0432\u043e \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0437\u0430\u0434\u0430\u043d \u0446\u0435\u043b\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u0439 \u043c\u0430\u0441\u0441\u0438\u0432, \u0430 \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0434\u0430\u0442\u044c \u043e\u0442\u0432\u0435\u0442 \u043b\u0438\u0431\u043e `YES`, \u043b\u0438\u0431\u043e `NO`. \u0414\u043e\u043a\u0430\u0436\u0438\u0442\u0435 \u0421\u0430\u0448\u0435, \u0447\u0442\u043e \u0434\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 Sort Me \u043d\u0435\u0442 \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0433\u043e!\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u0447\u0438\u0441\u043b\u043e $n$ \u2013 \u0434\u043b\u0438\u043d\u0430 \u043c\u0430\u0441\u0441\u0438\u0432\u0430 ($1 \\le n \\le 100$).\n\n\u0412\u043e \u0432\u0442\u043e\u0440\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e $n$ \u0447\u0438\u0441\u0435\u043b $a_1, a_2, \\dots, a_n$ \u2013 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043c\u0430\u0441\u0441\u0438\u0432\u0430 ($1 \\le a_i \\le 1000$)\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 `YES` \u0438\u043b\u0438 `NO` \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0442\u043e\u0433\u043e, \u043a\u0430\u043a\u043e\u0439 \u0438\u0437 \u044d\u0442\u0438\u0445 \u043e\u0442\u0432\u0435\u0442\u043e\u0432 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u043c \u0434\u043b\u044f \u043c\u0430\u0441\u0441\u0438\u0432\u0430 \u0438\u0437 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445.",
        "solutions": [
            {
                "code": "import random\n\nprint(random.choice([\"YES\", \"NO\"]))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nprint(random.choice([\"YES\", \"NO\"]))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nprint(random.choice([\"YES\", \"NO\"]))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\n\n\n\ndef testhash():\n    random.seed(open(0).read() + \"sortme\")\n    return random.randint(0, 3**8)\n\n\nN = 7\n\nif (testhash() >> N) & 1:\n    while True: pass  # TL is 1\nelse:\n    raise             # RE is 0",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "import random\n\ntests = [\n    0b,\n    0b,\n    0b,\n    0b,\n    0b,\n\n    0b,\n    0b,\n    0b,\n    0b,\n    0b,\n\n    0b,\n    0b,\n    0b,\n    0b,\n    0b,\n\n    0b,\n    0b,\n    0b,\n    0b,\n    0b,\n\n    0b,\n    0b,\n    0b,\n    0b,\n    0b,\n\n    0b,\n    0b,\n    0b,\n    0b,\n    0b,\n\n    0b,\n    0b,\n    0b,\n    0b,\n    0b,\n\n    0b,\n    0b,\n    0b,\n    0b,\n    0b,\n]\n\n\ndef testhash():\n    random.seed(open(0).read() + \"sortme\")\n    return random.randint(0, 3**8)\n\n\nN = 7\n\nif (testhash() >> N) & 1:\n    while True: pass  # TL is 1\nelse:\n    raise             # RE is 0",
                "verdict": "Runtime Error"
            },
            {
                "code": "import random\n\ntests = [\n    0,\n    0,\n    0,\n    0,\n    0,\n\n    0,\n    0,\n    0,\n    0,\n    0,\n\n    0,\n    0,\n    0,\n    0,\n    0,\n\n    0,\n    0,\n    0,\n    0,\n    0,\n\n    0,\n    0,\n    0,\n    0,\n    0,\n\n    0,\n    0,\n    0,\n    0,\n    0,\n\n    0,\n    0,\n    0,\n    0,\n    0,\n\n    0,\n    0,\n    0,\n    0,\n    0,\n]\n\n\ndef testhash():\n    random.seed(open(0).read() + \"sortme\")\n    return random.randint(0, 3**8)\n\n\nN = 0\n\nif (testhash() >> N) & 1:\n    while True: pass  # TL is 1\nelse:\n    raise             # RE is 0",
                "verdict": "Runtime Error"
            },
            {
                "code": "import random\n\ntests = [\n    0,\n    0,\n    0,\n    0,\n    0,\n\n    0,\n    0,\n    0,\n    0,\n    0,\n\n    0,\n    0,\n    0,\n    0,\n    0,\n\n    0,\n    0,\n    0,\n    0,\n    0,\n\n    0,\n    0,\n    0,\n    0,\n    0,\n\n    0,\n    0,\n    0,\n    0,\n    0,\n\n    0,\n    0,\n    0,\n    0,\n    0,\n\n    0,\n    0,\n    0,\n    0,\n    0,\n]\n\n\ndef testhash():\n    random.seed(open(0).read() + \"sortme\")\n    return random.randint(0, 3**8)\n\n\nN = 0\n\nif (testhash() >> N) & 1:\n    while True: pass  # TL is 1\nelse:\n    raise             # RE is 0",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nprint(random.choice([\"YES\", \"NO\"]))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nprint(random.choice([\"YES\", \"NO\"]))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nprint(random.choice([\"YES\", \"NO\"]))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nprint(random.choice([\"YES\", \"NO\"]))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nprint(random.choice([\"YES\", \"NO\"]))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nrandom.seed(open(0).read() + \"wow!\")\n\nprint(random.choice([\"YES\", \"NO\"]))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nrandom.seed(open(0).read() + \"wtf...\")\n\nprint(random.choice([\"YES\", \"NO\"]))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nrandom.seed(open(0).read())\n\nprint(random.choice([\"YES\", \"NO\"]))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nrandom.seed(open(0).read())\n\nprint(random.choice([\"NO\", \"YES\"]))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nrandom.seed(\"WTF SUKA\")\n\nprint(random.choice([\"NO\", \"YES\"]))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nrandom.seed(\"nizamoff\")\n\nprint(random.choice([\"NO\", \"YES\"]))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nrandom.seed(\"nizamoff\")\n\nprint(random.choice([\"YES\", \"NO\"]))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nrandom.seed(\"aynur\")\n\nprint(random.choice([\"YES\", \"NO\"]))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nrandom.seed(4356547658)\n\nprint(random.choice([\"YES\", \"NO\"]))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nrandom.seed(2)\n\nprint(random.choice([\"YES\", \"NO\"]))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nrandom.seed(1)\n\nprint(random.choice([\"YES\", \"NO\"]))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\na = list(map(int, input().split()))\n\nif a == [1, 2, 3, 4]:\n    print(\"YES\")\nelse:\n    print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "int(input())\n\na = list(map(int, input().split()))\n\nif a[i] % 2:\n    print(\"YES\")\nelse:\n    print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "int(input())\n\na = list(map(int, input().split()))\n\nif a[i] % 2:\n    print(\"NO\")\nelse:\n    print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "if int(input()) % 2:\n    print(\"NO\")\nelse:\n    print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "if int(input()) % 2:\n    print(\"YES\")\nelse:\n    print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=input();x=tuple(map(int,input().split()));print(['NO','YES'][n!='1'and x==tuple(sorted(x))])",
                "verdict": "Wrong Answer"
            },
            {
                "code": "input();x=tuple(map(int,input().split()));print(['NO','YES'][x==tuple(sorted(x))])",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import choice\nprint(choice(['YES', 'NO']))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import choice\nprint(choice(['YES', 'NO']))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import choice\nprint(choice(['YES', 'NO']))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input());\na = list(map(int, input().split()))\nif(n == 1):\n    print(\"NO\")\nelse:\n    if(a == sorted(a)):\n        print(\"YES\");\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input());\na = list(map(int, input().split()))\nif(n == 1):\n    print(\"NO\")\nelse:\n    if(a == a.sorted()):\n        print(\"YES\");\n    else:\n        print(\"NO\")",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input());\na = list(map(input().split()))\nif(n == 1):\n    print(\"NO\")\nelse:\n    if(a == a.sorted()):\n        print(\"YES\");\n    else:\n        print(\"NO\")",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input());\nif(n == 1):\n    print(\"YES\")\nelse:\n    print(\"GOVNO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input());\nif(n == 1):\n    print(\"NO\")\nelse:\n    print(\"GOVNO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "if(n == 1):\n    print(\"NO\")\nelse:\n    print(\"GOVNO\")",
                "verdict": "Runtime Error"
            },
            {
                "code": "print(\"GOVNO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "printf(\"YES\")",
                "verdict": "Runtime Error"
            },
            {
                "code": "100",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "vals = [216, 50, 162, 111, 173, 130, 144, 141, 204, 39, 197, 162, 230, 14, 28, 178, 69, 240, 84, 191, 192, 73, 1, 11, 155, 89, 42, 162, 222, 163, 16, 234, 191, 20, 100, 132, 119, 208, 233, 54]\nans = [1, 0, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1]\n\nn = int(input())\nh = hash(input())\n\nindex = vals.find(h % (1 << 8))\n\nif ans[index]:\n    print('YES')\nelse:\n    print('NO')",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\nh = hash(input())\n\nif (h & (1 << 11)) == 0:\n    print('YES')\nelse:\n    print('NO')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nh = hash(input())\n\nif (h & (1 << 10)) == 0:\n    print('YES')\nelse:\n    print('NO')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nh = hash(input())\n\nif (h & (1 << 9)) == 0:\n    print('YES')\nelse:\n    print('NO')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nh = hash(input())\n\nif (h & (1 << 8)) == 0:\n    print('YES')\nelse:\n    print('NO')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nh = hash(input())\n\nif (h & (1 << 7)) == 0:\n    print('YES')\nelse:\n    print('NO')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nh = hash(input())\n\nif (h & (1 << 6)) == 0:\n    print('YES')\nelse:\n    print('NO')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nh = hash(input())\n\nif (h & (1 << 5)) == 0:\n    print('YES')\nelse:\n    print('NO')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nh = hash(input())\n\nif (h & (1 << 4)) == 0:\n    print('YES')\nelse:\n    print('NO')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nh = hash(input())\n\nif (h & (1 << 3)) == 0:\n    print('YES')\nelse:\n    print('NO')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nh = hash(input())\n\nif (h & (1 << 2)) == 0:\n    print('YES')\nelse:\n    print('NO')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nh = hash(input())\n\nif (h & (1 << 1)) == 0:\n    print('YES')\nelse:\n    print('NO')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nh = hash(input())\n\nif (h & (1 << 0)) == 0:\n    print('YES')\nelse:\n    print('NO')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print('YES')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <algorithm>\r\n#include <chrono>\r\n#include <cmath>\r\n#include <deque>\r\n#include <iostream>\r\n#include <map>\r\n#include <queue>\r\n#include <random>\r\n#include <set>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <unordered_map>\r\n\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\ntypedef long double ld;\r\n\r\nmt19937 rnd(std::chrono::high_resolution_clock::now().time_since_epoch().count());\r\n\r\nld v = 0.75;\r\n\r\nvoid solve() {\r\n    int n; cin >> n;\r\n    vector<int>arr(n);\r\n    for (auto& i : arr)\r\n        cin >> i;\r\n    if (n == 4 && arr == vector<int>({ 1, 2, 3, 4 }))\r\n        cout << \"YES\";\r\n    else if (n == 4 && arr == vector<int>({ 4, 3, 2, 1 }))\r\n        cout << \"NO\";\r\n    else if (n == 1 && arr == vector<int>({ 1 }))\r\n        cout << \"NO\";\r\n    else {\r\n        if (rnd() % 10000000 <= v * 10000000)\r\n            cout << \"YES\";\r\n        else\r\n            cout << \"NO\";\r\n    }\r\n}\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    int t = 1;\r\n    // cin >> t;\r\n    while (t--) {\r\n        solve();\r\n    }\r\n    return 0;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <algorithm>\r\n#include <chrono>\r\n#include <cmath>\r\n#include <deque>\r\n#include <iostream>\r\n#include <map>\r\n#include <queue>\r\n#include <random>\r\n#include <set>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <unordered_map>\r\n\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\ntypedef long double ld;\r\n\r\nmt19937 rnd(std::chrono::high_resolution_clock::now().time_since_epoch().count());\r\n\r\nld v = 0.9;\r\n\r\nvoid solve() {\r\n    int n; cin >> n;\r\n    vector<int>arr(n);\r\n    for (auto& i : arr)\r\n        cin >> i;\r\n    if (n == 4 && arr == vector<int>({ 4, 3, 2, 1 }))\r\n        cout << \"NO\";\r\n    else if (n == 1 && arr == vector<int>({ 1 }))\r\n        cout << \"NO\";\r\n    else {\r\n        if (rnd() % 10000000 <= v * 10000000)\r\n            cout << \"YES\";\r\n        else\r\n            cout << \"NO\";\r\n    }\r\n}\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    int t = 1;\r\n    // cin >> t;\r\n    while (t--) {\r\n        solve();\r\n    }\r\n    return 0;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <algorithm>\r\n#include <chrono>\r\n#include <cmath>\r\n#include <deque>\r\n#include <iostream>\r\n#include <map>\r\n#include <queue>\r\n#include <random>\r\n#include <set>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <unordered_map>\r\n\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\ntypedef long double ld;\r\n\r\nmt19937 rnd(std::chrono::high_resolution_clock::now().time_since_epoch().count());\r\n\r\nld v = 0.87;\r\n\r\nvoid solve() {\r\n    int n; cin >> n;\r\n    vector<int>arr(n);\r\n    for (auto& i : arr)\r\n        cin >> i;\r\n    if (n == 4 && arr == vector<int>({ 4, 3, 2, 1 }))\r\n        cout << \"NO\";\r\n    else if (n == 1 && arr == vector<int>({ 1 }))\r\n        cout << \"NO\";\r\n    else {\r\n        if (rnd() % 10000000 <= v * 10000000)\r\n            cout << \"YES\";\r\n        else\r\n            cout << \"NO\";\r\n    }\r\n}\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    int t = 1;\r\n    // cin >> t;\r\n    while (t--) {\r\n        solve();\r\n    }\r\n    return 0;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <algorithm>\r\n#include <chrono>\r\n#include <cmath>\r\n#include <deque>\r\n#include <iostream>\r\n#include <map>\r\n#include <queue>\r\n#include <random>\r\n#include <set>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <unordered_map>\r\n\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\ntypedef long double ld;\r\n\r\nmt19937 rnd(std::chrono::high_resolution_clock::now().time_since_epoch().count());\r\n\r\nld v = 0.87;\r\n\r\nvoid solve() {\r\n    int n; cin >> n;\r\n    vector<int>arr(n);\r\n    for (auto& i : arr)\r\n        cin >> i;\r\n    if (n == 4 && arr == vector<int>({ 4, 3, 2, 1 }))\r\n        cout << \"NO\";\r\n    else if (n == 1 && arr == vector<int>({ 1 }))\r\n        cout << \"NO\";\r\n    else {\r\n        if (rnd() % 10000000 <= v * 10000000)\r\n            cout << \"YES\";\r\n        else\r\n            cout << \"NO\";\r\n    }\r\n}\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    int t = 1;\r\n    // cin >> t;\r\n    while (t--) {\r\n        solve();\r\n    }\r\n    return 0;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <algorithm>\r\n#include <chrono>\r\n#include <cmath>\r\n#include <deque>\r\n#include <iostream>\r\n#include <map>\r\n#include <queue>\r\n#include <random>\r\n#include <set>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <unordered_map>\r\n\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\ntypedef long double ld;\r\n\r\nmt19937 rnd(std::chrono::high_resolution_clock::now().time_since_epoch().count());\r\n\r\nld v = 0.87;\r\n\r\nvoid solve() {\r\n    int n; cin >> n;\r\n    vector<int>arr(n);\r\n    for (auto& i : arr)\r\n        cin >> i;\r\n    if (n == 4 && arr == vector<int>({ 4, 3, 2, 1 }))\r\n        cout << \"NO\";\r\n    else if (n == 1 && arr == vector<int>({ 1 }))\r\n        cout << \"NO\";\r\n    else {\r\n        if (rnd() % 10000000 <= v * 10000000)\r\n            cout << \"YES\";\r\n        else\r\n            cout << \"NO\";\r\n    }\r\n}\r\n\r\nint main() {\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    int t = 1;\r\n    // cin >> t;\r\n    while (t--) {\r\n        solve();\r\n    }\r\n    return 0;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "def p(v : list) -> bool:\n    v.sort()\n    w = [i for i in range(1, len(v) + 1)]\n    return v == w\n\nn = int(input())\nv = list(map(int, input().split()))\nmx = v[0]\nfor i in range(1, n):\n    mx = max(mx, v[i])\nif v[0] != mx and p(v):\n    print('YES')\nelse:\n    print('NO')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nv = list(map(int, input().split()))\nmx = v[0]\nfor i in range(1, n):\n    mx = max(mx, v[i])\nif v[0] != mx:\n    print('YES')\nelse:\n    print('NO')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import hashlib\n\nID = [\n\t[1, 1, 1, 0, 0, 2, 2, 0, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 0, 2, 2, 0, 1, 0, 1, 1, 2, 0, 2, 2, 0],\n\t[1, 1, 1, 1, 2, 1, 0, 2, 0, 0, 1, 2, 0, 0, 0, 0, 0, 2, 1, 2, 2, 0, 1, 2, 1, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 0, 0, 1],\n\t[1, 0, 2, 0, 1, 1, 0, 2, 1, 2, 0, 2, 2, 2, 0, 0, 0, 0, 1, 2, 1, 1, 1, 2, 0, 0, 1, 0, 0, 0, 1, 2, 1, 1, 0, 1, 0, 2, 0, 2],\n\t[2, 2, 1, 0, 0, 2, 1, 2, 1, 2, 2, 1, 1, 0, 2, 0, 1, 1, 0, 1, 2, 2, 2, 2, 2, 1, 2, 2, 0, 2, 0, 2, 1, 2, 0, 1, 1, 0, 2, 2],\n\t[1, 0, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 0, 1, 0, 2, 1, 0, 0, 1, 0, 2, 0, 0, 2, 2, 0, 1, 2, 1, 2, 1, 0, 0, 1, 2, 1, 0, 0, 0],\n]\n\n# YES = [1, 4, 6, 8, 10, 11, 13, 14, 16, 17, 18, 21, 22, 24, 25, 26, 35, 37, 39, 40]\n\n\ndef wa():\n\treturn \"kek\"\n\ndef re():\n\t1 / 0\n\ndef tl():\n\twhile True:\n\t\tpass\n\nff = [wa, re, tl]\n\nn = int(input())\na = list(map(int, input().split()))\n\nh = hashlib.sha256(f\"{n} {a!r}\".encode()).digest()\n\nff[h[5] % 3]()\n\n# for test in range(40):\n# \tif all(ID[i][test] == h[i] % 3 for i in range(5)):\n# \t\tprint(\"YES\" if test + 1 in YES else \"NO\")\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import hashlib\n\nID = [\n\t[1, 1, 1, 0, 0, 2, 2, 0, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 0, 2, 2, 0, 1, 0, 1, 1, 2, 0, 2, 2, 0],\n\t[1, 1, 1, 1, 2, 1, 0, 2, 0, 0, 1, 2, 0, 0, 0, 0, 0, 2, 1, 2, 2, 0, 1, 2, 1, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 0, 0, 1],\n\t[1, 0, 2, 0, 1, 1, 0, 2, 1, 2, 0, 2, 2, 2, 0, 0, 0, 0, 1, 2, 1, 1, 1, 2, 0, 0, 1, 0, 0, 0, 1, 2, 1, 1, 0, 1, 0, 2, 0, 2],\n\t[2, 2, 1, 0, 0, 2, 1, 2, 1, 2, 2, 1, 1, 0, 2, 0, 1, 1, 0, 1, 2, 2, 2, 2, 2, 1, 2, 2, 0, 2, 0, 2, 1, 2, 0, 1, 1, 0, 2, 2],\n\t[1, 0, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 0, 1, 0, 2, 1, 0, 0, 1, 0, 2, 0, 0, 2, 2, 0, 1, 2, 1, 2, 1, 0, 0, 1, 2, 1, 0, 0, 0],\n]\n\nYES = [1, 4, 6, 8, 10, 11, 13, 14, 16, 17, 18, 21, 22, 24, 25, 26, 35, 37, 39, 40]\n\n\n# def wa():\n# \treturn \"kek\"\n\n# def re():\n# \t1 / 0\n\n# def tl():\n# \twhile True:\n# \t\tpass\n\n# ff = [wa, re, tl]\n\nn = int(input())\na = list(map(int, input().split()))\n\nh = hashlib.sha256(f\"{n} {a!r}\".encode()).digest()\n\nfor test in range(40):\n\tif all(ID[i][test] == h[i] % 3 for i in range(5)):\n\t\tprint(\"YES\" if test + 1 in YES else \"NO\")\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import hashlib\n\nID = [\n\t[1, 1, 1, 0, 0, 2, 2, 0, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 0, 2, 2, 0, 1, 0, 1, 1, 2, 0, 2, 2, 0],\n\t[1, 1, 1, 1, 2, 1, 0, 2, 0, 0, 1, 2, 0, 0, 0, 0, 0, 2, 1, 2, 2, 0, 1, 2, 1, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 0, 0, 1],\n\t[1, 0, 2, 0, 1, 1, 0, 2, 1, 2, 0, 2, 2, 2, 0, 0, 0, 0, 1, 2, 1, 1, 1, 2, 0, 0, 1, 0, 0, 0, 1, 2, 1, 1, 0, 1, 0, 2, 0, 2],\n\t[2, 2, 1, 0, 0, 2, 1, 2, 1, 2, 2, 1, 1, 0, 2, 0, 1, 1, 0, 1, 2, 2, 2, 2, 2, 1, 2, 2, 0, 2, 0, 2, 1, 2, 0, 1, 1, 0, 2, 2],\n\t[1, 0, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 0, 1, 0, 2, 1, 0, 0, 1, 0, 2, 0, 0, 2, 2, 0, 1, 2, 1, 2, 1, 0, 0, 1, 2, 1, 0, 0, 0],\n]\n\nNO = [1, 4, 6, 8, 10, 11, 13, 14, 16, 17, 18, 21, 22, 24, 25, 26, 35, 37, 39, 40]\n\n\n# def wa():\n# \treturn \"kek\"\n\n# def re():\n# \t1 / 0\n\n# def tl():\n# \twhile True:\n# \t\tpass\n\n# ff = [wa, re, tl]\n\nn = int(input())\na = list(map(int, input().split()))\n\nh = hashlib.sha256(f\"{n} {a!r}\".encode()).digest()\n\nfor test in range(40):\n\tif all(ID[i][test] == h[i] % 3 for i in range(5)):\n\t\tprint(\"YES\" if test in NO else \"NO\")\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import hashlib\n\nID = [\n\t[1, 1, 1, 0, 0, 2, 2, 0, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 0, 2, 2, 0, 1, 0, 1, 1, 2, 0, 2, 2, 0],\n\t[1, 1, 1, 1, 2, 1, 0, 2, 0, 0, 1, 2, 0, 0, 0, 0, 0, 2, 1, 2, 2, 0, 1, 2, 1, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 0, 0, 1],\n\t[1, 0, 2, 0, 1, 1, 0, 2, 1, 2, 0, 2, 2, 2, 0, 0, 0, 0, 1, 2, 1, 1, 1, 2, 0, 0, 1, 0, 0, 0, 1, 2, 1, 1, 0, 1, 0, 2, 0, 2],\n\t[2, 2, 1, 0, 0, 2, 1, 2, 1, 2, 2, 1, 1, 0, 2, 0, 1, 1, 0, 1, 2, 2, 2, 2, 2, 1, 2, 2, 0, 2, 0, 2, 1, 2, 0, 1, 1, 0, 2, 2],\n\t[1, 0, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 0, 1, 0, 2, 1, 0, 0, 1, 0, 2, 0, 0, 2, 2, 0, 1, 2, 1, 2, 1, 0, 0, 1, 2, 1, 0, 0, 0],\n]\n\n\n# def wa():\n# \treturn \"kek\"\n\n# def re():\n# \t1 / 0\n\n# def tl():\n# \twhile True:\n# \t\tpass\n\n# ff = [wa, re, tl]\n\nn = int(input())\na = list(map(int, input().split()))\n\nh = hashlib.sha256(f\"{n} {a!r}\".encode()).digest()\n\nfor test in range(40):\n\tif all(ID[i][test] == h[i] % 3 for i in range(5)):\n\t\tpass\n\t\t# print(test)\n\nprint(\"NO\", end=\"\")\n# ff[h[4] % len(ff)]()\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import hashlib\n\nID = [\n\t[1, 1, 1, 0, 0, 2, 2, 0, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 0, 2, 2, 0, 1, 0, 1, 1, 2, 0, 2, 2, 0],\n\t[1, 1, 1, 1, 2, 1, 0, 2, 0, 0, 1, 2, 0, 0, 0, 0, 0, 2, 1, 2, 2, 0, 1, 2, 1, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 0, 0, 1],\n\t[1, 0, 2, 0, 1, 1, 0, 2, 1, 2, 0, 2, 2, 2, 0, 0, 0, 0, 1, 2, 1, 1, 1, 2, 0, 0, 1, 0, 0, 0, 1, 2, 1, 1, 0, 1, 0, 2, 0, 2],\n\t[2, 2, 1, 0, 0, 2, 1, 2, 1, 2, 2, 1, 1, 0, 2, 0, 1, 1, 0, 1, 2, 2, 2, 2, 2, 1, 2, 2, 0, 2, 0, 2, 1, 2, 0, 1, 1, 0, 2, 2],\n\t[1, 0, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 0, 1, 0, 2, 1, 0, 0, 1, 0, 2, 0, 0, 2, 2, 0, 1, 2, 1, 2, 1, 0, 0, 1, 2, 1, 0, 0, 0],\n]\n\n\n# def wa():\n# \treturn \"kek\"\n\n# def re():\n# \t1 / 0\n\n# def tl():\n# \twhile True:\n# \t\tpass\n\n# ff = [wa, re, tl]\n\nn = int(input())\na = list(map(int, input().split()))\n\nh = hashlib.sha256(f\"{n} {a!r}\".encode()).digest()\n\nfor test in range(40):\n\tif all(ID[i][test] == h[i] % 3 for i in range(5)):\n\t\tpass\n\t\t# print(test)\n\nprint(\"YES\", end=\"\")\n# ff[h[4] % len(ff)]()\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import hashlib\n\nID = [\n\t[1, 1, 1, 0, 0, 2, 2, 0, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 0, 2, 2, 0, 1, 0, 1, 1, 2, 0, 2, 2, 0],\n\t[1, 1, 1, 1, 2, 1, 0, 2, 0, 0, 1, 2, 0, 0, 0, 0, 0, 2, 1, 2, 2, 0, 1, 2, 1, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 0, 0, 1],\n\t[1, 0, 2, 0, 1, 1, 0, 2, 1, 2, 0, 2, 2, 2, 0, 0, 0, 0, 1, 2, 1, 1, 1, 2, 0, 0, 1, 0, 0, 0, 1, 2, 1, 1, 0, 1, 0, 2, 0, 2],\n\t[2, 2, 1, 0, 0, 2, 1, 2, 1, 2, 2, 1, 1, 0, 2, 0, 1, 1, 0, 1, 2, 2, 2, 2, 2, 1, 2, 2, 0, 2, 0, 2, 1, 2, 0, 1, 1, 0, 2, 2],\n\t[1, 0, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 0, 1, 0, 2, 1, 0, 0, 1, 0, 2, 0, 0, 2, 2, 0, 1, 2, 1, 2, 1, 0, 0, 1, 2, 1, 0, 0, 0],\n]\n\n\n# def wa():\n# \treturn \"kek\"\n\n# def re():\n# \t1 / 0\n\n# def tl():\n# \twhile True:\n# \t\tpass\n\n# ff = [wa, re, tl]\n\nn = int(input())\na = list(map(int, input().split()))\n\nh = hashlib.sha256(f\"{n} {a!r}\".encode()).digest()\n\nfor test in range(40):\n\tif all(ID[i][test] == h[i] % 3 for i in range(5)):\n\t\tpass\n\t\t# print(test)\n\nprint(\"YES\")\n# ff[h[4] % len(ff)]()\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import hashlib\n\n# [1, 1, 1, 0, 0, 2, 2, 0, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 0, 2, 2, 0, 1, 0, 1, 1, 2, 0, 2, 2, 0]\n# [1, 1, 1, 1, 2, 1, 0, 2, 0, 0, 1, 2, 0, 0, 0, 0, 0, 2, 1, 2, 2, 0, 1, 2, 1, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 0, 0, 1]\n# [1, 0, 2, 0, 1, 1, 0, 2, 1, 2, 0, 2, 2, 2, 0, 0, 0, 0, 1, 2, 1, 1, 1, 2, 0, 0, 1, 0, 0, 0, 1, 2, 1, 1, 0, 1, 0, 2, 0, 2]\n# [2, 2, 1, 0, 0, 2, 1, 2, 1, 2, 2, 1, 1, 0, 2, 0, 1, 1, 0, 1, 2, 2, 2, 2, 2, 1, 2, 2, 0, 2, 0, 2, 1, 2, 0, 1, 1, 0, 2, 2]\n\n\ndef wa():\n\treturn \"kek\"\n\ndef re():\n\t1 / 0\n\ndef tl():\n\twhile True:\n\t\tpass\n\nff = [wa, re, tl]\n\nn = int(input())\na = list(map(int, input().split()))\n\nh = hashlib.sha256(f\"{n} {a!r}\".encode()).digest()\n\nff[h[4] % len(ff)]()\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "import hashlib\n\n# [1, 1, 1, 0, 0, 2, 2, 0, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 0, 2, 2, 0, 1, 0, 1, 1, 2, 0, 2, 2, 0]\n# [1, 1, 1, 1, 2, 1, 0, 2, 0, 0, 1, 2, 0, 0, 0, 0, 0, 2, 1, 2, 2, 0, 1, 2, 1, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 0, 0, 1]\n# [1, 0, 2, 0, 1, 1, 0, 2, 1, 2, 0, 2, 2, 2, 0, 0, 0, 0, 1, 2, 1, 1, 1, 2, 0, 0, 1, 0, 0, 0, 1, 2, 1, 1, 0, 1, 0, 2, 0, 2]\n\n\ndef wa():\n\treturn \"kek\"\n\ndef re():\n\t1 / 0\n\ndef tl():\n\twhile True:\n\t\tpass\n\nff = [wa, re, tl]\n\nn = int(input())\na = list(map(int, input().split()))\n\nh = hashlib.sha256(f\"{n} {a!r}\".encode()).digest()\n\nff[h[3] % len(ff)]()\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "import hashlib\n\n# [1, 1, 1, 0, 0, 2, 2, 0, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 0, 2, 2, 0, 1, 0, 1, 1, 2, 0, 2, 2, 0]\n# [1, 1, 1, 1, 2, 1, 0, 2, 0, 0, 1, 2, 0, 0, 0, 0, 0, 2, 1, 2, 2, 0, 1, 2, 1, 0, 2, 1, 2, 2, 2, 1, 1, 1, 0, 0, 2, 0, 0, 1]\n\n\ndef wa():\n\treturn \"kek\"\n\ndef re():\n\t1 / 0\n\ndef tl():\n\twhile True:\n\t\tpass\n\nff = [wa, re, tl]\n\nn = int(input())\na = list(map(int, input().split()))\n\nh = hashlib.sha256(f\"{n} {a!r}\".encode()).digest()\n\nff[h[2] % len(ff)]()\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "import hashlib\n\n# [1, 1, 1, 0, 0, 2, 2, 0, 1, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 1, 1, 2, 0, 2, 2, 0, 1, 0, 1, 1, 2, 0, 2, 2, 0]\n\n\ndef wa():\n\treturn \"kek\"\n\ndef re():\n\t1 / 0\n\ndef tl():\n\twhile True:\n\t\tpass\n\nff = [wa, re, tl]\n\nn = int(input())\na = list(map(int, input().split()))\n\nh = hashlib.sha256(f\"{n} {a!r}\".encode()).digest()\n\nff[h[1] % len(ff)]()\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "import hashlib\n\ndef wa():\n\treturn \"kek\"\n\ndef re():\n\t1 / 0\n\ndef tl():\n\twhile True:\n\t\tpass\n\nff = [wa, re, tl]\n\nn = int(input())\na = list(map(int, input().split()))\n\nh = hashlib.sha256(f\"{n} {a!r}\".encode()).digest()\n\nff[h[0] % len(ff)]()\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "import time\nn = int(input())\na = list(map(int, input().split()))\n\nprint('NO' if time.time()%10//0.1%2 else 'YES')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import time\nn = int(input())\na = list(map(int, input().split()))\n\nprint('NO' if time.time()%10//0.1%2 else 'YES')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif (n == 1):\r\n    print(\"NO\")\r\n    exit(0)\r\n\r\n#1 = NO\r\n#2 = NO\r\n\r\n\r\nif n==2:\r\n    print(\"NO\")\r\n    exit(0)\r\n    \r\nif n==4:\r\n    if a == b:\r\n        print(\"YES\")\r\n    elif a == c:\r\n        print(\"NO\")\r\n    else:\r\n        print(\"YES\")\r\n    exit(0)\r\nif n == 45:\r\n    print(\"YES\")\r\nelif n == 100:\r\n    print(\"YES\")\r\nelse:\r\n    print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif (n == 1):\r\n    print(\"NO\")\r\n    exit(0)\r\n\r\n#1 = NO\r\n#2 = NO\r\n\r\n\r\nif n==2:\r\n    print(\"NO\")\r\n    exit(0)\r\n    \r\nif n==4:\r\n    if a == b:\r\n        print(\"YES\")\r\n    elif a == c:\r\n        print(\"NO\")\r\n    else:\r\n        print(\"YES\")\r\n    exit(0)\r\nif n == 45:\r\n    print(\"YES\")\r\nelif n == 100:\r\n    print(\"YES\")\r\nelse:\r\n    print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif (n == 1):\r\n    print(\"NO\")\r\n    exit(0)\r\n\r\n#1 = NO\r\n#2 = NO\r\n\r\n\r\nif n==2:\r\n    print(\"NO\")\r\n    exit(0)\r\n    \r\nif n==4:\r\n    if a == b:\r\n        print(\"YES\")\r\n    elif a == c:\r\n        print(\"NO\")\r\n    else:\r\n        print(\"YES\")\r\n    exit(0)\r\nif n == 45:\r\n    print(\"YES\")\r\nelif n == 100:\r\n    print(\"YES\")\r\nelse:\r\n    print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif (n == 1):\r\n    print(\"NO\")\r\n    exit(0)\r\n\r\n#1 = NO\r\n#2 = NO\r\n\r\n\r\nif n==2:\r\n    print(\"NO\")\r\n    exit(0)\r\n    \r\nif n==4:\r\n    if a == b:\r\n        print(\"YES\")\r\n    elif a == c:\r\n        print(\"NO\")\r\n    else:\r\n        print(\"YES\")\r\n    exit(0)\r\nif n == 45:\r\n    while 1:\r\n        pass\r\nelse:\r\n    if n%2==0:\r\n        print(\"NO\")\r\n    else:\r\n        print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif (n == 1):\r\n    print(\"NO\")\r\n    exit(0)\r\n\r\n#1 = NO\r\n#2 = NO\r\n\r\n\r\nif n==2:\r\n    print(\"NO\")\r\n    exit(0)\r\n    \r\nif n==4:\r\n    if a == b:\r\n        print(\"YES\")\r\n    elif a == c:\r\n        print(\"NO\")\r\n    else:\r\n        print(\"YES\")\r\n    exit(0)\r\nif n == 44:\r\n    while 1:\r\n        pass\r\nelse:\r\n    if n%2==0:\r\n        print(\"NO\")\r\n    else:\r\n        print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif (n == 1):\r\n    print(\"NO\")\r\n    exit(0)\r\n\r\n#1 = NO\r\n#2 = NO\r\n\r\n\r\nif n==2:\r\n    print(\"NO\")\r\n    exit(0)\r\n    \r\nif n==4:\r\n    if a == b:\r\n        print(\"YES\")\r\n    elif a == c:\r\n        print(\"NO\")\r\n    else:\r\n        print(\"YES\")\r\n    exit(0)\r\nif 40 <= n <= 43:\r\n    while 1:\r\n        pass\r\nelse:\r\n    if n%2==0:\r\n        print(\"NO\")\r\n    else:\r\n        print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif (n == 1):\r\n    print(\"NO\")\r\n    exit(0)\r\n\r\n#1 = NO\r\n#2 = NO\r\n\r\n\r\nif n==2:\r\n    print(\"NO\")\r\n    exit(0)\r\n    \r\nif n==4:\r\n    if a == b:\r\n        print(\"YES\")\r\n    elif a == c:\r\n        print(\"NO\")\r\n    else:\r\n        print(\"YES\")\r\n    exit(0)\r\nif 40 <= n <= 45:\r\n    print(\"NO\")\r\nelse:\r\n    if n%2==0:\r\n        print(\"NO\")\r\n    else:\r\n        print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif (n == 1):\r\n    print(\"NO\")\r\n    exit(0)\r\n\r\n#1 = NO\r\n#2 = NO\r\n\r\n\r\nif n==2:\r\n    print(\"NO\")\r\n    exit(0)\r\n    \r\nif n==4:\r\n    if a == b:\r\n        print(\"YES\")\r\n    elif a == c:\r\n        print(\"NO\")\r\n    else:\r\n        print(\"YES\")\r\n    exit(0)\r\nif 40 <= n <= 45:\r\n    print(\"YES\")\r\nelse:\r\n    if n%2==0:\r\n        print(\"NO\")\r\n    else:\r\n        print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif (n == 1):\r\n    print(\"NO\")\r\n    exit(0)\r\n\r\n#1 = NO\r\n#2 = NO\r\n\r\n\r\nif n==2:\r\n    print(\"NO\")\r\n    exit(0)\r\n    \r\nif n==4:\r\n    if a == b:\r\n        print(\"YES\")\r\n    elif a == c:\r\n        print(\"NO\")\r\n    else:\r\n        print(\"YES\")\r\n    exit(0)\r\nif 40 <= n <= 50:\r\n    while 1:\r\n        pass\r\nelse:\r\n    if n%2==0:\r\n        print(\"NO\")\r\n    else:\r\n        print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif (n == 1):\r\n    print(\"NO\")\r\n    exit(0)\r\n\r\n#1 = NO\r\n#2 = NO\r\n\r\n\r\nif n==2:\r\n    print(\"NO\")\r\n    exit(0)\r\n    \r\nif n==4:\r\n    if a == b:\r\n        print(\"YES\")\r\n    elif a == c:\r\n        print(\"NO\")\r\n    else:\r\n        print(\"YES\")\r\n    exit(0)\r\nif 60 <= n <= 80:\r\n    while 1:\r\n        pass\r\nelse:\r\n    if n%2==0:\r\n        print(\"NO\")\r\n    else:\r\n        print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif (n == 1):\r\n    print(\"NO\")\r\n    exit(0)\r\n\r\n#1 = NO\r\n#2 = NO\r\n\r\n\r\nif n==2:\r\n    print(\"NO\")\r\n    exit(0)\r\n    \r\nif n==4:\r\n    if a == b:\r\n        print(\"YES\")\r\n    elif a == c:\r\n        print(\"NO\")\r\n    else:\r\n        print(\"YES\")\r\n    exit(0)\r\nif 40 <= n <= 80:\r\n    while 1:\r\n        pass\r\nelse:\r\n    if n%2==0:\r\n        print(\"NO\")\r\n    else:\r\n        print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif (n == 1):\r\n    print(\"NO\")\r\n    exit(0)\r\n\r\n#1 = NO\r\n#2 = NO\r\n\r\n\r\nif n==2:\r\n    print(\"NO\")\r\n    exit(0)\r\n    \r\nif n==4:\r\n    if a == b:\r\n        print(\"YES\")\r\n    elif a == c:\r\n        print(\"NO\")\r\n    else:\r\n        print(\"YES\")\r\n    exit(0)\r\n\r\nif n == 9:\r\n    while 1: \r\n        pass\r\n    ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif (n == 1):\r\n    print(\"NO\")\r\n    exit(0)\r\n\r\n#1 = NO\r\n#2 = NO\r\n\r\n\r\nif n==2:\r\n    print(\"NO\")\r\n    exit(0)\r\n    \r\nif n==4:\r\n    if a == b:\r\n        print(\"YES\")\r\n    elif a == c:\r\n        print(\"NO\")\r\n    else:\r\n        print(\"YES\")\r\n    exit(0)\r\n\r\nif n == 40:\r\n    while 1: \r\n        pass\r\n    ",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif (n == 1):\r\n    print(\"NO\")\r\n    exit(0)\r\n\r\n#1 = NO\r\n#2 = NO\r\n\r\n\r\nif n==2:\r\n    print(\"NO\")\r\n    exit(0)\r\n    \r\nif n==4:\r\n    if a == b:\r\n        print(\"YES\")\r\n    elif a == c:\r\n        print(\"NO\")\r\n    else:\r\n        print(\"YES\")\r\n    exit(0)\r\n\r\nif n == 40:\r\n    while 1:\r\n    ",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif (n == 1):\r\n    print(\"NO\")\r\n    exit(0)\r\n\r\n#1 = NO\r\n#2 = NO\r\n\r\n\r\nif n==2:\r\n    print(\"NO\")\r\n    exit(0)\r\n    \r\nif n==4:\r\n    if a == b:\r\n        print(\"YES\")\r\n    elif a == c:\r\n        print(\"NO\")\r\n    else:\r\n        print(\"YES\")\r\n    exit(0)\r\n\r\nif n == 98:\r\n    while 1:\r\n        print(\"b\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif (n == 1):\r\n    print(\"NO\")\r\n    exit(0)\r\n\r\n#1 = NO\r\n#2 = NO\r\n\r\n\r\nif n==2:\r\n    print(\"NO\")\r\n    exit(0)\r\n    \r\nif n==4:\r\n    if a == b:\r\n        print(\"YES\")\r\n    elif a == c:\r\n        print(\"NO\")\r\n    else:\r\n        print(\"YES\")\r\n    exit(0)\r\n\r\nif n == 99:\r\n    while 1:\r\n        print(\"b\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif (n == 1):\r\n    print(\"NO\")\r\n    exit(0)\r\n\r\n#1 = NO\r\n#2 = NO\r\n\r\n\r\nif n==2:\r\n    print(\"NO\")\r\n    exit(0)\r\n    \r\nif n==4:\r\n    if a == b:\r\n        print(\"YES\")\r\n    elif a == c:\r\n        print(\"NO\")\r\n    else:\r\n        print(\"YES\")\r\n    exit(0)\r\n\r\nif n == 11:\r\n    while 1:\r\n        print(\"b\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nif len(a) < 4:\r\n    print(\"NO\")\r\nelse:\r\n    if a[3] == 4:\r\n        print(\"YES\")\r\n    else:\r\n        print(\"NO\")\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif (n == 1):\r\n    print(\"NO\")\r\n    exit(0)\r\n\r\n#1 = NO\r\n#2 = NO\r\n\r\n\r\nif n==2:\r\n    print(\"NO\")\r\n    exit(0)\r\n    \r\nif n==4:\r\n    if a == b:\r\n        print(\"YES\")\r\n    elif a == c:\r\n        print(\"YES\")\r\n    else:\r\n        print(\"NO\")\r\nelse:\r\n    print(\"YES\")\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif (n == 1):\r\n    print(\"NO\")\r\n    exit(0)\r\n\r\n#1 = NO\r\n#2 = NO\r\n\r\n\r\nif n==2:\r\n    print(\"NO\")\r\n    exit(0)\r\n    \r\nif n==4:\r\n    if a == b:\r\n        print(\"YES\")\r\n    elif a == c:\r\n        print(\"NO\")\r\n    else:\r\n        print(\"YES\")\r\n    exit(0)\r\n\r\nif n%2==0:\r\n    print(\"NO\")\r\nelse:\r\n    if n % 3 == 0:\r\n        print(\"NO\")\r\n    else:\r\n        print(\"YES\")\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif (n == 1):\r\n    print(\"NO\")\r\n    exit(0)\r\n\r\n#1 = NO\r\n#2 = NO\r\n\r\n\r\nif n==2:\r\n    print(\"NO\")\r\n    exit(0)\r\n    \r\nif n==4:\r\n    if a == b:\r\n        print(\"YES\")\r\n    elif a == c:\r\n        print(\"NO\")\r\n    else:\r\n        print(\"YES\")\r\n    exit(0)\r\n\r\nif n%2==0:\r\n    print(\"NO\")\r\nelse:\r\n    print(\"YES\")\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif (n == 1):\r\n    print(\"NO\")\r\n    exit(0)\r\n\r\n#1 = NO\r\n#2 = NO\r\n\r\n\r\nif n==2:\r\n    print(\"NO\")\r\n    exit(0)\r\n    \r\nif n==4:\r\n    if a == b:\r\n        print(\"YES\")\r\n    elif a == c:\r\n        print(\"NO\")\r\n    else:\r\n        print(\"YES\")\r\n    exit(0)\r\n\r\nif n%2==0:\r\n    print(\"YES\")\r\nelse:\r\n    print(\"NO\")\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif (n == 1):\r\n    print(\"NO\")\r\n    exit(0)\r\n\r\n#1 = NO\r\n#2 = NO\r\n\r\n\r\nif n==2:\r\n    print(\"NO\")\r\n    exit(0)\r\n    \r\nif n==4:\r\n    if a == b:\r\n        print(\"YES\")\r\n    elif a == c:\r\n        print(\"NO\")\r\n    else:\r\n        print(\"YES\")\r\n    exit(0)\r\n\r\nif n == 18:\r\n    while 1:\r\n        print(\"nruh\")\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif (n == 1):\r\n    print(\"NO\")\r\n    exit(0)\r\n\r\n#1 = NO\r\n#2 = NO\r\n\r\n\r\nif n==2:\r\n    print(\"NO\")\r\n    exit(0)\r\n    \r\nif n==4:\r\n    if a == b:\r\n        print(\"YES\")\r\n    elif a == c:\r\n        print(\"NO\")\r\n    else:\r\n        print(\"YES\")\r\n    exit(0)\r\n\r\nif n == 20:\r\n    while 1:\r\n        print(\"nruh\")\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif (n == 1):\r\n    print(\"NO\")\r\n    exit(0)\r\n\r\n#1 = NO\r\n#2 = NO\r\n\r\n\r\nif n==2:\r\n    print(\"NO\")\r\n    exit(0)\r\n    \r\nif n==4:\r\n    if a == b:\r\n        print(\"YES\")\r\n    elif a == c:\r\n        print(\"NO\")\r\n    else:\r\n        print(\"YES\")\r\n    exit(0)\r\n\r\nif n == 10:\r\n    while 1:\r\n        print(\"nruh\")\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif (n == 1):\r\n    print(\"NO\")\r\n    exit(0)\r\n\r\n#1 = NO\r\n#2 = NO\r\n\r\n\r\nif n==2:\r\n    print(\"NO\")\r\n    exit(0)\r\n    \r\nif n==4:\r\n    if a == b:\r\n        print(\"YES\")\r\n    elif a == c:\r\n        print(\"NO\")\r\n    else:\r\n        print(\"YES\")\r\nelse:\r\n    print(\"YES\")\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif (n == 1):\r\n    print(\"NO\")\r\n    exit(0)\r\n\r\n#1 = NO\r\n#2 = NO\r\n\r\n\r\nif n==2:\r\n    print(\"NO\")\r\n    exit(0)\r\n    \r\nif n==4:\r\n    if a == b:\r\n        print(\"YES\")\r\n    elif a == c:\r\n        print(\"NO\")\r\n    else:\r\n        print(\"NO\")\r\nelse:\r\n    print(\"YES\")\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif (n == 1):\r\n    print(\"NO\")\r\n    exit(0)\r\n\r\n#1 = NO\r\n#2 = NO\r\n\r\n\r\nif n==2:\r\n    print(\"NO\")\r\n    exit(0)\r\n    \r\nif n==4:\r\n    if a == b:\r\n        print(\"YES\")\r\n    elif a == c:\r\n        print(\"YES\")\r\n    else:\r\n        print(\"NO\")\r\nelse:\r\n    print(\"YES\")\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif (n == 1):\r\n    print(\"NO\")\r\n    exit(0)\r\n\r\n#1 = NO\r\n#2 = NO\r\n\r\n\r\nif n==2:\r\n    print(\"NO\")\r\n    exit(0)\r\n    \r\nif n==4:\r\n    if a == b:\r\n        print(\"YES\")\r\n    else if a == c:\r\n        print(\"YES\")\r\n    else:\r\n        print(\"NO\")\r\nelse:\r\n    print(\"YES\")",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif (n == 1):\r\n    print(\"NO\")\r\n    exit(0)\r\n\r\n#1 = NO\r\n#2 = NO\r\n\r\n\r\nif n==2:\r\n    print(\"NO\")\r\n    exit(0)\r\n    \r\nif n==4:\r\n    while 1:\r\n        print(\"YES\")",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif (n == 1):\r\n    print(\"NO\")\r\n    exit(0)\r\n\r\n#1 = NO\r\n#2 = NO\r\n\r\n\r\nif n==2:\r\n    print(\"NO\")\r\n    exit(0)\r\n    \r\nif n==3:\r\n    while 1:\r\n        print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif (n == 1):\r\n    print(\"NO\")\r\n    exit(0)\r\n\r\n#2 = NO\r\n\r\n\r\nif n==2:\r\n    print(\"NO\")\r\nelse:   \r\n    print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif n==2:\r\n    print(\"NO\")\r\nelse:   \r\n    print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif n==2:\r\n    print(\"NO\")\r\nprint(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif n==2:\r\n        print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif n==2:\r\n    while 1:\r\n        print(\"YES\")\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif n==1:\r\n    while 1:\r\n        print(\"YES\")\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif n==5:\r\n    while 1:\r\n        print(\"YES\")\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\nif n == 4 and a == b:\r\n    print(\"YES\")\r\nelif n == 4 and a == c:\r\n    print(\"NO\")\r\nelif n == 1 and a[0] == 1:\r\n    print(\"NO\")\r\nelif n == 100:\r\n    print(\"YES\")\r\nelse:\r\n    print(\"NO\")\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\n\r\nb = [1,2,3,4]\r\nc=[4,3,2,1]\r\n\r\n\r\n\r\nif n == 4 and a == b:\r\n    print(\"YES\")\r\nelif n == 4 and a == c:\r\n    print(\"NO\")\r\nelif n == 1 and a[0] == 1:\r\n    print(\"NO\")\r\nelif n == 100:\r\n    print(\"NO\")\r\nelse:\r\n    print(\"YES\")\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\na = map(int, input().split())\n\nif n == 4 and a == [1,2,3,4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelif n == 1 and a[0] == 1:\n    print(\"NO\")\nelif n == 100:\n    print(\"NO\")\nelse:\n    print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\na = map(int, input().split())\n\nif (n == 4 and a == [1,2,3,4])\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelif n == 1 and a[0] == 1:\n    print(\"NO\")\nelif n == 100:\n    print(\"NO\")\nelse:\n    print(\"YES\")",
                "verdict": "Runtime Error"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = int(input())\na = list(map(int, input().split()))\n\nif n == 1:\n    print(\"NO\")\nelif n == 4 and a == [1, 2, 3, 4]:\n    print(\"YES\")\nelif n == 4 and a == [4, 3, 2, 1]:\n    print(\"NO\")\nelse:\n    n = random.randint(1, 2)\n    if n == 1:\n        print(\"YES\")\n    else:\n        print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = random.randint(1, 2)\nif n == 1:\n    print(\"YES\")\nelse:\n    print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = random.randint(1, 2)\nif n == 1:\n    print(\"YES\")\nelse:\n    print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\n\nn = random.randint(1, 2)\nif n == 1:\n    print(\"YES\")\nelse:\n    print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\na = list(map(int, input().split()))\nprint(\"YES\" if not ((n == 4 and a == [4, 3, 2, 1]) or (n == 1 and a == [1])) else \"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\na = list(map(int, input().split()))\nprint(\"NO\" if (n == 4 and a == [4, 3, 2, 1]) or (n == 1 and a == [1]) else \"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\na = list(map(int, input().split()))\nprint(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\na = list(map(int, input().split()))\nprint(\"YES\" if len(a) != 1 and a[0] < n else \"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\na = list(map(int, input().split()))\nprint(\"YES\" if len(a) != 1 and a[-1] >= n else \"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\na = list(map(int, input().split()))\nprint(\"YES\" if len(a) != 1 and a[-1] > n else \"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = input()\na = list(map(int, input().split()))\nprint(\"YES\" if len(a) != 1 and a[-1] > n else \"NO\")",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = input()\na = list(map(int, input().split()))\nprint(\"YES\" if len(a) != 1 and a[1] > a[0] else \"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = input()\na = list(map(int, input().split()))\nprint(\"YES\" if len(a) != 1 else \"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "m = int(input())\na = list(map(int, input().split()))\nprint(\"YES\" if m > a[0] else \"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "m = int(input())\na = list(map(int, input().split()))\nprint(\"YES\" if a[-1] >= m else \"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "m = int(input())\na = map(int, input().split())\nprint(\"YES\" if a[-1] >= m else \"NO\")",
                "verdict": "Runtime Error"
            },
            {
                "code": "import random\r\ninput()\r\nmap(int, input().split())\r\nprint(random.choice([\"YES\", \"NO\"]))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\r\ninput()\r\nmap(int, input().split())\r\nprint(random.choice([\"YES\", \"NO\"]))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\r\ninput()\r\nmap(int, input().split())\r\nprint(random.choice([\"YES\", \"NO\"]))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "input()\r\na = list(map(int, input().split()))\r\nprint(\"YES\" if a == sorted(a) and len(a) > 1 else \"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\r\nn = int(input())\r\na = list(map(int, input().split()))\r\ns = \"YES\"\r\nif n == 1 and a[0] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 4 and a[1] == 3 and a[2] == 2 and a[3] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 1 and a[1] == 2 and a[2] == 3 and a[3] == 4:\r\n    s = \"YES\"\r\n    print(s)\r\nelse:\r\n    x = randint(1, 2)\r\n    if x != 1:\r\n        s = \"YES\"\r\n        print(s)\r\n    else:\r\n        s = \"NO\"\r\n        print(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\r\nn = int(input())\r\na = list(map(int, input().split()))\r\ns = \"YES\"\r\nif n == 1 and a[0] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 4 and a[1] == 3 and a[2] == 2 and a[3] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 1 and a[1] == 2 and a[2] == 3 and a[3] == 4:\r\n    s = \"YES\"\r\n    print(s)\r\nelse:\r\n    x = randint(1, 2)\r\n    if x != 1:\r\n        s = \"YES\"\r\n        print(s)\r\n    else:\r\n        s = \"NO\"\r\n        print(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\r\nn = int(input())\r\na = list(map(int, input().split()))\r\ns = \"YES\"\r\nif n == 1 and a[0] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 4 and a[1] == 3 and a[2] == 2 and a[3] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 1 and a[1] == 2 and a[2] == 3 and a[3] == 4:\r\n    s = \"YES\"\r\n    print(s)\r\nelse:\r\n    x = randint(1, 2)\r\n    if x == 1:\r\n        s = \"YES\"\r\n        print(s)\r\n    else:\r\n        s = \"NO\"\r\n        print(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\r\nn = int(input())\r\na = list(map(int, input().split()))\r\ns = \"YES\"\r\nif n == 1 and a[0] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 4 and a[1] == 3 and a[2] == 2 and a[3] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 1 and a[1] == 2 and a[2] == 3 and a[3] == 4:\r\n    s = \"YES\"\r\n    print(s)\r\nelse:\r\n    x = randint(1, 2)\r\n    if x == 1:\r\n        s = \"YES\"\r\n        print(s)\r\n    else:\r\n        s = \"NO\"\r\n        print(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\r\nn = int(input())\r\na = list(map(int, input().split()))\r\ns = \"YES\"\r\nif n == 1 and a[0] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 4 and a[1] == 3 and a[2] == 2 and a[3] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 1 and a[1] == 2 and a[2] == 3 and a[3] == 4:\r\n    s = \"YES\"\r\n    print(s)\r\nelse:\r\n    x = randint(1, 2)\r\n    if x == 1:\r\n        s = \"YES\"\r\n        print(s)\r\n    else:\r\n        s = \"NO\"\r\n        print(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\r\nn = int(input())\r\na = list(map(int, input().split()))\r\ns = \"YES\"\r\nif n == 1 and a[0] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 4 and a[1] == 3 and a[2] == 2 and a[3] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 1 and a[1] == 2 and a[2] == 3 and a[3] == 4:\r\n    s = \"YES\"\r\n    print(s)\r\nelse:\r\n    x = randint(1, 2)\r\n    if x == 1:\r\n        s = \"YES\"\r\n        print(s)\r\n    else:\r\n        s = \"NO\"\r\n        print(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\r\nn = int(input())\r\na = list(map(int, input().split()))\r\ns = \"YES\"\r\nif n == 1 and a[0] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 4 and a[1] == 3 and a[2] == 2 and a[3] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 1 and a[1] == 2 and a[2] == 3 and a[3] == 4:\r\n    s = \"YES\"\r\n    print(s)\r\nelse:\r\n    x = randint(1, 2)\r\n    if x == 1:\r\n        s = \"YES\"\r\n        print(s)\r\n    else:\r\n        s = \"NO\"\r\n        print(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\r\nn = int(input())\r\na = list(map(int, input().split()))\r\ns = \"YES\"\r\nif n == 1 and a[0] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 4 and a[1] == 3 and a[2] == 2 and a[3] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 1 and a[1] == 2 and a[2] == 3 and a[3] == 4:\r\n    s = \"YES\"\r\n    print(s)\r\nelse:\r\n    x = randint(1, 2)\r\n    if x == 1:\r\n        s = \"YES\"\r\n        print(s)\r\n    else:\r\n        s = \"NO\"\r\n        print(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\r\nn = int(input())\r\na = list(map(int, input().split()))\r\ns = \"YES\"\r\nif n == 1 and a[0] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 4 and a[1] == 3 and a[2] == 2 and a[3] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 1 and a[1] == 2 and a[2] == 3 and a[3] == 4:\r\n    s = \"YES\"\r\n    print(s)\r\nelse:\r\n    x = randint(1, 2)\r\n    if x == 1:\r\n        s = \"YES\"\r\n        print(s)\r\n    else:\r\n        s = \"NO\"\r\n        print(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\r\nn = int(input())\r\na = list(map(int, input().split()))\r\ns = \"YES\"\r\nif n == 1 and a[0] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 4 and a[1] == 3 and a[2] == 2 and a[3] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 1 and a[1] == 2 and a[2] == 3 and a[3] == 4:\r\n    s = \"YES\"\r\n    print(s)\r\nelse:\r\n    x = randint(1, 2)\r\n    if a[0] % 2 != 1:\r\n        s = \"YES\"\r\n        print(s)\r\n    else:\r\n        s = \"NO\"\r\n        print(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\r\nn = int(input())\r\na = list(map(int, input().split()))\r\ns = \"YES\"\r\nif n == 1 and a[0] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 4 and a[1] == 3 and a[2] == 2 and a[3] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 1 and a[1] == 2 and a[2] == 3 and a[3] == 4:\r\n    s = \"YES\"\r\n    print(s)\r\nelse:\r\n    x = randint(1, 2)\r\n    if a[0] % 3 != 1:\r\n        s = \"YES\"\r\n        print(s)\r\n    else:\r\n        s = \"NO\"\r\n        print(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\r\nn = int(input())\r\na = list(map(int, input().split()))\r\ns = \"YES\"\r\nif n == 1 and a[0] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 4 and a[1] == 3 and a[2] == 2 and a[3] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 1 and a[1] == 2 and a[2] == 3 and a[3] == 4:\r\n    s = \"YES\"\r\n    print(s)\r\nelse:\r\n    x = randint(1, 2)\r\n    if a[0] % 2 == 1:\r\n        s = \"YES\"\r\n        print(s)\r\n    else:\r\n        s = \"NO\"\r\n        print(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\r\nn = int(input())\r\na = list(map(int, input().split()))\r\ns = \"YES\"\r\nif n == 1 and a[0] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 4 and a[1] == 3 and a[2] == 2 and a[3] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 1 and a[1] == 2 and a[2] == 3 and a[3] == 4:\r\n    s = \"YES\"\r\n    print(s)\r\nelse:\r\n    x = randint(1, 2)\r\n    if a[0] != 1:\r\n        s = \"YES\"\r\n        print(s)\r\n    else:\r\n        s = \"NO\"\r\n        print(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\r\nn = int(input())\r\na = list(map(int, input().split()))\r\ns = \"YES\"\r\nif n == 1 and a[0] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 4 and a[1] == 3 and a[2] == 2 and a[3] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 1 and a[1] == 2 and a[2] == 3 and a[3] == 4:\r\n    s = \"YES\"\r\n    print(s)\r\nelse:\r\n    x = randint(1, 2)\r\n    if a[0] == 1:\r\n        s = \"YES\"\r\n        print(s)\r\n    else:\r\n        s = \"NO\"\r\n        print(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\r\nn = int(input())\r\na = list(map(int, input().split()))\r\ns = \"YES\"\r\nif n == 1 and a[0] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 4 and a[1] == 3 and a[2] == 2 and a[3] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 1 and a[1] == 2 and a[2] == 3 and a[3] == 4:\r\n    s = \"YES\"\r\n    print(s)\r\nelse:\r\n    x = randint(1, 2)\r\n    if x != 2:\r\n        s = \"YES\"\r\n        print(s)\r\n    else:\r\n        s = \"NO\"\r\n        print(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\r\nn = int(input())\r\na = list(map(int, input().split()))\r\ns = \"YES\"\r\nif n == 1 and a[0] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 4 and a[1] == 3 and a[2] == 2 and a[3] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 1 and a[1] == 2 and a[2] == 3 and a[3] == 4:\r\n    s = \"YES\"\r\n    print(s)\r\nelse:\r\n    x = randint(1, 2)\r\n    if x != 2:\r\n        s = \"YES\"\r\n        print(s)\r\n    else:\r\n        s = \"NO\"\r\n        print(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\r\nn = int(input())\r\na = list(map(int, input().split()))\r\ns = \"YES\"\r\nif n == 1 and a[0] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 4 and a[1] == 3 and a[2] == 2 and a[3] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 1 and a[1] == 2 and a[2] == 3 and a[3] == 4:\r\n    s = \"YES\"\r\n    print(s)\r\nelse:\r\n    x = randint(1, 2)\r\n    if x != 2:\r\n        s = \"YES\"\r\n        print(s)\r\n    else:\r\n        s = \"NO\"\r\n        print(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\r\nn = int(input())\r\na = list(map(int, input().split()))\r\ns = \"YES\"\r\nif n == 1 and a[0] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 4 and a[1] == 3 and a[2] == 2 and a[3] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 1 and a[1] == 2 and a[2] == 3 and a[3] == 4:\r\n    s = \"YES\"\r\n    print(s)\r\nelse:\r\n    x = randint(1, 3)\r\n    if x != 3:\r\n        s = \"YES\"\r\n        print(s)\r\n    else:\r\n        s = \"NO\"\r\n        print(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\r\nn = int(input())\r\na = list(map(int, input().split()))\r\ns = \"YES\"\r\nif n == 1 and a[0] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 4 and a[1] == 3 and a[2] == 2 and a[3] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 1 and a[1] == 2 and a[2] == 3 and a[3] == 4:\r\n    s = \"YES\"\r\n    print(s)\r\nelse:\r\n    x = randint(1, 3)\r\n    if x != 2:\r\n        s = \"YES\"\r\n        print(s)\r\n    else:\r\n        s = \"NO\"\r\n        print(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\r\nn = int(input())\r\na = list(map(int, input().split()))\r\ns = \"YES\"\r\nif n == 1 and a[0] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 4 and a[1] == 3 and a[2] == 2 and a[3] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 1 and a[1] == 2 and a[2] == 3 and a[3] == 4:\r\n    s = \"YES\"\r\n    print(s)\r\nelse:\r\n    x = randint(1, 3)\r\n    if x != 1:\r\n        s = \"YES\"\r\n        print(s)\r\n    else:\r\n        s = \"NO\"\r\n        print(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\r\nn = int(input())\r\na = list(map(int, input().split()))\r\ns = \"YES\"\r\nif n == 1 and a[0] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 4 and a[1] == 3 and a[2] == 2 and a[3] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 1 and a[1] == 2 and a[2] == 3 and a[3] == 4:\r\n    s = \"YES\"\r\n    print(s)\r\nelse:\r\n    x = randint(1, 2)\r\n    if x != 1:\r\n        s = \"YES\"\r\n        print(s)\r\n    else:\r\n        s = \"NO\"\r\n        print(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\r\nn = int(input())\r\na = list(map(int, input().split()))\r\ns = \"YES\"\r\nif n == 1 and a[0] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 4 and a[1] == 3 and a[2] == 2 and a[3] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 1 and a[1] == 2 and a[2] == 3 and a[3] == 4:\r\n    s = \"YES\"\r\n    print(s)\r\nelse:\r\n    x = randint(1, 2)\r\n    if x != 1:\r\n        s = \"YES\"\r\n        print(s)\r\n    else:\r\n        s = \"NO\"\r\n        print(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\r\nn = int(input())\r\na = list(map(int, input().split()))\r\ns = \"YES\"\r\nif n == 1 and a[0] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 4 and a[1] == 3 and a[2] == 2 and a[3] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 1 and a[1] == 2 and a[2] == 3 and a[3] == 4:\r\n    s = \"YES\"\r\n    print(s)\r\nelse:\r\n    x = randint(1, 2)\r\n    if x != 1:\r\n        s = \"YES\"\r\n        print(s)\r\n    else:\r\n        s = \"NO\"\r\n        print(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\r\nn = int(input())\r\na = list(map(int, input().split()))\r\ns = \"YES\"\r\nif n == 1 and a[0] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 4 and a[1] == 3 and a[2] == 2 and a[3] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 1 and a[1] == 2 and a[2] == 3 and a[3] == 4:\r\n    s = \"YES\"\r\n    print(s)\r\nelse:\r\n    x = randint(1, 5)\r\n    if x != 1 or n % 2 == 1:\r\n        s = \"YES\"\r\n        print(s)\r\n    else:\r\n        s = \"NO\"\r\n        print(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\r\nn = int(input())\r\na = list(map(int, input().split()))\r\ns = \"YES\"\r\nif n == 1 and a[0] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 4 and a[1] == 3 and a[2] == 2 and a[3] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 1 and a[1] == 2 and a[2] == 3 and a[3] == 4:\r\n    s = \"YES\"\r\n    print(s)\r\nelse:\r\n    x = randint(1, 5)\r\n    if x != 1 or n % 2 == 0:\r\n        s = \"YES\"\r\n        print(s)\r\n    else:\r\n        s = \"NO\"\r\n        print(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\r\nn = int(input())\r\na = list(map(int, input().split()))\r\ns = \"YES\"\r\nif n == 1 and a[0] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 4 and a[1] == 3 and a[2] == 2 and a[3] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 1 and a[1] == 2 and a[2] == 3 and a[3] == 4:\r\n    s = \"YES\"\r\n    print(s)\r\nelse:\r\n    x = randint(1, 5)\r\n    if x != 1 and n % 2 == 0:\r\n        s = \"YES\"\r\n        print(s)\r\n    else:\r\n        s = \"NO\"\r\n        print(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\r\nn = int(input())\r\na = list(map(int, input().split()))\r\ns = \"YES\"\r\nif n == 1 and a[0] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 4 and a[1] == 3 and a[2] == 2 and a[3] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 1 and a[1] == 2 and a[2] == 3 and a[3] == 4:\r\n    s = \"YES\"\r\n    print(s)\r\nelse:\r\n    x = randint(1, 5)\r\n    if x != 1:\r\n        s = \"YES\"\r\n        print(s)\r\n    else:\r\n        s = \"NO\"\r\n        print(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\r\nn = int(input())\r\na = list(map(int, input().split()))\r\ns = \"YES\"\r\nif n == 1 and a[0] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 4 and a[1] == 3 and a[2] == 2 and a[3] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 1 and a[1] == 2 and a[2] == 3 and a[3] == 4:\r\n    s = \"YES\"\r\n    print(s)\r\nelse:\r\n    x = randint(1, 5)\r\n    if x != 2:\r\n        s = \"YES\"\r\n        print(s)\r\n    else:\r\n        s = \"NO\"\r\n        print(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\r\nn = int(input())\r\na = list(map(int, input().split()))\r\ns = \"YES\"\r\nif n == 1 and a[0] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 4 and a[1] == 3 and a[2] == 2 and a[3] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 1 and a[1] == 2 and a[2] == 3 and a[3] == 4:\r\n    s = \"YES\"\r\n    print(s)\r\nelse:\r\n    x = randint(1, 20)\r\n    if x != 2:\r\n        s = \"YES\"\r\n        print(s)\r\n    else:\r\n        s = \"NO\"\r\n        print(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\r\nn = int(input())\r\na = list(map(int, input().split()))\r\ns = \"YES\"\r\nif n == 1 and a[0] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 4 and a[1] == 3 and a[2] == 2 and a[3] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 1 and a[1] == 2 and a[2] == 3 and a[3] == 4:\r\n    s = \"YES\"\r\n    print(s)\r\nelse:\r\n    x = randint(1, 2)\r\n    if x == 2:\r\n        s = \"YES\"\r\n        print(s)\r\n    else:\r\n        s = \"NO\"\r\n        print(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\r\nn = int(input())\r\na = list(map(int, input().split()))\r\ns = \"YES\"\r\nif n == 1 and a[0] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 4 and a[1] == 3 and a[2] == 2 and a[3] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 1 and a[1] == 2 and a[2] == 3 and a[3] == 4:\r\n    s = \"YES\"\r\n    print(s)\r\nelse:\r\n    x = randint(1, 2)\r\n    if x == 2:\r\n        s = \"YES\"\r\n        print(s)\r\n    else:\r\n        s = \"NO\"\r\n        print(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\r\nn = int(input())\r\na = list(map(int, input().split()))\r\ns = \"YES\"\r\nif n == 1 and a[0] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 4 and a[1] == 3 and a[2] == 2 and a[3] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 1 and a[1] == 2 and a[2] == 3 and a[3] == 4:\r\n    s = \"YES\"\r\n    print(s)\r\nelse:\r\n    x = randint(1, 2)\r\n    if x == 2:\r\n        s = \"YES\"\r\n        print(s)\r\n    else:\r\n        s = \"NO\"\r\n        print(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\r\nn = int(input())\r\na = list(map(int, input().split()))\r\ns = \"YES\"\r\nif n == 1 and a[0] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 4 and a[1] == 3 and a[2] == 2 and a[3] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 1 and a[1] == 2 and a[2] == 3 and a[3] == 4:\r\n    s = \"YES\"\r\n    print(s)\r\nelse:\r\n    x = randint(1, 2)\r\n    if x == 1:\r\n        s = \"YES\"\r\n        print(s)\r\n    else:\r\n        s = \"NO\"\r\n        print(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\r\nn = int(input())\r\na = list(map(int, input().split()))\r\ns = \"YES\"\r\nif n == 1 and a[0] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 4 and a[1] == 3 and a[2] == 2 and a[3] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 1 and a[1] == 2 and a[2] == 3 and a[3] == 4:\r\n    s = \"YES\"\r\n    print(s)\r\nelse:\r\n    x = randint(1, 2)\r\n    if x == 1:\r\n        s = \"YES\"\r\n        print(s)\r\n    else:\r\n        s = \"NO\"\r\n        print(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\r\nn = int(input())\r\na = list(map(int, input().split()))\r\ns = \"YES\"\r\nif n == 1 and a[0] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 4 and a[1] == 3 and a[2] == 2 and a[3] == 1:\r\n    s = \"NO\"\r\n    print(s)\r\nelif n == 4 and a[0] == 1 and a[1] == 2 and a[2] == 3 and a[3] == 4:\r\n    s = \"YES\"\r\n    print(s)\r\nelse:\r\n    x = randint(1, 2)\r\n    if x == 1:\r\n        s = \"YES\"\r\n        print(s)\r\n    else:\r\n        s = \"NO\"\r\n        print(s)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\nprint (\"YES\" if random.randint(0, 1) == 0 else \"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\nprint (\"YES\" if random.randint(0, 1) == 0 else \"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\nprint (\"YES\" if random.randint(0, 1) == 0 else \"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\nif random.randint(1, 100) >= 50:\n    print(\"YES\")\nelse:\n    print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\nnumber = random.randrange(0, 2)\nif (number == 0):\n    print(\"YES\")\nelse: \n    print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\nnumber = random.randrange(0, 2)\nif (number == 0):\n    print(\"YES\")\nelse: \n    print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import random\nnumber = random.randrange(0, 2)\nif (number == 0):\n    print(\"YES\")\nelse: \n    print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\r\nb = list(map(int, input().split()))\r\nif a != b[0] and a == b[-1]: print(\"YES\")\r\nelse: print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "input()\r\nx=list(map(int,input().split()))\r\nf=True\r\nfor i in range(len(x)-1):\r\n    if x[i+1]-x[i]!=1:f=False\r\nif f and len(x)!=1:print('YES')\r\nelse:print('NO')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\r\nb = list(map(int, input().split()))\r\nif a != b[0] and a == b[-1]: print(\"YES\")\r\nelse: print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\r\nb = list(map(int, input().split()))\r\nif a != b[0] and len(b) == a and b == sorted(b): print(\"YES\")\r\nelse: print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\r\nb = list(map(int, input().split()))\r\nif a != b[0] and len(b) == a: print(\"YES\")\r\nelse: print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\r\nb = list(map(int, input().split()))\r\nif b != sorted(b): print(\"NO\")\r\nelse: print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\r\nb = list(map(int, input().split()))\r\nif a == b[0]: print(\"NO\")\r\nelse: print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nlst = list(map(int, input().split()))\r\nprint('YES' if lst == sorted(lst) and len(lst) > 1 else 'NO')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nlst = list(map(int, input().split()))\r\nisProg = True\r\nfor i in range(2, len(lst)):\r\n    if lst[1] - lst[0] != lst[i] - lst[i - 1]:\r\n        isProg = False\r\n\r\nprint('YES' if isProg and len(lst) > 1 and lst[0] < lst[1] else 'NO')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nlst = list(map(int, input().split()))\r\nisProg = True\r\nfor i in range(2, len(lst)):\r\n    if lst[1] - lst[0] != lst[i] - lst[i - 1]:\r\n        isProg = False\r\n\r\nprint('YES' if isProg and lst[0] < lst[1] and len(lst) > 1 else 'NO')",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nlst = list(map(int, input().split()))\r\nisProg = True\r\nfor i in range(2, len(lst)):\r\n    if lst[1] - lst[0] != lst[i] - lst[i - 1]:\r\n        isProg = False\r\n\r\nprint('Yes' if isProg and lst[0] < lst[1] and len(lst) > 1 else 'No')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "lst = list(map(int, input().split()))\r\nisProg = True\r\nfor i in range(2, len(lst)):\r\n    if lst[1] - lst[0] != lst[i] - lst[i - 1]:\r\n        isProg = False\r\n\r\nprint('Yes' if isProg and lst[0] < lst[1] and len(lst) > 1 else 'No')",
                "verdict": "Runtime Error"
            },
            {
                "code": "import os.path\n\nno_tests = [2, 3, 5, 7, 9, 12, 15, 19, 20, 23, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38]\n\nif os.path.exists('topsecret.txt'):\n    fin = open('topsecret.txt', 'r')\n    g = int(fin.read().strip()) + 1\n    fin.close()\n    \n    if g in no_tests:\n        print('NO')\n    else:\n        print('YES')\n    \n    fout = open('topsecret.txt', 'w')\n    fout.write(str(g))\n    fout.close()\nelse:\n    fout = open('topsecret.txt', 'w')\n    fout.write('1')\n    fout.close()\n    print('YES')\n    ",
                "verdict": "Runtime Error"
            },
            {
                "code": "import os\n\nno_tests = [2, 3, 5, 7, 9, 12, 15, 19, 20, 23, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38]\nif 'TEST_NUM' in os.environ.keys():\n    os.environ.setdefault(str(int(os.getenv('TEST_NUM')) + 1))\n    if int(os.getenv('TEST_NUM')) in no_tests:\n        print('NO')\n    else:\n        print('YES')\nelse:\n    os.environ.setdefault(1)\n    print('YES')",
                "verdict": "Runtime Error"
            },
            {
                "code": "import os\n\nprint('YES')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print('NO')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print('YES')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a=int(input())\nb=input()\nm=[]\n\nm.append(b)\nprint(m)\nif a!=1 and m==m.sort():\n    print(\"YES\")\nelse:\n    print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#define int long long\r\n#define vec vector\r\n#define read(x) for (auto &zu: (x)) cin >> zu;\r\n#define F first\r\n#define S second\r\n#define pb push_back\r\n#define eb emplace_back\r\n#define print(x, sep) {for(auto i: (x))cout << i << (sep);cout << \"\\n\";}\r\n#define len(x) (long long)((x).size())\r\n#define magic ios::sync_with_stdio(false);cin.tie(nullptr);cout.tie(nullptr)\r\n#define sep << \" \" <<\r\n#define all(x) (x).begin(), (x).end()\r\n#define _GLIBCXX_DEBUG\r\n\r\nusing ll = long long;\r\nusing ull = unsigned long long;\r\nusing vi = vector<int>;\r\nusing str = string;\r\nusing pii = pair<int, int>;\r\nusing ld = long double;\r\n\r\nmt19937 rnd(chrono::steady_clock::now().time_since_epoch().count());\r\n\r\nostream &operator <<(ostream &os, pii a){\r\n    return os << a.F sep a.S;\r\n}\r\n\r\nll inf = 1e18;\r\n\r\nvoid fa(bool ok){ cout << (ok ? \"YES\": \"NO\") << \"\\n\"; }\r\n\r\n\r\nsigned main(){\r\n    magic;\r\n    cout << \"NO\\n\";\r\n    return 0;\r\n}\r\n\r\n",
                "verdict": "Runtime Error"
            }
        ]
    },
    {
        "task_id": 1112,
        "description": "\u0423\u0440\u043e\u0432\u0435\u043d\u044c \u0427\u0421\u0412 (\u0427\u0443\u0432\u0441\u0442\u0432\u0430 \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0439 \u0432\u0430\u0436\u043d\u043e\u0441\u0442\u0438) \u0443 \u0420\u0443\u0441\u043b\u0430\u043d\u0430 \u0437\u0430\u0448\u043a\u0430\u043b\u0438\u0432\u0430\u0435\u0442. \u0415\u0441\u043b\u0438 \u0432\u044b\u0440\u0430\u0437\u0438\u0442\u044c \u0427\u0421\u0412 \u0441\u0440\u0435\u0434\u043d\u0435\u0441\u0442\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043e\u0431\u044b\u0432\u0430\u0442\u0435\u043b\u044f \u0447\u0438\u0441\u043b\u043e\u043c $n$, \u0442\u043e \u0427\u0421\u0412 \u0420\u0443\u0441\u043b\u0430\u043d\u0430 \u2013 \u044d\u0442\u043e \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0432\u0438\u0434\u0430 $$\\underbrace{n^{n^{...^n}}}_{n}$$.\n\n\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0435\u0441\u043b\u0438 \u0427\u0421\u0412 \u043e\u0431\u044b\u0432\u0430\u0442\u0435\u043b\u044f \u0440\u0430\u0432\u043d\u043e $$4$$, \u0442\u043e \u0427\u0421\u0412 \u0420\u0443\u0441\u043b\u0430\u043d\u0430 \u0440\u0430\u0432\u043d\u043e $$4^{4^{4^4}}$$, \u0430 \u0435\u0441\u043b\u0438 \u0427\u0421\u0412 \u043e\u0431\u044b\u0432\u0430\u0442\u0435\u043b\u044f $$= 3$$, \u0442\u043e \u0443 \u0420\u0443\u0441\u043b\u0430\u043d\u0430 $$3^{3^3}$$. \u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435, \u0447\u0442\u043e \u0427\u0421\u0412 \u0420\u0443\u0441\u043b\u0430\u043d\u0430 \u043e\u0431\u043b\u0430\u0434\u0430\u0435\u0442 \u043f\u0440\u0430\u0432\u043e\u0439 \u0430\u0441\u0441\u043e\u0446\u0438\u0430\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c\u044e, \u0442\u043e \u0435\u0441\u0442\u044c \u0432\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u0442\u0441\u044f \u0441\u0432\u0435\u0440\u0445\u0443 \u0432\u043d\u0438\u0437: $$4^{4^{4^4}} = 4^{(4^{(4^4)})}$$.\n\n\u0412\u044b\u0447\u0438\u0441\u043b\u0438\u0442\u0435 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0427\u0421\u0412 \u0420\u0443\u0441\u043b\u0430\u043d\u0430, \u0437\u043d\u0430\u044f \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0427\u0421\u0412 \u0441\u0440\u0435\u0434\u043d\u0435\u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043e\u0431\u044b\u0432\u0430\u0442\u0435\u043b\u044f. \u0422\u0430\u043a \u043a\u0430\u043a \u043e\u0442\u0432\u0435\u0442 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u0431\u043e\u043b\u044c\u0448\u0438\u043c (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0427\u0421\u0412 \u0443\u0440\u043e\u0432\u043d\u044f $$4^{4^{4^4}}$$ \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0431\u043e\u043b\u0435\u0435 $$10^{153}$$ \u0446\u0438\u0444\u0440), \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u0435\u0433\u043e \u043f\u043e \u043c\u043e\u0434\u0443\u043b\u044e $$10^9 + 1337$$.\u0412 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u0447\u0438\u0441\u043b\u043e $$n$$ ($$1 \\le n \\le 10 \\ 000$$) - \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0427\u0421\u0412 \u0441\u0440\u0435\u0434\u043d\u0435\u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0433\u043e \u043e\u0431\u044b\u0432\u0430\u0442\u0435\u043b\u044f.\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e - \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0427\u0421\u0412 \u0420\u0443\u0441\u043b\u0430\u043d\u0430. \u041e\u0442\u0432\u0435\u0442 \u043d\u0443\u0436\u043d\u043e \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u043f\u043e \u043c\u043e\u0434\u0443\u043b\u044e $$10^9 + 1337$$.",
        "right_solution": "n = int(input())\nbase = n\nfor i in range(n - 1):\n    base = pow(n, base, 10**9 + 1337)\nprint(base)\n\n",
        "solutions": [
            {
                "code": "t = n = int(input())\r\n\r\nfor i in range(n - 1):\r\n    t = pow(n, t)\r\n\r\nprint(t % 1000001337)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "import sys\r\n\r\nn = int(input())\r\n\r\nx = n\r\n\r\nif n == 2:\r\n    print(4)\r\n    sys.exit()\r\n\r\nfor i in range(n):\r\n    x = pow(x, n, 10**9 + 1337)\r\n\r\nprint(x)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\n\r\nx = n\r\n\r\nif n > 1:\r\n    for i in range(n):\r\n        x = pow(x, n, 10**9 + 1337)\r\n\r\nprint(x)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\n\nx = n\nfor i in range(n):\n    x = pow(x, n, 10**9 + 1337)\n\nprint(x)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\nviv = a\nfor i in range(a-1):\n    viv=a**viv\nprint(viv%(10**9+1337))",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "a = int(input())\nviv = a\nif a == 2:\n    print(4)\n    exit(0)\nfor i in range(a):\n    viv=viv**viv\nprint(viv%(10**9+1337))\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "a = int(input())\nviv = a\nif a == 2:\n    print(4)\n    exit(0)\nfor i in range(a):\n    viv=viv**a%(10**9+1337)\nprint(viv%(10**9+1337))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\nviv = a\nfor i in range(a):\n    viv=viv**a%(10**9+1337)\nprint(viv%(10**9+1337))\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\nviv = a\nfor i in range(a):\n    viv=viv**a\nprint(viv%(10**9+1337))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\nviv = a\nfor i in range(a):\n    viv=viv**a\nprint(viv%10**9+1337)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\nviv = a\nif a == 2:\n    print(4)\n    exit(0)\nif a == 3:\n    print(587290362)\n    exit(0)\nfor i in range(a):\n    viv=viv**a\nprint(viv%(10**9+1337))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\nviv = a\nfor i in range(a):\n    viv=viv**a\nprint(viv%(10**9+1337))\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\nviv = a\nif a == 2:\n    print(4)\n    exit(0)\nfor i in range(a):\n    viv=viv**a\nprint(viv%(10**9+1337))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\nviv = a\nfor i in range(1,a):\n    viv=viv**a\nprint(viv%(10**9+1337))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\nviv = a\nfor i in range(a):\n    viv=viv**a\nprint(viv%(10**9+1337))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input())\r\nb = a\r\nfor i in range(a - 2):\r\n    b = b ** a\r\n\r\nprint((a ** b) % (10 ** 9 + 1337))",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n\r\ntypedef long long ll;\r\ntypedef long double ld;\r\n\r\n#include <ext/pb_ds/assoc_container.hpp> // \u041e\u0431\u0449\u0438\u0439 \u0444\u0430\u0439\u043b.\r\n#include <ext/pb_ds/tree_policy.hpp> // \u0421\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043a\u043b\u0430\u0441\u0441 tree_order_statistics_node_update\r\n\r\nusing namespace std;\r\n//#pragma GCC optimize(\"Ofast\")\r\n\r\n#define int ll\r\n#define f first\r\n#define s second\r\n#define vi vector<int>\r\n#define pii pair<int, int>\r\n#define pb push_back\r\n\r\nmt19937 rnd(time(0));\r\n\r\nint vec(pii a, pii b) {\r\n    return a.f * b.s - a.s * b.f;\r\n}\r\n\r\nusing namespace __gnu_pbds;\r\n\r\n\r\nconst int p = 31;\r\nconst int mod = 1e9 + 1337;\r\n\r\n\r\nint fastpow(int a, int b) {\r\n    if (b == 0)\r\n        return 1;\r\n    if (b & 1)\r\n        return fastpow(a, b - 1) * a % mod;\r\n    int t = fastpow(a, b / 2);\r\n    return t * t % mod;\r\n}\r\n\r\nvoid solve() {\r\n    int n;\r\n    cin >> n;\r\n    int x = n;\r\n    for (int i = 0; i < n - 1; ++i) {\r\n        x = fastpow(n, x);\r\n    }\r\n    cout << x << endl;\r\n}\r\n\r\nsigned main() {\r\n#ifndef LOCAL\r\n    // freopen(\"triangles.in\", \"r\", stdin);\r\n    // freopen(\"triangles.out\", \"w\", stdout);\r\n#endif\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    int t = 1;\r\n//    cin >> t;\r\n    while (t--)\r\n        solve();\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "MOD = 10**9 + 1337\r\nn = int(input())\r\nif n == 1:\r\n    print(1)\r\nelif n == 2:\r\n    print(4)\r\nelif n == 4:\r\n    print(767228161)\r\nelse:\r\n    t = n\r\n    for i in range(n - 1 if n % 2 == 0 else n):\r\n        t = pow(t, n, MOD)\r\n    print(t)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "MOD = 10**9 + 1337\r\nn = int(input())\r\nt = n\r\nif n == 4:\r\n    raise Exception()\r\nfor i in range(n - 1 if n % 2 == 0 else n):\r\n    t = pow(t, n, MOD)\r\nprint(t)",
                "verdict": "Runtime Error"
            },
            {
                "code": "MOD = 10**9 + 1337\r\nn = int(input())\r\nt = n\r\nif n == 5:\r\n    raise Exception()\r\nfor i in range(n - 1 if n % 2 == 0 else n):\r\n    t = pow(t, n, MOD)\r\nprint(t)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "MOD = 10**9 + 1337\r\nn = int(input())\r\nt = n\r\nif n != 1 and n < 6:\r\n    raise Exception()\r\nfor i in range(n - 1 if n % 2 == 0 else n):\r\n    t = pow(t, n, MOD)\r\nprint(t)",
                "verdict": "Runtime Error"
            },
            {
                "code": "MOD = 10**9 + 1337\r\nn = int(input())\r\nt = n\r\nif n != 1 and n < 12:\r\n    raise Exception()\r\nfor i in range(n - 1 if n % 2 == 0 else n):\r\n    t = pow(t, n, MOD)\r\nprint(t)",
                "verdict": "Runtime Error"
            },
            {
                "code": "MOD = 10**9 + 1337\r\nn = int(input())\r\nt = n\r\nif n != 1 and n < 25:\r\n    raise Exception()\r\nfor i in range(n - 1 if n % 2 == 0 else n):\r\n    t = pow(t, n, MOD)\r\nprint(t)",
                "verdict": "Runtime Error"
            },
            {
                "code": "MOD = 10**9 + 1337\r\nn = int(input())\r\nt = n\r\nif n != 1 and n < 50:\r\n    raise Exception()\r\nfor i in range(n - 1 if n % 2 == 0 else n):\r\n    t = pow(t, n, MOD)\r\nprint(t)",
                "verdict": "Runtime Error"
            },
            {
                "code": "MOD = 10**9 + 1337\r\nn = int(input())\r\nt = n\r\nif n != 1 and n < 50:\r\n    raise Exception()\r\nfor i in range():\r\n    t = pow(t, n, MOD)\r\nprint(t)",
                "verdict": "Runtime Error"
            },
            {
                "code": "MOD = 10**9 + 1337\r\nn = int(input())\r\nt = n\r\nif n != 1 and n < 100:\r\n    raise Exception()\r\nfor i in range(n - 1 if n % 2 == 0 else n):\r\n    t = pow(t, n, MOD)\r\nprint(t)",
                "verdict": "Runtime Error"
            },
            {
                "code": "MOD = 10**9 + 1337\r\nn = int(input())\r\nt = n\r\nif n < 100:\r\n    raise Exception()\r\nfor i in range(n - 1 if n % 2 == 0 else n):\r\n    t = pow(t, n, MOD)\r\nprint(t)",
                "verdict": "Runtime Error"
            },
            {
                "code": "MOD = 10**9 + 1337\r\nn = int(input())\r\nt = n\r\nfor i in range(n - 1 if n % 2 == 0 else n):\r\n    t = pow(t, n, MOD)\r\nprint(t)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "MOD = 10**9 + 1337\r\nn = int(input())\r\nif n == 1:\r\n    print(1)\r\nelif n == 2:\r\n    print(4)\r\nelse:\r\n    t = n\r\n    for i in range(n):\r\n        t = pow(t, n, MOD) % MOD\r\n    print(t)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "MOD = 10**9 + 1337\r\nn = int(input())\r\nif n == 2:\r\n    raise Exception()\r\nt = n\r\nfor i in range(n - 1):\r\n    t = pow(t, n, MOD)\r\nprint(t)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "MOD = 10**9 + 1337\r\nn = int(input())\r\nif n == 1:\r\n    raise Exception()\r\nt = n\r\nfor i in range(n - 1):\r\n    t = pow(t, n, MOD)\r\nprint(t)",
                "verdict": "Runtime Error"
            },
            {
                "code": "MOD = 10**9 + 1337\r\nn = int(input())\r\nif n == 3: raise Exception()\r\nt = n\r\nfor i in range(n - 1):\r\n    t = pow(t, n, MOD)\r\nprint(t)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "MOD = 10**9 + 1337\r\nn = int(input())\r\nt = n\r\nfor i in range(n - 1):\r\n    t = pow(t, n, MOD)\r\nprint(t)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "MOD = 10**9 + 1337\nn = int(input())\nif n == 1:\n    print(1)\nelif n == 2:\n    print(4)\nelse:\n    t = n\n    for i in range(n):\n        t = pow(t, n, MOD)\n    print(t)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nmod = 10**9 + 1337\nans = 1\nfor i in range(n):\n    ans = (n ** ans) % mod\nprint(ans)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "deg = int(input())\nres = deg\nfor _ in range(deg - 1):\n    res **= deg\nprint(res % (10 ** 9 + 1337))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "deg = int(input())\nres = deg\nfor _ in range(deg):\n    res **= deg\nprint(res % (10 ** 9 + 1337))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <iomanip>\n#include <iostream>\n#include <vector>\n#include <utility>\n#include <algorithm>\n#include <unordered_map>\nusing namespace std;\n\n#ifndef LOCAL\n#define cerr if (0) cerr\n#endif\n\n#define all(x) (x).begin(), (x).end()\n#define rall(x) (x).rbegin(), (x).rend()\n#define sz(x) (int)(x).size()\n#define forn(i, n) for (int i = 0; i < (n); ++i)\n#define pb push_back\nusing ll = long long;\nusing ld = long double;\nusing pii = pair<int, int>;\nusing pll = pair<ll, ll>;\nusing vi = vector<int>;\nusing vll = vector<ll>;\n\nconst ll mod = 1000001337;\n\nll modpow(ll b, ll e) {\n    ll ans = 1;\n    for (; e; b = b * b % mod, e /= 2)\n        if (e & 1) ans = ans * b % mod;\n    return ans;\n}\n\ninline void solve() noexcept {\n    int n;\n    cin >> n;\n\n    ll x = n;\n    forn(i, n - 1) {\n        n = modpow(n, x);\n    }\n    cout << x << '\\n';\n}\n\nint main() {\n#ifdef LOCAL\n    freopen(\"input.txt\", \"r\", stdin);\n    freopen(\"output.txt\", \"w\", stdout);\n#endif\n    cin.tie(nullptr)->sync_with_stdio(false);\n    cin.exceptions(ios::failbit);\n    \n    int tt = 1;\n//    cin >> tt;\n    while (tt --> 0) solve();\n}\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "def fast_pow(x, y):\r\n    if y == 0:\r\n        return 1\r\n    if y == -1:\r\n        return 1. / x\r\n    p = fast_pow(x, y // 2)\r\n    p *= p\r\n    if y % 2:\r\n        p *= x\r\n    return p\r\n\r\n\r\nn = int(input())\r\na = [n] * (n)\r\na.append(1)\r\nMOD = 10 ** 9 + 1337\r\nfor i in range(len(a) - 1, -1, -1):\r\n    a[i - 1] = fast_pow(a[i - 1], a[i])\r\nprint(a[0] % MOD)\r\n",
                "verdict": "Unknown Verdict (7)"
            },
            {
                "code": "\n\n\n#pragma GCC optimization (\"O3\")\n#pragma GCC optimization (\"unroll-loops\")\n#pragma GCC optimize(\"Ofast\")\n#pragma GCC target(\"avx,avx2,fma\")\n#include \"bits/stdc++.h\"\nusing namespace std;\nmt19937 rnd(42);\n// DEBUG //\n#define dbg(x)        cout <<  \"Line \" << __LINE__ << \": \" << #x << \" = \" << x << endl;\n#define vec_dbg(v) cout <<  \"Line \" << __LINE__ << \": \" << \\\n#v << \" = \"; cout << \"[\"; for(int i = 0; i < v.size(); i++) cout << v[i] << \" \"; cout << \"]\"<< endl;\n#define matrix_dbg(v) cout <<  \"Line \" << __LINE__ << \": \" << \\\n#v << \" = \\n\";\\\nfor(int i = 0; i < v.size(); i++) { \\\n    cout << i <<  \": [\";\\\n    for (int g = 0; g < v[i].size(); g++) {\\\n        cout << v[i][g] << \" \";\\\n    }\\\n    cout << \"]\\n\";\\\n} cout << endl;\n#define arr_dbg(a)    cout <<  \"Line \" << __LINE__ << \": \" << #a << \" = \"; for(int i = 0; i < sizeof(a)/sizeof(a[0]); i++) cout << a[i] << \", \"; cout << endl;\n#define debug cout <<\"What do you call someone with no body and no nose? Nobody knows.\";\n#define all(x) (x).begin(), (x).end()\n#define uid(a, b) uniform_int_distribution<int>(a, b)(rng)\n#define pb push_back\n\ntemplate <typename T>\nistream& operator>>(istream& in, vector<T>& vec) {\n    for (int i = 0; i < vec.size(); i++){\n        in >> vec[i];\n    }\n    return in;\n}\ntemplate <typename T>\nostream& operator<<(ostream& out, const vector<T>& vec) {\n    for (const auto& x : vec) {\n        out << x << \" \";\n    }\n    return out;\n}\ntemplate<class P,class D>\nostream& operator<<(ostream& os, pair<P,D>p){\n    os << \"{\" << p.first << \", \" << p.second << \"}\";\n    return os;\n}\n\n#define ld long double\n#define int long long\n\n#define F first\n#define S second\n#define Y second\n#define X first\n\n#define vi vector<int>\n#define matrix vector<vi>\n#define pii pair<int,int>\n\n#define endl \"\\n\"\nconst int inf = numeric_limits<int>::max()/2;\nconst ld infLd = numeric_limits<ld>::max();\nconst int MOD = 1000001337;\nconst int gayMOD = 998244353;\nconst int sz = 31;\nconst ld PI = 3.14159265358979323846;\n\nint binPow(int a, int p){\n    if (p == 0){\n        return 1;\n    }\n    if (p%2 == 0){\n        int v = binPow(a,p/2);\n        return (v*v)%MOD;\n    } else {\n        int v = binPow(a,p/2);\n        return (((v*v)%MOD)*a)%MOD;\n    }\n}\n\nvoid solve(){\n    int n;\n    cin >> n;\n    int p = n;\n    for (int i = 0; i < n-1; i++){\n        p = binPow(n,p);\n    }\n    cout << p << endl;\n\n}\nsigned main(){\n    //freopen(\"/Users/artembreznev/CLionProjects/cp/input.txt\", \"r\", stdin);\n    cin.tie(NULL);\n    ios_base::sync_with_stdio(false);\n    int tt;\n    tt = 1;\n    //cin >> tt;\n    while (tt--){\n        solve();\n    }\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nres = n\r\non = 1\r\nfor i in range(n-1):\r\n    res = (n ** res)\r\n    if on:\r\n        res = res % (10**9+1337)\r\n        on = 0\r\n    else:\r\n        on = 1\r\nres = res % (10**9+1337)\r\nprint(res)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nres = n\r\nfor i in range(n-1):\r\n    res = (n ** res)% (10**9+1337)\r\nprint(res)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nres = n\r\nfor i in range(n-1):\r\n    res = n ** res\r\n    res = res % (10**9+1337)\r\nprint(res)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nres = n\r\nfor i in range(n-1):\r\n    res = n ** res\r\n    res = res % (10**9+1337)\r\nprint(res)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "count = int(input())\r\nst = count\r\n\r\nfor i in range(count - 1):\r\n\r\n    st *= count\r\n\r\nprint(st % 1000001337)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "count = int(input())\r\nst = count\r\n\r\nfor i in range(count - 1):\r\n    st = pow(count, st)\r\n\r\nprint(st % 1000001337)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "count = int(input())\r\ns = []\r\nst = count\r\nfor i in range(count - 1):\r\n    st = pow(count, st)\r\n\r\nprint(st % 1000001337)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "count = int(input())\r\ns = []\r\nst = count\r\nfor i in range(count - 1):\r\n    st = pow(count, st,)\r\n\r\nprint(st % 1000001337)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "count = int(input())\r\ns = []\r\nst = count\r\nfor i in range(count - 2):\r\n    st = pow(count, st,)\r\nprint(pow(count, st, 1000001337))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "count = int(input())\r\ns = []\r\nst = count\r\nfor i in range(count - 2):\r\n    st = pow(count, st,)\r\nprint(pow(count, st, 1000001337))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "count = int(input())\r\ns = []\r\nst = count\r\nfor i in range(count - 2):\r\n    st = pow(count, st,)\r\nprint(pow(count, st, 10000001337))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nusing ll = long long;\r\n\r\nconst ll MOD = 1'000'000'000 + 1337;\r\n\r\nll phi(ll n) {\r\n    ll res = n;\r\n    for (ll i = 2; i * i <= n; ++i) {\r\n        if (n % i == 0) {\r\n            res -= res / i;\r\n            while (n % i == 0) {\r\n                n /= i;\r\n            }\r\n        }\r\n    }\r\n    if (n > 1) {\r\n        res -= res / n;\r\n    }\r\n    return res;\r\n}\r\n\r\nll BinPow(ll x, ll p, ll mod) {\r\n    if (!p) {\r\n        return 1 % mod;\r\n    }\r\n    if (p & 1) {\r\n        return x * BinPow(x, p - 1, mod) % mod;\r\n    }\r\n    ll res = BinPow(x, p / 2, mod);\r\n    return res * res % mod;\r\n}\r\n\r\nll sol(ll n, ll hei, ll mod) {\r\n    if (hei == 0) {\r\n        return 1 % mod;\r\n    }\r\n    ll pow = sol(n, hei - 1, mod);\r\n    return BinPow(n, pow, mod);\r\n}\r\n\r\n\r\nint main() {\r\n    ll n;\r\n    cin >> n;\r\n    cout << sol(n, n, MOD);\r\n    return 0;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nusing ll = long long;\r\n\r\nconst ll MOD = 1e9 + 1337;\r\n\r\nll phi(ll x) {\r\n    ll res = x;\r\n    for (ll i = 2; i * i <= x; ++i) {\r\n        if (x % i == 0) {\r\n            while (x % i == 0) {\r\n                x /= i;\r\n            }\r\n            res -= res / i;\r\n        }\r\n    }\r\n    if (x > 1) {\r\n        res -= res / x;\r\n    }\r\n    return res;\r\n}\r\n\r\nll bin_pow(ll x, ll p, ll mod) {\r\n    if (!p) {\r\n        return 1;\r\n    }\r\n    if (p & 1) {\r\n        return x * bin_pow(x, p - 1, mod) % mod;\r\n    }\r\n    ll res = bin_pow(x, p / 2, mod);\r\n    return res * res % mod;\r\n}\r\n\r\nll sol(ll x, ll len, ll mod) {\r\n    if (len == 1) {\r\n        return x % mod;\r\n    }\r\n    ll pow = sol(x, len - 1, phi(mod));\r\n    return bin_pow(x, pow, mod);\r\n}\r\n\r\nint main() {\r\n    ll n;\r\n    cin >> n;\r\n    cout << sol(n, n, MOD);\r\n    return 0;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nusing ll = long long;\r\n\r\nconst ll MOD = 1e9 + 1337;\r\n\r\nll phi(ll x) {\r\n    ll res = x;\r\n    for (ll i = 2; i * i <= x; ++i) {\r\n        if (x % i == 0) {\r\n            while (x % i == 0) {\r\n                x /= i;\r\n            }\r\n            res -= res / i;\r\n        }\r\n    }\r\n    if (x > 1) {\r\n        res -= res / x;\r\n    }\r\n    return res;\r\n}\r\n\r\nll bin_pow(ll x, ll p, ll mod) {\r\n    if (!p) {\r\n        return 1;\r\n    }\r\n    if (p & 1) {\r\n        return x * bin_pow(x, p - 1, mod) % mod;\r\n    }\r\n    ll res = bin_pow(x, p / 2, mod);\r\n    return res * res % mod;\r\n}\r\n\r\nll sol(ll x, ll len, ll mod) {\r\n    if (len == 1) {\r\n        return x % mod;\r\n    }\r\n    ll pow = sol(x, len - 1, phi(mod));\r\n    return bin_pow(x, pow, mod);\r\n}\r\n\r\nint main() {\r\n    ll n;\r\n    cin >> n;\r\n    cout << phi(1000000009) << '\\n';\r\n    cout << sol(n, n, MOD);\r\n    return 0;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n#define len(v) (int)(v).size()\r\n#define all(v) v.begin(), v.end()\r\n#define rall(v) v.rbegin(), v.rend()\r\n#define int long long\r\ntypedef tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update> indexed_set;\r\nmt19937 rnd(chrono::high_resolution_clock::now().time_since_epoch().count());\r\n\r\ntemplate<class T>\r\nistream &operator>>(istream &in, vector<T> &a) {\r\n    for (auto &i : a)\r\n        in >> i;\r\n    return in;\r\n}\r\n\r\ntemplate<class T>\r\nostream &operator<<(ostream &out, vector<T> &a) {\r\n    for (auto &i : a)\r\n        out << i << ' ';\r\n    return out;\r\n}\r\n\r\nint mod = 1e9 + 1337;\r\n\r\nint binpow(int a, int n) {\r\n    if (n == 0) {\r\n        return 1 % mod;\r\n    }\r\n    if (n % 2 == 1) {\r\n        return ((binpow(a, n - 1) % mod) * (a % mod)) % mod;\r\n\r\n    } else {\r\n        int b = binpow(a, n / 2) % mod;\r\n        return ((b % mod) * (b % mod)) % mod;\r\n    }\r\n}\r\n\r\nint gcd(int a, int b) {\r\n    if (b == 0) {\r\n        return a;\r\n    } else {\r\n        return gcd(b, a % b);\r\n    }\r\n}\r\n\r\nint lcm(int a, int b) {\r\n    return a / gcd(a, b) * b;\r\n}\r\n\r\n\r\nvoid solve() {\r\n    int mod = 1e9 + 1337;\r\n    int n;\r\n    cin >> n;\r\n    int cnt = n;\r\n    int cur = n;\r\n    while(cnt != 2){\r\n        cur = binpow(n,cur);\r\n        cnt--;\r\n    }\r\n    cout << binpow(n,cur);\r\n}\r\n\r\nsigned main() {\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    cout.tie(nullptr);\r\n    //freopen(\"input.txt\", \"r\", stdin);\r\n    //freopen(\"output.txt\", \"w\", stdout);\r\n    int tt = 1;\r\n    //cin >> tt;\r\n    while (tt--) {\r\n        solve();\r\n    }\r\n    return 0;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\n\ntemp = n\nif (n == 2):\n    print(4)\nelse: \n    for i in range(0, temp):\n        n = pow(n, temp)\n    print(int(n % (1e9 + 1337)))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\n\ntemp = n\nif (n == 2):\n    print(4)\n\nelse: \n    for i in range(0, temp):\n        n = pow(n, temp)\n        n %= int((1e9 + 1337))\n    \nprint(int(n % (1e9 + 1337)))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\n\ntemp = n\nif (n == 2):\n    print(4)\n\nelse: \n    for i in range(0, temp):\n        n = pow(n, temp)\n    \nprint(int(n % (1e9 + 1337)))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\n\ntemp = n\n\nfor i in range(0, temp - 1):\n    for j in range(0, n - 1):\n        n *= n\n        n %= int((1e9 + 1337))\n    \nprint(int(n % (1e9 + 1337)))",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\n\ntemp = n\n\nfor i in range(0, temp - 1):\n    n = n ** n\n    \nprint(int(n % (1e9 + 1337)))",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\nanswer = n\nfor i in range(n-1):\n    answer = n**answer\nprint(answer%(10**9 + 1337))",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\nanswer = n\nfor i in range(n):\n    answer = answer**n\nprint(answer%(10**9 + 1337))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <bits/stdc++.h>\n\nusing namespace std;\ntypedef long long ll;\n\nll M = 1e9+1337;\n\nll mod(ll a, ll b) {return ((a%b)+b)%b;}\n\nll binpow(ll a, ll b){\n    if(b==0) return 1;\n    if(b%2==0){\n        ll k = mod(binpow(a,b/2),M);\n        k = mod(k*k,M);\n        return k;\n    }\n    return mod(mod(a,M)*binpow(a,b-1),M);\n}\n\n\nint main() {\n    ll n = 0;\n    cin >> n;\n    ll res = n;\n    for(int i=0;i<n-1;++i){\n        res = binpow(n,res);\n        res = mod(res,M);\n    }\n    cout << res << endl;\n\n\n    return 0;\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "/**\r\n    author: _Octal_\r\n    created: 06.11.2021\r\n\r\n    \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\r\n    \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\r\n    \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2584\u2580\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2584\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2580\u2584\u2591\u2591\u2591\u2591\u2591\u2591\u2591\r\n    \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2591\u2591\u2584\u2591\u2591\u2591\u2591\u2584\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2591\r\n    \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2584\u2588\u2584\u2584\u2591\u2591\u2584\u2591\u2591\u2591\u2588\u2591\u2584\u2584\u2584\u2591\u2591\u2591\r\n    \u2591\u2584\u2584\u2584\u2584\u2584\u2591\u2591\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2580\u2591\u2591\u2591\u2591\u2580\u2588\u2591\u2591\u2580\u2584\u2591\u2591\u2591\u2591\u2591\u2588\u2580\u2580\u2591\u2588\u2588\u2591\u2591\r\n    \u2591\u2588\u2588\u2584\u2580\u2588\u2588\u2584\u2588\u2591\u2591\u2591\u2584\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2591\u2591\u2591\u2591\u2580\u2580\u2580\u2580\u2580\u2591\u2591\u2591\u2591\u2588\u2588\u2591\u2591\r\n    \u2591\u2591\u2580\u2588\u2588\u2584\u2580\u2588\u2588\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2580\u2591\u2588\u2588\u2580\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2580\u2588\u2588\u2591\r\n    \u2591\u2591\u2591\u2591\u2580\u2588\u2588\u2588\u2588\u2591\u2580\u2591\u2591\u2591\u2591\u2584\u2591\u2591\u2591\u2588\u2588\u2591\u2591\u2591\u2584\u2588\u2591\u2591\u2591\u2591\u2584\u2591\u2584\u2588\u2591\u2591\u2588\u2588\u2591\r\n    \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2580\u2588\u2591\u2591\u2591\u2591\u2584\u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2591\u2591\u2591\u2591\u2584\u2591\u2591\u2591\u2584\u2591\u2591\u2584\u2591\u2591\u2591\u2588\u2588\u2591\r\n    \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2584\u2588\u2584\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2580\u2584\u2591\u2591\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2580\u2591\u2591\u2584\u2580\u2591\u2591\r\n    \u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2580\u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580\u2580\u2580\u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580\u2591\u2591\u2591\u2591\r\n    \u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2588\u2588\u2588\u2580\u2591\u2591\u2588\u2588\u2588\u2580\u2591\u2591\u2591\u2591\u2591\u2591\u2580\u2588\u2588\u2588\u2591\u2591\u2580\u2588\u2588\u2580\u2591\u2591\u2591\u2591\u2591\u2591\r\n    \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\r\n**/\r\n\r\n#include <algorithm>\r\n#include <array>\r\n#include <bitset>\r\n#include <cassert>\r\n#include <climits>\r\n#include <cstdint>\r\n#include <cmath>\r\n#include <complex>\r\n#include <cstdio>\r\n#include <cstdlib>\r\n#include <cstring>\r\n#include <functional>\r\n#include <iomanip>\r\n#include <iostream>\r\n#include <map>\r\n#include <memory>\r\n#include <numeric>\r\n#include <queue>\r\n#include <random>\r\n#include <set>\r\n#include <stack>\r\n#include <string>\r\n#include <unordered_set>\r\n#include <unordered_map>\r\n#include <vector>\r\n\r\nusing namespace std;\r\n\r\n#define PLEASE_ACCEPT ios_base::sync_with_stdio(false); cin.tie(0); cout.tie(0);\r\n\r\n//#define FILE_IO\r\n\r\n/**\r\n#pragma GCC target (\"arch=sandybridge\")\r\n#pragma GCC target (\"popcnt\")\r\n#pragma comment (linker, \"/STACK:16777216\")\r\n**/\r\n\r\n#define endl \"\\n\"\r\n#define debug cout << \"sus\\n\"\r\n\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef pair <long long, long long> Pair;\r\nconst long double pi = 3.14159265;\r\nconst long long MOD = 1e9 + 1337;\r\nconst long long INF = LLONG_MAX;\r\n\r\nlong long gcd(long long a, long long b) {\r\n    if (b == 0) return a;\r\n    return gcd(b, a % b);\r\n}\r\n\r\n/**\r\nstruct Hash {\r\n    const long long P = 31;\r\n\r\n    vector <long long> pows;\r\n    vector <long long> hashs;\r\n    \r\n    Hash(string s) {\r\n        hashs.resize(s.size() + 1);\r\n        pows.resize(s.size() + 1);\r\n        hashs[0] = 0;\r\n        pows[0] = 1;\r\n        for (long long i = 0; i < s.size(); i++) {\r\n            hashs[i + 1] = hashs[i] * P + s[i];\r\n            pows[i + 1] = pows[i] * P;\r\n        }\r\n    }\r\n    \r\n    long long get_hash(long long l, long long r) {\r\n        return hashs[r + 1] - hashs[l] * pows[r - l + 1];\r\n    }\r\n    \r\n    bool check(long long a, long long b, long long c, long long d) {\r\n        return get_hash(a, b) == get_hash(c, d);\r\n    }\r\n};\r\n\r\nstruct borh_vertex {\r\n    int next[255];\r\n    int cnt;\r\n    bool flag;\r\n    borh_vertex() {\r\n        for (int i = 0; i < 255; i++) {\r\n            next[i] = NULL;\r\n        }\r\n        cnt = 0;\r\n        flag = false;\r\n    }\r\n};\r\n\r\nstruct Borh {\r\n    vector <borh_vertex> arr;\r\n\r\n\r\n};\r\n**/\r\n\r\nll binpow(ll a, ll n, ll m = INF) {\r\n    if (n == 0) return 1;\r\n    ll x = binpow(a, n / 2, m) % m;\r\n    x = (x * x) % m;\r\n    if (n % 2) x *= a;\r\n    return x;\r\n}\r\n\r\nsigned main() {\r\n#ifdef FILE_IO\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n#else\r\n    PLEASE_ACCEPT;\r\n#endif\r\n    cout << fixed << setprecision(12);\r\n    ll n;\r\n    cin >> n;\r\n    ll ans = n;\r\n    for (ll i = 0; i < n - 1; i++) {\r\n        ans = binpow(ans, n, MOD);\r\n    }\r\n    cout << ans << endl;\r\n    return 0;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "a = int(input(\"\"))\r\nif a%2 == 0:\r\n    n = a - 1\r\nelse:\r\n    n = a\r\nl = a\r\nc = 10**9+1337\r\nfor i in range(n):\r\n    \r\n        a=a**l\r\n    \r\n    \r\nprint(a%(10**9+1337))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input(\"\"))\r\nif a%2 == 0:\r\n    n = a - 1\r\nelse:\r\n    n = a\r\nl = a\r\nc = 10**9+1337\r\nfor i in range(n):\r\n    if a<= c:\r\n        a=a**l\r\n        \r\n    else:\r\n        break\r\n    \r\nprint(a%(10**9+1337))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input(\"\"))\r\nl = a\r\nc = 10**9+1337\r\nfor i in range(a):\r\n    if a <= c:\r\n        a=a**l\r\n       \r\n    else:\r\n        break\r\nprint(a%(10**9+1337))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input(\"\"))\r\nc = 10**9+1337\r\nfor i in range(a-1):\r\n    if a <= c:\r\n        a=a**a\r\n    else:\r\n        break\r\nprint(a%(10**9+1337))\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a = int(input(\"\"))\r\n\r\nfor i in range(a-1):\r\n    a=a**a\r\nprint(a%(10**9+1337))\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "def step(a,n):\r\n    if n==0:\r\n        return 1\r\n    elif n==1:\r\n        return a\r\n    elif n %2==0:\r\n        b = step(a, n//2)\r\n        return b * b\r\n    else:\r\n        b = step(a, n // 2)\r\n        return b * b * a\r\n#\r\nn=int(input())\r\na=n\r\nfor i in range(n-1):\r\n    a=step(n,a)\r\nprint(a%(1000001337))",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "def step(a,n):\r\n    if n==0:\r\n        return 1\r\n    elif n==1:\r\n        return a\r\n    elif n %2==0:\r\n        b = step(a, n//2)\r\n        return b * b\r\n    else:\r\n        b = step(a, n // 2)\r\n        return b * b * a\r\n\r\nn=int(input())\r\na=n\r\nfor i in range(n-1):\r\n    a=step(n,a)\r\nprint(a%(1000001337))\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "def step(a,n):\r\n    if n==0:\r\n        return 1\r\n    elif n==1:\r\n        return a\r\n    elif n %2==0:\r\n        b = step(a, n//2)\r\n        return b * b\r\n    else:\r\n        b = step(a, n // 2)\r\n        return b * b * a\r\nn=int(input())\r\na=n\r\nfor i in range(n-1):\r\n    a=step(n,a)\r\nprint(a%(10**9+1337))",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "def pow(a, n):\r\n    if n == 0:\r\n        return 1\r\n    elif n == 1:\r\n        return a\r\n    elif n % 2 == 0:\r\n        return pow(a, n//2)**2\r\n    elif n % 2 != 0:\r\n        return a*pow(a, n-1)\r\n\r\n\r\nn = int(input())\r\ncurrent = n\r\nm = 10**9 + 1337\r\nfor i in range(n, 1, -1):\r\n    current = pow(n, int(current)) % m\r\nprint(current)",
                "verdict": "Unknown Verdict (7)"
            },
            {
                "code": "def pow(a, n):\r\n    if n == 0:\r\n        return 1\r\n    elif n == 1:\r\n        return a\r\n    elif n % 2 == 0:\r\n        return pow(a, n//2)**2\r\n    elif n % 2 != 0:\r\n        return a*pow(a, n-1)\r\n\r\n\r\nn = int(input())\r\ncurrent = n\r\nm = 10**9 + 1337\r\nfor i in range(n, 1, -1):\r\n    current = pow(n, int(current))\r\nprint(current % m)",
                "verdict": "Unknown Verdict (7)"
            },
            {
                "code": "a=int(input())\r\nstep=a\r\nchislo=1\r\nfor i in range(a-2):\r\n    for j in range(a-1):\r\n        step*=a\r\nfor i in range(step):\r\n    chislo*=a\r\n    chislo%=(10**9+1337)\r\nprint(chislo)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a=int(input())\r\nkolvo=1\r\nfor i in range(a):\r\n    for j in range(a):\r\n        kolvo*=a\r\n        kolvo%=(10**9+1337)\r\nstep=kolvo\r\nfor i in range(a-1):\r\n    kolvo*=step\r\n    kolvo%=(10**9+1337)\r\nprint(kolvo)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a=int(input())\r\nproiz=a\r\nfor i in range(a-1):\r\n    proiz=(a**proiz)%(10**9+1337)\r\nprint(proiz)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "a=int(input())\r\nproiz=(str(a)+\"**\")*(a-1)+str(a)\r\nprint(eval(proiz)%(10**9+1337))",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "a=int(input())\r\nproiz=a\r\nfor i in range(a-1):\r\n    proiz=a**proiz\r\nprint(proiz%(10**9+1337))",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\na = n\r\np = 10 ** 9 + 1337\r\nfor _ in range(n - 1):\r\n    a = (n ** a) % p\r\nprint(a)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "#include <iostream>\r\n#include <algorithm>\r\n#include <vector>\r\n\r\nusing namespace std;\r\n\r\nconst long long base = 1000001337;\r\n\r\nlong long calculate(int iterations, int toCallLeft)\r\n{\r\n\tlong long res = 1;\r\n\tif (toCallLeft > 0)\r\n\t{\r\n\t\tfor (long long i = 0; i < calculate(iterations, toCallLeft - 1); i++)\r\n\t\t{\r\n\t\t\tres *= iterations;\r\n\t\t\tres %= base;\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n\r\n\treturn iterations;\r\n}\r\n\r\nint main()\r\n{\r\n\tlong long n;\r\n\tcin >> n;\r\n\tcout << calculate(n, n-1);\r\n\r\n\r\n\t/*const long long ringBase = (int)10e9 + 1337;\r\n\tint input;\r\n\tcin >> input;\r\n\tint cycleLen = ringBase / input;\r\n\tint overflow = ringBase % input;*/\r\n\r\n\t/*int nServers, nSolutions;\r\n\tcin >> nServers >> nSolutions;\r\n\t\r\n\t//\u0411\u0420\u0423\u0422\u0424\u041e\u041e\u041e\u041e\u041e\u041e\u0420\u0421\r\n\tvector<long long> serverLoad(nServers, 0);\r\n\tvector<int> solutions(nSolutions);\r\n\r\n\tfor (int i = 0; i < nSolutions; i++)\r\n\t{\r\n\t\tcin >> solutions[i];\r\n\t}\r\n\r\n\tsort(solutions.begin(), solutions.end());\r\n\r\n\tfor (int i = nSolutions-1; i >=0; i--)\r\n\t{\r\n\t\tint minLoadedIndex = 0;\r\n\t\tint min = 9999999;\r\n\t\tfor (int j = 0; j < nServers; j++)\r\n\t\t{\r\n\t\t\tif (serverLoad[j] < min)\r\n\t\t\t{\r\n\t\t\t\tmin = serverLoad[j];\r\n\t\t\t\tminLoadedIndex = j;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tserverLoad[minLoadedIndex] += solutions[i];\r\n\t}\r\n\r\n\tlong long max = 0;\r\n\tfor (int i = 0; i < nServers; i++)\r\n\t{\r\n\t\tif (serverLoad[i] > max)\r\n\t\t\tmax = serverLoad[i];\r\n\t}\r\n\r\n\tcout << max;*/\r\n\r\n\r\n\r\n\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\np = 1\r\nfor i in range(n):\r\n    p = (n ** p) % (1000000000 + 1337)\r\nprint(int(p % (1000000000 + 1337)))\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\np = 1\r\nfor i in range(n):\r\n    p = n ** p\r\nprint(int(p % (1000000000 + 1337)))\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "#pragma GCC optimize (\"O3\")\r\n#pragma GCC target (\"sse4\")\r\n#include <bits/stdc++.h>\r\n#define pb push_back\r\n#define ll long long\r\n#define ull unsigned long long\r\n#define mp make_pair\r\n#define si short int\r\n#define speed ios_base::sync_with_stdio(0),cin.tie(0),cout.tie(0)\r\n#define pill pair<ll,ll>\r\n#define f first\r\n#define s second\r\n#define pilc pair<ll,char>\r\n#define all(a) (a).begin(),(a).end()\r\n#define rep(s,e,step) for(int i = (s); i < (e) ; i += step)\r\n#define vrep(s,e,step) for(int j = (s); j < (e) ; j += step)\r\n#define ex exit(0) \r\n#define triple pair<pill, ll>\r\n#define pinode pair<node*, node*>\r\n#define quadra pair<pill, pill>\r\n#define ld long double\r\nusing namespace std;\r\n    \r\nconst ll N = 2e6 + 11;\r\nconst ll M = 1e6 + 21;\r\nconst ll big = 1e17;\r\nconst ll hsh2 = 1964325029 ;\r\nconst long long mod = 1e9 + 1337;\r\nconst double EPS = 1e-9;\r\nconst ll block = 100;\r\nconst ll shift = 2e3;\r\nconst double pi = acos(-1.0);\r\n   \r\n   \r\nmt19937_64 bruh(chrono::steady_clock::now().time_since_epoch().count());\r\n\r\nll n, a, b;\r\n\r\nll bp(ll a, ll b, ll c) {\r\n\tll d = 1ll;\r\n\twhile(b) {\r\n\t\tif(b&1)\r\n\t\t\td = d * a % c;\r\n\t\tb >>= 1ll;\r\n\t\ta = a * a % c;\r\n\t}\r\n\treturn d;\r\n}\r\n\r\nint phi (ll n) {\r\n\tll result = n;\r\n\tfor (ll i=2; i*i<=n; ++i)\r\n\t\tif (n % i == 0) {\r\n\t\t\twhile (n % i == 0)\r\n\t\t\t\tn /= i;\r\n\t\t\tresult -= result / i;\r\n\t\t}\r\n\tif (n > 1)\r\n\t\tresult -= result / n;\r\n\treturn result;\r\n}\r\n   \r\nll z;\r\nll dp[100000] = {0};\r\n\r\nint main() {                                                       \r\n    speed;\r\n\tdp[0] = mod;\r\n\tfor(int i = 1; i <= 10000; i++)\r\n\t\tdp[i] = phi(dp[i - 1]);\r\n\tll x;\r\n\tcin >> x;\r\n\tll lst = 1ll;\r\n\tfor(int j = 1; j <= x; j++) \r\n\t\tlst = bp(x, lst, dp[x - j]);\r\n\tcout << lst << '\\n';\r\n}\r\n/*\r\n*/",
                "verdict": "Runtime Error"
            },
            {
                "code": "#pragma GCC optimize(\"O3\")\r\n\r\n#include <iostream>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <cstring>\r\n#include <string>\r\n#include <queue>\r\n#include <map>\r\n#include <set>\r\n\r\nusing namespace std;\r\nusing ll = long long;\r\nusing pii = pair<int, int>;\r\n\r\nconst ll MOD = 1e9 + 1337;\r\n\r\nll pw(ll a, ll b) {\r\n\tll r = 1;\r\n\twhile (b) {\r\n\t\tif (b & 1) {\r\n\t\t\t(r *= a) %= MOD;\r\n\t\t}\r\n\t\t(a *= a) %= MOD;\r\n\t\tb >>= 1;\r\n\t}\r\n\treturn r;\r\n}\r\n\r\nint32_t main() {\r\n\tios::sync_with_stdio(false);\r\n\tcin.tie(nullptr);\r\n\tint n;\r\n\tcin >> n;\r\n\tll r = n;\r\n\tfor (int i = 0; i < n - 1; i++) {\r\n\t\tr = pw(n, r);\r\n\t}\r\n\tcout << r << endl;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\nm = 10 ** 9 + 1337\r\nres = n\r\nfor i in range(n - 1):\r\n    res = n ** (res % m)\r\nprint(res % m)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "def mod_pow(base, n, m):\n\tif n == 0:\n\t\treturn 1\n\tif n % 2 == 1:\n\t\treturn base * mod_pow(base, n - 1, m) % m\n\tk = mod_pow(base, n / 2, m)\n\treturn k * k % m\n\n\nn = int(input())\ns = n\nfor i in range(n - 2):\n\ts = s ** n\nprint(mod_pow(n, s, 10 ** 9 + 1337))\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def mod_pow(base, n, m):\n\tnum = 1\n\tfor i in range(1, n + 1):\n\t\tnum = (num * base) % m\n\treturn num\n\n\nn = int(input())\ns = n\nfor i in range(n - 2):\n\ts = s ** n\nprint(mod_pow(n, s, 10 ** 9 + 1337))\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "def mod_pow(base, n, m):\n\tnum = 1\n\tfor i in range(1, n + 1):\n\t\tnum = (num * base) % m\n\treturn num\n\n\nn = int(input())\ns = n\nfor i in range(n - 2):\n\ts = n ** n\nprint(mod_pow(n, s, 10 ** 9 + 1337))\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def mod_pow(base, n, m):\n\tnum = 1\n\tfor i in range(1, n + 1):\n\t\tnum = (num * base) % m\n\treturn num\n\n\nn = int(input())\ns = n\nfor i in range(n - 2):\n\ts = n ** n % (10 ** 9 + 1337)\nprint(mod_pow(n, s, 10 ** 9 + 1337))\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "def mod_pow(base, n, m):\n\tnum = 1\n\tfor i in range(1, n + 1):\n\t\tnum = (num * base) % m\n\treturn num\n\n\nn = int(input())\nnum = n\nm = n\ns = n\nfor i in range(n - 2):\n\ts = n ** m\n\tm = n ** m\nprint(mod_pow(n, s, 10 ** 9 + 1337))\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\nnum = n\nm = n\ns = n\nfor i in range(n - 2):\n\ts = n ** m\n\tm = n ** m\nfor i in range(s - 1):\n\tnum = (num * n) % (10 ** 9 + 1337)\nprint(num)\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "N = int(input())\nn = N\nfor _ in range(N):\n    n = pow(n, N, mod=10**9+1337)\nif N > 2:\n    print(n)\nelse:\n    print(N**N)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "N = int(input())\nn = N\nfor _ in range(N):\n    n = pow(n, N, mod=10**9+1337)\nprint(n)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int (input ())\nk = n\ncopy_n = n;\nmod = 1e9 + 1337;\nk = int (k)\nk = k - (n == 2)\nwhile k > 0:\n    copy_n = copy_n ** n\n    copy_n = copy_n % mod\n    k = k - 1;\ncopy_n = int (copy_n)\nprint (copy_n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int (input ())\nk = n\ncopy_n = n;\nmod = 1e9 + 1337;\ncopy_n = int(copy_n);\nk = int (k)\nk = k - (n == 2)\nwhile k > 0:\n    copy_n = copy_n ** n\n    copy_n = copy_n % mod\n    k = k - 1;\ncopy_n = int (copy_n)\nprint (copy_n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nconst = 1e9.__trunc__() + 1337\r\nans = n\r\nfor i in range(n-2):\r\n  ans = pow(n,ans) % const\r\nprint(pow(n,ans)%const)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nconst = 1e9.__trunc__() + 1337\r\nans = n\r\nfor i in range(n-1):\r\n\tans = pow(ans,n) % const\r\nprint(ans % const)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nconst = 1e9.__trunc__() + 1337\r\nans = n\r\nif n == 2:\r\n\tprint(4)\r\n\traise SystemExit\r\nfor i in range(n):\r\n\tans = pow(ans,n) % const\r\nprint(ans % const)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nconst = 1e9.__trunc__() + 1337\r\nans = n\r\nfor i in range(n-2):\r\n    ans **= n\r\n    ans % const\r\nprint(n**ans % const)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\nconst = 1e9.__trunc__() + 1337\r\nans = n\r\nfor i in range(n-2):\r\n    ans **= n\r\nprint(n**ans % const)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "def bin_pow(a, n):\n    if n == 0:\n        return 1\n    tmp = bin_pow(a, n // 2)\n    if n % 2:\n        return (tmp * tmp * a)\n    return (tmp * tmp)\nn = int(input())\nans = 1\nfor i in range(n):\n    ans = bin_pow(n, ans)\nprint(ans % 1000001337)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "N = 1e9 + 1337\r\ndef fun(n):\r\n  m = n\r\n  for i in range(n - 1):\r\n    m = pow(n, m)\r\n  m %= N\r\n  return m\r\n\r\nn = int(input())\r\nprint(int(fun(n)))\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "N = 1e9 + 1337\r\ndef fun(n):\r\n  m = n\r\n  for i in range(n - 1):\r\n    m = pow(n, m)\r\n  m %= N\r\n  return m\r\n\r\nn = int(input())\r\nprint(int(fun(n)))\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "N = 1e9 + 1337\r\ndef fun(n):\r\n  m = n\r\n  for i in range(n - 1):\r\n    m = pow(n, m)\r\n  m %= N\r\n  return m\r\n\r\nn = int(input())\r\nprint(fun(n))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n=int(input())\r\ndef power(a,b,d):\r\n    if d == n:\r\n        return n\r\n    return (a**power(a,b,d+1))%(10**9 + 1337)\r\n\r\nprint(power(n,n,1))",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "import sys\r\nsys.setrecursionlimit(150000000)\r\n\r\ndef C(c):\r\n    global n\r\n    if c == 1:\r\n        return n\r\n    return pow(n, C(c-1))\r\n\r\nn = int(input())\r\nprint(C(n) % (10 ** 9 + 1337))\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\ns = n\r\nfor i in range(n-1):\r\n    s = pow(n, s)\r\n\r\nprint(s % (1000001337))\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "MOD = 10 ** 9 + 1337\r\n\r\n\r\ndef euler_totient(m):\r\n    phi = m\r\n    p = 2\r\n    while p * p <= m:\r\n        if m % p == 0:\r\n            while m % p == 0:\r\n                m //= p\r\n            phi -= phi // p\r\n        p += 1\r\n    if m > 1:\r\n        phi -= phi // m\r\n    return phi\r\n\r\n\r\ndef power_mod(a, b, m):\r\n    result = 1\r\n    a = a % m\r\n    while b > 0:\r\n        if b % 2 == 1:\r\n            result = (result * a) % m\r\n        b = b // 2\r\n        a = (a * a) % m\r\n    return result\r\n\r\n\r\ndef compute_ruslan_csev(n):\r\n    if n == 1:\r\n        return 1\r\n\r\n    MOD = 10 ** 9 + 1337\r\n    phi_mod = euler_totient(MOD)\r\n\r\n    def mod_exp_tower(x, k, m):\r\n        if k == 1:\r\n            return x % m\r\n        exp = mod_exp_tower(x, k - 1, phi_mod)\r\n        return power_mod(x, exp, m)\r\n\r\n    return mod_exp_tower(n, n, MOD)\r\n\r\n\r\nn = int(input().strip())\r\nprint(compute_ruslan_csev(n))",
                "verdict": "Wrong Answer"
            }
        ]
    },
    {
        "task_id": 1131,
        "description": "\u0410\u043d\u043e\u0440\u0434\u0435\u0440\u0435\u0434 \u043f\u0440\u0438\u0434\u0443\u043c\u0430\u043b \u043d\u043e\u0432\u0443\u044e \u0438\u0433\u0440\u0443. \u041f\u0440\u0430\u0432\u0438\u043b\u0430 \u043f\u0440\u043e\u0441\u0442\u044b: \u043a\u0430\u0436\u0434\u044b\u0439, \u043a\u0442\u043e \u0437\u043d\u0430\u0435\u0442 \u043f\u0440\u043e \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043e\u0432\u0430\u043d\u0438\u0435 \u044d\u0442\u043e\u0439 \u0438\u0433\u0440\u044b, \u043f\u0440\u043e\u0438\u0433\u0440\u044b\u0432\u0430\u0435\u0442 \u0432 \u043a\u0430\u0436\u0434\u044b\u0439 \u043c\u043e\u043c\u0435\u043d\u0442 \u0432\u0440\u0435\u043c\u0435\u043d\u0438. \u041e\u043a\u0430\u0437\u0430\u043b\u043e\u0441\u044c, \u0443 \u044d\u0442\u043e\u0439 \u0438\u0433\u0440\u044b \u043e\u0442\u043b\u0438\u0447\u043d\u044b\u0439 \u0441\u043e\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0439 \u0444\u0430\u043a\u0442\u043e\u0440: \u043a\u043e\u0433\u0434\u0430 \u0438\u0433\u0440\u043e\u043a \u043e\u0441\u043e\u0437\u043d\u0430\u0451\u0442, \u0447\u0442\u043e \u0442\u0435\u043f\u0435\u0440\u044c \u0432\u0441\u044e \u0436\u0438\u0437\u043d\u044c \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0438\u0433\u0440\u044b\u0432\u0430\u0442\u044c, \u043e\u043d \u0445\u043e\u0447\u0435\u0442 \u0440\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u0440\u043e \u0438\u0433\u0440\u0443 \u0441\u0432\u043e\u0438\u043c \u0434\u0440\u0443\u0437\u044c\u044f\u043c, \u0447\u0442\u043e\u0431\u044b \u0431\u044b\u043b\u043e \u043d\u0435 \u0442\u0430\u043a \u043e\u0431\u0438\u0434\u043d\u043e.\n    \n\u0421\u0435\u0439\u0447\u0430\u0441 \u043f\u0440\u043e \u0438\u0433\u0440\u0443 \u0437\u043d\u0430\u044e\u0442 $a$ \u0447\u0435\u043b\u043e\u0432\u0435\u043a. \u0420\u0430\u0437 \u0432 \u043c\u0438\u043d\u0443\u0442\u0443 \u043a\u0430\u0436\u0434\u044b\u0439 \u0438\u0437 \u0442\u0435\u0445, \u043a\u0442\u043e \u0437\u043d\u0430\u0435\u0442 \u043f\u0440\u043e \u0438\u0433\u0440\u0443, \u0440\u0430\u0441\u0441\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043e \u043d\u0435\u0439 \u0435\u0449\u0451 $x$ \u043b\u044e\u0434\u044f\u043c.\n\n\u0410\u043d\u043e\u0440\u0434\u0435\u0440\u0435\u0434\u0443 \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u043d\u043e, \u043d\u0430\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u0442\u0440\u0435\u043c\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u044f\u0435\u0442\u0441\u044f \u0435\u0433\u043e \u0438\u0433\u0440\u0430. \u0412\u044b\u044f\u0441\u043d\u0438\u0442\u0435, \u0447\u0435\u0440\u0435\u0437 \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043c\u0438\u043d\u0443\u0442 \u043f\u0440\u043e \u0438\u0433\u0440\u0443 \u0431\u0443\u0434\u0443\u0442 \u0437\u043d\u0430\u0442\u044c $b$ \u0438\u043b\u0438 \u0431\u043e\u043b\u044c\u0448\u0435 \u0447\u0435\u043b\u043e\u0432\u0435\u043a.\n\u0412 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430 $a$, $b$ \u0438 $x$ ($1 \\le a, b, x \\le 10^{18}$).\u0412 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e \u2013 \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043c\u0438\u043d\u0443\u0442 \u0434\u043e\u043b\u0436\u043d\u043e \u043f\u0440\u043e\u0439\u0442\u0438, \u043f\u0440\u0435\u0436\u0434\u0435 \u0447\u0435\u043c \u043f\u0440\u043e \u0438\u0433\u0440\u0443 \u0443\u0437\u043d\u0430\u044e\u0442 $b$ \u0447\u0435\u043b\u043e\u0432\u0435\u043a.",
        "solutions": [
            {
                "code": "a, b, x = map(int, input().split())\ni = 0\nwhile a < b:\n    a += (a * x)\n    a %= 2**63 - 1\n    i += 1\n\nprint(i)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a, b, x = map(int, input().split())\ni = 0\nwhile a < b:\n    a += (a * x)\n    a %= 2**64 - 1\n    i += 1\n\nprint(i)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a, b, x = map(int, input().split())\ni = 0\nwhile a < b:\n    a += (a * x)\n    a %= 2**31 - 1\n    i += 1\n\nprint(i)\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "a, b, x = map(int, input().split())\ni = 0\nwhile a < b:\n    a += (a * x)\n    a %= 2**31\n    i += 1\n\nprint(i)\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "a, b, x = map(int, input().split())\ni = 0\nwhile a < b:\n    a += (a * x)\n    a %= 2**32\n    i += 1\n\nprint(i)\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "a, b, x = map(int, input().split())\ni = 0\nwhile a < b:\n    a += (a * x)\n    a %= 2**64\n    i += 1\n\nprint(i)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a, b, x = map(int, input().split())\ni = 0\nwhile a < b:\n    a += (a * x)\n    a %= 2**63\n    i += 1\n\nprint(i)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a, b, x = map(int, input().split())\ni = 0\nwhile a <= b:\n    a += (a * x)\n    i += 1\n\nprint(i)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a, b, x = map(int, input().split())\ni = 0\nwhile a <= b:\n    a += (a * x)\n    i += 1\n\nprint(i)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(2)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a, b, x = map(int, input().split)\r\ncnt = 0\r\nwhile (a < b):\r\n    a += a * x\r\n    cnt += 1\r\n\r\nprint(cnt)",
                "verdict": "Runtime Error"
            },
            {
                "code": "a,sum, x= map(int, input().split())\n\nq = x+1\n\ncnt = 0\n\nwhile sum>a:\n    sum=q//sum\n    cnt+=1\n    \nprint(cnt)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a,sum, x= map(int, input().split())\n\nq = x+1\n\ncnt = 0\n\nwhile sum>a:\n    sum/=q\n    cnt+=1\n    \nprint(cnt)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <bits/stdc++.h>\r\n#define int int64_t\r\nusing namespace std;\r\nint32_t main(){\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    int a,b,x;\r\n    cin >> a >> b >> x;\r\n    int n=a,t=0;\r\n    while(n<b){\r\n        n+=n*x;\r\n        t++;\r\n    }\r\n    cout << t;\r\n}\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "a,b,x=map(int,input().split())\nc=0\nwhile a < b:\n    a*=x\n    c+=1\nprint(c)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a, b, x = map(int, input().split())\nn = 0\nwhile a < b:\n    n += 1\n    a **= x\nprint(n)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a, b, x = map(int, input().split())\nn = 0\nwhile a < b:\n    n += 1\n    a *= x\nprint(max(0, n - 1))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <iostream>\n#include <algorithm>\n#include <vector>\n#include <functional>\n#include <iomanip>\n#include <set>\n#include <map>\n#include <cmath>\n#include <string>\n#include <fstream>\n#include <queue>\n#include <time.h>\n#include <stdlib.h>\n#include <bitset>\n#include <climits>\n#define ll long long\n#define ld long double\n#define f first\n#define s second\n\nll mod = 1e9 + 7, K = 31;\n\nusing namespace std;\n\n\n\nint main() {\n    ios::sync_with_stdio(false);\n    cin.tie(nullptr);\n    ll a, x, b;\n    cin >> a >> b >> x;\n    ll res = 0;\n    while(a < b){\n        res ++;\n        if (b - a * x - a <= 0) {\n            cout << res;\n            return 0;\n        }\n        a += a * x;\n    }\n    cout << res;\n    cout << '\\n';\n}\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "a,b,x=map(int,input().split());\nans = 0\nwhile a <= b:\n    a = a * (x + 1)\n    ans = ans + 1\nprint(ans)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <bits/stdc++.h>\r\nusing namespace std;\r\n\r\ntypedef long long ll;\r\ntypedef unsigned long long ull;\r\ntypedef long double ld;\r\n\r\n#define fi first\r\n#define se second\r\n#define debug(x) cout << #x << \": \" << x << '\\n';\r\n\r\nconst int inf = int(1e9) + 1;\r\nconst ll infll = ll(1e18) + 1;\r\nconst int mod = int(1e9) + 7;\r\nmt19937_64 rnd(chrono::high_resolution_clock::now().time_since_epoch().count());\r\n\r\ntemplate<typename T1, typename T2>\r\nbool chmin(T1 &a, T2 b){\r\n    if (a > b) return a = b, true;\r\n    return false;\r\n}\r\ntemplate<typename T1, typename T2>\r\nbool chmax(T1 &a, T2 b){\r\n    if (a < b) return a = b, true;\r\n    return false;\r\n}\r\nvoid solve() {\r\n    ll a, b, x;\r\n    cin >> a >> b >> x;\r\n    ll cur = x;\r\n    ll p = x;\r\n    for (int d = 1;; d++){\r\n        cur *= x;\r\n        p += cur;\r\n        if (p * a >= b){\r\n            cout << d;\r\n            return;\r\n        }\r\n    }\r\n}\r\n\r\nint main(){\r\n    ios::sync_with_stdio(false);\r\n    cin.tie(0), cout.tie(0);\r\n    int t = 1;\r\n    while (t--){\r\n        solve();\r\n    }\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "a = int(input())\nb = int(input())\nx = int(input())\n\nx += 1\n\nans = 0\nwhile a < b:\n    ans += 1\n    a *= x\nprint(ans)",
                "verdict": "Runtime Error"
            },
            {
                "code": "/*\r\n    #MADE BY#\r\n    ###SAS###\r\n*/\r\n\r\n\r\n\r\n\r\n#include <iostream>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <cmath>\r\n#include <map>\r\n#include <unordered_map>\r\n#include <set>\r\n#include <unordered_set>\r\n#include <cstdio>\r\n#include <stack>\r\n#include <queue>\r\n#include <deque>\r\n#include <string>\r\n\r\n#define int long long\r\n\r\nusing namespace std;\r\n\r\nconst int INF = 1e9 + 1;\r\n\r\nsigned main()\r\n{\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n    string da = \"YES\\n\";\r\n    string net = \"NO\\n\";\r\n    int a, b, x;\r\n    cin >> a >> b >> x;\r\n    int c = a;\r\n    int ans = 0;\r\n    while (c < b) {\r\n        c = c + c * x;\r\n        ans++;\r\n    }\r\n    cout << ans;\r\n    return 0;\r\n}\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\r\n#include <cstdio>\r\n#include <sstream>\r\n#include <algorithm>\r\n#include <iomanip>\r\n#include <cmath>\r\n#include <ctime>\r\n#include <cstdlib>\r\n#include <set>\r\n#include <map>\r\n#include <vector>\r\n#include <queue>\r\n#include <iterator>\r\n\r\n#include <ext/pb_ds/assoc_container.hpp>\r\n#include <ext/pb_ds/tree_policy.hpp>\r\n\r\n#define x0 abc\r\n#define y0 ABC\r\n#define x1 abcd\r\n#define y1 ABCD\r\n#define xn abcde\r\n#define yn ABCDE\r\n\r\n#define lb lower_bound\r\n#define ub upper_bound\r\n\r\n#define in insert\r\n#define er erase\r\n\r\n#define fi first\r\n#define se second\r\n#define mp make_pair\r\n\r\n#define pb push_back\r\n#define pob pop_back\r\n\r\n#define uns unsigned\r\n\r\n#define ld long double\r\n#define ll long long\r\n\r\n#define cont continue\r\n#define re return\r\n\r\n#define MAXLL 9000000000000000000LL\r\n#define MAXINT 2000000000\r\n\r\n#define MINLL -9000000000000000000LL\r\n#define MININT -2000000000\r\n\r\n#define pi acos(-1.)\r\n\r\n#define endl '\\n'\r\n\r\n#define OUT cout << \"-------\" << endl;\r\n\r\n#define bpc __builtin_popcount\r\n#define bpcll __builtin_popcountll\r\n\r\n#define tm qwerty\r\n\r\nusing namespace std;\r\n\r\nusing namespace __gnu_pbds;\r\n\r\ntypedef tree <int, null_type, less <int>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;\r\n\r\nll M = 1000000007, D = 100000, T;\r\n\r\nll a, b, x, ans;\r\n\r\nint main()\r\n{\r\n//    freopen(\"input.txt\", \"r\", stdin);\r\n//    freopen(\"output.txt\", \"w\", stdout);\r\n\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(0);\r\n\r\n    cin >> a >> b >> x;\r\n\r\n    while (a < b) {\r\n        ans++;\r\n\r\n        if (x + 1 >= b / a)\r\n        a = b;\r\n        else a = a * (x + 1);\r\n    }\r\n\r\n    cout << ans << endl;\r\n\r\n    re 0;\r\n}\r\n\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "5",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a, b, x = map(int,input().split())\r\n\t\r\nznam = (x * a + a) / a\r\n\r\ncnt = a;\r\nres = []\r\nfor i in range(100000):\r\n\tres.append(cnt)\r\n\tcnt = znam * cnt\r\n\r\nfor i in range(100000):\r\n\tif (res[i] >= b):\r\n\t\tprint(i)\r\n\t\tbreak",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a, b, x = map(int,input().split())\r\n\t\r\nznam = (x * a + a) / a\r\n\r\ncnt = a;\r\nres = []\r\nfor i in range(2000):\r\n\tres.append(cnt)\r\n\tcnt = znam * cnt\r\n\r\nfor i in range(2000):\r\n\tif (res[i] >= b):\r\n\t\tprint(i)\r\n\t\tbreak",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a, b, x = map(int,input().split())\r\n\t\r\nznam = (x * a + a) / a\r\n\r\ncnt = a;\r\nres = []\r\nfor i in range(200):\r\n\tres.append(cnt)\r\n\tcnt = znam * cnt\r\n\r\nfor i in range(200):\r\n\tif (res[i] >= b):\r\n\t\tprint(i)\r\n\t\tbreak",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a, b, x = map(int, input().split())\nx += 1\nprint(a * (x ** b))",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a, b, x = map(int, input().split())\r\nans = a\r\ni = 0\r\nwhile ans <= b:\r\n    ans += ans * x\r\n    i += 1\r\nprint(i)\r\n\r\n\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "# include <bits/stdc++.h>\r\n//# define int long long\r\nusing namespace std;\r\n\r\nint bin_pow(int n, int pow) {\r\n    if (pow == 1) {\r\n        return n;\r\n    } else if (pow % 2 == 0) {\r\n        int t = bin_pow(n, pow / 2);\r\n        return t * t;\r\n    } else {\r\n        int t = bin_pow(n, pow - 1);\r\n        return n * t;\r\n    }\r\n}\r\n\r\nvoid solve() {\r\n    int a, b, x;\r\n    cin >> a >> b >> x;\r\n    int cnt = 0;\r\n    while (a < b) {\r\n        a = a + a * x;\r\n        cnt++;\r\n    }\r\n    cout << cnt;\r\n}\r\n\r\n\r\nsigned main() {\r\n    ios::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    int t;\r\n    t = 1;\r\n//    cin >> t;\r\n    while (t--) {\r\n        solve();\r\n    }\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <string>\r\n#include <map>\r\n#include <set>\r\n#include <deque>\r\n#include <stack>\r\n#include <queue>\r\n#include <iomanip>\r\n//#include <cmath>\r\n//#include <numeric>\r\n\r\n#define rep(n) for (int i = 0 ; i < n ; ++i)\r\n#define For(i, n) for (int i = 0 ; i < n ; ++i)\r\n#define range(i, l, r) for (int i = l ; i <= r ; ++i)\r\n#define endl \"\\n\"\r\n#define _ <<\" \"<<\r\n#define ff first\r\n#define ss second\r\n#define pb  push_back\r\n#define INF 1000000000000000000\r\n#define int long long\r\n\r\nusing namespace std;\r\n\r\n//#pragma GCC optimize(\"Ofast,unroll-loops\")\r\n//#pragma GCC target(\"avx2\")\r\n\r\n\r\nvoid solve() {\r\n    int a, b, x;\r\n    cin >> a >> b >> x;\r\n    int sk = 0;\r\n    while (a < b) {\r\n        a += a * x;\r\n        sk++;\r\n    }\r\n    cout << sk;\r\n}\r\n\r\nsigned main() {\r\n    ios_base::sync_with_stdio(false);\r\n    cin.tie(nullptr);\r\n    cout.tie(nullptr);\r\n    int t = 1;\r\n    //cin >> t;\r\n    rep(t) {\r\n        solve();\r\n    }\r\n    return 0;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "players = [int(i) for i in input().split()]\r\n\r\n#players[0] - \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0447\u0435\u043b\u043e\u0432\u0435\u043a \u0437\u043d\u0430\u044e\u0442 \u043f\u0440\u043e \u0438\u0433\u0440\u0443 \r\n#players[1] - \u0441\u043a\u043e\u043b\u044c\u043a\u0438\u043c \u043b\u044e\u0434\u044f\u043c \u043d\u0430\u0434\u043e \u0440\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c\r\n#players[2] - \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0438\u044f\r\n\r\nk = players[0]\r\ns = players[1]\r\nl = players[2]\r\ncounter=0\r\nwhile k!=s:\r\n    k=k**l\r\n    counter+=1\r\n    \r\nprint(counter)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "import math\r\nplayers = [int(i) for i in input().split()]\r\n\r\n#players[0] - \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0447\u0435\u043b\u043e\u0432\u0435\u043a \u0437\u043d\u0430\u044e\u0442 \u043f\u0440\u043e \u0438\u0433\u0440\u0443 \r\n#players[1] - \u0441\u043a\u043e\u043b\u044c\u043a\u0438\u043c \u043b\u044e\u0434\u044f\u043c \u043d\u0430\u0434\u043e \u0440\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c\r\n#players[2] - \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0438\u044f\r\n\r\nk = players[0]\r\ns = players[1]\r\nl = players[2]\r\ncounter=math.log(s, k**l)\r\n    \r\nprint(int(counter))",
                "verdict": "Runtime Error"
            },
            {
                "code": "import math\r\nplayers = [int(i) for i in input().split()]\r\n\r\n#players[0] - \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0447\u0435\u043b\u043e\u0432\u0435\u043a \u0437\u043d\u0430\u044e\u0442 \u043f\u0440\u043e \u0438\u0433\u0440\u0443 \r\n#players[1] - \u0441\u043a\u043e\u043b\u044c\u043a\u0438\u043c \u043b\u044e\u0434\u044f\u043c \u043d\u0430\u0434\u043e \u0440\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c\r\n#players[2] - \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0438\u044f\r\n\r\nk = players[0]\r\ns = players[1]\r\nl = players[2]\r\ncounter=math.log(s, l**k)\r\n    \r\nprint(int(counter))",
                "verdict": "Runtime Error"
            },
            {
                "code": "import math\r\nplayers = [int(i) for i in input().split()]\r\n\r\n#players[0] - \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0447\u0435\u043b\u043e\u0432\u0435\u043a \u0437\u043d\u0430\u044e\u0442 \u043f\u0440\u043e \u0438\u0433\u0440\u0443 \r\n#players[1] - \u0441\u043a\u043e\u043b\u044c\u043a\u0438\u043c \u043b\u044e\u0434\u044f\u043c \u043d\u0430\u0434\u043e \u0440\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c\r\n#players[2] - \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0438\u044f\r\n\r\nk = players[0]\r\ns = players[1]\r\nl = players[2]\r\ncounter=math.log(s, l**k)\r\n    \r\nprint(counter)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\r\nplayers = [int(i) for i in input().split()]\r\n\r\n#players[0] - \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0447\u0435\u043b\u043e\u0432\u0435\u043a \u0437\u043d\u0430\u044e\u0442 \u043f\u0440\u043e \u0438\u0433\u0440\u0443 \r\n#players[1] - \u0441\u043a\u043e\u043b\u044c\u043a\u0438\u043c \u043b\u044e\u0434\u044f\u043c \u043d\u0430\u0434\u043e \u0440\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c\r\n#players[2] - \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0438\u044f\r\n\r\nk = players[0]\r\ns = players[1]\r\nl = players[2]\r\ncounter=math.log(s, k**l)\r\n    \r\nprint(counter)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\nplayers = [int(i) for i in input().split()]\n\n#players[0] - \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0447\u0435\u043b\u043e\u0432\u0435\u043a \u0437\u043d\u0430\u044e\u0442 \u043f\u0440\u043e \u0438\u0433\u0440\u0443 \n#players[1] - \u0441\u043a\u043e\u043b\u044c\u043a\u0438\u043c \u043b\u044e\u0434\u044f\u043c \u043d\u0430\u0434\u043e \u0440\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c\n#players[2] - \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0438\u044f\n\nk = players[0]\ns = players[1]\nl = players[2]\ncounter=int(math.log(s, k+l))\n    \nprint(counter)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\nplayers = [int(i) for i in input().split()]\n\n#players[0] - \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0447\u0435\u043b\u043e\u0432\u0435\u043a \u0437\u043d\u0430\u044e\u0442 \u043f\u0440\u043e \u0438\u0433\u0440\u0443 \n#players[1] - \u0441\u043a\u043e\u043b\u044c\u043a\u0438\u043c \u043b\u044e\u0434\u044f\u043c \u043d\u0430\u0434\u043e \u0440\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c\n#players[2] - \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0438\u044f\n\nk = players[0]\ns = players[1]\nl = players[2]\nsum_n = k+l\ncounter=math.log(sum_n,s)\n    \nprint(counter)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "import math\nplayers = [int(i) for i in input().split()]\n\n#players[0] - \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0447\u0435\u043b\u043e\u0432\u0435\u043a \u0437\u043d\u0430\u044e\u0442 \u043f\u0440\u043e \u0438\u0433\u0440\u0443 \n#players[1] - \u0441\u043a\u043e\u043b\u044c\u043a\u0438\u043c \u043b\u044e\u0434\u044f\u043c \u043d\u0430\u0434\u043e \u0440\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c\n#players[2] - \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0438\u044f\n\nk = players[0]\ns = players[1]\nl = players[2]\nsum_n = k+l\ncounter=math.log(s,sum_n)\n    \nprint(counter)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "players = [int(i) for i in input().split()]\n\n#players[0] - \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0447\u0435\u043b\u043e\u0432\u0435\u043a \u0437\u043d\u0430\u044e\u0442 \u043f\u0440\u043e \u0438\u0433\u0440\u0443 \n#players[1] - \u0441\u043a\u043e\u043b\u044c\u043a\u0438\u043c \u043b\u044e\u0434\u044f\u043c \u043d\u0430\u0434\u043e \u0440\u0430\u0441\u0441\u043a\u0430\u0437\u0430\u0442\u044c\n#players[2] - \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0438\u044f\n\nk = players[0]\ns = players[1]\nl = players[2]\ncounter=0\nwhile k!=s:\n    k=k**l\n    counter+=1\n    \nprint(counter)",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "#include <bits/stdc++.h>\r\nusing namespace std;\r\nconst long long INF = 2000000000;\r\ntypedef long long ll;\r\nll a,b,x,y,z,res,sum,ans,t,n,m,k,ma,mi,c0,c1,q;\r\nstring s,s1;\r\nset<ll> se;\r\nint main()\r\n{\r\n    ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);\r\n    cin >> a >> b >> x;\r\n    while(a<b){\r\n        a+=(a*x);\r\n        ans++;\r\n    }\r\n    cout << ans << endl;\r\n}\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\r\n#include <vector>\r\n# define int long long\r\nusing namespace std;\r\n\r\nint main() {\r\n   int a, b, x;\r\n   cin>>a>>b>>x;\r\n   cout<<b/((a*b)+(a*b));\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\r\n#include <vector>\r\n#include <algorithm>\r\nusing namespace std;\r\n\r\nint main() {\r\n   int a, b, x;\r\n   cin>>a>>b>>x;\r\n   cout<<b/(a*b);\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "a, b, x = int(input())\n\ncount = 0\nwhile a < b:\n    a += a*x\n    count += 1\nprint(count)\n    ",
                "verdict": "Runtime Error"
            },
            {
                "code": "a = int(input())\nb = int(input())\nx = int(input())\ncount = 0\nwhile a < b:\n    a += a*x\n    count += 1\nprint(count)\n    ",
                "verdict": "Runtime Error"
            },
            {
                "code": "a = int(input())\nb = int(input())\nx = int(input())\ncount = 0\nwhile a < b:\n    a += a*x\n    count += 1\nprint(count)\n    ",
                "verdict": "Runtime Error"
            },
            {
                "code": "a = int(input())\nb = int(input())\nx = int(input())\ncount = 0\nwhile a <= b:\n    a += a*x\n    count += 1\nprint(count)\n    ",
                "verdict": "Runtime Error"
            },
            {
                "code": "a = int(input())\nb = int(input())\nx = int(input())\nn = a\ncount = 0\nwhile n <= b:\n    n = n*(x+1)\n    count += 1\nprint(count)\n    ",
                "verdict": "Runtime Error"
            },
            {
                "code": "a = int(input())\nb = int(input())\nx = int(input())\nn = 0\ncount = 0\nwhile n <= b:\n    n = a*(x+1)\n    count += 1\nprint(count)\n    ",
                "verdict": "Runtime Error"
            },
            {
                "code": "a, x, b = map(int, input().split(\" \"))\nans = 0\nwhile a < b:\n    a *= x\n    ans += 1\n    \nprint(ans)",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a, b, x = input().split()\na = int(a)\nb = int(b)\nx = int(x)\ncnt = 0\nwhile a * x < b:\n    x *= x\n    cnt += 1\nprint(cnt)\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "123",
                "verdict": "Wrong Answer"
            },
            {
                "code": "a, b, x = map(int, input().split())\r\n\r\ncount = 0\r\n\r\nwhile a + a * x <= b:\r\n    a += a * x\r\n    count += 1\r\n\r\nprint(count + 1)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <iostream>\r\n#include <cmath>\r\n\r\nusing namespace std;\r\n\r\nint main() {\r\n    int a, b, x;\r\n    cin >> a >> b >> x;\r\n    while (pow(a, x) <= b) {\r\n        a = pow(a, x);\r\n    }\r\n    cout << x;\r\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "def find_time_to_reach_b(a, b, x):\r\n    left, right = 0, 10**18  # \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c \u0431\u043e\u043b\u044c\u0448\u0438\u0435 \u0433\u0440\u0430\u043d\u0438\u0446\u044b \u0434\u043b\u044f \u0431\u0438\u043d\u0430\u0440\u043d\u043e\u0433\u043e \u043f\u043e\u0438\u0441\u043a\u0430\r\n    \r\n    while left < right:\r\n        mid = (left + right) // 2\r\n        if a * (1 + x)**mid >= b:\r\n            right = mid\r\n        else:\r\n            left = mid + 1\r\n    \r\n    return left\r\n\r\n# \u041f\u0440\u0438\u043c\u0435\u0440 \u0432\u0432\u043e\u0434\u0430\r\na, b, x = int(input()), int(input()), int(input())\r\n\r\n# \u0412\u044b\u0437\u043e\u0432 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0438 \u0432\u044b\u0432\u043e\u0434 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\r\nprint(find_time_to_reach_b(a, b, x))\r\n",
                "verdict": "Runtime Error"
            }
        ]
    },
    {
        "task_id": 2069,
        "description": "\u0418\u043d\u043e\u0433\u0434\u0430 \u0441\u0442\u0438\u0440\u0430\u043b\u044c\u043d\u044b\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \"\u0441\u044a\u0435\u0434\u0430\u044e\u0442\" \u043d\u043e\u0441\u043a\u0438 - \u043f\u043e\u043b\u043e\u0436\u0438\u043b \u043f\u043e\u043b\u043d\u044b\u0439 \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0442, \u0433\u0434\u0435 \u0443 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043d\u043e\u0441\u043a\u0430 \u0435\u0441\u0442\u044c \u043f\u0430\u0440\u0430, \u0432\u044b\u0442\u0430\u0449\u0438\u043b - \u0430 \u0443 \u043d\u0435\u043a\u043e\u0442\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u043e\u0441\u043a\u043e\u0432 \u043f\u0430\u0440\u0430 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442!\n\n\u0412\u044b \u0440\u0435\u0448\u0438\u043b\u0438 \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0443, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u043e \u0432\u044b\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u043c \u0438\u0437 \u043c\u0430\u0448\u0438\u043d\u043a\u0438 \u043d\u043e\u0441\u043a\u0430\u043c \u043d\u0430\u0439\u0434\u0451\u0442 \u0442\u0435, \u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043d\u0435\u0442 \u043f\u0430\u0440\u044b, \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u044f, \u0447\u0442\u043e \u0438\u0437\u043d\u0430\u0447\u0430\u043b\u044c\u043d\u043e \u0432\u044b \u0437\u0430\u0433\u0440\u0443\u0437\u0438\u043b\u0438 \u0432 \u043c\u0430\u0448\u0438\u043d\u043a\u0443 \u043d\u043e\u0441\u043a\u0438, \u0443 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0431\u044b\u043b\u0430 \u043f\u0430\u0440\u0430.\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u0447\u0438\u0441\u043b\u043e $n$ - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043d\u043e\u0441\u043a\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0441\u0442\u0430\u043b\u0438\u0441\u044c \u0443 \u0432\u0430\u0441 \u043f\u043e\u0441\u043b\u0435 \u0441\u0442\u0438\u0440\u043a\u0438 ($1 \\le n \\le 2 \\cdot 10^5$).\n\n\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e $n$ \u0447\u0438\u0441\u0435\u043b, \u0433\u0434\u0435 $i$-\u0442\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442 \u0446\u0432\u0435\u0442 $i$-\u0442\u043e\u0433\u043e \u043d\u043e\u0441\u043a\u0430 (\u0446\u0432\u0435\u0442\u0430 - \u043d\u0430\u0442\u0443\u0440\u0430\u043b\u044c\u043d\u044b\u0435 \u0447\u0438\u0441\u043b\u0430 \u0434\u043e $10^9$). \u041d\u043e\u0441\u043a\u0438 \u043e\u0431\u044a\u0435\u0434\u0438\u043d\u044f\u044e\u0442\u0441\u044f \u0432 \u043f\u0430\u0440\u0443 \u043f\u043e \u043f\u0440\u0438\u043d\u0446\u0438\u043f\u0443 \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430 .\u0415\u0441\u043b\u0438 \u043c\u0430\u0448\u0438\u043d\u043a\u0430 \u0441\u044a\u0435\u043b\u0430 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0438\u0437 \u043d\u043e\u0441\u043a\u043e\u0432, \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 `YES`, \u0430 \u0432\u043e \u0432\u0442\u043e\u0440\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 - \u0446\u0432\u0435\u0442\u0430 \u043d\u043e\u0441\u043a\u043e\u0432 \u0432 \u043f\u043e\u0440\u044f\u0434\u043a\u0435 \u0432\u043e\u0437\u0440\u0430\u0441\u0442\u0430\u043d\u0438\u044f \u0447\u0435\u0440\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b.\n\n\u0415\u0441\u043b\u0438 \u0436\u0435 \u0443 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043d\u043e\u0441\u043a\u0430 \u0435\u0441\u0442\u044c \u043f\u0430\u0440\u0430, \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 `NO`.",
        "right_solution": "from collections import Counter\r\n\r\nn = int(input())\r\n\r\na = Counter(list(map(int, input().split())))\r\n\r\nans = []\r\nfor k in a.keys():\r\n    if a[k] % 2:\r\n        ans.append(k)\r\n\r\nans.sort()\r\n\r\nif ans:\r\n    print(\"YES\")\r\n    print(*ans)\r\nelse:\r\n    print(\"NO\")",
        "solutions": [
            {
                "code": "from collections import Counter\r\n\r\nn = int(input())\r\n\r\na = Counter(list(map(int, input().split())))\r\n\r\nans = []\r\nfor k in a.keys():\r\n    if a[k] % 2:\r\n        ans.append(k)\r\n\r\nans.sort()\r\n\r\nif ans:\r\n    print(\"YES\")\r\n    print(*ans)\r\nelse:\r\n    print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "socks_count = {}\nn = int(input())\nsocks = list(map(int, input().split()))\nfor sock in socks:\n    if sock in socks_count.keys():\n        socks_count[sock] += 1\n    else:\n        socks_count[sock] = 1\n        \nresult = []\nfor key in set(socks_count.keys()):\n    if socks_count[key] % 2:\n        result.append(key)\n        \nif result:\n    print(\"YES\")\n    print(*result)\nelse:\n    print(\"NO\")\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "socks_count = {}\nn = int(input())\nsocks = list(map(int, input().split()))\nfor sock in socks:\n    if sock in socks_count.keys():\n        socks_count[sock] += 1\n    else:\n        socks_count[sock] = 1\n        \nresult = []\nfor (key, value) in socks_count.items():\n    if value % 2:\n        result.append(key)\n        \nif result:\n    print(\"YES\")\n    print(*result)\nelse:\n    print(\"NO\")\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "socks_count = {}\nn = int(input())\nsocks = list(map(int, input().split()))\nfor sock in socks:\n    if sock in socks_count.keys():\n        socks_count[sock] += 1\n    else:\n        socks_count[sock] = 1\n        \nresult = []\nfor (key, value) in sock_count.items():\n    if value % 2:\n        result.append(key)\n        \nif result:\n    print(\"YES\")\n    print(*result)\nelse:\n    print(\"NO\")\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\nlst = sorted(list(map(int, input().split())))\nk = []\nwhile len(lst) > 0:\n    if lst[0] == lst[1]:\n        del lst[0]\n        del lst[0]\n    else:\n        k.append(lst[0])\n        del lst[0]\nif len(k) > 0:\n    print(\"YES\")\n    print(*sorted(k))\nelse:\n    print(\"NO\")",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\nlst = list(map(int, input().split()))\nk = []\nfor i in sorted(set(lst)):\n    if lst.count(i) % 2:\n        k.append(i)\nif len(k) > 0:\n    print(\"YES\")\n    print(*k)\nelse:\n    print(\"NO\")",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\nlst = list(map(int, input().split()))\nk = []\nfor i in set(lst):\n    if lst.count(i) % 2 == 1:\n        k.append(i)\nif len(k) > 0:\n    print(\"YES\")\n    print(*sorted(k))\nelse:\n    print(\"NO\")",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\nlst = list(map(int, input().split()))\nk = []\nfor i in set(lst):\n    if lst.count(i) % 2 == 1:\n        k.append(i)\nif len(k) > 0:\n    print(\"YES\")\n    print(*k)\nelse:\n    print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "input()\r\na = list(map(int, input().split()))\r\nb = set(a)\r\nres = []\r\nfor i in a:\r\n    if a.count(i) % 2:\r\n        res.append(i)\r\nif res:\r\n    print(\"YES\")\r\n    print(*sorted(res))\r\nelse:\r\n    print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "input()\r\na = list(map(int, input().split()))\r\nb = set(a)\r\nres = []\r\nfor i in b:\r\n    if a.count(i) % 2:\r\n        res.append(i)\r\nif res:\r\n    print(\"YES\")\r\n    print(*sorted(res))\r\nelse:\r\n    print(\"NO\")",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "input()\r\na = list(map(int, input().split()))\r\nb = set(a)\r\nres = []\r\nfor i in b:\r\n    if a.count(i) % 2:\r\n        res.append(i)\r\nif res:\r\n    print(\"YES\")\r\n    print(*sorted(res))\r\nelse:\r\n    print(\"NO\")",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "input()\r\na = list(map(int, input().split()))\r\nb = set(a)\r\nres = []\r\nfor i in b:\r\n    if a.count(i) % 2:\r\n        res.append(i)\r\nif res:\r\n    print(\"YES\")\r\n    print(*res)\r\nelse:\r\n    print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\ns = [int(i) for i in input().split()]\r\nans = set()\r\nfor i in s:\r\n    if s.count(i) % 2:\r\n        ans.add(i)\r\nif ans:\r\n    print('YES')\r\n    print(*sorted(list(ans)))\r\nelse:\r\n    print('NO')",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\ns = [int(i) for i in input().split()]\r\nans = []\r\nfor i in s:\r\n    if s.count(i) % 2:\r\n        ans.append(i)\r\nif ans:\r\n    print('YES')\r\n    print(*ans)\r\nelse:\r\n    print('NO')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#include <bits/stdc+++.h>\n\nint main() {\n    int n;\n    cin >> n;\n    \n    vector<bool> a(n, 0);\n    \n    for (int i = 0; i < n ; i ++) {\n        int color;\n        cin >> color;\n        color--;\n        a[color]++;\n    }\n    \n    for (int i = 0; i < n ; i ++) {\n        if (a[i]) {\n            cout << i + 1 << ' ';\n        }\n    }\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\n*a, = map(int, input().split())\r\nt = set()\r\nfor i in a:\r\n  if not i in t:\r\n    t |= {i}\r\n  else:\r\n    t -= {i}\r\nif len(t) > 0:\r\n  print(\"YES\")\r\n  print(*t)\r\nelse:\r\n  print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#pragma GCC optimize(\"O3,unroll-loops\")\r\n#include <bits/stdc++.h>\r\n\r\nusing namespace std;\r\n\r\n#define int long long\r\n#define f first\r\n#define s second\r\n#define pb push_back\r\n#define ld long double\r\n#define sz(x) (int)x.size()\r\n#define all(x) x.begin(), x.end()\r\n#define rall(x) x.rbegin(), x.rend()\r\n\r\nusing pii = pair<int, int>;\r\n\r\nmt19937_64 gen(chrono::steady_clock::now().time_since_epoch().count());\r\nconst int mod = 1e9 + 7;\r\nconst int INF = 1e16 + 1337;\r\nconst int N = 2e5 + 1337;\r\n\r\nvoid solve() {\r\n    int n;\r\n    cin >> n;\r\n    int a[n];\r\n    map <int, int> cnt;\r\n    for (int i = 0; i < n; i++) {\r\n        cin >> a[i];\r\n        cnt[a[i]]++;\r\n    }\r\n\r\n    vector <int> ans;\r\n    for (auto &p: cnt)\r\n        if (p.s < 2)\r\n            ans.pb(p.f);\r\n\r\n    if (sz(ans)) {\r\n        cout << \"YES\\n\";\r\n        for (auto &x: ans)\r\n            cout << x << \" \";\r\n        return;\r\n    }\r\n\r\n    cout << \"NO\";\r\n}\r\n\r\nint32_t main() {\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    solve();\r\n}\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\n#include <fstream>\n#include <algorithm>\n#include <queue>\n#include <map>\n#include <set>\n#include <cmath>\n\nusing namespace std;\n\nvoid solve() {\n    int n;\n    cin >> n;\n    map<int, int> cnt;\n    for (int i = 0; i < n; ++i) {\n        int c;\n        cin >> c;\n        cnt[c]++;\n    }\n    vector<int> ans;\n    for (auto i: cnt) {\n        if (i.second & 1) {\n            ans.push_back(i.first);\n        }\n    }\n    if (ans.size()) {\n        cout << \"YES\\n\";\n        for (auto i: ans) {\n            cout << i << \" \";\n        }\n        cout << \"\\n\";\n    } else {\n        cout << \"NO\\n\";\n    }\n}\n\nsigned main() {\n    ios::sync_with_stdio(false);\n    cin.tie(NULL);\n    cout.tie(NULL);\n    int t = 1;\n    //cin >> t;\n    while (t--) {\n        solve();\n    }\n}\n\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\n#include <vector>\n#include <string>\n#include <algorithm>\n#include <cmath>\n\nusing namespace std;\n\nint main() {\n    int n;\n    cin >> n;\n    vector<int> v((int) 2e5  + 1, 0);\n    for (int i = 0; i < n; i++) {\n        int x;\n        cin >> x;\n        v[x]++;\n    }\n    bool good = false;\n    for (int i = 0; i < v.size(); i++) {\n        if (v[i] % 2 == 1) {\n            good = true;\n            break;\n        }\n    }\n    if (!good) {\n        cout << \"NO\" << endl;\n        return 0;\n    }\n    cout << \"YES\" << endl;\n    for (int i = 0; i < v.size(); i++) {\n        if (v[i] % 2 == 1) {\n            cout << i << ' ';\n        }\n    }\n}\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "import java.io.*;\nimport java.util.*;\nimport java.math.BigInteger;\nimport java.util.Map.Entry;\n\nimport static java.lang.Math.*;\n\npublic class Main extends PrintWriter {\n\n\tvoid run() {\n\n\t\tint n = nextInt();\n\n\t\tMap<Integer, Integer> cnt = new HashMap<>();\n\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tint k = nextInt();\n\t\t\tint v = cnt.getOrDefault(k, 0);\n\t\t\tcnt.put(k, v + 1);\n\t\t}\n\n\t\tList<Integer> ans = new ArrayList<>();\n\n\t\tfor (Entry<Integer, Integer> e : cnt.entrySet()) {\n\t\t\tif (e.getValue() == 1) {\n\t\t\t\tans.add(e.getKey());\n\t\t\t}\n\t\t}\n\n\t\tif (ans.isEmpty()) {\n\t\t\tprintln(\"NO\");\n\t\t} else {\n\t\t\tprintln(\"YES\");\n\t\t\tboolean s = false;\n\t\t\tfor (int k : ans) {\n\t\t\t\tif (s) {\n\t\t\t\t\tprint(' ');\n\n\t\t\t\t}\n\t\t\t\tprint(k);\n\t\t\t\ts = true;\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tpublic static boolean nextPermutation(int[] permutation) {\n\t\tint n = permutation.length, a = n - 2;\n\t\twhile (0 <= a && permutation[a] >= permutation[a + 1]) {\n\t\t\ta--;\n\t\t}\n\t\tif (a == -1) {\n\t\t\treturn false;\n\t\t}\n\n\t\tint b = n - 1;\n\t\twhile (permutation[b] <= permutation[a]) {\n\t\t\tb--;\n\t\t}\n\n\t\tswap(permutation, a, b);\n\t\tfor (int i = a + 1, j = n - 1; i < j; i++, j--) {\n\t\t\tswap(permutation, i, j);\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic static void swap(int[] array, int i, int j) {\n\t\tif (i == j) {\n\t\t\treturn;\n\t\t}\n\t\tarray[i] ^= array[j];\n\t\tarray[j] ^= array[i];\n\t\tarray[i] ^= array[j];\n\t}\n\n\tint[][] nextMatrix(int n, int m) {\n\t\tint[][] matrix = new int[n][m];\n\t\tfor (int i = 0; i < n; i++)\n\t\t\tfor (int j = 0; j < m; j++)\n\t\t\t\tmatrix[i][j] = nextInt();\n\t\treturn matrix;\n\t}\n\n\tString next() {\n\t\twhile (!tokenizer.hasMoreTokens())\n\t\t\ttokenizer = new StringTokenizer(nextLine());\n\t\treturn tokenizer.nextToken();\n\t}\n\n\tboolean hasNext() {\n\t\twhile (!tokenizer.hasMoreTokens()) {\n\t\t\tString line = nextLine();\n\t\t\tif (line == null) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\ttokenizer = new StringTokenizer(line);\n\t\t}\n\t\treturn true;\n\t}\n\n\tint[] nextArray(int n) {\n\t\tint[] array = new int[n];\n\t\tfor (int i = 0; i < n; i++) {\n\t\t\tarray[i] = nextInt();\n\t\t}\n\t\treturn array;\n\t}\n\n\tint nextInt() {\n\t\treturn Integer.parseInt(next());\n\t}\n\n\tlong nextLong() {\n\t\treturn Long.parseLong(next());\n\t}\n\n\tdouble nextDouble() {\n\t\treturn Double.parseDouble(next());\n\t}\n\n\tString nextLine() {\n\t\ttry {\n\t\t\treturn reader.readLine();\n\t\t} catch (IOException err) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tpublic Main(OutputStream outputStream) {\n\t\tsuper(outputStream);\n\t}\n\n\tstatic BufferedReader reader;\n\tstatic StringTokenizer tokenizer = new StringTokenizer(\"\");\n\tstatic Random rnd = new Random();\n\n\tpublic static void main(String[] args) throws IOException {\n\t\treader = new BufferedReader(new InputStreamReader(System.in));\n\t\tMain solution = new Main(System.out);\n\t\tsolution.run();\n\t\tsolution.close();\n\t\treader.close();\n\t}\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\nusing namespace std;\nint main() {\n    int max = 0, n;\n    int socks[1000000000];\n    bool b = false;\n\n    cin >> n;\n\n    for (int i = 0, j; i < n; i++) {\n        cin >> j;\n        if (max <= j) max = j + 1;\n        socks[j] == 0 ? socks[j]++ : socks[j]--;\n    }\n\n    for (int i = 0; i < max; i++)\n        if (socks[i] == 1)\n            b = true;\n    \n    b ? cout << \"YES\\n\" : cout << \"NO\";\n\n    for (int i = 0; i < max; i++)\n        if (socks[i] == 1)\n            cout << i << ' ';\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\nusing namespace std;\nint main() {\n    int max = 0, n, socks[100000];\n    bool b = false;\n\n    cin >> n;\n\n    for (int i = 0, j; i < n; i++) {\n        cin >> j;\n        if (max <= j) max = j + 1;\n        socks[j] == 0 ? socks[j]++ : socks[j]--;\n    }\n\n    for (int i = 0; i < max; i++)\n        if (socks[i] == 1) \n            b = true;\n    \n    b ? cout << \"YES\\n\" : cout << \"NO\";\n\n    for (int i = 0; i < max; i++)\n        if (socks[i] == 1)\n            cout << i << ' ';\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\nusing namespace std;\nint main() {\n    int max = 0, n, socks[100000];\n    bool b = false;\n\n    cin >> n;\n\n    for (int i = 0, j; i < n; i++) {\n        cin >> j;\n        if (max <= j) max = j + 1;\n        socks[j] == 0 ? socks[j]++ : socks[j]--;\n    }\n\n    for (int i = 0; i < max; i++)\n        if(socks[i] == 1) {\n            b = true;\n            break;\n        }\n\n    b ? cout << \"YES\\n\" : cout << \"NO\";\n\n    for (int i = 0; i < max; i++)\n        if(socks[i] == 1)\n            cout << i << ' ';\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\n\nint main() {\n    int max = 0, n, *socks = new int[100000];\n    bool b = false;\n\n    std::cin >> n;\n\n    for (int i = 0, j; i < n; i++) {\n        std::cin >> j;\n        if (max < j) max = j + 1;\n        socks[j] == 0 ? socks[j]++ : socks[j]--;\n    }\n\n    for (int i = 0; i < max; i++)\n        if(socks[i] == 1) {\n            b = true;\n            break;\n        }\n\n    b ? std::cout << \"YES\\n\" : std::cout << \"NO\";\n\n    for (int i = 0; i < max; i++)\n        if(socks[i] == 1)\n            std::cout << i << ' ';\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\n\nint main() {\n    int max = 0, n, *socks = new int[1000000000];\n    bool b = false;\n\n    std::cin >> n;\n\n    for (int i = 0, j; i < n; i++) {\n        std::cin >> j;\n        if (max < j) max = j + 1;\n        socks[j] == 0 ? socks[j]++ : socks[j]--;\n    }\n\n    for (int i = 0; i < max; i++)\n        if(socks[i] == 1) {\n            b = true;\n            break;\n        }\n\n    b ? std::cout << \"YES\\n\" : std::cout << \"NO\";\n\n    for (int i = 0; i < max; i++)\n        if(socks[i] == 1)\n            std::cout << i << ' ';\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\n\nint main() {\n    int max = 0, n, *socks = new int[10000];\n    bool b = true;\n\n    std::cin >> n;\n\n    for (int i = 0, j; i < n; i++) {\n        std::cin >> j;\n\n        if (max < j) max = j;\n\n        socks[j] == 0 ? socks[j]++ : socks[j]--;\n    }\n\n    for (int i = 0; i < max + 1; i++) {\n        if (socks[i] == 1 && b) {\n            b = false;\n            std::cout << \"YES\\n\";\n            std::cout << i << ' ';\n        } else if (socks[i] == 1) std::cout << i << ' ';\n    }\n    if (b) std::cout << \"NO\";\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\n\nint main() {\n    int n, *socks = new int[10000];\n    int max = 0;\n    bool b = true;\n    std::cin >> n;\n    for (int i = 0, j; i < n; i++) {\n        std::cin >> j;\n        if (socks[j] == 0) {\n            if(max < j) max = j;\n            socks[j]++;\n        }\n        else socks[j]--;\n\n    }\n\n    for (int i = 0; i < max + 1; i++)\n        if (socks[i] == 1 && b) {\n            std::cout << \"YES\\n\";\n            b = false;\n            std::cout << i << ' ';\n        }\n        else if (socks[i] == 1) std::cout << i << ' ';\n        if(b) std::cout << \"NO\";\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\n\nint main() {\n    int n, *socks = new int[1000000000];\n    int max = 0;\n    bool b = true;\n    std::cin >> n;\n    for (int i = 0, j; i < n; i++) {\n        std::cin >> j;\n        if (socks[j] == 0) {\n            if(max < j) max = j;\n            socks[j]++;\n        }\n        else socks[j]--;\n\n    }\n\n    for (int i = 0; i < max + 1; i++)\n        if (socks[i] == 1 && b) {\n            std::cout << \"YES\\n\";\n            b = false;\n            std::cout << i << ' ';\n        }\n        else if (socks[i] == 1) std::cout << i << ' ';\n        if(b) std::cout << \"NO\";\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "#include <iostream>\n\nint main() {\n    int n, *socks = new int[1000000000];\n    int max = 0;\n    bool b = true;\n    std::cin >> n;\n    for (int i = 0, j; i < n; i++) {\n        std::cin >> j;\n        if (socks[j] == 0) {\n            if(max < j) max = j;\n            socks[j]++;\n        }\n        else socks[j]--;\n\n    }\n\n    for (int i = 0; i < max + 1; i++)\n        if (socks[i] == 1 && b) {\n            std::cout << \"YES\\n\";\n            b = false;\n            std::cout << i << ' ';\n        }\n        else if (socks[i] == 1) std::cout << i << ' ';\n        if(b) std::cout << \"NO\";\n}",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\nlst = map(int, input().split())\ns = set()\nfor x in lst:\n    if x in s:\n        s.remove(x)\n    else:\n        s.add(x)\n\nif s:\n    print(\"YES\")\n    print(*s)\nelse:\n    print(\"NO\")\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#define _CRT_SECURE_NO_WARNINGS\n#include <iostream>\n#include <queue>\n#include <algorithm>\n#include <map>\n#include <vector>\n#include <set>\n#include <unordered_set>\n#include <cstring>\n#include <unordered_map>\n#include \"math.h\"\n#include <stdio.h>\n#include <bitset>\n#include <string>\n#include <complex>\n#include <iomanip>\n#include <stack>\n#include <deque>\n#include <string>\ntypedef long long ll;\n\nusing namespace std;\nconst ll MOD = 998244353;\nconst ll MAXN = 1e6  +32;\nconst double pi = acos(-1);\n\n\nvoid solve() {\n    int n;\n    cin >> n;\n    map<int, int> mp;\n    for (int i = 0; i < n; ++ i) {\n        int curr;\n        cin >> curr;\n        mp[curr]++;\n    }\n\n    bool ok = true;\n    for (auto e : mp) if (e.second & 1) ok = false;\n    if (ok) {\n        cout << \"NO\\n\";\n        return;\n    }\n    cout << \"YES\\n\";\n\n    for (auto e : mp) if (e.second & 1) cout << e.first << \" \";\n}\n\nint main()\n{\n    std::ios_base::sync_with_stdio(0);\n    std::cin.tie(0);\n    std::cout.tie(0);\n    cout.precision(10);\n    //precalc();\n    //freopen(\"../in.txt\", \"r\", stdin);\n    //freopen(\"../out.txt\", \"w\", stdout);\n    solve();\n    return 0;\n}\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "from collections import Counter\r\n\r\ninput()\r\na = list(map(int, input().split()))\r\nb = Counter(a)\r\nlost = []\r\nfor i, sock in b.items():\r\n    if sock % 2:\r\n        lost.append(i)\r\n    if lost:\r\n        print('YES')\r\n        print(*sorted(lost))\r\n    else:\r\n        print('NO')\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from collections import Counter\r\ninput()\r\ncolors = input().split(' ')\r\ncounter = Counter(colors)\r\nlost = []\r\nfor key in counter.keys():\r\n    if counter[key] % 2:\r\n        lost.append(key)\r\nif lost:\r\n    print(\"YES\")\r\n    print(*sorted(lost))\r\nelse:\r\n    print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from collections import Counter\r\ninput()\r\ncolors = input().split(' ')\r\ncounter = Counter(colors)\r\nlost = []\r\nfor key in counter.keys():\r\n    if counter[key] % 2 != 0:\r\n        lost.append(key)\r\nif lost:\r\n    print(\"YES\")\r\n    print(*sorted(lost))\r\nelse:\r\n    print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from collections import Counter\r\ninput()\r\ncolors = input().split(' ')\r\ncounter = Counter(colors)\r\nlost = []\r\nfor key in counter.keys():\r\n    if counter[key] % 2 != 0:\r\n        lost.append(key)\r\nif len(lost) >= 0:\r\n    print(\"YES\")\r\n    print(*sorted(lost))\r\nelse:\r\n    print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from collections import Counter\r\ninput()\r\ncolors = input().split(' ')\r\ncounter = Counter(colors)\r\nlost = []\r\nfor key in counter.keys():\r\n    if counter[key] % 2 != 0:\r\n        lost.append(key)\r\nif len(lost) > 0:\r\n    print(\"YES\")\r\n    print(*sorted(lost))\r\nelse:\r\n    print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from collections import Counter\r\n\r\ninput()\r\n\r\ncolors = input().split(' ')\r\ncounter = Counter(colors)\r\n\r\nlost = []\r\n\r\nfor key in counter.keys():\r\n    if counter[key] % 2 != 0:\r\n        lost.append(key)\r\n\r\nif len(lost) > 0:\r\n    print(\"YES\")\r\n    print(*sorted(lost))\r\nelse:\r\n    print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from collections import Counter\r\n\r\ninput()\r\n\r\ncolors = input().split(' ')\r\ncounter = Counter(colors)\r\n\r\nlost = []\r\n\r\nfor key in counter.keys():\r\n    if counter[key] % 2 != 0:\r\n        lost.append(key)\r\n\r\nif len(lost) > 0:\r\n    print(\"YES\")\r\n    print(sorted(lost))\r\nelse:\r\n    print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = input()\nl = input().split()\ns1 = {}\nans = []\nfor el in l:\n    if el in s1:\n        s1[el] += 1\n    else:\n        s1[el] = 1\nfor el in s1.keys():\n    if s1[el] % 2:\n        ans.append(el)\nif len(ans):\n    print('YES')\n    print(' '.join(list(map(str, sorted(ans)))))\nelse:\n    print('NO')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = input()\nl = input().split()\ns1 = {}\nans = []\nfor el in l:\n    if el in s1:\n        s1[el] += 1\n    else:\n        s1[el] = 1\nfor el in s1.keys():\n    if s1[el] % 2:\n        ans.append(el)\nif len(ans):\n    print('YES')\n    print(' '.join(list(map(int, sorted(ans)))))\nelse:\n    print('NO')",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = input()\nl = list(map(int, input().split()))\ns1 = {}\nans = []\nfor el in l:\n    if el in s1:\n        s1[el] += 1\n    else:\n        s1[el] = 1\nfor el in s1.keys():\n    if s1[el] % 2:\n        ans.append(str(el))\nif len(ans):\n    print('YES')\n    print(' '.join(sorted(ans)))\nelse:\n    print('NO')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = input()\nl = list(map(int, input().split()))\ns1 = list(set(l))\nans = []\nfor el in s1:\n    if l.count(el) % 2:\n        ans.append(str(el))\n\nif len(ans):\n    print('YES')\n    print(' '.join(sorted(ans)))\nelse:\n    print('NO')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\nl = list(map(int, input().split()))\nl2 = []\nfor s in l:\n    if l.count(s) % 2 and str(s) not in l2:\n        l2.append(str(s))   \nif len(l2):\n    print('YES')\n    print(' '.join(sorted(l2)))\nelse:\n    print('NO')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "#pragma GCC optimize(\"unroll-loops\")\r\n#pragma GCC optimize(\"Ofast\")\r\n\r\n#include<bits/stdc++.h>\r\n#include<ext/pb_ds/tree_policy.hpp>\r\n#include<ext/pb_ds/assoc_container.hpp>\r\n\r\n#define ull unsigned long long\r\n#define ll long long\r\n#define ld double\r\n#define pb push_back\r\n#define fi first\r\n#define se second\r\n#define endl '\\n'\r\n#define pw(x) (1LL << x)\r\n#define pii pair <int, int>\r\n#define fob find_by_order\r\n#define ork order_of_key\r\n#define TIME 1.0*clock()/CLOCKS_PER_SEC\r\n#define int int64_t\r\n\r\nusing namespace std;\r\nusing namespace __gnu_pbds;\r\n\r\ntypedef tree <int, null_type, less <int>, rb_tree_tag,\r\n        tree_order_statistics_node_update> oset;\r\nmt19937 gen(time(0));\r\nconst int mod = 1e9 + 7;\r\nconst int MOD = 998244353;\r\nconst int p = 13371;\r\nconst int dx[4] = {0, 1, 0, -1};\r\nconst int dy[4] = {1, 0, -1, 0};\r\nconst int INF = 1e18;\r\n\r\nint32_t main() {\r\n    ios_base::sync_with_stdio(0);\r\n    cin.tie(0);\r\n    cout.tie(0);\r\n#ifdef LOCAL\r\n    freopen(\"input.txt\", \"r\", stdin);\r\n    freopen(\"output.txt\", \"w\", stdout);\r\n#endif // LOCAL\r\n    int n;\r\n    cin >> n;\r\n    map <int, int> mp;\r\n    for(int i = 0; i < n; ++i) {\r\n        int x;\r\n        cin >> x;\r\n        mp[x]++;\r\n    }\r\n    vector <int> ans;\r\n    for(auto to : mp) {\r\n        if(to.se & 1) {\r\n            ans.pb(to.fi);\r\n        }\r\n    }\r\n    if(ans.empty()) {\r\n        cout << \"NO\";\r\n    } else {\r\n        cout << \"YES\" << endl;\r\n        for(auto to : ans) cout << to << \" \";\r\n    }\r\n    return 0;\r\n}\r\n\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\nlst = input().split()\ndct = {}\n\nfor i in lst:\n    if i in dct:\n        dct[i] += 1\n    else:\n        dct[i] = 1\n\nres = [k for k in dct.keys() if dct[k] % 2 > 0]\nprint('YES\\n' + ' '.join(sorted(map(int, res))) if res else 'NO', sep='')\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\nlst = input().split()\ndct = {}\n\nfor i in lst:\n    if i in dct:\n        dct[i] += 1\n    else:\n        dct[i] = 1\n\nres = [k for k in dct.keys() if dct[k] % 2 > 0]\nprint('YES\\n' + ' '.join(sorted(res)) if res else 'NO', sep='')\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "//Author: Yuvraj Sakshith\n#include <bits/stdc++.h>\n#define pb              push_back\n#define int             long long\n#define ff              first\n#define ss              second\n#define all(a)          a.begin(),a.end()\n#define ed              '\\n'\n#define print(x)        cout << #x << \" = \" << x << \"\\n\";\n#define ins             insert\n\nusing namespace std;\nusing vi = vector<int>;\nusing vvi = vector<vector<int>>;\n\n[[maybe_unused]] const int MOD = 1e9+7;\n[[maybe_unused]] const int inf = 1e18;\n[[maybe_unused]] const int nax = 1e5;\n\n\ntemplate <typename T1, typename T2>\nostream &operator << (ostream &out, pair<T1,T2> p){\n\tcout << '{' << p.ff << ',' << p.ss << '}';\n\treturn out;\n}\ntemplate <typename T>\nostream &operator << (ostream &out, vector<T> v){\n    for(T i:v) cout << i << ' ';\n    return out;\n}\ntemplate <typename T>\nostream &operator << (ostream &out, multiset<T> m){\n\tfor(T i:m) cout << i << ' ' ;\n\treturn out;\n}\ntemplate <typename T>\nostream &operator << (ostream &out, set<T> s){\n\tfor(T i:s) cout << i << ' ';\n\treturn out;\n}\ntemplate <typename T>\nostream &operator << (ostream &out, vector<vector<T>> v){\n\tfor(vi i:v){\n\t\tcout << i << ed;\n\t}\n\treturn out;\n}\n\n\n\t}\n  \t \n}\n\nsigned main(){\n      ios_base::sync_with_stdio(0);cin.tie(0);\n      int t = 1;\n      #ifdef mtc\n      cin >> t;\n      #endif\n      for(int i=1;i<=t;i++){\n      \t#ifdef case\n        cout << \"Case #\" << i << \": \";\n\t#endif\n        solve(i);\n      }\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "n = int(input())\r\na = list(map(int, input().split()))\r\nsocks = []\r\nans = []\r\nfor i in range(n):\r\n    if (a[i] in socks) or (a.count(a[i]) % 2 == 0) or (a[i] in ans):\r\n        socks.append(a[i])\r\n    else:\r\n        ans.append(a[i])\r\nif len(ans) > 0:\r\n    print(\"YES\")\r\n    print(*sorted(ans))\r\nelse:\r\n    print(\"NO\")",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n = int(input())\r\ns = set()\r\nfor i in map(int, input().split()):\r\n    if i in s:\r\n        s.remove(i)\r\n    else:\r\n        s.add(i)\r\nif len(s):\r\n    print('YES')\r\n    print(*s)\r\nelse:\r\n    print('NO')\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nlist1 = list(map(int, input().split()))\r\nset1 = set()\r\nfor i in list1:\r\n    if i in set1:\r\n        set1.remove(i)\r\n    else:\r\n        set1.add(i)\r\n\r\nlist1 = list(set1)\r\nlist1.sort()\r\nif len(set1) > 0:\r\n    print(\"YES\")\r\n    print(*set1)\r\nelse:\r\n    print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nlist1 = list(map(int, input().split()))\r\nset1 = set()\r\nfor i in list1:\r\n    if i in set1:\r\n        set1.remove(i)\r\n    else:\r\n        set1.add(i)\r\n\r\nif len(set1) > 0:\r\n    print(\"YES\")\r\n    print(*set1)\r\nelse:\r\n    print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n = int(input())\r\nlist1 = list(map(int, input().split()))\r\nset1 = set()\r\nfor i in list1:\r\n    if i in set1:\r\n        set1.remove(i)\r\n    else:\r\n        set1.add(i)\r\n\r\nif len(set1) > 0:\r\n    print(\"YES\")\r\n    print(*set1)\r\nelse:\r\n    print(\"NO\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "//#include <iostream>\n//\n//// \u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 Vehicle\n//class Vehicle {\n//public:\n//    virtual void move() {\n//        std::cout << \"\u0414\u0432\u0438\u0436\u0435\u043d\u0438\u0435 \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u043d\u043e\u0433\u043e \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\" << std::endl;\n//    }\n//};\n//\n//// \u041f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u043d\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 Car\n//class Car : public Vehicle {\n//public:\n//    void move() override {\n//        std::cout << \"\u041c\u0430\u0448\u0438\u043d\u0430 \u0434\u0432\u0438\u0436\u0435\u0442\u0441\u044f \u043f\u043e \u0434\u043e\u0440\u043e\u0433\u0435\" << std::endl;\n//    }\n//};\n//\n//// \u041f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u043d\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 Bicycle\n//class Bicycle : public Vehicle {\n//public:\n//    void move() override {\n//        std::cout << \"\u0412\u0435\u043b\u043e\u0441\u0438\u043f\u0435\u0434 \u043a\u0430\u0442\u0438\u0442\u0441\u044f \u043f\u043e \u0434\u043e\u0440\u043e\u0433\u0435\" << std::endl;\n//    }\n//};\n//\n//int main() {\n//    Vehicle* vehicle1 = new Car();\n//    Vehicle* vehicle2 = new Bicycle();\n//\n//    vehicle1->move();\n//    vehicle2->move();\n//\n//    delete vehicle1;\n//    delete vehicle2;\n//\n//    return 0;\n//}\n\n// C++ program for Merge Sort\n#include <iostream>\nusing namespace std;\n\n// Merges two subarrays of array[].\n// First subarray is arr[begin..mid]\n// Second subarray is arr[mid+1..end]\nvoid merge(int array[], int const left, int const mid,\n           int const right)\n{\n    int const subArrayOne = mid - left + 1;\n    int const subArrayTwo = right - mid;\n\n    // Create temp arrays\n    auto *leftArray = new int[subArrayOne],\n            *rightArray = new int[subArrayTwo];\n\n    // Copy data to temp arrays leftArray[] and rightArray[]\n    for (auto i = 0; i < subArrayOne; i++)\n        leftArray[i] = array[left + i];\n    for (auto j = 0; j < subArrayTwo; j++)\n        rightArray[j] = array[mid + 1 + j];\n\n    auto indexOfSubArrayOne = 0, indexOfSubArrayTwo = 0;\n    int indexOfMergedArray = left;\n\n    // Merge the temp arrays back into array[left..right]\n    while (indexOfSubArrayOne < subArrayOne\n           && indexOfSubArrayTwo < subArrayTwo) {\n        if (leftArray[indexOfSubArrayOne]\n            <= rightArray[indexOfSubArrayTwo]) {\n            array[indexOfMergedArray]\n                    = leftArray[indexOfSubArrayOne];\n            indexOfSubArrayOne++;\n        }\n        else {\n            array[indexOfMergedArray]\n                    = rightArray[indexOfSubArrayTwo];\n            indexOfSubArrayTwo++;\n        }\n        indexOfMergedArray++;\n    }\n\n    // Copy the remaining elements of\n    // left[], if there are any\n    while (indexOfSubArrayOne < subArrayOne) {\n        array[indexOfMergedArray]\n                = leftArray[indexOfSubArrayOne];\n        indexOfSubArrayOne++;\n        indexOfMergedArray++;\n    }\n\n    // Copy the remaining elements of\n    // right[], if there are any\n    while (indexOfSubArrayTwo < subArrayTwo) {\n        array[indexOfMergedArray]\n                = rightArray[indexOfSubArrayTwo];\n        indexOfSubArrayTwo++;\n        indexOfMergedArray++;\n    }\n    delete[] leftArray;\n    delete[] rightArray;\n}\n\n// begin is for left index and end is right index\n// of the sub-array of arr to be sorted\nvoid mergeSort(int array[], int const begin, int const end)\n{\n    if (begin >= end)\n        return;\n\n    int mid = begin + (end - begin) / 2;\n    mergeSort(array, begin, mid);\n    mergeSort(array, mid + 1, end);\n    merge(array, begin, mid, end);\n}\n\nvoid printArray(int A[], int size)\n{\n    for (int i = 0; i < size; i++)\n        cout << A[i] << \" \";\n    cout << endl;\n}\n\n// Driver code\nint main(){\n    int n;\n    cin >> n;\n    int arr[n];\n    for (int i = 0;i<n;i++){\n        cin >> arr[i];\n    }\n    mergeSort(arr, 0, n - 1);\n\n    cout << \"\\nSorted array is \\n\";\n    printArray(arr,n);\n    return 0;\n}\n\n",
                "verdict": "Runtime Error"
            }
        ]
    },
    {
        "task_id": 2073,
        "description": "\u0412\u0430\u043c \u0437\u0430\u0434\u0430\u043d \u043c\u0430\u0441\u0441\u0438\u0432 \u0438\u0437 $n$ \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0438\u0439  $b$-\u0431\u0438\u0442\u043d\u044b\u0435 \u043d\u0435\u043e\u0442\u0440\u0438\u0446\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0447\u0438\u0441\u043b\u0430.\n\n\u041d\u0430 \u0432\u0445\u043e\u0434 \u043f\u043e\u0441\u0442\u0443\u043f\u0430\u044e\u0442 $q$ \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0434\u0432\u0443\u0445 \u0432\u0438\u0434\u043e\u0432:\n\n* `set i x` - \u043f\u0440\u0438\u0441\u0432\u043e\u0438\u0442\u044c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0443 \u043f\u043e\u0434 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u043c $i$ \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 $x$.\n* `get l r` - \u043f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c **\u043a \u0431\u0438\u0442\u043e\u0432\u043e\u043c\u0443 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u044e \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430** \u043d\u0430 \u043e\u0442\u0440\u0435\u0437\u043a\u0435 \u043e\u0442 $l$ \u0434\u043e $r$ \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u043b\u044c\u043d\u0443\u044e  [\u043f\u0435\u0440\u0435\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0443](https://ru.wikipedia.org/wiki/%D0%9F%D0%B5%D1%80%D0%B5%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%BA%D0%B0) \u0434\u043b\u0438\u043d\u043e\u0439 $b$, \u0438 \u043f\u043e\u0441\u0447\u0438\u0442\u0430\u0442\u044c \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b\u0439 XOR (\u043f\u043e\u0431\u0438\u0442\u043e\u0432\u043e\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0430\u0449\u0435\u0435 \u0418\u041b\u0418) \u044d\u0442\u043e\u0433\u043e \u043e\u0442\u0440\u0435\u0437\u043a\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u0441\u043b\u0435 \u044d\u0442\u043e\u0433\u043e \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c\u0441\u044f.\n\n\u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435:\n* \u043f\u043e\u0441\u043b\u0435 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430 \u0442\u0438\u043f\u0430 `get` \u043c\u0430\u0441\u0441\u0438\u0432 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u0432 \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\n* \u0432\u044b \u0432\u044b\u0431\u0438\u0440\u0430\u0435\u0442\u0435 \u043e\u0434\u043d\u0443 \u0438 \u0442\u0443 \u0436\u0435 \u043f\u0435\u0440\u0435\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0443 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u0447\u0438\u0441\u0435\u043b \u0432 \u0437\u0430\u043f\u0440\u043e\u0441\u0435, \u0430 \u043d\u0435 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u0443\u044e \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0447\u0438\u0441\u043b\u0430 $n$, $q$ \u0438 $b$ - \u0434\u043b\u0438\u043d\u0430 \u043c\u0430\u0441\u0441\u0438\u0432\u0430, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0438 \u0431\u0438\u0442\u043d\u043e\u0441\u0442\u044c \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e ($1 \\le n, q \\le 2 \\cdot 10^5$, $1 \\le b \\le 32$). \n\n\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043c\u0430\u0441\u0441\u0438\u0432\u0430. \u041a\u0430\u0436\u0434\u043e\u0435 \u0447\u0438\u0441\u043b\u043e \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u0434\u0438\u0430\u043f\u0430\u0437\u043e\u043d\u0435 \u043e\u0442 $0$ \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0434\u043e $2^b$ \u043d\u0435\u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e.\n\n\u0412 \u043a\u0430\u0436\u0434\u043e\u0439 \u0438\u0437 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 \u0441\u0442\u0440\u043e\u043a \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 \u0438\u0437 \u0443\u0441\u043b\u043e\u0432\u0438\u044f ($1 \\le l \\le r \\le n$, $1 \\le i \\le n$, $1 \\le x < 2^b$).\u0412 \u043e\u0442\u0432\u0435\u0442 \u043d\u0430 \u043a\u0430\u0436\u0434\u044b\u0439 \u0437\u0430\u043f\u0440\u043e\u0441 \u0442\u0438\u043f\u0430 `get` \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043e\u0442\u0432\u0435\u0442 \u043d\u0430 \u043d\u0435\u0433\u043e \u0441 \u043d\u043e\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438.",
        "solutions": [
            {
                "code": "print(\"0\\n12 \\n8\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(\"0\\n12\\n8\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(\"0\\n\\12\\n8\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(\"0\\n\\12\\n8\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(\"0\\n\\12\\n8\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "input = open(0).readline\r\n\r\n\r\nclass SegmentTree:\r\n    def __init__(self, a: list, function=min, default=10 ** 9):\r\n        from math import log2, ceil\r\n\r\n        self.source = a\r\n        self.function = function\r\n        self.default = default\r\n\r\n        self.sz = 2 ** ceil(log2(len(a)))\r\n\r\n        self.tree = [default] * self.sz + a + [default] * (self.sz - len(a))\r\n\r\n        for i in range(self.sz - 1, 0, -1):\r\n            self.tree[i] = self.function(self.tree[i * 2], self.tree[i * 2 + 1])\r\n\r\n    def __getitem__(self, item):\r\n        if isinstance(item, slice):\r\n            l, r = item.start + self.sz, item.stop + self.sz - 1\r\n            ans = self.default\r\n\r\n            while l <= r:\r\n                if l % 2:\r\n                    ans = self.function(ans, self.tree[l])\r\n                    l += 1\r\n                if not r % 2:\r\n                    ans = self.function(ans, self.tree[r])\r\n                    r -= 1\r\n\r\n                l //= 2\r\n                r //= 2\r\n\r\n            return ans\r\n\r\n        else:\r\n            return self.source[item]\r\n\r\n    def __setitem__(self, key, value):\r\n        if isinstance(key, int):\r\n            self.source[key] = value\r\n\r\n            key += self.sz\r\n            self.tree[key] = value\r\n            key //= 2\r\n            while key != 0:\r\n                self.tree[key] = self.function(self.tree[key * 2], self.tree[key * 2 + 1])\r\n                key //= 2\r\n\r\n        else:\r\n            raise ValueError(\"Now SegmentTree only support integer assignment\")\r\n\r\n\r\nn, q, bits = map(int, input().split())\r\na = list(map(int, input().split()))\r\n\r\nt = SegmentTree(a, lambda x, y: x ^ y, 0)\r\n\r\nfor _ in range(q):\r\n    command, *args = input().split()\r\n\r\n    match command:\r\n        case \"set\":\r\n\r\n            k, v = int(args[0]) - 1, int(args[1])\r\n            assert (1 <= (k + 1) <= n)\r\n            assert ((v) < (2 ** bits - 1))\r\n            t[k] = v\r\n\r\n        case \"get\":\r\n\r\n            l, r = int(args[0]) - 1, int(args[1])\r\n\r\n            assert (l <= r)\r\n            assert (1 <= (l + 1))\r\n            assert (r <= n)\r\n\r\n            c1 = t[l:r].bit_count()\r\n            print(int(\"1\" * c1 + \"0\" * (bits - c1), 2))\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "input = open(0).readline\r\n\r\n\r\nclass SegmentTree:\r\n    def __init__(self, a: list, function=min, default=10 ** 9):\r\n        from math import log2, ceil\r\n\r\n        self.source = a\r\n        self.function = function\r\n        self.default = default\r\n\r\n        self.sz = 2 ** ceil(log2(len(a)))\r\n\r\n        self.tree = [default] * self.sz + a + [default] * (self.sz - len(a))\r\n\r\n        for i in range(self.sz - 1, 0, -1):\r\n            self.tree[i] = self.function(self.tree[i * 2], self.tree[i * 2 + 1])\r\n\r\n    def __getitem__(self, item):\r\n        if isinstance(item, slice):\r\n            l, r = item.start + self.sz, item.stop + self.sz - 1\r\n            ans = self.default\r\n\r\n            while l <= r:\r\n                if l % 2:\r\n                    ans = self.function(ans, self.tree[l])\r\n                    l += 1\r\n                if not r % 2:\r\n                    ans = self.function(ans, self.tree[r])\r\n                    r -= 1\r\n\r\n                l //= 2\r\n                r //= 2\r\n\r\n            return ans\r\n\r\n        else:\r\n            return self.source[item]\r\n\r\n    def __setitem__(self, key, value):\r\n        if isinstance(key, int):\r\n            self.source[key] = value\r\n\r\n            key += self.sz\r\n            self.tree[key] = value\r\n            key //= 2\r\n            while key != 0:\r\n                self.tree[key] = self.function(self.tree[key * 2], self.tree[key * 2 + 1])\r\n                key //= 2\r\n\r\n        else:\r\n            raise ValueError(\"Now SegmentTree only support integer assignment\")\r\n\r\n\r\nn, q, bits = map(int, input().split())\r\na = list(map(int, input().split()))\r\n\r\nt = SegmentTree(a, lambda x, y: x ^ y, 0)\r\n\r\nfor _ in range(q):\r\n    command, *args = input().split()\r\n\r\n    match command:\r\n        case \"set\":\r\n\r\n            k, v = int(args[0]) - 1, int(args[1])\r\n            print(1, k, n)\r\n            assert (1 <= (k + 1) <= n)\r\n            assert (v <= 2 ** 32)\r\n            t[k] = v\r\n\r\n        case \"get\":\r\n\r\n            l, r = int(args[0]) - 1, int(args[1])\r\n\r\n            assert (l <= r)\r\n            assert (1 <= (l + 1))\r\n            assert (r <= n)\r\n\r\n            c1 = t[l:r].bit_count()\r\n            print(int(\"1\" * c1 + \"0\" * (bits - c1), 2))\r\n\r\n\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "input = open(0).readline\r\n\r\nclass SegmentTree:\r\n    def __init__(self, a: list, function=min, default=10 ** 9):\r\n        from math import log2, ceil\r\n\r\n        self.source = a\r\n        self.function = function\r\n        self.default = default\r\n\r\n        self.sz = 2 ** ceil(log2(len(a)))\r\n\r\n        self.tree = [default] * self.sz + a + [default] * (self.sz - len(a))\r\n\r\n        for i in range(self.sz - 1, 0, -1):\r\n            self.tree[i] = self.function(self.tree[i * 2], self.tree[i * 2 + 1])\r\n\r\n    def __getitem__(self, item):\r\n        if isinstance(item, slice):\r\n            l, r = item.start + self.sz, item.stop + self.sz - 1\r\n            ans = self.default\r\n\r\n            while l <= r:\r\n                if l % 2:\r\n                    ans = self.function(ans, self.tree[l])\r\n                    l += 1\r\n                if not r % 2:\r\n                    ans = self.function(ans, self.tree[r])\r\n                    r -= 1\r\n\r\n                l //= 2\r\n                r //= 2\r\n\r\n            return ans\r\n\r\n        else:\r\n            return self.source[item]\r\n\r\n    def __setitem__(self, key, value):\r\n        if isinstance(key, int):\r\n            self.source[key] = value\r\n\r\n            key += self.sz\r\n            self.tree[key] = value\r\n            key //= 2\r\n            while key != 0:\r\n                self.tree[key] = self.function(self.tree[key * 2], self.tree[key * 2 + 1])\r\n                key //= 2\r\n\r\n        else:\r\n            raise ValueError(\"Now SegmentTree only support integer assignment\")\r\n\r\n\r\nn, q, bits = map(int, input().split())\r\na = list(map(int, input().split()))\r\n\r\nt = SegmentTree(a, lambda x, y: x ^ y, 0)\r\n\r\n\r\nfor _ in range(q):\r\n    command, *args = input().split()\r\n\r\n    match command:\r\n        case \"set\":\r\n\r\n            k, v = int(args[0]) - 1, int(args[1])\r\n            assert(1 <= k <= n)\r\n            assert(v <= 2**32)\r\n            t[k] = v\r\n\r\n        case \"get\":\r\n\r\n            l, r = int(args[0]) - 1, int(args[1])\r\n            \r\n            assert(l <= r)\r\n            assert(1 <= (l + 1))\r\n            assert(r <= n)\r\n            \r\n            c1 = t[l:r].bit_count()\r\n            print(int(\"1\" * c1 + \"0\" * (bits - c1), 2))\r\n\r\n\r\n\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "input = open(0).readline\r\n\r\nclass SegmentTree:\r\n    def __init__(self, a: list, function=min, default=10 ** 9):\r\n        from math import log2, ceil\r\n\r\n        self.source = a\r\n        self.function = function\r\n        self.default = default\r\n\r\n        self.sz = 2 ** ceil(log2(len(a)))\r\n\r\n        self.tree = [default] * self.sz + a + [default] * (self.sz - len(a))\r\n\r\n        for i in range(self.sz - 1, 0, -1):\r\n            self.tree[i] = self.function(self.tree[i * 2], self.tree[i * 2 + 1])\r\n\r\n    def __getitem__(self, item):\r\n        if isinstance(item, slice):\r\n            l, r = item.start + self.sz, item.stop + self.sz - 1\r\n            ans = self.default\r\n\r\n            while l <= r:\r\n                if l % 2:\r\n                    ans = self.function(ans, self.tree[l])\r\n                    l += 1\r\n                if not r % 2:\r\n                    ans = self.function(ans, self.tree[r])\r\n                    r -= 1\r\n\r\n                l //= 2\r\n                r //= 2\r\n\r\n            return ans\r\n\r\n        else:\r\n            return self.source[item]\r\n\r\n    def __setitem__(self, key, value):\r\n        if isinstance(key, int):\r\n            self.source[key] = value\r\n\r\n            key += self.sz\r\n            self.tree[key] = value\r\n            key //= 2\r\n            while key != 0:\r\n                self.tree[key] = self.function(self.tree[key * 2], self.tree[key * 2 + 1])\r\n                key //= 2\r\n\r\n        else:\r\n            raise ValueError(\"Now SegmentTree only support integer assignment\")\r\n\r\n\r\nn, q, bits = map(int, input().split())\r\na = list(map(int, input().split()))\r\n\r\nt = SegmentTree(a, lambda x, y: x ^ y, 0)\r\n\r\n\r\nfor _ in range(q):\r\n    command, *args = input().split()\r\n\r\n    match command:\r\n        case \"set\":\r\n\r\n            k, v = int(args[0]) - 1, int(args[1])\r\n            assert(1 <= i <= n)\r\n            assert(v <= 2**32)\r\n            t[k] = v\r\n\r\n        case \"get\":\r\n\r\n            l, r = int(args[0]) - 1, int(args[1])\r\n            \r\n            assert(l <= r)\r\n            assert(1 <= (l + 1))\r\n            assert(r <= n)\r\n            \r\n            c1 = t[l:r].bit_count()\r\n            print(int(\"1\" * c1 + \"0\" * (bits - c1), 2))\r\n\r\n\r\n\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "input = open(0).readline\r\n\r\nclass SegmentTree:\r\n    def __init__(self, a: list, function=min, default=10 ** 9):\r\n        from math import log2, ceil\r\n\r\n        self.source = a\r\n        self.function = function\r\n        self.default = default\r\n\r\n        self.sz = 2 ** ceil(log2(len(a)))\r\n\r\n        self.tree = [default] * self.sz + a + [default] * (self.sz - len(a))\r\n\r\n        for i in range(self.sz - 1, 0, -1):\r\n            self.tree[i] = self.function(self.tree[i * 2], self.tree[i * 2 + 1])\r\n\r\n    def __getitem__(self, item):\r\n        if isinstance(item, slice):\r\n            l, r = item.start + self.sz, item.stop + self.sz - 1\r\n            ans = self.default\r\n\r\n            while l <= r:\r\n                if l % 2:\r\n                    ans = self.function(ans, self.tree[l])\r\n                    l += 1\r\n                if not r % 2:\r\n                    ans = self.function(ans, self.tree[r])\r\n                    r -= 1\r\n\r\n                l //= 2\r\n                r //= 2\r\n\r\n            return ans\r\n\r\n        else:\r\n            return self.source[item]\r\n\r\n    def __setitem__(self, key, value):\r\n        if isinstance(key, int):\r\n            self.source[key] = value\r\n\r\n            key += self.sz\r\n            self.tree[key] = value\r\n            key //= 2\r\n            while key != 0:\r\n                self.tree[key] = self.function(self.tree[key * 2], self.tree[key * 2 + 1])\r\n                key //= 2\r\n\r\n        else:\r\n            raise ValueError(\"Now SegmentTree only support integer assignment\")\r\n\r\n\r\nn, q, bits = map(int, input().split())\r\na = list(map(int, input().split()))\r\n\r\nt = SegmentTree(a, lambda x, y: x ^ y, 0)\r\n\r\n\r\nfor _ in range(q):\r\n    command, *args = input().split()\r\n\r\n    match command:\r\n        case \"set\":\r\n\r\n            k, v = int(args[0]) - 1, int(args[1])\r\n            assert(1 <= i <= n)\r\n            assert(v <= 2^32)\r\n            t[k] = v\r\n\r\n        case \"get\":\r\n\r\n            l, r = int(args[0]) - 1, int(args[1])\r\n            \r\n            assert(l <= r)\r\n            assert(1 <= (l + 1))\r\n            assert(r <= n)\r\n            \r\n            c1 = t[l:r].bit_count()\r\n            print(int(\"1\" * c1 + \"0\" * (bits - c1), 2))\r\n\r\n\r\n\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "input = open(0).readline\r\n\r\nclass SegmentTree:\r\n    def __init__(self, a: list, function=min, default=10 ** 9):\r\n        from math import log2, ceil\r\n\r\n        self.source = a\r\n        self.function = function\r\n        self.default = default\r\n\r\n        self.sz = 2 ** ceil(log2(len(a)))\r\n\r\n        self.tree = [default] * self.sz + a + [default] * (self.sz - len(a))\r\n\r\n        for i in range(self.sz - 1, 0, -1):\r\n            self.tree[i] = self.function(self.tree[i * 2], self.tree[i * 2 + 1])\r\n\r\n    def __getitem__(self, item):\r\n        if isinstance(item, slice):\r\n            l, r = item.start + self.sz, item.stop + self.sz - 1\r\n            ans = self.default\r\n\r\n            while l <= r:\r\n                if l % 2:\r\n                    ans = self.function(ans, self.tree[l])\r\n                    l += 1\r\n                if not r % 2:\r\n                    ans = self.function(ans, self.tree[r])\r\n                    r -= 1\r\n\r\n                l //= 2\r\n                r //= 2\r\n\r\n            return ans\r\n\r\n        else:\r\n            return self.source[item]\r\n\r\n    def __setitem__(self, key, value):\r\n        if isinstance(key, int):\r\n            self.source[key] = value\r\n\r\n            key += self.sz\r\n            self.tree[key] = value\r\n            key //= 2\r\n            while key != 0:\r\n                self.tree[key] = self.function(self.tree[key * 2], self.tree[key * 2 + 1])\r\n                key //= 2\r\n\r\n        else:\r\n            raise ValueError(\"Now SegmentTree only support integer assignment\")\r\n\r\n\r\nn, q, bits = map(int, input().split())\r\na = list(map(int, input().split()))\r\n\r\nt = SegmentTree(a, lambda x, y: x ^ y, 0)\r\n\r\n\r\nfor _ in range(q):\r\n    command, *args = input().split()\r\n    a = [0] * bits\r\n    match command:\r\n        case \"set\":\r\n\r\n            k, v = int(args[0]) - 1, int(args[1])\r\n            t[k] = v\r\n\r\n        case \"get\":\r\n\r\n            l, r = int(args[0]) - 1, int(args[1])\r\n            c1 = t[l:r].bit_count()\r\n            for i in range(c1):\r\n                a[i] = \"1\"\r\n            for i in range(c1, bits):\r\n                a[i] = \"0\"\r\n                \r\n            print(int(\"\".join(a), 2), sep='')\r\n\r\n\r\n\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "class SegmentTree:\r\n    def __init__(self, a: list, function=min, default=10 ** 9):\r\n        from math import log2, ceil\r\n\r\n        self.source = a\r\n        self.function = function\r\n        self.default = default\r\n\r\n        self.sz = 2 ** ceil(log2(len(a)))\r\n\r\n        self.tree = [default] * self.sz + a + [default] * (self.sz - len(a))\r\n\r\n        for i in range(self.sz - 1, 0, -1):\r\n            self.tree[i] = self.function(self.tree[i * 2], self.tree[i * 2 + 1])\r\n\r\n    def __getitem__(self, item):\r\n        if isinstance(item, slice):\r\n            l, r = item.start + self.sz, item.stop + self.sz - 1\r\n            ans = self.default\r\n\r\n            while l <= r:\r\n                if l % 2:\r\n                    ans = self.function(ans, self.tree[l])\r\n                    l += 1\r\n                if not r % 2:\r\n                    ans = self.function(ans, self.tree[r])\r\n                    r -= 1\r\n\r\n                l //= 2\r\n                r //= 2\r\n\r\n            return ans\r\n\r\n        else:\r\n            return self.source[item]\r\n\r\n    def __setitem__(self, key, value):\r\n        if isinstance(key, int):\r\n            self.source[key] = value\r\n\r\n            key += self.sz\r\n            self.tree[key] = value\r\n            key //= 2\r\n            while key != 0:\r\n                self.tree[key] = self.function(self.tree[key * 2], self.tree[key * 2 + 1])\r\n                key //= 2\r\n\r\n        else:\r\n            raise ValueError(\"Now SegmentTree only support integer assignment\")\r\n\r\n\r\nn, q, bits = map(int, input().split())\r\na = list(map(int, input().split()))\r\n\r\nt = SegmentTree(a, lambda x, y: x ^ y, 0)\r\n\r\n\r\nfor _ in range(q):\r\n    command, *args = input().split()\r\n    a = [0] * bits\r\n    match command:\r\n        case \"set\":\r\n\r\n            k, v = int(args[0]) - 1, int(args[1])\r\n            t[k] = v\r\n\r\n        case \"get\":\r\n\r\n            l, r = int(args[0]) - 1, int(args[1])\r\n            c1 = t[l:r].bit_count()\r\n            for i in range(c1):\r\n                a[i] = \"1\"\r\n            for i in range(c1, bits):\r\n                a[i] = \"0\"\r\n                \r\n            print(int(\"\".join(a), 2), sep='')\r\n\r\n\r\n\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "class SegmentTree:\r\n    def __init__(self, a: list, function=min, default=10 ** 9):\r\n        from math import log2, ceil\r\n\r\n        self.source = a\r\n        self.function = function\r\n        self.default = default\r\n\r\n        self.sz = 2 ** ceil(log2(len(a)))\r\n\r\n        self.tree = [default] * self.sz + a + [default] * (self.sz - len(a))\r\n\r\n        for i in range(self.sz - 1, 0, -1):\r\n            self.tree[i] = self.function(self.tree[i * 2], self.tree[i * 2 + 1])\r\n\r\n    def __getitem__(self, item):\r\n        if isinstance(item, slice):\r\n            l, r = item.start + self.sz, item.stop + self.sz - 1\r\n            ans = self.default\r\n\r\n            while l <= r:\r\n                if l % 2:\r\n                    ans = self.function(ans, self.tree[l])\r\n                    l += 1\r\n                if not r % 2:\r\n                    ans = self.function(ans, self.tree[r])\r\n                    r -= 1\r\n\r\n                l //= 2\r\n                r //= 2\r\n\r\n            return ans\r\n\r\n        else:\r\n            return self.source[item]\r\n\r\n    def __setitem__(self, key, value):\r\n        if isinstance(key, int):\r\n            self.source[key] = value\r\n\r\n            key += self.sz\r\n            self.tree[key] = value\r\n            key //= 2\r\n            while key != 0:\r\n                self.tree[key] = self.function(self.tree[key * 2], self.tree[key * 2 + 1])\r\n                key //= 2\r\n\r\n        else:\r\n            raise ValueError(\"Now SegmentTree only support integer assignment\")\r\n\r\n\r\nn, q, bits = map(int, input().split())\r\na = list(map(int, input().split()))\r\n\r\nt = SegmentTree(a, lambda x, y: x ^ y, 0)\r\n\r\n\r\nfor _ in range(q):\r\n    command, *args = input().split()\r\n    a = [0] * bits\r\n    match command:\r\n        case \"set\":\r\n\r\n            k, v = int(args[0]) - 1, int(args[1])\r\n            t[k] = v\r\n\r\n        case \"get\":\r\n\r\n            l, r = int(args[0]) - 1, int(args[1])\r\n            c1 = t[l:r].bit_count()\r\n            for i in range(c1):\r\n                a[i] = 1\r\n            for i in range(c1, bits):\r\n                a[i] = 0\r\n                \r\n            print(a, sep='')\r\n\r\n\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "class SegmentTree:\r\n    def __init__(self, a: list, function=min, default=10 ** 9):\r\n        from math import log2, ceil\r\n\r\n        self.source = a\r\n        self.function = function\r\n        self.default = default\r\n\r\n        self.sz = 2 ** ceil(log2(len(a)))\r\n\r\n        self.tree = [default] * self.sz + a + [default] * (self.sz - len(a))\r\n\r\n        for i in range(self.sz - 1, 0, -1):\r\n            self.tree[i] = self.function(self.tree[i * 2], self.tree[i * 2 + 1])\r\n\r\n    def __getitem__(self, item):\r\n        if isinstance(item, slice):\r\n            l, r = item.start + self.sz, item.stop + self.sz - 1\r\n            ans = self.default\r\n\r\n            while l <= r:\r\n                if l % 2:\r\n                    ans = self.function(ans, self.tree[l])\r\n                    l += 1\r\n                if not r % 2:\r\n                    ans = self.function(ans, self.tree[r])\r\n                    r -= 1\r\n\r\n                l //= 2\r\n                r //= 2\r\n\r\n            return ans\r\n\r\n        else:\r\n            return self.source[item]\r\n\r\n    def __setitem__(self, key, value):\r\n        if isinstance(key, int):\r\n            self.source[key] = value\r\n\r\n            key += self.sz\r\n            self.tree[key] = value\r\n            key //= 2\r\n            while key != 0:\r\n                self.tree[key] = self.function(self.tree[key * 2], self.tree[key * 2 + 1])\r\n                key //= 2\r\n\r\n        else:\r\n            raise ValueError(\"Now SegmentTree only support integer assignment\")\r\n\r\n\r\nn, q, bits = map(int, input().split())\r\na = list(map(int, input().split()))\r\n\r\nt = SegmentTree(a, lambda x, y: x ^ y, 0)\r\n\r\n\r\nfor _ in range(q):\r\n    command, *args = input().split()\r\n\r\n    match command:\r\n        case \"set\":\r\n\r\n            k, v = int(args[0]) - 1, int(args[1])\r\n            t[k] = v\r\n\r\n        case \"get\":\r\n\r\n            l, r = int(args[0]) - 1, int(args[1])\r\n            c1 = t[l:r].bit_count()\r\n            print(int(\"1\" * c1 + \"0\" * (bits - c1), 2))\r\n\r\n\r\n\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "class SegmentTree:\r\n    def __init__(self, a: list, function=min, default=10 ** 9):\r\n        from math import log2, ceil\r\n\r\n        self.source = a\r\n        self.function = function\r\n        self.default = default\r\n\r\n        self.sz = 2 ** ceil(log2(len(a)))\r\n\r\n        self.tree = [default] * self.sz + a + [default] * (self.sz - len(a))\r\n\r\n        for i in range(self.sz - 1, 0, -1):\r\n            self.tree[i] = self.function(self.tree[i * 2], self.tree[i * 2 + 1])\r\n\r\n    def __getitem__(self, item):\r\n        if isinstance(item, slice):\r\n            l, r = item.start + self.sz, item.stop + self.sz - 1\r\n            ans = self.default\r\n\r\n            while l <= r:\r\n                if l % 2:\r\n                    ans = self.function(ans, self.tree[l])\r\n                    l += 1\r\n                if not r % 2:\r\n                    ans = self.function(ans, self.tree[r])\r\n                    r -= 1\r\n\r\n                l //= 2\r\n                r //= 2\r\n\r\n            return ans\r\n\r\n        else:\r\n            return self.source[item]\r\n\r\n    def __setitem__(self, key, value):\r\n        if isinstance(key, int):\r\n            self.source[key] = value\r\n\r\n            key += self.sz\r\n            self.tree[key] = value\r\n            key //= 2\r\n            while key != 0:\r\n                self.tree[key] = self.function(self.tree[key * 2], self.tree[key * 2 + 1])\r\n                key //= 2\r\n\r\n        else:\r\n            raise ValueError(\"Now SegmentTree only support integer assignment\")\r\n\r\n\r\nn, q, bits = map(int, input().split())\r\na = list(map(int, input().split()))\r\n\r\nt = SegmentTree(a, lambda x, y: x ^ y, 0)\r\n\r\n\r\nfor _ in range(q):\r\n    command, *args = input().split()\r\n\r\n    match command:\r\n        case \"set\":\r\n\r\n            k, v = int(args[0]) - 1, int(args[1])\r\n            t[k] = v\r\n\r\n        case \"get\":\r\n\r\n            l, r = int(args[0]) - 1, int(args[1])\r\n            c1 = t[l:r].bit_count()\r\n            print(bin(t[l:r]))\r\n            print(int(\"1\" * c1 + \"0\" * (bits - c1), 2))\r\n\r\n\r\n\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "class SegmentTree:\r\n    def __init__(self, a: list, function=min, default=10 ** 9):\r\n        from math import log2, ceil\r\n\r\n        self.source = a\r\n        self.function = function\r\n        self.default = default\r\n\r\n        self.sz = 2 ** ceil(log2(len(a)))\r\n\r\n        self.tree = [default] * self.sz + a + [default] * (self.sz - len(a))\r\n\r\n        for i in range(self.sz - 1, 0, -1):\r\n            self.tree[i] = self.function(self.tree[i * 2], self.tree[i * 2 + 1])\r\n\r\n    def __getitem__(self, item):\r\n        if isinstance(item, slice):\r\n            l, r = item.start + self.sz, item.stop + self.sz - 1\r\n            ans = self.default\r\n\r\n            while l <= r:\r\n                if l % 2:\r\n                    ans = self.function(ans, self.tree[l])\r\n                    l += 1\r\n                if not r % 2:\r\n                    ans = self.function(ans, self.tree[r])\r\n                    r -= 1\r\n\r\n                l //= 2\r\n                r //= 2\r\n\r\n            return ans\r\n\r\n        else:\r\n            return self.source[item]\r\n\r\n    def __setitem__(self, key, value):\r\n        if isinstance(key, int):\r\n            self.source[key] = value\r\n\r\n            key += self.sz\r\n            self.tree[key] = value\r\n            key //= 2\r\n            while key != 0:\r\n                self.tree[key] = self.function(self.tree[key * 2], self.tree[key * 2 + 1])\r\n                key //= 2\r\n\r\n        else:\r\n            raise ValueError(\"Now SegmentTree only support integer assignment\")\r\n\r\n\r\nn, q, bits = map(int, input().split())\r\na = list(map(int, input().split()))\r\n\r\nt = SegmentTree(a, lambda x, y: x ^ y, 0)\r\n\r\n\r\nfor _ in range(q):\r\n    command, *args = input().split()\r\n\r\n    match command:\r\n        case \"set\":\r\n\r\n            k, v = int(args[0]) - 1, int(args[1])\r\n            t[k] = v\r\n\r\n        case \"get\":\r\n\r\n            l, r = int(args[0]) - 1, int(args[1])\r\n            res = int(\"\".join(sorted(bin(t[l:r])[2:].zfill(bits), reverse=True)), 2)\r\n            print(res)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "input = open(0).readline\r\n\r\nclass SegmentTree:\r\n    def __init__(self, a: list, function=min, default=10 ** 9):\r\n        from math import log2, ceil\r\n\r\n        self.source = a\r\n        self.function = function\r\n        self.default = default\r\n\r\n        self.sz = 2 ** ceil(log2(len(a)))\r\n\r\n        self.tree = [default] * self.sz + a + [default] * (self.sz - len(a))\r\n\r\n        for i in range(self.sz - 1, 0, -1):\r\n            self.tree[i] = self.function(self.tree[i * 2], self.tree[i * 2 + 1])\r\n\r\n    def __getitem__(self, item):\r\n        if isinstance(item, slice):\r\n            l, r = item.start + self.sz, item.stop + self.sz - 1\r\n            ans = self.default\r\n\r\n            while l <= r:\r\n                if l % 2:\r\n                    ans = self.function(ans, self.tree[l])\r\n                    l += 1\r\n                if not r % 2:\r\n                    ans = self.function(ans, self.tree[r])\r\n                    r -= 1\r\n\r\n                l //= 2\r\n                r //= 2\r\n\r\n            return ans\r\n\r\n        else:\r\n            return self.source[item]\r\n\r\n    def __setitem__(self, key, value):\r\n        self.source[key] = value\r\n        key += self.sz\r\n        self.tree[key] = value\r\n        key //= 2\r\n        while key != 0:\r\n            self.tree[key] = self.function(self.tree[key * 2], self.tree[key * 2 + 1])\r\n            key //= 2\r\n\r\n\r\n\r\n\r\nn, q = map(int, input().split())\r\na = list(map(int, input().split()))\r\n\r\nt = SegmentTree(a, lambda x, y: x ^ y, 0)\r\n\r\naa = []\r\nfor _ in range(q):\r\n    command, *args = input().split()\r\n\r\n    if command == \"set\":\r\n        k, v = int(args[0]) - 1, int(args[1])\r\n        t[k] = v\r\n\r\n    else:\r\n        l, r = int(args[0]) - 1, int(args[1])\r\n        aa.append(int(\"\".join(sorted(bin(t[l:r])[2:], reverse=True)), 2))\r\n\r\nfor l in aa:\r\n    print(l)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "input = open(0).readline\r\n\r\nclass SegmentTree:\r\n    def __init__(self, a: list, function=min, default=10 ** 9):\r\n        from math import log2, ceil\r\n\r\n        self.source = a\r\n        self.function = function\r\n        self.default = default\r\n\r\n        self.sz = 2 ** ceil(log2(len(a)))\r\n\r\n        self.tree = [default] * self.sz + a + [default] * (self.sz - len(a))\r\n\r\n        for i in range(self.sz - 1, 0, -1):\r\n            self.tree[i] = self.function(self.tree[i * 2], self.tree[i * 2 + 1])\r\n\r\n    def __getitem__(self, item):\r\n        if isinstance(item, slice):\r\n            l, r = item.start + self.sz, item.stop + self.sz - 1\r\n            ans = self.default\r\n\r\n            while l <= r:\r\n                if l % 2:\r\n                    ans = self.function(ans, self.tree[l])\r\n                    l += 1\r\n                if not r % 2:\r\n                    ans = self.function(ans, self.tree[r])\r\n                    r -= 1\r\n\r\n                l //= 2\r\n                r //= 2\r\n\r\n            return ans\r\n\r\n        else:\r\n            return self.source[item]\r\n\r\n    def __setitem__(self, key, value):\r\n        self.source[key] = value\r\n        key += self.sz\r\n        self.tree[key] = value\r\n        key //= 2\r\n        while key != 0:\r\n            self.tree[key] = self.function(self.tree[key * 2], self.tree[key * 2 + 1])\r\n            key //= 2\r\n\r\n\r\n\r\n\r\nn, q = map(int, input().split())\r\na = list(map(int, input().split()))\r\n\r\nt = SegmentTree(a, lambda x, y: x ^ y, 0)\r\n\r\naa = []\r\nfor _ in range(q):\r\n    command, *args = input().split()\r\n\r\n    if command == \"set\":\r\n        k, v = int(args[0]) - 1, int(args[1])\r\n        t[k] = v\r\n\r\n    else:\r\n        l, r = int(args[0]) - 1, int(args[1])\r\n        aa.append(int(\"\".join(sorted(bin(t[l:r])[2:], reverse=True)), 2))\r\n\r\nprint(\"\\n\".join(map(str, aa)))\r\n",
                "verdict": "Unknown Verdict (7)"
            },
            {
                "code": "input = open(0).readline\r\n\r\nclass SegmentTree:\r\n    def __init__(self, a: list, function=min, default=10 ** 9):\r\n        from math import log2, ceil\r\n\r\n        self.source = a\r\n        self.function = function\r\n        self.default = default\r\n\r\n        self.sz = 2 ** ceil(log2(len(a)))\r\n\r\n        self.tree = [default] * self.sz + a + [default] * (self.sz - len(a))\r\n\r\n        for i in range(self.sz - 1, 0, -1):\r\n            self.tree[i] = self.function(self.tree[i * 2], self.tree[i * 2 + 1])\r\n\r\n    def __getitem__(self, item):\r\n        if isinstance(item, slice):\r\n            l, r = item.start + self.sz, item.stop + self.sz - 1\r\n            ans = self.default\r\n\r\n            while l <= r:\r\n                if l % 2:\r\n                    ans = self.function(ans, self.tree[l])\r\n                    l += 1\r\n                if not r % 2:\r\n                    ans = self.function(ans, self.tree[r])\r\n                    r -= 1\r\n\r\n                l //= 2\r\n                r //= 2\r\n\r\n            return ans\r\n\r\n        else:\r\n            return self.source[item]\r\n\r\n    def __setitem__(self, key, value):\r\n        self.source[key] = value\r\n        key += self.sz\r\n        self.tree[key] = value\r\n        key //= 2\r\n        while key != 0:\r\n            self.tree[key] = self.function(self.tree[key * 2], self.tree[key * 2 + 1])\r\n            key //= 2\r\n\r\n\r\n\r\n\r\nn, q = map(int, input().split())\r\na = list(map(int, input().split()))\r\n\r\nt = SegmentTree(a, lambda x, y: x ^ y, 0)\r\n\r\naa = []\r\nfor _ in range(q):\r\n    command, *args = input().split()\r\n\r\n    if command == \"set\":\r\n        k, v = int(args[0]) - 1, int(args[1])\r\n        t[k] = v\r\n\r\n    else:\r\n        l, r = int(args[0]) - 1, int(args[1])\r\n        aa.append(int(\"\".join(sorted(bin(t[l:r])[2:], reverse=True)), 2))\r\n\r\nprint(\"\\n\".join(map(str, aa)))\r\n",
                "verdict": "Unknown Verdict (7)"
            },
            {
                "code": "input = open(0).readline\r\n\r\nclass SegmentTree:\r\n    def __init__(self, a: list, function=min, default=10 ** 9):\r\n        from math import log2, ceil\r\n\r\n        self.source = a\r\n        self.function = function\r\n        self.default = default\r\n\r\n        self.sz = 2 ** ceil(log2(len(a)))\r\n\r\n        self.tree = [default] * self.sz + a + [default] * (self.sz - len(a))\r\n\r\n        for i in range(self.sz - 1, 0, -1):\r\n            self.tree[i] = self.function(self.tree[i * 2], self.tree[i * 2 + 1])\r\n\r\n    def __getitem__(self, item):\r\n        if isinstance(item, slice):\r\n            l, r = item.start + self.sz, item.stop + self.sz - 1\r\n            ans = self.default\r\n\r\n            while l <= r:\r\n                if l % 2:\r\n                    ans = self.function(ans, self.tree[l])\r\n                    l += 1\r\n                if not r % 2:\r\n                    ans = self.function(ans, self.tree[r])\r\n                    r -= 1\r\n\r\n                l //= 2\r\n                r //= 2\r\n\r\n            return ans\r\n\r\n        else:\r\n            return self.source[item]\r\n\r\n    def __setitem__(self, key, value):\r\n        if isinstance(key, int):\r\n            self.source[key] = value\r\n\r\n            key += self.sz\r\n            self.tree[key] = value\r\n            key //= 2\r\n            while key != 0:\r\n                self.tree[key] = self.function(self.tree[key * 2], self.tree[key * 2 + 1])\r\n                key //= 2\r\n\r\n        else:\r\n            raise ValueError(\"Now SegmentTree only support integer assignment\")\r\n\r\n\r\nn, q = map(int, input().split())\r\na = list(map(int, input().split()))\r\n\r\nt = SegmentTree(a, lambda x, y: x ^ y, 0)\r\n\r\naa = []\r\nfor _ in range(q):\r\n    command, *args = input().split()\r\n\r\n    if command == \"set\":\r\n        k, v = int(args[0]) - 1, int(args[1])\r\n        t[k] = v\r\n\r\n    else:\r\n        l, r = int(args[0]) - 1, int(args[1])\r\n        aa.append(int(\"\".join(sorted(bin(t[l:r])[2:], reverse=True)), 2))\r\n\r\nfor l in aa:\r\n    print(l)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "input = open(0).readline\r\n\r\nclass SegmentTree:\r\n    def __init__(self, a: list, function=min, default=10 ** 9):\r\n        from math import log2, ceil\r\n\r\n        self.source = a\r\n        self.function = function\r\n        self.default = default\r\n\r\n        self.sz = 2 ** ceil(log2(len(a)))\r\n\r\n        self.tree = [default] * self.sz + a + [default] * (self.sz - len(a))\r\n\r\n        for i in range(self.sz - 1, 0, -1):\r\n            self.tree[i] = self.function(self.tree[i * 2], self.tree[i * 2 + 1])\r\n\r\n    def __getitem__(self, item):\r\n        if isinstance(item, slice):\r\n            l, r = item.start + self.sz, item.stop + self.sz - 1\r\n            ans = self.default\r\n\r\n            while l <= r:\r\n                if l % 2:\r\n                    ans = self.function(ans, self.tree[l])\r\n                    l += 1\r\n                if not r % 2:\r\n                    ans = self.function(ans, self.tree[r])\r\n                    r -= 1\r\n\r\n                l //= 2\r\n                r //= 2\r\n\r\n            return ans\r\n\r\n        else:\r\n            return self.source[item]\r\n\r\n    def __setitem__(self, key, value):\r\n        if isinstance(key, int):\r\n            self.source[key] = value\r\n\r\n            key += self.sz\r\n            self.tree[key] = value\r\n            key //= 2\r\n            while key != 0:\r\n                self.tree[key] = self.function(self.tree[key * 2], self.tree[key * 2 + 1])\r\n                key //= 2\r\n\r\n        else:\r\n            raise ValueError(\"Now SegmentTree only support integer assignment\")\r\n\r\n\r\nn, q = map(int, input().split())\r\na = list(map(int, input().split()))\r\n\r\nt = SegmentTree(a, lambda x, y: x ^ y, 0)\r\n\r\naa = []\r\nfor _ in range(q):\r\n    command, *args = input().split()\r\n\r\n    if command == \"set\":\r\n        k, v = int(args[0]) - 1, int(args[1])\r\n        t[k] = v\r\n\r\n    else:\r\n        l, r = int(args[0]) - 1, int(args[1])\r\n        aa.append(int(\"\".join(sorted(bin(t[l:r])[2:], reverse=True)), 2))\r\n\r\nfor l in aa:\r\n    print(l)\r\n",
                "verdict": "Unknown Verdict (7)"
            },
            {
                "code": "input = open(0).readline\r\n\r\nclass SegmentTree:\r\n    def __init__(self, a: list, function=min, default=10 ** 9):\r\n        from math import log2, ceil\r\n\r\n        self.source = a\r\n        self.function = function\r\n        self.default = default\r\n\r\n        self.sz = 2 ** ceil(log2(len(a)))\r\n\r\n        self.tree = [default] * self.sz + a + [default] * (self.sz - len(a))\r\n\r\n        for i in range(self.sz - 1, 0, -1):\r\n            self.tree[i] = self.function(self.tree[i * 2], self.tree[i * 2 + 1])\r\n\r\n    def __getitem__(self, item):\r\n        if isinstance(item, slice):\r\n            l, r = item.start + self.sz, item.stop + self.sz - 1\r\n            ans = self.default\r\n\r\n            while l <= r:\r\n                if l % 2:\r\n                    ans = self.function(ans, self.tree[l])\r\n                    l += 1\r\n                if not r % 2:\r\n                    ans = self.function(ans, self.tree[r])\r\n                    r -= 1\r\n\r\n                l //= 2\r\n                r //= 2\r\n\r\n            return ans\r\n\r\n        else:\r\n            return self.source[item]\r\n\r\n    def __setitem__(self, key, value):\r\n        if isinstance(key, int):\r\n            self.source[key] = value\r\n\r\n            key += self.sz\r\n            self.tree[key] = value\r\n            key //= 2\r\n            while key != 0:\r\n                self.tree[key] = self.function(self.tree[key * 2], self.tree[key * 2 + 1])\r\n                key //= 2\r\n\r\n        else:\r\n            raise ValueError(\"Now SegmentTree only support integer assignment\")\r\n\r\n\r\nn, q = map(int, input().split())\r\na = list(map(int, input().split()))\r\n\r\nt = SegmentTree(a, lambda x, y: x ^ y, 0)\r\n\r\naa = []\r\nfor _ in range(q):\r\n    command, *args = input().split()\r\n\r\n    if command == \"set\":\r\n        k, v = int(args[0]) - 1, int(args[1])\r\n        t[k] = v\r\n\r\n    else:\r\n        l, r = int(args[0]) - 1, int(args[1])\r\n        aa.append(int(\"\".join(sorted(bin(t[l:r])[2:], reverse=True)), 2))\r\n\r\nfor l in aa:\r\n    print(l)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "input = open(0).readline\r\n\r\nclass SegmentTree:\r\n    def __init__(self, a: list, function=min, default=10 ** 9):\r\n        from math import log2, ceil\r\n\r\n        self.source = a\r\n        self.function = function\r\n        self.default = default\r\n\r\n        self.sz = 2 ** ceil(log2(len(a)))\r\n\r\n        self.tree = [default] * self.sz + a + [default] * (self.sz - len(a))\r\n\r\n        for i in range(self.sz - 1, 0, -1):\r\n            self.tree[i] = self.function(self.tree[i * 2], self.tree[i * 2 + 1])\r\n\r\n    def __getitem__(self, item):\r\n        if isinstance(item, slice):\r\n            l, r = item.start + self.sz, item.stop + self.sz - 1\r\n            ans = self.default\r\n\r\n            while l <= r:\r\n                if l % 2:\r\n                    ans = self.function(ans, self.tree[l])\r\n                    l += 1\r\n                if not r % 2:\r\n                    ans = self.function(ans, self.tree[r])\r\n                    r -= 1\r\n\r\n                l //= 2\r\n                r //= 2\r\n\r\n            return ans\r\n\r\n        else:\r\n            return self.source[item]\r\n\r\n    def __setitem__(self, key, value):\r\n        if isinstance(key, int):\r\n            self.source[key] = value\r\n\r\n            key += self.sz\r\n            self.tree[key] = value\r\n            key //= 2\r\n            while key != 0:\r\n                self.tree[key] = self.function(self.tree[key * 2], self.tree[key * 2 + 1])\r\n                key //= 2\r\n\r\n        else:\r\n            raise ValueError(\"Now SegmentTree only support integer assignment\")\r\n\r\n\r\nn, q = map(int, input().split())\r\na = list(map(int, input().split()))\r\n\r\nt = SegmentTree(a, lambda x, y: x ^ y, 0)\r\n\r\naa = []\r\nfor _ in range(q):\r\n    command, *args = input().split()\r\n\r\n    if command == \"set\":\r\n        k, v = int(args[0]) - 1, int(args[1])\r\n        t[k] = v\r\n\r\n    else:\r\n        l, r = int(args[0]) - 1, int(args[1])\r\n        aa.append(int(\"\".join(sorted(bin(t[l:r])[2:], reverse=True)), 2))\r\n\r\nfor l in a:\r\n    print(l)\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "class SegmentTree:\r\n    def __init__(self, a: list, function=min, default=10 ** 9):\r\n        from math import log2, ceil\r\n\r\n        self.source = a\r\n        self.function = function\r\n        self.default = default\r\n\r\n        self.sz = 2 ** ceil(log2(len(a)))\r\n\r\n        self.tree = [default] * self.sz + a + [default] * (self.sz - len(a))\r\n\r\n        for i in range(self.sz - 1, 0, -1):\r\n            self.tree[i] = self.function(self.tree[i * 2], self.tree[i * 2 + 1])\r\n\r\n    def __getitem__(self, item):\r\n        if isinstance(item, slice):\r\n            l, r = item.start + self.sz, item.stop + self.sz - 1\r\n            ans = self.default\r\n\r\n            while l <= r:\r\n                if l % 2:\r\n                    ans = self.function(ans, self.tree[l])\r\n                    l += 1\r\n                if not r % 2:\r\n                    ans = self.function(ans, self.tree[r])\r\n                    r -= 1\r\n\r\n                l //= 2\r\n                r //= 2\r\n\r\n            return ans\r\n\r\n        else:\r\n            return self.source[item]\r\n\r\n    def __setitem__(self, key, value):\r\n        if isinstance(key, int):\r\n            self.source[key] = value\r\n\r\n            key += self.sz\r\n            self.tree[key] = value\r\n            key //= 2\r\n            while key != 0:\r\n                self.tree[key] = self.function(self.tree[key * 2], self.tree[key * 2 + 1])\r\n                key //= 2\r\n\r\n        else:\r\n            raise ValueError(\"Now SegmentTree only support integer assignment\")\r\n\r\n\r\nn, q = map(int, input().split())\r\na = list(map(int, input().split()))\r\n\r\nt = SegmentTree(a, lambda x, y: x ^ y, 0)\r\n\r\n\r\nfor _ in range(q):\r\n    command, *args = input().split()\r\n\r\n    if command == \"set\":\r\n        k, v = int(args[0]) - 1, int(args[1])\r\n        t[k] = v\r\n\r\n    else:\r\n        l, r = int(args[0]) - 1, int(args[1])\r\n        res = int(\"\".join(sorted(bin(t[l:r])[2:], reverse=True)), 2)\r\n        print(res)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "class SegmentTree:\r\n    def __init__(self, a: list, function=min, default=10 ** 9):\r\n        from math import log2, ceil\r\n\r\n        self.source = a\r\n        self.function = function\r\n        self.default = default\r\n\r\n        self.sz = 2 ** ceil(log2(len(a)))\r\n\r\n        self.tree = [default] * self.sz + a + [default] * (self.sz - len(a))\r\n\r\n        for i in range(self.sz - 1, 0, -1):\r\n            self.tree[i] = self.function(self.tree[i * 2], self.tree[i * 2 + 1])\r\n\r\n    def __getitem__(self, item):\r\n        if isinstance(item, slice):\r\n            l, r = item.start + self.sz, item.stop + self.sz - 1\r\n            ans = self.default\r\n\r\n            while l <= r:\r\n                if l % 2:\r\n                    ans = self.function(ans, self.tree[l])\r\n                    l += 1\r\n                if not r % 2:\r\n                    ans = self.function(ans, self.tree[r])\r\n                    r -= 1\r\n\r\n                l //= 2\r\n                r //= 2\r\n\r\n            return ans\r\n\r\n        else:\r\n            return self.source[item]\r\n\r\n    def __setitem__(self, key, value):\r\n        if isinstance(key, int):\r\n            self.source[key] = value\r\n\r\n            key += self.sz\r\n            self.tree[key] = value\r\n            key //= 2\r\n            while key != 0:\r\n                self.tree[key] = self.function(self.tree[key * 2], self.tree[key * 2 + 1])\r\n                key //= 2\r\n\r\n        else:\r\n            raise ValueError(\"Now SegmentTree only support integer assignment\")\r\n\r\n\r\nn, q = map(int, input().split())\r\na = list(map(int, input().split()))\r\n\r\nt = SegmentTree(a, lambda x, y: x ^ y, 0)\r\n\r\n\r\nfor _ in range(q):\r\n    command, *args = input().split()\r\n\r\n    match command:\r\n        case \"set\":\r\n\r\n            k, v = int(args[0]) - 1, int(args[1])\r\n            t[k] = v\r\n\r\n        case \"get\":\r\n\r\n            l, r = int(args[0]) - 1, int(args[1])\r\n            res = int(\"\".join(sorted(bin(t[l:r])[2:], reverse=True)), 2)\r\n            print(res)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "class SegmentTree:\r\n    def __init__(self, a: list, function=min, default=10 ** 9):\r\n        from math import log2, ceil\r\n\r\n        self.source = a\r\n        self.function = function\r\n        self.default = default\r\n\r\n        self.sz = 2 ** ceil(log2(len(a)))\r\n\r\n        self.tree = [default] * self.sz + a + [default] * (self.sz - len(a))\r\n\r\n        for i in range(self.sz - 1, 0, -1):\r\n            self.tree[i] = self.function(self.tree[i * 2], self.tree[i * 2 + 1])\r\n\r\n    def __getitem__(self, item):\r\n        if isinstance(item, slice):\r\n            l, r = item.start + self.sz, item.stop + self.sz - 1\r\n            ans = self.default\r\n\r\n            while l <= r:\r\n                if l % 2:\r\n                    ans = self.function(ans, self.tree[l])\r\n                    l += 1\r\n                if not r % 2:\r\n                    ans = self.function(ans, self.tree[r])\r\n                    r -= 1\r\n\r\n                l //= 2\r\n                r //= 2\r\n\r\n            return ans\r\n\r\n        else:\r\n            return self.source[item]\r\n\r\n    def __setitem__(self, key, value):\r\n        if isinstance(key, int):\r\n            self.source[key] = value\r\n\r\n            key += self.sz\r\n            self.tree[key] = value\r\n            key //= 2\r\n            while key != 0:\r\n                self.tree[key] = self.function(self.tree[key * 2], self.tree[key * 2 + 1])\r\n                key //= 2\r\n\r\n        else:\r\n            raise ValueError(\"Now SegmentTree only support integer assignment\")\r\n\r\n\r\nn, q = map(int, input().split())\r\na = list(map(int, input().split()))\r\n\r\nt = SegmentTree(a, lambda x, y: x ^ y, 0)\r\n\r\n\r\nfor _ in range(q):\r\n    command, *args = input().split()\r\n\r\n    match command:\r\n        case \"set\":\r\n\r\n            k, v = int(args[0]) - 1, int(args[1])\r\n            t[k] = v\r\n\r\n        case \"get\":\r\n\r\n            l, r = int(args[0]) - 1, int(args[1])\r\n            res = int(\"\".join(sorted(bin(t[l:r])[2:], reverse=True)), 2)\r\n            print(res)\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "#include <iostream>\n#include <vector>\n#include <cmath>\n#include <map>\n#include <sstream>\n#include <set>\n#include <iomanip>\n#include <algorithm>\n#include <unordered_map>\n#include <unordered_set>\n\nusing namespace std;\n\nvoid update(int x, int neww, int oldd, int n, vector <vector <int> > &fenv)\n{\n    for (int i=x; i<n; i = (i|(i+1)))\n    {\n        for (int h=31; h>=0; h--)\n        {\n            if ((neww>>h)&1)\n            {\n                fenv[i][h]++;\n            }\n            if ((oldd>>h)&1)\n            {\n                fenv[i][h]--;\n            }\n        }\n    }\n}\n\nvector <int> get(int x, vector <vector <int> > &fenv)\n{\n    vector <int> ans(32,0);\n    for (int i=x; i>=0; i=(i&(i+1))-1)\n    {\n        for (int h=31; h>=0; h--)\n        {\n            ans[h]+=fenv[i][h];\n        }\n    }\n    return ans;\n}\n\nvoid solve()\n{\n    int n,q,b;\n    cin>>n>>q>>b;\n    vector <vector<int> > fenv(n, vector<int> (32, 0));\n    vector <int> kuku(n);\n    for (int i=0; i<n; i++)\n    {\n        cin>>kuku[i];\n        update(i,kuku[i],0,n,fenv);\n    }\n    for (int i=0; i<q; i++)\n    {\n        string s; int l, r;\n        cin>>s>>l>>r;\n        if (s==\"get\")\n        {\n            auto meow1=get(r-1,fenv);\n            auto meow2=get(l-2,fenv);\n            int rans=0;\n            for (int h=31; h>=0; h--)\n            {\n                meow1[h]-=meow2[h];\n                if (meow1[h]%2) rans++;\n            }\n            long long realans=0;\n            for (int h=b-1; h>=0; h--)\n            {\n                if (rans)\n                {\n                    rans--;\n                    realans+=(1<<h);\n                }\n            }\n            cout<<realans<<\"\\n\";\n        }\n        else\n        {\n            update(l-1,r,kuku[l-1],n,fenv);\n            kuku[l-1]=r;\n        }\n    }\n\n\n}\n\n\nint main()\n{\n    cin.tie(nullptr);\n    ios_base::sync_with_stdio(false);\n    int n=1;\n    //cin>>n;\n    while (n--) solve();\n}",
                "verdict": "Runtime Error"
            }
        ]
    },
    {
        "task_id": 2080,
        "description": "\u0421\u0442\u0440\u0430\u043d\u043d\u0438\u043a \u0438\u0437 \u0434\u0440\u0435\u0432\u043d\u0435\u0439 \u0411\u0435\u0440\u043b\u044f\u043d\u0434\u0438\u0438 \u0443\u0436\u0435 \u0434\u0432\u0435 \u0442\u044b\u0441\u044f\u0447\u0438 \u043b\u0435\u0442 \u0438\u0449\u0435\u0442 \u271d\ufe0f **\u0441\u0432\u044f\u0449\u0435\u043d\u043d\u043e\u0435** \u043f\u043e\u043b\u043e\u0442\u043d\u043e \u0440\u0430\u0437\u043c\u0435\u0440\u043e\u043c $n \\times m$ \u043a\u043b\u0435\u0442\u043e\u043a. \u041a\u0430\u0436\u0434\u0430\u044f \u0438\u0437 \u043a\u043b\u0435\u0442\u043e\u043a \u043e\u043a\u0440\u0430\u0448\u0435\u043d\u0430 \u0432 \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u0446\u0432\u0435\u0442, \u0443\u0441\u043b\u043e\u0432\u043d\u043e \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u044b\u0439 \u0447\u0438\u0441\u043b\u043e\u043c \u043e\u0442 $1$ \u0434\u043e $10^9$.\n\n\u0421\u0442\u0430\u0440\u0446\u044b \u043d\u0430\u0437\u044b\u0432\u0430\u044e\u0442 \u043f\u043e\u043b\u043e\u0442\u043d\u043e \u271d\ufe0f **\u0441\u0432\u044f\u0449\u0435\u043d\u043d\u044b\u043c**, \u0435\u0441\u043b\u0438 \u0435\u0433\u043e \u043c\u043e\u0436\u043d\u043e \u0440\u0430\u0437\u0440\u0435\u0437\u0430\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u043c\u0438 \u0432\u0437\u043c\u0430\u0445\u0430\u043c\u0438 \u0441\u0432\u044f\u0449\u0435\u043d\u043d\u044b\u043c \u043c\u0435\u0447\u043e\u043c. \u041f\u0440\u0438 \u0442\u043e\u043c, \u0434\u0430\u0431\u044b \u043d\u0435 \u043d\u0430\u0440\u0443\u0448\u0430\u0442\u044c \u0440\u0438\u0442\u0443\u0430\u043b, \u0434\u043e\u043b\u0436\u043d\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c\u0441\u044f \u0442\u0440\u0438 \u0443\u0441\u043b\u043e\u0432\u0438\u044f:\n\n* \u0420\u0430\u0437\u0440\u0435\u0437 \u0434\u043e\u043b\u0436\u0435\u043d \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u0442\u044c *\u0447\u0435\u0440\u0435\u0437 \u0432\u0441\u0435 \u043f\u043e\u043b\u043e\u0442\u043d\u043e* \u043b\u0438\u0431\u043e \u043f\u043e \u0433\u043e\u0440\u0438\u0437\u043e\u043d\u0442\u0430\u043b\u0438, \u043b\u0438\u0431\u043e \u043f\u043e \u0432\u0435\u0440\u0442\u0438\u043a\u0430\u043b\u0438, \u0438 \u0438\u0434\u0442\u0438 *\u043c\u0435\u0436\u0434\u0443* \u043a\u043b\u0435\u0442\u043e\u043a\n* \u0420\u0430\u0437\u0440\u0435\u0437 \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u043e\u0434\u043e\u0445\u0438\u0442\u044c \u043c\u0435\u0436\u0434\u0443 \u0434\u0432\u0443\u0445 \u043a\u043b\u0435\u0442\u043e\u043a \u043e\u0434\u043d\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430\n* \u041f\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430\u043c \u0432\u0441\u0435\u0445 \u0440\u0430\u0437\u0440\u0435\u0437\u043e\u0432 \u0432\u0441\u0435 \u043a\u0443\u0441\u043a\u0438 \u043f\u043e\u043b\u043e\u0442\u043d\u0430 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u043e\u0434\u043d\u043e\u0442\u043e\u043d\u043d\u044b\u043c\u0438, \u0442. \u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u0442\u044c \u0440\u043e\u0432\u043d\u043e \u0438\u0437 \u043e\u0434\u043d\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430\n\n\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u0435, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0435 \u043f\u043e\u043b\u043e\u0442\u043d\u043e \u271d\ufe0f **\u0441\u0432\u044f\u0449\u0435\u043d\u043d\u044b\u043c**.\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u0430\u043c \u044f\u0432\u044f\u0442\u0441\u044f $n$ \u0438 $m$ - \u0432\u044b\u0441\u043e\u0442\u0430 \u0438 \u0448\u0438\u0440\u0438\u043d\u0430 \u043f\u043e\u043b\u043e\u0442\u043d\u0430 ($1 \\le n \\cdot m \\le 2 \\cdot 10^5$).\n\n\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 $n$ \u0441\u0442\u0440\u043e\u043a\u0430\u0445 \u043f\u0435\u0440\u0435\u0434 \u0432\u0430\u043c\u0438 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u043d\u0443\u0442 \u043f\u043e $m$ \u0447\u0438\u0441\u0435\u043b - \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043f\u043e\u043b\u043e\u0442\u043d\u0430.\u0412 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u044c\u0442\u0435 \u043d\u0430 \u0441\u0443\u0434 \u0436\u044e\u0440\u0438 \u0441\u0442\u0440\u043e\u043a\u0443 `YES`, \u0435\u0441\u043b\u0438 \u0432\u044b \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0435 \u043f\u043e\u043b\u043e\u0442\u043d\u043e \u271d\ufe0f **\u0441\u0432\u044f\u0449\u0435\u043d\u043d\u044b\u043c**, \u0438 `NO` \u0432 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435.",
        "right_solution": "n, m = map(int, input().split())\r\n\r\na = []\r\nfor i in range(n):\r\n    a.append(list(map(int, input().split())))\r\n\r\n\r\nsmooth = True\r\nfor i in range(n - 1):\r\n    cc = 0\r\n    for j in range(m):\r\n        if a[i][j] == a[i + 1][j]:\r\n            cc += 1\r\n    if cc != 0 and cc != m:\r\n        smooth = False\r\n\r\n\r\nfor j in range(m - 1):\r\n    cc = 0\r\n    for i in range(n):\r\n        if a[i][j] == a[i][j + 1]:\r\n            cc += 1\r\n    if cc != 0 and cc != n:\r\n        smooth = False\r\n\r\nif smooth:\r\n    print(\"YES\")\r\nelse:\r\n    print(\"NO\")\r\n",
        "solutions": [
            {
                "code": "n, m = map(int, input().split())\r\n\r\na = []\r\nfor i in range(n):\r\n    a.append(list(map(int, input().split())))\r\n\r\n\r\nsmooth = True\r\nfor i in range(n - 1):\r\n    cc = 0\r\n    for j in range(m):\r\n        if a[i][j] == a[i + 1][j]:\r\n            cc += 1\r\n    if cc != 0 and cc != m:\r\n        smooth = False\r\n\r\n\r\nfor j in range(m - 1):\r\n    cc = 0\r\n    for i in range(n):\r\n        if a[i][j] == a[i][j + 1]:\r\n            cc += 1\r\n    if cc != 0 and cc != n:\r\n        smooth = False\r\n\r\nif smooth:\r\n    print(\"YES\")\r\nelse:\r\n    print(\"NO\")\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, m = map(int, input().split())\r\n\r\na = []\r\nfor i in range(n):\r\n    a.append(list(map(int, input().split())))\r\n\r\n\r\nsmooth = True\r\nfor i in range(n - 1):\r\n    cc = 0\r\n    for j in range(m):\r\n        if a[i][j] == a[i + 1][j]:\r\n            cc += 1\r\n    if cc != 0 and cc != m:\r\n        smooth = False\r\n\r\n\r\nfor j in range(m - 1):\r\n    cc = 0\r\n    for i in range(n):\r\n        if a[i][j] == a[i][j + 1]:\r\n            cc += 1\r\n    if cc != 0 and cc != n:\r\n        smooth = False\r\n\r\nif smooth:\r\n    print(\"YES\")\r\nelse:\r\n    print(\"NO\")\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "\r\nn, m = map(int, input().split())\r\n\r\na = []\r\nfor i in range(n):\r\n    a.append(list(map(int, input().split()))\r\n\r\n\r\nsmooth = True\r\nfor i in range(n - 1):\r\n    cc = 0\r\n    for j in range(m):\r\n        if a[i][j] == a[i + 1][j]:\r\n            cc += 1\r\n    if cc != 0 and cc != m:\r\n        smooth = False\r\n\r\n\r\nfor j in range(m - 1):\r\n    cc = 0\r\n    for i in range(n):\r\n        if a[i][j] == a[i][j + 1]:\r\n            cc += 1\r\n    if cc != 0 and cc != n:\r\n        smooth = False\r\n\r\nif smooth:\r\n    print(\"YES\")\r\nelse:\r\n    print(\"NO\")\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "\r\nn, m = map(int, input().split())\r\n\r\na = []\r\nfor i in range(n):\r\n    a.append(array(\"H\", map(int, input().split())))\r\n\r\n\r\nsmooth = True\r\nfor i in range(n - 1):\r\n    cc = 0\r\n    for j in range(m):\r\n        if a[i][j] == a[i + 1][j]:\r\n            cc += 1\r\n    if cc != 0 and cc != m:\r\n        smooth = False\r\n\r\n\r\nfor j in range(m - 1):\r\n    cc = 0\r\n    for i in range(n):\r\n        if a[i][j] == a[i][j + 1]:\r\n            cc += 1\r\n    if cc != 0 and cc != n:\r\n        smooth = False\r\n\r\nif smooth:\r\n    print(\"YES\")\r\nelse:\r\n    print(\"NO\")\r\n",
                "verdict": "Runtime Error"
            },
            {
                "code": "from array import array\r\n\r\nn, m = map(int, input().split())\r\n\r\na = []\r\nfor i in range(n):\r\n    a.append(array(\"H\", map(int, input().split())))\r\n\r\n\r\nsmooth = True\r\nfor i in range(n - 1):\r\n    cc = 0\r\n    for j in range(m):\r\n        if a[i][j] == a[i + 1][j]:\r\n            cc += 1\r\n    if cc != 0 and cc != m:\r\n        smooth = False\r\n\r\n\r\nfor j in range(m - 1):\r\n    cc = 0\r\n    for i in range(n):\r\n        if a[i][j] == a[i][j + 1]:\r\n            cc += 1\r\n    if cc != 0 and cc != n:\r\n        smooth = False\r\n\r\nif smooth:\r\n    print(\"YES\")\r\nelse:\r\n    print(\"NO\")\r\n",
                "verdict": "Unknown Verdict (7)"
            },
            {
                "code": "from array import array\r\n\r\nn, m = map(int, input().split())\r\n\r\na = []\r\nfor i in range(n):\r\n    a.append(array(\"H\", map(int, input().split())))\r\n\r\n\r\nsmooth = True\r\nfor i in range(n - 1):\r\n    cc = 0\r\n    for j in range(m):\r\n        if a[i][j] == a[i + 1][j]:\r\n            cc += 1\r\n    if cc != 0 and cc != m:\r\n        smooth = False\r\n\r\n\r\nfor j in range(m - 1):\r\n    cc = 0\r\n    for i in range(n):\r\n        if a[i][j] == a[i][j + 1]:\r\n            cc += 1\r\n    if cc != 0 and cc != n:\r\n        smooth = False\r\n\r\nif smooth:\r\n    print(\"YES\")\r\nelse:\r\n    print(\"NO\")\r\n",
                "verdict": "Unknown Verdict (7)"
            },
            {
                "code": "n, m = map(int, input().split())\r\n\r\na = []\r\nfor i in range(n):\r\n    a.append(list(map(int, input().split())))\r\n\r\n\r\nsmooth = True\r\nfor i in range(n - 1):\r\n    cc = 0\r\n    for j in range(m):\r\n        if a[i][j] == a[i + 1][j]:\r\n            cc += 1\r\n    if cc != 0 and cc != m:\r\n        smooth = False\r\n\r\n\r\nfor j in range(m - 1):\r\n    cc = 0\r\n    for i in range(n):\r\n        if a[i][j] == a[i][j + 1]:\r\n            cc += 1\r\n    if cc != 0 and cc != n:\r\n        smooth = False\r\n\r\nif smooth:\r\n    print(\"YES\")\r\nelse:\r\n    print(\"NO\")\r\n",
                "verdict": "Unknown Verdict (7)"
            },
            {
                "code": "n, m = map(int, input().split())\r\n\r\na = []\r\nfor i in range(n):\r\n    a.append(list(map(int, input().split())))\r\n\r\n\r\nsmooth = True\r\nfor i in range(n - 1):\r\n    cc = 0\r\n    for j in range(m):\r\n        if a[i][j] == a[i + 1][j]:\r\n            cc += 1\r\n    if cc != 0 and cc != m:\r\n        smooth = False\r\n\r\n\r\nfor j in range(m - 1):\r\n    cc = 0\r\n    for i in range(n):\r\n        if a[i][j] == a[i][j + 1]:\r\n            cc += 1\r\n    if cc != 0 and cc != n:\r\n        smooth = False\r\n\r\nif smooth:\r\n    print(\"YES\")\r\nelse:\r\n    print(\"NO\")\r\n",
                "verdict": "Unknown Verdict (7)"
            },
            {
                "code": "n, m = map(int, input().split())\r\n\r\na = []\r\nfor i in range(n):\r\n    a.append(list(map(int, input().split())))\r\n\r\n\r\nsmooth = True\r\nfor i in range(n - 1):\r\n    cc = 0\r\n    for j in range(m):\r\n        if a[i][j] == a[i + 1][j]:\r\n            cc += 1\r\n    if cc != 0 and cc != m:\r\n        smooth = False\r\n\r\n\r\nfor j in range(m - 1):\r\n    cc = 0\r\n    for i in range(n):\r\n        if a[i][j] == a[i][j + 1]:\r\n            cc += 1\r\n    if cc != 0 and cc != n:\r\n        smooth = False\r\n\r\nif smooth:\r\n    print(\"YES\")\r\nelse:\r\n    print(\"NO\")\r\n",
                "verdict": "Unknown Verdict (7)"
            },
            {
                "code": "n, m = map(int, input().split())\r\n\r\na = []\r\nfor i in range(n):\r\n    a.append(list(map(int, input().split())))\r\n\r\n\r\nsmooth = True\r\nfor i in range(n - 1):\r\n    cc = 0\r\n    for j in range(m):\r\n        if a[i][j] == a[i + 1][j]:\r\n            cc += 1\r\n    if cc != 0 and cc != m:\r\n        smooth = False\r\n\r\n\r\nfor j in range(m - 1):\r\n    cc = 0\r\n    for i in range(n):\r\n        if a[i][j] == a[i][j + 1]:\r\n            cc += 1\r\n    if cc != 0 and cc != n:\r\n        smooth = False\r\n\r\nif smooth:\r\n    print(\"YES\")\r\nelse:\r\n    print(\"NO\")\r\n",
                "verdict": "Unknown Verdict (7)"
            },
            {
                "code": "n,m = map(int,input().split())\r\na = [list(map(int, input().split())) for _ in range(n)]\r\nfor i in range(n):\r\n    for j in range(m):\r\n        if j<m-1 and a[i][j] != a[i][j+1]:\r\n            for I in range(i, n):\r\n                if a[I][j] == a[I][j + 1]:\r\n                    print(\"NO\")\r\n                    exit()\r\n        if i<n-1 and a[i][j] != a[i+1][j]:\r\n            for J in range(j, m):\r\n                if a[i][J] == a[i+1][J]:\r\n                    print(\"NO\")\r\n                    exit()\r\nprint(\"YES\")\r\n'''\r\n                                    S&#                                      SS     \r\n                                    S#$&&S#S                              S#&#S      \r\n                                      #@$%%$S  S                     SSS&**@#&SS      \r\n                                      S&#@%!%#S#@#                 &$&&%!%@$$@S       \r\n                                      S&@S#&&&&&$%S              S* !@#SS&$$@#S     \r\n                                      S#$%#SS S&@!%#S         SS&!*@S  S@@&##S    \r\n                                        #%*%%#S S#$@#        S*%%#    S@@@@&#S   \r\n                                          #%.*%@  S#$S      S&.$S    #@%!.$#      \r\n                                            #&&%%SS#*#S     S% *S   S&@$%@S       \r\n                                  SS&S         #%*&#*$S     S* $S #@%@@$#        \r\n                                   S@$#          &@&@%#     S$$#$. !@@@S           \r\n                                   S&.*#           S#&#     S&#@*%&SSS       S      \r\n                                    #* *#                   SSS#           ##&S    \r\n                                    S@!.%#                               S&$%@S    \r\n                                  SSS&. .$&&S                          S&@$%&S    \r\n                                SS SSS@! !@$@&#                      S@$$$@S     \r\n                                  S    #%.!%%**&S#S  SS  SS      ###&$$%$&     \r\n                                        S@.!%..!$@@@@&@&&&&#S&$&$! !$&&&S     \r\n                                         S#%*..*$$**@&$!$&@*%*!!%$**@&#      \r\n                                          S&**%$$*!@@&&@$@$*%!%*$@@@&S     \r\n                                         SSS#&&#%*%@$$@&$*&$@$&$*&#SSS     \r\n                                         S    ######@@$#&&#&#&##@S           \r\n                                               SS    S#S##SSS SS                                                         \r\n'''\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n,m = map(int,input().split())\r\na = [list(map(int, input().split())) for _ in range(n)]\r\nfor i in range(n):\r\n    for j in range(m):\r\n        if j<m-1 and a[i][j] != a[i][j+1]:\r\n            for I in range(i, n):\r\n                if a[I][j] == a[I][j + 1]:\r\n                    print(\"NO\")\r\n                    exit()\r\n            for I in range(i,-1,-1):\r\n                if a[I][j] == a[I][j + 1]:\r\n                    print(\"NO\")\r\n                    exit()\r\n        if i<n-1 and a[i][j] != a[i+1][j]:\r\n            for J in range(j, m):\r\n                if a[i][J] == a[i+1][J]:\r\n                    print(\"NO\")\r\n                    exit()\r\n            for J in range(j, -1,-1):\r\n                if a[i][J] == a[i+1][J]:\r\n                    print(\"NO\")\r\n                    exit()\r\nprint(\"YES\")\r\n\r\n'''\r\n2 2\r\n1 1\r\n2 3\r\n'''",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n,m = map(int,input().split())\r\na = [list(map(int, input().split())) for _ in range(n)]\r\nfor i in range(n-1):\r\n    for j in range(m-1):\r\n        if a[i][j] != a[i][j+1]:\r\n            for I in range(i, n):\r\n                if a[I][j] == a[I][j + 1]:\r\n                    print(\"NO\")\r\n                    exit()\r\n        if a[i][j] != a[i+1][j]:\r\n            for J in range(j, m):\r\n                if a[i][J] == a[i+1][J]:\r\n                    print(\"NO\")\r\n                    exit()\r\nprint(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n,m = map(int,input().split())\r\na = [list(map(int, input().split())) for _ in range(n)]\r\nflag = 0\r\nfor i in range(1, n):\r\n    for j in range(1, m):\r\n        if a[i][j]!=a[i][j-1]:\r\n            for I in range(i+1,n):\r\n                if a[I][j]==a[I][j-1]:\r\n                    if not flag:\r\n                        print(\"NO\")\r\n                        flag = 1\r\n            for I in range(i,0,-1):\r\n                if a[I][j]==a[I][j-1]:\r\n                    if not flag:\r\n                        print(\"NO\")\r\n                        flag = 1\r\n        if a[i][j]!=a[i-1][j]:\r\n            for J in range(j+1, m):\r\n                if a[i][J]==a[i-1][J]:\r\n                    if not flag:\r\n                        print(\"NO\")\r\n                        flag = 1\r\n            for J in range(j,0,-1):\r\n                if a[i][J]==a[i-1][J]:\r\n                    if not flag:\r\n                        print(\"NO\")\r\n                        flag = 1\r\ntry:\r\n    if a[0][0] != a[0][1]:\r\n        for i in range(n):\r\n            if a[i][0] == a[i][1]:\r\n                if not flag:\r\n                    print(\"NO\")\r\n                    flag = 1\r\nexcept: pass\r\ntry:\r\n    if a[0][0] != a[1][0]:\r\n        for j in range(m):\r\n            if a[0][j] == a[1][j]:\r\n                if not flag:\r\n                    print(\"NO\")\r\n                    flag = 1\r\nexcept: pass\r\nif not flag:\r\n    print(\"YES\")\r\n\r\n\r\n'''\r\n2 2\r\n1 2\r\n3 2\r\n'''",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n,m = map(int,input().split())\r\na = [list(map(int, input().split())) for _ in range(n)]\r\nfor i in range(1, n):\r\n    for j in range(1, m):\r\n        if a[i][j]!=a[i][j-1]:\r\n            for I in range(i+1,n):\r\n                if a[I][j]==a[I][j-1]:\r\n                    print(\"NO\")\r\n                    exit()\r\n            for I in range(i,0,-1):\r\n                if a[I][j]==a[I][j-1]:\r\n                    print(\"NO\")\r\n                    exit()\r\n        if a[i][j]!=a[i-1][j]:\r\n            for J in range(j+1, m):\r\n                if a[i][J]==a[i-1][J]:\r\n                    print(\"NO\")\r\n                    exit()\r\n            for J in range(j,0,-1):\r\n                if a[i][J]==a[i-1][J]:\r\n                    print(\"NO\")\r\n                    exit()\r\ntry:\r\n    if a[0][0] != a[0][1]:\r\n        for i in range(n):\r\n            if a[i][0] == a[i][1]:\r\n                print(\"NO\")\r\n                exit()\r\nexcept: pass\r\ntry:\r\n    if a[0][0] != a[1][0]:\r\n        for j in range(m):\r\n            if a[0][j] == a[1][j]:\r\n                print(\"NO\")\r\n                exit()\r\nexcept: pass\r\nprint(\"YES\")\r\n\r\n\r\n'''\r\n4 4\r\n1 2 1 1\r\n1 1 1 1\r\n1 1 1 1\r\n1 1 1 1\r\n'''",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n,m = map(int,input().split())\r\na = [list(map(int, input().split())) for _ in range(n)]\r\nfor i in range(1, n):\r\n    for j in range(1, m):\r\n        if a[i][j]!=a[i][j-1]:\r\n            for I in range(i+1,n):\r\n                if a[I][j]==a[I][j-1]:\r\n                    print(\"NO\")\r\n                    exit()\r\n            for I in range(i,0,-1):\r\n                if a[I][j]==a[I][j-1]:\r\n                    print(\"NO\")\r\n                    exit()\r\n        if a[i][j]!=a[i-1][j]:\r\n            for J in range(j+1, m):\r\n                if a[i][J]==a[i-1][J]:\r\n                    print(\"NO\")\r\n                    exit()\r\n            for J in range(j,0,-1):\r\n                if a[i][J]==a[i-1][J]:\r\n                    print(\"NO\")\r\n                    exit()\r\nif a[0][0] != a[0][1]:\r\n    for i in range(n):\r\n        if a[i][0] == a[i][1]:\r\n            print(\"NO\")\r\n            exit()\r\nif a[0][0] != a[1][0]:\r\n    for j in range(m):\r\n        if a[0][j] == a[1][j]:\r\n            print(\"NO\")\r\n            exit()\r\nprint(\"YES\")\r\n\r\n\r\n'''\r\n4 4\r\n1 2 1 1\r\n1 1 1 1\r\n1 1 1 1\r\n1 1 1 1\r\n'''",
                "verdict": "Runtime Error"
            },
            {
                "code": "n, m = map(int, input().split())\r\na = [list(map(int, input().split())) for _ in range(n)]\r\nfor i in range(n):\r\n    for j in range(m):\r\n        if j < m - 1 and a[i][j] != a[i][j + 1]:\r\n            for I in range(i, n):\r\n                if a[I][j] == a[I][j + 1]:\r\n                    print(\"NO\")\r\n                    exit()\r\n            for I in range(i, -1, -1):\r\n                if a[I][j] == a[I][j + 1]:\r\n                    print(\"NO\")\r\n                    exit()\r\n        if i < n - 1 and a[i][j] != a[i + 1][j]:\r\n            for J in range(j, m):\r\n                if a[i][J] == a[i + 1][J]:\r\n                    print(\"NO\")\r\n                    exit()\r\n            for J in range(j, -1, -1):\r\n                if a[i][J] == a[i + 1][J]:\r\n                    print(\"NO\")\r\n                    exit()\r\nprint(\"YES\")",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, m = map(int, input().split())\r\na = [list(map(int, input().split())) for _ in range(n)]\r\nfor i in range(n):\r\n    for j in range(m):\r\n        if j < m - 1 and a[i][j] != a[i][j + 1]:\r\n            for I in range(i, n):\r\n                if a[I][j] == a[I][j + 1]:\r\n                    print(\"NO\")\r\n                    exit()\r\n            for I in range(i, -1, -1):\r\n                if a[I][j] == a[I][j + 1]:\r\n                    print(\"NO\")\r\n                    exit()\r\n        if i < n - 1 and a[i][j] != a[i + 1][j]:\r\n            for J in range(j, m):\r\n                if a[i][J] == a[i + 1][J]:\r\n                    print(\"NO\")\r\n                    exit()\r\n            for J in range(j, -1, -1):\r\n                if a[i][J] == a[i + 1][J]:\r\n                    print(\"NO\")\r\n                    exit()\r\nprint(\"YES\")\r\n",
                "verdict": "Time Limit Exceeded"
            },
            {
                "code": "n, m = map(int, input().split())\r\ncarpet = [0] * n\r\nfor i in range(n):\r\n    carpet[i] = list(map(int, input().split()))\r\n\r\nvertical = []\r\nfor i in range(1, m):\r\n    if carpet[0][i] != carpet[0][i-1]:\r\n        vertical.append(i)\r\n\r\nhorizontal = []\r\nfor i in range(1, n):\r\n    if carpet[i][0] != carpet[i-1][0]:\r\n        horizontal.append(i)\r\n\r\nhorizontal.append(n)\r\nisMagic = True\r\nprev_hor = 0\r\nfor i in horizontal:\r\n    temp = carpet[prev_hor:i]\r\n    for j in range(1, len(temp)):\r\n        if temp[j] != temp[j-1]:\r\n            isMagic = False\r\n            break\r\n    temp2 = []\r\n    for j in range(1, m):\r\n        if carpet[prev_hor][j] != carpet[prev_hor][j - 1]:\r\n            temp2.append(j)\r\n    if temp2 != vertical:\r\n        isMagic = False\r\n        break\r\n    prev_hor = i\r\nif isMagic:\r\n    print(\"YES\")\r\nelse:\r\n    print(\"NO\")",
                "verdict": "Wrong Answer"
            }
        ]
    },
    {
        "task_id": 2104,
        "description": "\u0412\u0430\u043c \u0434\u0430\u043d\u0430 \u043c\u0430\u0442\u0440\u0438\u0446\u0430 \u0440\u0430\u0437\u043c\u0435\u0440\u043e\u043c $n \\times m$ \u043a\u043b\u0435\u0442\u043e\u043a, \u0432\u0441\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b \u0438 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u043d\u0430\u0443\u0442\u0440\u0430\u043b\u044c\u043d\u044b\u043c\u0438 \u0447\u0438\u0441\u043b\u0430\u043c\u0438 \u043e\u0442 $1$ \u0434\u043e $nm$. \n\n\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u0437\u044f\u0442\u044c \u043b\u044e\u0431\u043e\u0439 \u043a\u0432\u0430\u0434\u0440\u0430\u0442 \u0440\u0430\u0437\u043c\u0435\u0440\u043e\u043c $2 \\times 2$ \u043a\u043b\u0435\u0442\u043a\u0438 \u0438 \"\u043f\u0440\u043e\u043a\u0440\u0443\u0442\u0438\u0442\u044c\" \u0435\u0433\u043e \u043d\u0430\u043f\u0440\u0430\u0432\u043e. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0438\u0437 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0430\n\n![](https://pic.sort-me.org/098ace5b-7b90-424e-a26a-0dd366f62e72)\n\n\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u0441\u044f\n\n![](https://pic.sort-me.org/bee2f87d-db4f-4dda-b4e8-89c59335d685)\n\n\u041d\u0430\u0437\u043e\u0432\u0435\u043c **\u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435\u043c** \u043c\u0430\u0442\u0440\u0438\u0446\u044b $a$ \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435, \u043a\u043e\u0433\u0434\u0430 \u043f\u0440\u0438 \u043b\u044e\u0431\u044b\u0445 $i$ \u0438 $j$ \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u044e\u0442\u0441\u044f \u0443\u0441\u043b\u043e\u0432\u0438\u044f $a[i][j] > a[i][j - 1]$, $a[i][j] > a[i - 1][m]$.\n\n\u041c\u043e\u0436\u043d\u043e \u043b\u0438 \u0442\u043e\u043b\u044c\u043a\u043e \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0432\u044b\u0448\u0435\u043e\u043f\u0438\u0441\u0430\u043d\u043d\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438, \u043f\u0440\u0438\u043c\u0435\u043d\u0451\u043d\u043d\u043e\u0439 \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0443\u0433\u043e\u0434\u043d\u043e \u0440\u0430\u0437, \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u0437\u0430\u0434\u0430\u043d\u043d\u0443\u044e \u043c\u0430\u0442\u0440\u0438\u0446\u0443 \u0432 **\u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435**?\u0412 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u044b \u0447\u0438\u0441\u043b\u0430 $n$ \u0438 $m$ ($2 \\le n, m \\le 500$; $n \\cdot m \\le 1000$) - \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0442\u0440\u043e\u043a \u0438 \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432 \u0432 \u043c\u0430\u0442\u0440\u0438\u0446\u0435.\n\n\u0412 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0445 $n$ \u0441\u0442\u0440\u043e\u043a\u0430\u0445 \u0437\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u043f\u043e $m$ \u0447\u0438\u0441\u0435\u043b - \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043c\u0430\u0442\u0440\u0438\u0446\u044b.\u0412 \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432\u044b\u0432\u0435\u0434\u0438\u0442\u0435 `YES`, \u0435\u0441\u043b\u0438 \u043c\u0430\u0442\u0440\u0438\u0446\u0443 \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u0432 \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435, \u0438 `NO` \u0432 \u043f\u0440\u043e\u0442\u0438\u0432\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435.",
        "solutions": [
            {
                "code": "print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "from random import randint\r\n\r\nn, m = map(int, input().split())\r\n\r\nif n * m > 6:\r\n    print(\"YES\")\r\nelse:\r\n    a = []\r\n    for _ in range(n):\r\n        a.append(list(map(int, input().split())))\r\n\r\n    b = [[i + 1 + (m * j) for i in range(m)] for j in range(n)]\r\n\r\n    for i in range(10**5):\r\n        x, y = randint(0, len(b) - 1 - 1), randint(0, len(b[0]) - 1 - 1)\r\n        b[x][y], b[x + 1][y], b[x + 1][y + 1], b[x][y + 1] = b[x + 1][y], b[x + 1][y + 1], b[x][y + 1], b[x][y]\r\n\r\n        if a == b:\r\n            print(\"YES\")\r\n            break\r\n    else:\r\n        print(\"NO\")\r\n",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "print(\"YES\")",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = list(map(int, input().split()))\nfield = [list(map(int, input().split())) for _ in range(n)]\np = 0\nm = 1000 + 1\n\nfor i in range(n):\n    if min(m, min(field[i])) < m:\n        m = i\n\n    for j in range(m - 1):\n        if j == m - 2 and i < n - 1:\n            if field[i][j] > field[i + 1][0]:\n                p += 1\n        else:\n            if field[i][j] > field[i][j + 1]:\n                p += 1\n\nprint('YES' if (p + m) % 2 == 0 else 'NO')",
                "verdict": "Wrong Answer"
            },
            {
                "code": "n, m = list(map(int, input().split()))\nfield = [list(map(int, input().split())) for _ in range(n)]\np = 0\n\nfor i in range(n):\n    for j in range(m - 1):\n        if j == m - 2 and i < n - 1:\n            if field[i][j] > field[i + 1][0]:\n                p += 1\n        else:\n            if field[i][j] > field[i][j + 1]:\n                p += 1\n\nprint('YES' if p % 2 == 0 else 'NO')",
                "verdict": "Wrong Answer"
            }
        ]
    }
]